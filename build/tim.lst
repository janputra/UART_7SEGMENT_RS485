ARM GAS  /tmp/ccG5lwOi.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_TIM4_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_TIM4_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_TIM4_Init:
  27              	.LFB130:
  28              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim4;
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** /* TIM4 init function */
  30:Core/Src/tim.c **** void MX_TIM4_Init(void)
ARM GAS  /tmp/ccG5lwOi.s 			page 2


  31:Core/Src/tim.c **** {
  29              		.loc 1 31 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  32:Core/Src/tim.c **** 
  33:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_Init 0 */
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE END TIM4_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  40              		.loc 1 37 3 view .LVU1
  41              		.loc 1 37 26 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0293     		str	r3, [sp, #8]
  44 0008 0393     		str	r3, [sp, #12]
  45 000a 0493     		str	r3, [sp, #16]
  46 000c 0593     		str	r3, [sp, #20]
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  47              		.loc 1 38 3 is_stmt 1 view .LVU3
  48              		.loc 1 38 27 is_stmt 0 view .LVU4
  49 000e 0093     		str	r3, [sp]
  50 0010 0193     		str	r3, [sp, #4]
  39:Core/Src/tim.c **** 
  40:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_Init 1 */
  41:Core/Src/tim.c **** 
  42:Core/Src/tim.c ****   /* USER CODE END TIM4_Init 1 */
  43:Core/Src/tim.c ****   htim4.Instance = TIM4;
  51              		.loc 1 43 3 is_stmt 1 view .LVU5
  52              		.loc 1 43 18 is_stmt 0 view .LVU6
  53 0012 1648     		ldr	r0, .L9
  54 0014 164A     		ldr	r2, .L9+4
  55 0016 0260     		str	r2, [r0]
  44:Core/Src/tim.c ****   htim4.Init.Prescaler = 199;
  56              		.loc 1 44 3 is_stmt 1 view .LVU7
  57              		.loc 1 44 24 is_stmt 0 view .LVU8
  58 0018 C722     		movs	r2, #199
  59 001a 4260     		str	r2, [r0, #4]
  45:Core/Src/tim.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
  60              		.loc 1 45 3 is_stmt 1 view .LVU9
  61              		.loc 1 45 26 is_stmt 0 view .LVU10
  62 001c 8360     		str	r3, [r0, #8]
  46:Core/Src/tim.c ****   htim4.Init.Period = 999;
  63              		.loc 1 46 3 is_stmt 1 view .LVU11
  64              		.loc 1 46 21 is_stmt 0 view .LVU12
  65 001e 40F2E732 		movw	r2, #999
  66 0022 C260     		str	r2, [r0, #12]
  47:Core/Src/tim.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
  67              		.loc 1 47 3 is_stmt 1 view .LVU13
  68              		.loc 1 47 28 is_stmt 0 view .LVU14
ARM GAS  /tmp/ccG5lwOi.s 			page 3


  69 0024 4FF40072 		mov	r2, #512
  70 0028 0261     		str	r2, [r0, #16]
  48:Core/Src/tim.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  71              		.loc 1 48 3 is_stmt 1 view .LVU15
  72              		.loc 1 48 32 is_stmt 0 view .LVU16
  73 002a 8361     		str	r3, [r0, #24]
  49:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
  74              		.loc 1 49 3 is_stmt 1 view .LVU17
  75              		.loc 1 49 7 is_stmt 0 view .LVU18
  76 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
  77              	.LVL0:
  78              		.loc 1 49 6 view .LVU19
  79 0030 90B9     		cbnz	r0, .L6
  80              	.L2:
  50:Core/Src/tim.c ****   {
  51:Core/Src/tim.c ****     Error_Handler();
  52:Core/Src/tim.c ****   }
  53:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  81              		.loc 1 53 3 is_stmt 1 view .LVU20
  82              		.loc 1 53 34 is_stmt 0 view .LVU21
  83 0032 4FF48053 		mov	r3, #4096
  84 0036 0293     		str	r3, [sp, #8]
  54:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
  85              		.loc 1 54 3 is_stmt 1 view .LVU22
  86              		.loc 1 54 7 is_stmt 0 view .LVU23
  87 0038 02A9     		add	r1, sp, #8
  88 003a 0C48     		ldr	r0, .L9
  89 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  90              	.LVL1:
  91              		.loc 1 54 6 view .LVU24
  92 0040 68B9     		cbnz	r0, .L7
  93              	.L3:
  55:Core/Src/tim.c ****   {
  56:Core/Src/tim.c ****     Error_Handler();
  57:Core/Src/tim.c ****   }
  58:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  94              		.loc 1 58 3 is_stmt 1 view .LVU25
  95              		.loc 1 58 37 is_stmt 0 view .LVU26
  96 0042 0023     		movs	r3, #0
  97 0044 0093     		str	r3, [sp]
  59:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  98              		.loc 1 59 3 is_stmt 1 view .LVU27
  99              		.loc 1 59 33 is_stmt 0 view .LVU28
 100 0046 0193     		str	r3, [sp, #4]
  60:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 101              		.loc 1 60 3 is_stmt 1 view .LVU29
 102              		.loc 1 60 7 is_stmt 0 view .LVU30
 103 0048 6946     		mov	r1, sp
 104 004a 0848     		ldr	r0, .L9
 105 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 106              	.LVL2:
 107              		.loc 1 60 6 view .LVU31
 108 0050 40B9     		cbnz	r0, .L8
 109              	.L1:
  61:Core/Src/tim.c ****   {
  62:Core/Src/tim.c ****     Error_Handler();
  63:Core/Src/tim.c ****   }
ARM GAS  /tmp/ccG5lwOi.s 			page 4


  64:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_Init 2 */
  65:Core/Src/tim.c **** 
  66:Core/Src/tim.c ****   /* USER CODE END TIM4_Init 2 */
  67:Core/Src/tim.c **** 
  68:Core/Src/tim.c **** }
 110              		.loc 1 68 1 view .LVU32
 111 0052 07B0     		add	sp, sp, #28
 112              	.LCFI2:
 113              		.cfi_remember_state
 114              		.cfi_def_cfa_offset 4
 115              		@ sp needed
 116 0054 5DF804FB 		ldr	pc, [sp], #4
 117              	.L6:
 118              	.LCFI3:
 119              		.cfi_restore_state
  51:Core/Src/tim.c ****   }
 120              		.loc 1 51 5 is_stmt 1 view .LVU33
 121 0058 FFF7FEFF 		bl	Error_Handler
 122              	.LVL3:
 123 005c E9E7     		b	.L2
 124              	.L7:
  56:Core/Src/tim.c ****   }
 125              		.loc 1 56 5 view .LVU34
 126 005e FFF7FEFF 		bl	Error_Handler
 127              	.LVL4:
 128 0062 EEE7     		b	.L3
 129              	.L8:
  62:Core/Src/tim.c ****   }
 130              		.loc 1 62 5 view .LVU35
 131 0064 FFF7FEFF 		bl	Error_Handler
 132              	.LVL5:
 133              		.loc 1 68 1 is_stmt 0 view .LVU36
 134 0068 F3E7     		b	.L1
 135              	.L10:
 136 006a 00BF     		.align	2
 137              	.L9:
 138 006c 00000000 		.word	.LANCHOR0
 139 0070 00080040 		.word	1073743872
 140              		.cfi_endproc
 141              	.LFE130:
 143              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 144              		.align	1
 145              		.global	HAL_TIM_Base_MspInit
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	HAL_TIM_Base_MspInit:
 151              	.LVL6:
 152              	.LFB131:
  69:Core/Src/tim.c **** 
  70:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
  71:Core/Src/tim.c **** {
 153              		.loc 1 71 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Src/tim.c **** 
ARM GAS  /tmp/ccG5lwOi.s 			page 5


  73:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM4)
 157              		.loc 1 73 3 view .LVU38
 158              		.loc 1 73 20 is_stmt 0 view .LVU39
 159 0000 0268     		ldr	r2, [r0]
 160              		.loc 1 73 5 view .LVU40
 161 0002 0E4B     		ldr	r3, .L18
 162 0004 9A42     		cmp	r2, r3
 163 0006 00D0     		beq	.L17
 164 0008 7047     		bx	lr
 165              	.L17:
  71:Core/Src/tim.c **** 
 166              		.loc 1 71 1 view .LVU41
 167 000a 00B5     		push	{lr}
 168              	.LCFI4:
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 14, -4
 171 000c 83B0     		sub	sp, sp, #12
 172              	.LCFI5:
 173              		.cfi_def_cfa_offset 16
  74:Core/Src/tim.c ****   {
  75:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspInit 0 */
  76:Core/Src/tim.c **** 
  77:Core/Src/tim.c ****   /* USER CODE END TIM4_MspInit 0 */
  78:Core/Src/tim.c ****     /* TIM4 clock enable */
  79:Core/Src/tim.c ****     __HAL_RCC_TIM4_CLK_ENABLE();
 174              		.loc 1 79 5 is_stmt 1 view .LVU42
 175              	.LBB2:
 176              		.loc 1 79 5 view .LVU43
 177 000e 0021     		movs	r1, #0
 178 0010 0191     		str	r1, [sp, #4]
 179              		.loc 1 79 5 view .LVU44
 180 0012 03F50C33 		add	r3, r3, #143360
 181 0016 1A6C     		ldr	r2, [r3, #64]
 182 0018 42F00402 		orr	r2, r2, #4
 183 001c 1A64     		str	r2, [r3, #64]
 184              		.loc 1 79 5 view .LVU45
 185 001e 1B6C     		ldr	r3, [r3, #64]
 186 0020 03F00403 		and	r3, r3, #4
 187 0024 0193     		str	r3, [sp, #4]
 188              		.loc 1 79 5 view .LVU46
 189 0026 019B     		ldr	r3, [sp, #4]
 190              	.LBE2:
 191              		.loc 1 79 5 view .LVU47
  80:Core/Src/tim.c **** 
  81:Core/Src/tim.c ****     /* TIM4 interrupt Init */
  82:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 192              		.loc 1 82 5 view .LVU48
 193 0028 0A46     		mov	r2, r1
 194 002a 1E20     		movs	r0, #30
 195              	.LVL7:
 196              		.loc 1 82 5 is_stmt 0 view .LVU49
 197 002c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 198              	.LVL8:
  83:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM4_IRQn);
 199              		.loc 1 83 5 is_stmt 1 view .LVU50
 200 0030 1E20     		movs	r0, #30
 201 0032 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccG5lwOi.s 			page 6


 202              	.LVL9:
  84:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspInit 1 */
  85:Core/Src/tim.c **** 
  86:Core/Src/tim.c ****   /* USER CODE END TIM4_MspInit 1 */
  87:Core/Src/tim.c ****   }
  88:Core/Src/tim.c **** }
 203              		.loc 1 88 1 is_stmt 0 view .LVU51
 204 0036 03B0     		add	sp, sp, #12
 205              	.LCFI6:
 206              		.cfi_def_cfa_offset 4
 207              		@ sp needed
 208 0038 5DF804FB 		ldr	pc, [sp], #4
 209              	.L19:
 210              		.align	2
 211              	.L18:
 212 003c 00080040 		.word	1073743872
 213              		.cfi_endproc
 214              	.LFE131:
 216              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 217              		.align	1
 218              		.global	HAL_TIM_Base_MspDeInit
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	HAL_TIM_Base_MspDeInit:
 224              	.LVL10:
 225              	.LFB132:
  89:Core/Src/tim.c **** 
  90:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
  91:Core/Src/tim.c **** {
 226              		.loc 1 91 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		.loc 1 91 1 is_stmt 0 view .LVU53
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI7:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
  92:Core/Src/tim.c **** 
  93:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM4)
 236              		.loc 1 93 3 is_stmt 1 view .LVU54
 237              		.loc 1 93 20 is_stmt 0 view .LVU55
 238 0002 0268     		ldr	r2, [r0]
 239              		.loc 1 93 5 view .LVU56
 240 0004 064B     		ldr	r3, .L24
 241 0006 9A42     		cmp	r2, r3
 242 0008 00D0     		beq	.L23
 243              	.LVL11:
 244              	.L20:
  94:Core/Src/tim.c ****   {
  95:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 0 */
  96:Core/Src/tim.c **** 
  97:Core/Src/tim.c ****   /* USER CODE END TIM4_MspDeInit 0 */
  98:Core/Src/tim.c ****     /* Peripheral clock disable */
  99:Core/Src/tim.c ****     __HAL_RCC_TIM4_CLK_DISABLE();
ARM GAS  /tmp/ccG5lwOi.s 			page 7


 100:Core/Src/tim.c **** 
 101:Core/Src/tim.c ****     /* TIM4 interrupt Deinit */
 102:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM4_IRQn);
 103:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 104:Core/Src/tim.c **** 
 105:Core/Src/tim.c ****   /* USER CODE END TIM4_MspDeInit 1 */
 106:Core/Src/tim.c ****   }
 107:Core/Src/tim.c **** }
 245              		.loc 1 107 1 view .LVU57
 246 000a 08BD     		pop	{r3, pc}
 247              	.LVL12:
 248              	.L23:
  99:Core/Src/tim.c **** 
 249              		.loc 1 99 5 is_stmt 1 view .LVU58
 250 000c 054A     		ldr	r2, .L24+4
 251 000e 136C     		ldr	r3, [r2, #64]
 252 0010 23F00403 		bic	r3, r3, #4
 253 0014 1364     		str	r3, [r2, #64]
 102:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 254              		.loc 1 102 5 view .LVU59
 255 0016 1E20     		movs	r0, #30
 256              	.LVL13:
 102:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 257              		.loc 1 102 5 is_stmt 0 view .LVU60
 258 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 259              	.LVL14:
 260              		.loc 1 107 1 view .LVU61
 261 001c F5E7     		b	.L20
 262              	.L25:
 263 001e 00BF     		.align	2
 264              	.L24:
 265 0020 00080040 		.word	1073743872
 266 0024 00380240 		.word	1073887232
 267              		.cfi_endproc
 268              	.LFE132:
 270              		.global	htim4
 271              		.section	.bss.htim4,"aw",%nobits
 272              		.align	2
 273              		.set	.LANCHOR0,. + 0
 276              	htim4:
 277 0000 00000000 		.space	72
 277      00000000 
 277      00000000 
 277      00000000 
 277      00000000 
 278              		.text
 279              	.Letext0:
 280              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 281              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 282              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 283              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 284              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 285              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 286              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 287              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 288              		.file 10 "Core/Inc/tim.h"
 289              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccG5lwOi.s 			page 8


ARM GAS  /tmp/ccG5lwOi.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccG5lwOi.s:20     .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccG5lwOi.s:26     .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccG5lwOi.s:138    .text.MX_TIM4_Init:000000000000006c $d
     /tmp/ccG5lwOi.s:144    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccG5lwOi.s:150    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccG5lwOi.s:212    .text.HAL_TIM_Base_MspInit:000000000000003c $d
     /tmp/ccG5lwOi.s:217    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccG5lwOi.s:223    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccG5lwOi.s:265    .text.HAL_TIM_Base_MspDeInit:0000000000000020 $d
     /tmp/ccG5lwOi.s:276    .bss.htim4:0000000000000000 htim4
     /tmp/ccG5lwOi.s:272    .bss.htim4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
