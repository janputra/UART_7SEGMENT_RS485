ARM GAS  /tmp/ccPCXsH1.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.m_send_to_lcd,"ax",%progbits
  18              		.align	1
  19              		.global	m_send_to_lcd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	m_send_to_lcd:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "message.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccPCXsH1.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** uint8_t f_busy;
  49:Core/Src/main.c **** unsigned char f_timer_TX = 0;
  50:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  51:Core/Src/main.c **** unsigned char f_timer_10ms = 0;
  52:Core/Src/main.c **** unsigned char f_timer_20ms = 0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** unsigned char f_timer_30ms = 0;
  55:Core/Src/main.c **** unsigned char f_timer_50ms = 0;
  56:Core/Src/main.c **** unsigned char f_querry = 0;
  57:Core/Src/main.c **** unsigned char flag_digit_1 = 1;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** unsigned char tx2_buffer[10] = {"123456789"};
  60:Core/Src/main.c **** unsigned char tx1_buffer[6] = {"abcdef"};
  61:Core/Src/main.c **** unsigned char d_timer_30ms;
  62:Core/Src/main.c **** unsigned char d_timer_50ms;
  63:Core/Src/main.c **** unsigned char d_timer_20ms;
  64:Core/Src/main.c **** unsigned char d_timer_TX1;
  65:Core/Src/main.c **** unsigned char TX1_delay_val = 250;
  66:Core/Src/main.c **** unsigned char d_timer_TX2;
  67:Core/Src/main.c **** unsigned char TX2_delay_val = 250;
  68:Core/Src/main.c **** unsigned char key1_data, key2_data;
  69:Core/Src/main.c **** unsigned char state, event, error;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** unsigned char digit1, digit2;
  72:Core/Src/main.c **** // flag for LCD
  73:Core/Src/main.c **** unsigned char is_EN = 0;
  74:Core/Src/main.c **** unsigned char lcd_digit1_f = 0;
  75:Core/Src/main.c **** unsigned char digit1_update = 0;
  76:Core/Src/main.c **** unsigned char digit2_update = 0;
  77:Core/Src/main.c **** unsigned char cmd, data;
  78:Core/Src/main.c **** unsigned char lcd_process = 0;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** unsigned char digit_table[17] = {"0123456789abcdef-"};
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** uint8_t rx_temp;
  83:Core/Src/main.c **** uint8_t transmission_f;
  84:Core/Src/main.c **** uint8_t start_cmd = 0x2;
  85:Core/Src/main.c **** uint8_t stop_cmd = 0x3;
  86:Core/Src/main.c **** circular_buffer rx1_buffer;
ARM GAS  /tmp/ccPCXsH1.s 			page 3


  87:Core/Src/main.c **** circular_buffer rx2_buffer;
  88:Core/Src/main.c **** circular_buffer event_buffer;
  89:Core/Src/main.c **** uint8_t ID;
  90:Core/Src/main.c **** uint8_t TX_msg[4];
  91:Core/Src/main.c **** uint8_t RX_msg[4];
  92:Core/Src/main.c **** /* USER CODE END PV */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  95:Core/Src/main.c **** void SystemClock_Config(void);
  96:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  97:Core/Src/main.c **** void task_timer(void);
  98:Core/Src/main.c **** void counting_task(void);
  99:Core/Src/main.c **** void uart_TX2_task(void);
 100:Core/Src/main.c **** void uart_TX1_task(void);
 101:Core/Src/main.c **** void uart_RX1_task(void);
 102:Core/Src/main.c **** void uart_RX2_task(void);
 103:Core/Src/main.c **** void segment_display_task(void);
 104:Core/Src/main.c **** void lcd_display_task(void);
 105:Core/Src/main.c **** void key_read_task(void);
 106:Core/Src/main.c **** void main_task(void);
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** void seven_segment_driver(char input, char select_digit);
 109:Core/Src/main.c **** void TX1_delay_update(void);
 110:Core/Src/main.c **** void TX2_delay_update(void);
 111:Core/Src/main.c **** void m_send_to_lcd(char data);
 112:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 113:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 114:Core/Src/main.c **** void Set_Receiver_Port1(void);
 115:Core/Src/main.c **** void Set_Receiver_Port2(void);
 116:Core/Src/main.c **** void RS485_Send_Message(uint8_t address, uint8_t func_code, uint8_t data);
 117:Core/Src/main.c **** void RS485_Read_Message(void);
 118:Core/Src/main.c **** /*
 119:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 120:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 121:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 122:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
 123:Core/Src/main.c **** */
 124:Core/Src/main.c **** /* USER CODE END PFP */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 127:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /* USER CODE END 0 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /**
 132:Core/Src/main.c ****  * @brief  The application entry point.
 133:Core/Src/main.c ****  * @retval int
 134:Core/Src/main.c ****  */
 135:Core/Src/main.c **** int main(void)
 136:Core/Src/main.c **** {
 137:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 	/* USER CODE END 1 */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** 	/* MCU Configuration--------------------------------------------------------*/
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/ccPCXsH1.s 			page 4


 144:Core/Src/main.c **** 	HAL_Init();
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** 	/* USER CODE BEGIN Init */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 	/* USER CODE END Init */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** 	/* Configure the system clock */
 151:Core/Src/main.c **** 	SystemClock_Config();
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** 	/* USER CODE BEGIN SysInit */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** 	/* USER CODE END SysInit */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 	/* Initialize all configured peripherals */
 158:Core/Src/main.c **** 	MX_GPIO_Init();
 159:Core/Src/main.c **** 	MX_TIM4_Init();
 160:Core/Src/main.c **** 	MX_UART4_Init();
 161:Core/Src/main.c **** 	MX_UART5_Init();
 162:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim4);
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); // Enable Receiver 1
 167:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** 	HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 170:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 	digit1 = 16;
 173:Core/Src/main.c **** 	digit2 = 16;
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 	lcd_init();
 176:Core/Src/main.c **** 	lcd_clear();
 177:Core/Src/main.c **** 	lcd_set_pos(0, 3);
 178:Core/Src/main.c **** 	lcd_write_string("TETRADYNE");
 179:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 180:Core/Src/main.c **** 	lcd_write_string("S2:");
 181:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 182:Core/Src/main.c **** 	lcd_write_string("S1:");
 183:Core/Src/main.c **** 	/* USER CODE END 2 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** 	/* Infinite loop */
 186:Core/Src/main.c **** 	/* USER CODE BEGIN WHILE */
 187:Core/Src/main.c **** 	while (1)
 188:Core/Src/main.c **** 	{
 189:Core/Src/main.c **** 		/* USER CODE END WHILE */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 		/* USER CODE BEGIN 3 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** 		task_timer();
 194:Core/Src/main.c **** 		/// segment_display_task();
 195:Core/Src/main.c **** 		lcd_display_task();
 196:Core/Src/main.c **** 		key_read_task();
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** 		main_task();
 199:Core/Src/main.c **** 	}
 200:Core/Src/main.c **** 	/* USER CODE END 3 */
ARM GAS  /tmp/ccPCXsH1.s 			page 5


 201:Core/Src/main.c **** }
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /**
 204:Core/Src/main.c ****  * @brief System Clock Configuration
 205:Core/Src/main.c ****  * @retval None
 206:Core/Src/main.c ****  */
 207:Core/Src/main.c **** void SystemClock_Config(void)
 208:Core/Src/main.c **** {
 209:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 210:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** 	/** Configure the main internal regulator output voltage
 213:Core/Src/main.c **** 	 */
 214:Core/Src/main.c **** 	__HAL_RCC_PWR_CLK_ENABLE();
 215:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** 	/** Initializes the RCC Oscillators according to the specified parameters
 218:Core/Src/main.c **** 	 * in the RCC_OscInitTypeDef structure.
 219:Core/Src/main.c **** 	 */
 220:Core/Src/main.c **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 221:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 222:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 223:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 224:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 225:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 226:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 227:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 228:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 229:Core/Src/main.c **** 	{
 230:Core/Src/main.c **** 		Error_Handler();
 231:Core/Src/main.c **** 	}
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** 	/** Initializes the CPU, AHB and APB buses clocks
 234:Core/Src/main.c **** 	 */
 235:Core/Src/main.c **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RC
 236:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 237:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 238:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 239:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 242:Core/Src/main.c **** 	{
 243:Core/Src/main.c **** 		Error_Handler();
 244:Core/Src/main.c **** 	}
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** void lcd_display_task(void)
 250:Core/Src/main.c **** {
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** 	if (!lcd_digit1_f)
 253:Core/Src/main.c **** 	{
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** 		cmd = 0xC3;
 256:Core/Src/main.c **** 		data = digit_table[digit2];
 257:Core/Src/main.c **** 	}
ARM GAS  /tmp/ccPCXsH1.s 			page 6


 258:Core/Src/main.c **** 	else
 259:Core/Src/main.c **** 	{
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** 		cmd = 0xCF;
 262:Core/Src/main.c **** 		data = digit_table[digit1];
 263:Core/Src/main.c **** 	}
 264:Core/Src/main.c **** 	switch (lcd_process)
 265:Core/Src/main.c **** 	{
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** 	case 0:
 268:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 269:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 270:Core/Src/main.c **** 		break;
 271:Core/Src/main.c **** 	case 1:
 272:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 273:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 274:Core/Src/main.c **** 		break;
 275:Core/Src/main.c **** 	case 2:
 276:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 277:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 278:Core/Src/main.c **** 		break;
 279:Core/Src/main.c **** 	case 3:
 280:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 281:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 282:Core/Src/main.c **** 		break;
 283:Core/Src/main.c **** 	}
 284:Core/Src/main.c **** }
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** void m_send_to_lcd(char data)
 287:Core/Src/main.c **** {
  30              		.loc 1 287 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 287 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** 	// writing data to pin PE0~PE3
 290:Core/Src/main.c **** 	GPIOE->ODR = (GPIOE->ODR & 0xFFFFFFF0) | data;
  40              		.loc 1 290 2 is_stmt 1 view .LVU2
  41              		.loc 1 290 21 is_stmt 0 view .LVU3
  42 0002 194A     		ldr	r2, .L5
  43 0004 5369     		ldr	r3, [r2, #20]
  44              		.loc 1 290 27 view .LVU4
  45 0006 23F00F03 		bic	r3, r3, #15
  46              		.loc 1 290 41 view .LVU5
  47 000a 1843     		orrs	r0, r0, r3
  48              	.LVL1:
  49              		.loc 1 290 13 view .LVU6
  50 000c 5061     		str	r0, [r2, #20]
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** 	if (!f_timer_20ms)
  51              		.loc 1 292 2 is_stmt 1 view .LVU7
ARM GAS  /tmp/ccPCXsH1.s 			page 7


  52              		.loc 1 292 6 is_stmt 0 view .LVU8
  53 000e 174B     		ldr	r3, .L5+4
  54 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  55              		.loc 1 292 5 view .LVU9
  56 0012 6BB1     		cbz	r3, .L1
 293:Core/Src/main.c **** 		return;
 294:Core/Src/main.c **** 	f_timer_20ms = 0;
  57              		.loc 1 294 2 is_stmt 1 view .LVU10
  58              		.loc 1 294 15 is_stmt 0 view .LVU11
  59 0014 154B     		ldr	r3, .L5+4
  60 0016 0022     		movs	r2, #0
  61 0018 1A70     		strb	r2, [r3]
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** 	if (!is_EN)
  62              		.loc 1 296 2 is_stmt 1 view .LVU12
  63              		.loc 1 296 6 is_stmt 0 view .LVU13
  64 001a 154B     		ldr	r3, .L5+8
  65 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66              		.loc 1 296 5 view .LVU14
  67 001e 43B9     		cbnz	r3, .L3
 297:Core/Src/main.c **** 	{
 298:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
  68              		.loc 1 298 3 is_stmt 1 view .LVU15
  69 0020 0122     		movs	r2, #1
  70 0022 2021     		movs	r1, #32
  71 0024 1048     		ldr	r0, .L5
  72 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL2:
 299:Core/Src/main.c **** 		is_EN = 1;
  74              		.loc 1 299 3 view .LVU16
  75              		.loc 1 299 9 is_stmt 0 view .LVU17
  76 002a 114B     		ldr	r3, .L5+8
  77 002c 0122     		movs	r2, #1
  78 002e 1A70     		strb	r2, [r3]
  79              	.L1:
 300:Core/Src/main.c **** 	}
 301:Core/Src/main.c **** 	else
 302:Core/Src/main.c **** 	{
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 305:Core/Src/main.c **** 		is_EN = 0;
 306:Core/Src/main.c **** 		lcd_process++;
 307:Core/Src/main.c **** 		if (lcd_process > 3)
 308:Core/Src/main.c **** 		{
 309:Core/Src/main.c **** 			lcd_process = 0;
 310:Core/Src/main.c **** 			lcd_digit1_f = (~lcd_digit1_f) & 0x1;
 311:Core/Src/main.c **** 		}
 312:Core/Src/main.c **** 	}
 313:Core/Src/main.c **** }
  80              		.loc 1 313 1 view .LVU18
  81 0030 08BD     		pop	{r3, pc}
  82              	.L3:
 304:Core/Src/main.c **** 		is_EN = 0;
  83              		.loc 1 304 3 is_stmt 1 view .LVU19
  84 0032 0022     		movs	r2, #0
  85 0034 2021     		movs	r1, #32
  86 0036 0C48     		ldr	r0, .L5
ARM GAS  /tmp/ccPCXsH1.s 			page 8


  87 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL3:
 305:Core/Src/main.c **** 		lcd_process++;
  89              		.loc 1 305 3 view .LVU20
 305:Core/Src/main.c **** 		lcd_process++;
  90              		.loc 1 305 9 is_stmt 0 view .LVU21
  91 003c 0C4B     		ldr	r3, .L5+8
  92 003e 0022     		movs	r2, #0
  93 0040 1A70     		strb	r2, [r3]
 306:Core/Src/main.c **** 		if (lcd_process > 3)
  94              		.loc 1 306 3 is_stmt 1 view .LVU22
 306:Core/Src/main.c **** 		if (lcd_process > 3)
  95              		.loc 1 306 14 is_stmt 0 view .LVU23
  96 0042 0C4A     		ldr	r2, .L5+12
  97 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  98 0046 0133     		adds	r3, r3, #1
  99 0048 DBB2     		uxtb	r3, r3
 100 004a 1370     		strb	r3, [r2]
 307:Core/Src/main.c **** 		{
 101              		.loc 1 307 3 is_stmt 1 view .LVU24
 307:Core/Src/main.c **** 		{
 102              		.loc 1 307 6 is_stmt 0 view .LVU25
 103 004c 032B     		cmp	r3, #3
 104 004e EFD9     		bls	.L1
 309:Core/Src/main.c **** 			lcd_digit1_f = (~lcd_digit1_f) & 0x1;
 105              		.loc 1 309 4 is_stmt 1 view .LVU26
 309:Core/Src/main.c **** 			lcd_digit1_f = (~lcd_digit1_f) & 0x1;
 106              		.loc 1 309 16 is_stmt 0 view .LVU27
 107 0050 1346     		mov	r3, r2
 108 0052 0022     		movs	r2, #0
 109 0054 1A70     		strb	r2, [r3]
 310:Core/Src/main.c **** 		}
 110              		.loc 1 310 4 is_stmt 1 view .LVU28
 310:Core/Src/main.c **** 		}
 111              		.loc 1 310 35 is_stmt 0 view .LVU29
 112 0056 084A     		ldr	r2, .L5+16
 113 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 005a 83F00103 		eor	r3, r3, #1
 115 005e 03F00103 		and	r3, r3, #1
 310:Core/Src/main.c **** 		}
 116              		.loc 1 310 17 view .LVU30
 117 0062 1370     		strb	r3, [r2]
 118 0064 E4E7     		b	.L1
 119              	.L6:
 120 0066 00BF     		.align	2
 121              	.L5:
 122 0068 00100240 		.word	1073876992
 123 006c 00000000 		.word	.LANCHOR0
 124 0070 00000000 		.word	.LANCHOR1
 125 0074 00000000 		.word	.LANCHOR2
 126 0078 00000000 		.word	.LANCHOR3
 127              		.cfi_endproc
 128              	.LFE133:
 130              		.section	.text.lcd_display_task,"ax",%progbits
 131              		.align	1
 132              		.global	lcd_display_task
 133              		.syntax unified
ARM GAS  /tmp/ccPCXsH1.s 			page 9


 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	lcd_display_task:
 139              	.LFB132:
 250:Core/Src/main.c **** 
 140              		.loc 1 250 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 252:Core/Src/main.c **** 	{
 149              		.loc 1 252 2 view .LVU32
 252:Core/Src/main.c **** 	{
 150              		.loc 1 252 6 is_stmt 0 view .LVU33
 151 0002 264B     		ldr	r3, .L17
 152 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 252:Core/Src/main.c **** 	{
 153              		.loc 1 252 5 view .LVU34
 154 0006 83B9     		cbnz	r3, .L8
 255:Core/Src/main.c **** 		data = digit_table[digit2];
 155              		.loc 1 255 3 is_stmt 1 view .LVU35
 255:Core/Src/main.c **** 		data = digit_table[digit2];
 156              		.loc 1 255 7 is_stmt 0 view .LVU36
 157 0008 254B     		ldr	r3, .L17+4
 158 000a C322     		movs	r2, #195
 159 000c 1A70     		strb	r2, [r3]
 256:Core/Src/main.c **** 	}
 160              		.loc 1 256 3 is_stmt 1 view .LVU37
 256:Core/Src/main.c **** 	}
 161              		.loc 1 256 21 is_stmt 0 view .LVU38
 162 000e 254B     		ldr	r3, .L17+8
 163 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 164 0012 254A     		ldr	r2, .L17+12
 165 0014 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 256:Core/Src/main.c **** 	}
 166              		.loc 1 256 8 view .LVU39
 167 0016 254B     		ldr	r3, .L17+16
 168 0018 1A70     		strb	r2, [r3]
 169              	.L9:
 264:Core/Src/main.c **** 	{
 170              		.loc 1 264 2 is_stmt 1 view .LVU40
 171 001a 254B     		ldr	r3, .L17+20
 172 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173 001e 032B     		cmp	r3, #3
 174 0020 17D8     		bhi	.L7
 175 0022 DFE803F0 		tbb	[pc, r3]
 176              	.L12:
 177 0026 0C       		.byte	(.L15-.L12)/2
 178 0027 17       		.byte	(.L14-.L12)/2
 179 0028 23       		.byte	(.L13-.L12)/2
 180 0029 2E       		.byte	(.L11-.L12)/2
 181              		.p2align 1
ARM GAS  /tmp/ccPCXsH1.s 			page 10


 182              	.L8:
 261:Core/Src/main.c **** 		data = digit_table[digit1];
 183              		.loc 1 261 3 view .LVU41
 261:Core/Src/main.c **** 		data = digit_table[digit1];
 184              		.loc 1 261 7 is_stmt 0 view .LVU42
 185 002a 1D4B     		ldr	r3, .L17+4
 186 002c CF22     		movs	r2, #207
 187 002e 1A70     		strb	r2, [r3]
 262:Core/Src/main.c **** 	}
 188              		.loc 1 262 3 is_stmt 1 view .LVU43
 262:Core/Src/main.c **** 	}
 189              		.loc 1 262 21 is_stmt 0 view .LVU44
 190 0030 204B     		ldr	r3, .L17+24
 191 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 192 0034 1C4A     		ldr	r2, .L17+12
 193 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 262:Core/Src/main.c **** 	}
 194              		.loc 1 262 8 view .LVU45
 195 0038 1C4B     		ldr	r3, .L17+16
 196 003a 1A70     		strb	r2, [r3]
 197 003c EDE7     		b	.L9
 198              	.L15:
 268:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 199              		.loc 1 268 3 is_stmt 1 view .LVU46
 200 003e 0022     		movs	r2, #0
 201 0040 1021     		movs	r1, #16
 202 0042 1D48     		ldr	r0, .L17+28
 203 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL4:
 269:Core/Src/main.c **** 		break;
 205              		.loc 1 269 3 view .LVU47
 206 0048 154B     		ldr	r3, .L17+4
 207 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 208 004c 0009     		lsrs	r0, r0, #4
 209 004e FFF7FEFF 		bl	m_send_to_lcd
 210              	.LVL5:
 270:Core/Src/main.c **** 	case 1:
 211              		.loc 1 270 3 view .LVU48
 212              	.L7:
 284:Core/Src/main.c **** 
 213              		.loc 1 284 1 is_stmt 0 view .LVU49
 214 0052 08BD     		pop	{r3, pc}
 215              	.L14:
 272:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 216              		.loc 1 272 3 is_stmt 1 view .LVU50
 217 0054 0022     		movs	r2, #0
 218 0056 1021     		movs	r1, #16
 219 0058 1748     		ldr	r0, .L17+28
 220 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 221              	.LVL6:
 273:Core/Src/main.c **** 		break;
 222              		.loc 1 273 3 view .LVU51
 273:Core/Src/main.c **** 		break;
 223              		.loc 1 273 22 is_stmt 0 view .LVU52
 224 005e 104B     		ldr	r3, .L17+4
 225 0060 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 273:Core/Src/main.c **** 		break;
ARM GAS  /tmp/ccPCXsH1.s 			page 11


 226              		.loc 1 273 3 view .LVU53
 227 0062 00F00F00 		and	r0, r0, #15
 228 0066 FFF7FEFF 		bl	m_send_to_lcd
 229              	.LVL7:
 274:Core/Src/main.c **** 	case 2:
 230              		.loc 1 274 3 is_stmt 1 view .LVU54
 231 006a F2E7     		b	.L7
 232              	.L13:
 276:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 233              		.loc 1 276 3 view .LVU55
 234 006c 0122     		movs	r2, #1
 235 006e 1021     		movs	r1, #16
 236 0070 1148     		ldr	r0, .L17+28
 237 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL8:
 277:Core/Src/main.c **** 		break;
 239              		.loc 1 277 3 view .LVU56
 240 0076 0D4B     		ldr	r3, .L17+16
 241 0078 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242 007a 0009     		lsrs	r0, r0, #4
 243 007c FFF7FEFF 		bl	m_send_to_lcd
 244              	.LVL9:
 278:Core/Src/main.c **** 	case 3:
 245              		.loc 1 278 3 view .LVU57
 246 0080 E7E7     		b	.L7
 247              	.L11:
 280:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 248              		.loc 1 280 3 view .LVU58
 249 0082 0122     		movs	r2, #1
 250 0084 1021     		movs	r1, #16
 251 0086 0C48     		ldr	r0, .L17+28
 252 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL10:
 281:Core/Src/main.c **** 		break;
 254              		.loc 1 281 3 view .LVU59
 281:Core/Src/main.c **** 		break;
 255              		.loc 1 281 22 is_stmt 0 view .LVU60
 256 008c 074B     		ldr	r3, .L17+16
 257 008e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 281:Core/Src/main.c **** 		break;
 258              		.loc 1 281 3 view .LVU61
 259 0090 00F00F00 		and	r0, r0, #15
 260 0094 FFF7FEFF 		bl	m_send_to_lcd
 261              	.LVL11:
 282:Core/Src/main.c **** 	}
 262              		.loc 1 282 3 is_stmt 1 view .LVU62
 284:Core/Src/main.c **** 
 263              		.loc 1 284 1 is_stmt 0 view .LVU63
 264 0098 DBE7     		b	.L7
 265              	.L18:
 266 009a 00BF     		.align	2
 267              	.L17:
 268 009c 00000000 		.word	.LANCHOR3
 269 00a0 00000000 		.word	.LANCHOR4
 270 00a4 00000000 		.word	.LANCHOR6
 271 00a8 00000000 		.word	.LANCHOR5
 272 00ac 00000000 		.word	.LANCHOR7
ARM GAS  /tmp/ccPCXsH1.s 			page 12


 273 00b0 00000000 		.word	.LANCHOR2
 274 00b4 00000000 		.word	.LANCHOR8
 275 00b8 00100240 		.word	1073876992
 276              		.cfi_endproc
 277              	.LFE132:
 279              		.section	.text.task_timer,"ax",%progbits
 280              		.align	1
 281              		.global	task_timer
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	task_timer:
 288              	.LFB134:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** void task_timer(void)
 316:Core/Src/main.c **** {
 289              		.loc 1 316 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI2:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 317:Core/Src/main.c **** 	if (!f_timer_10ms)
 298              		.loc 1 317 2 view .LVU65
 299              		.loc 1 317 6 is_stmt 0 view .LVU66
 300 0002 194B     		ldr	r3, .L27
 301 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302              		.loc 1 317 5 view .LVU67
 303 0006 BBB1     		cbz	r3, .L19
 318:Core/Src/main.c **** 		return;		  // checking if 10 ms timer interrupt is set (10 ms), if set then do timer task
 319:Core/Src/main.c **** 	f_timer_10ms = 0; // clear the flag to wait next interupt
 304              		.loc 1 319 2 is_stmt 1 view .LVU68
 305              		.loc 1 319 15 is_stmt 0 view .LVU69
 306 0008 174B     		ldr	r3, .L27
 307 000a 0022     		movs	r2, #0
 308 000c 1A70     		strb	r2, [r3]
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** 	d_timer_30ms++; // count timer for 30 ms interval
 309              		.loc 1 321 2 is_stmt 1 view .LVU70
 310              		.loc 1 321 14 is_stmt 0 view .LVU71
 311 000e 174A     		ldr	r2, .L27+4
 312 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 313 0012 0133     		adds	r3, r3, #1
 314 0014 DBB2     		uxtb	r3, r3
 315 0016 1370     		strb	r3, [r2]
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** 	if (d_timer_30ms == 3) // checking if the count reached 30 ms
 316              		.loc 1 323 2 is_stmt 1 view .LVU72
 317              		.loc 1 323 5 is_stmt 0 view .LVU73
 318 0018 032B     		cmp	r3, #3
 319 001a 0ED0     		beq	.L24
 320              	.L21:
 324:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccPCXsH1.s 			page 13


 325:Core/Src/main.c **** 		d_timer_30ms = 0; // assign "0" to repeat counting
 326:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 327:Core/Src/main.c **** 	}
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** 	d_timer_20ms++;
 321              		.loc 1 329 2 is_stmt 1 view .LVU74
 322              		.loc 1 329 14 is_stmt 0 view .LVU75
 323 001c 144A     		ldr	r2, .L27+8
 324 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 325 0020 0133     		adds	r3, r3, #1
 326 0022 DBB2     		uxtb	r3, r3
 327 0024 1370     		strb	r3, [r2]
 330:Core/Src/main.c **** 	if (d_timer_20ms == 2)
 328              		.loc 1 330 2 is_stmt 1 view .LVU76
 329              		.loc 1 330 5 is_stmt 0 view .LVU77
 330 0026 022B     		cmp	r3, #2
 331 0028 0ED0     		beq	.L25
 332              	.L22:
 331:Core/Src/main.c **** 	{
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** 		d_timer_20ms = 0;
 334:Core/Src/main.c **** 		f_timer_20ms = 1;
 335:Core/Src/main.c **** 	}
 336:Core/Src/main.c **** 	d_timer_50ms++;
 333              		.loc 1 336 2 is_stmt 1 view .LVU78
 334              		.loc 1 336 14 is_stmt 0 view .LVU79
 335 002a 124A     		ldr	r2, .L27+12
 336 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 337 002e 0133     		adds	r3, r3, #1
 338 0030 DBB2     		uxtb	r3, r3
 339 0032 1370     		strb	r3, [r2]
 337:Core/Src/main.c **** 	if (d_timer_50ms == 10)
 340              		.loc 1 337 2 is_stmt 1 view .LVU80
 341              		.loc 1 337 5 is_stmt 0 view .LVU81
 342 0034 0A2B     		cmp	r3, #10
 343 0036 0ED0     		beq	.L26
 344              	.L19:
 338:Core/Src/main.c **** 	{
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** 		d_timer_50ms = 0;
 341:Core/Src/main.c **** 		// f_timer_50ms=1;
 342:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_QUERRY);
 343:Core/Src/main.c **** 	}
 344:Core/Src/main.c **** 	/*
 345:Core/Src/main.c **** 		d_timer_TX1++;
 346:Core/Src/main.c **** 			if(d_timer_TX1>=TX1_delay_val)     // checking if the count reached LED interval
 347:Core/Src/main.c **** 			{
 348:Core/Src/main.c **** 				d_timer_TX1=0;		// assign "0" to repeat counting
 349:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_TX1_UPDATE);
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** 			}
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** 		d_timer_TX2++;
 354:Core/Src/main.c **** 			if(d_timer_TX2>=TX2_delay_val)     // checking if the count reached LED interval
 355:Core/Src/main.c **** 			{
 356:Core/Src/main.c **** 				d_timer_TX2=0;		// assign "0" to repeat counting
 357:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_TX2_UPDATE);
ARM GAS  /tmp/ccPCXsH1.s 			page 14


 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** 			}
 360:Core/Src/main.c **** 	*/
 361:Core/Src/main.c **** }
 345              		.loc 1 361 1 view .LVU82
 346 0038 08BD     		pop	{r3, pc}
 347              	.L24:
 325:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 348              		.loc 1 325 3 is_stmt 1 view .LVU83
 325:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 349              		.loc 1 325 16 is_stmt 0 view .LVU84
 350 003a 1346     		mov	r3, r2
 351 003c 0022     		movs	r2, #0
 352 003e 1A70     		strb	r2, [r3]
 326:Core/Src/main.c **** 	}
 353              		.loc 1 326 3 is_stmt 1 view .LVU85
 326:Core/Src/main.c **** 	}
 354              		.loc 1 326 16 is_stmt 0 view .LVU86
 355 0040 0D4B     		ldr	r3, .L27+16
 356 0042 0122     		movs	r2, #1
 357 0044 1A70     		strb	r2, [r3]
 358 0046 E9E7     		b	.L21
 359              	.L25:
 333:Core/Src/main.c **** 		f_timer_20ms = 1;
 360              		.loc 1 333 3 is_stmt 1 view .LVU87
 333:Core/Src/main.c **** 		f_timer_20ms = 1;
 361              		.loc 1 333 16 is_stmt 0 view .LVU88
 362 0048 1346     		mov	r3, r2
 363 004a 0022     		movs	r2, #0
 364 004c 1A70     		strb	r2, [r3]
 334:Core/Src/main.c **** 	}
 365              		.loc 1 334 3 is_stmt 1 view .LVU89
 334:Core/Src/main.c **** 	}
 366              		.loc 1 334 16 is_stmt 0 view .LVU90
 367 004e 0B4B     		ldr	r3, .L27+20
 368 0050 0122     		movs	r2, #1
 369 0052 1A70     		strb	r2, [r3]
 370 0054 E9E7     		b	.L22
 371              	.L26:
 340:Core/Src/main.c **** 		// f_timer_50ms=1;
 372              		.loc 1 340 3 is_stmt 1 view .LVU91
 340:Core/Src/main.c **** 		// f_timer_50ms=1;
 373              		.loc 1 340 16 is_stmt 0 view .LVU92
 374 0056 1346     		mov	r3, r2
 375 0058 0022     		movs	r2, #0
 376 005a 1A70     		strb	r2, [r3]
 342:Core/Src/main.c **** 	}
 377              		.loc 1 342 3 is_stmt 1 view .LVU93
 378 005c 0621     		movs	r1, #6
 379 005e 0848     		ldr	r0, .L27+24
 380 0060 FFF7FEFF 		bl	buffer_push
 381              	.LVL12:
 382 0064 E8E7     		b	.L19
 383              	.L28:
 384 0066 00BF     		.align	2
 385              	.L27:
 386 0068 00000000 		.word	.LANCHOR9
ARM GAS  /tmp/ccPCXsH1.s 			page 15


 387 006c 00000000 		.word	.LANCHOR10
 388 0070 00000000 		.word	.LANCHOR12
 389 0074 00000000 		.word	.LANCHOR13
 390 0078 00000000 		.word	.LANCHOR11
 391 007c 00000000 		.word	.LANCHOR0
 392 0080 00000000 		.word	.LANCHOR14
 393              		.cfi_endproc
 394              	.LFE134:
 396              		.section	.text.key_read_task,"ax",%progbits
 397              		.align	1
 398              		.global	key_read_task
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	key_read_task:
 405              	.LFB135:
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** void key_read_task(void)
 364:Core/Src/main.c **** {
 406              		.loc 1 364 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI3:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 365:Core/Src/main.c **** 	if (!f_timer_30ms)
 415              		.loc 1 365 2 view .LVU95
 416              		.loc 1 365 6 is_stmt 0 view .LVU96
 417 0002 1F4B     		ldr	r3, .L39
 418 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419              		.loc 1 365 5 view .LVU97
 420 0006 33B3     		cbz	r3, .L29
 366:Core/Src/main.c **** 		return;		  // Checking if 30 ms counting is done
 367:Core/Src/main.c **** 	f_timer_30ms = 0; // clear the flag to wait next counting
 421              		.loc 1 367 2 is_stmt 1 view .LVU98
 422              		.loc 1 367 15 is_stmt 0 view .LVU99
 423 0008 1D4B     		ldr	r3, .L39
 424 000a 0022     		movs	r2, #0
 425 000c 1A70     		strb	r2, [r3]
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin | KEY2_Pin));
 426              		.loc 1 369 2 is_stmt 1 view .LVU100
 427              		.loc 1 369 39 is_stmt 0 view .LVU101
 428 000e 1D4B     		ldr	r3, .L39+4
 429 0010 1869     		ldr	r0, [r3, #16]
 430              	.LVL13:
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** 	key1_data = key1_data << 1; // Preparing to read KEY1 Input
 431              		.loc 1 371 2 is_stmt 1 view .LVU102
 432              		.loc 1 371 24 is_stmt 0 view .LVU103
 433 0012 1D4B     		ldr	r3, .L39+8
 434 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 435 0016 5200     		lsls	r2, r2, #1
ARM GAS  /tmp/ccPCXsH1.s 			page 16


 436 0018 D2B2     		uxtb	r2, r2
 437              		.loc 1 371 12 view .LVU104
 438 001a 1A70     		strb	r2, [r3]
 372:Core/Src/main.c **** 	key1_data &= 0b00001110;
 439              		.loc 1 372 2 is_stmt 1 view .LVU105
 440              		.loc 1 372 12 is_stmt 0 view .LVU106
 441 001c 02F00E02 		and	r2, r2, #14
 442 0020 1A70     		strb	r2, [r3]
 373:Core/Src/main.c **** 	key1_data |= ((key_pindata >> 2) & 0x1); // Read KEY1 Input
 443              		.loc 1 373 2 is_stmt 1 view .LVU107
 444              		.loc 1 373 35 is_stmt 0 view .LVU108
 445 0022 C0F38001 		ubfx	r1, r0, #2, #1
 446              		.loc 1 373 12 view .LVU109
 447 0026 0A43     		orrs	r2, r2, r1
 448 0028 1A70     		strb	r2, [r3]
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** 	key2_data = key2_data << 1; // Preparing to read KEY2 Input
 449              		.loc 1 375 2 is_stmt 1 view .LVU110
 450              		.loc 1 375 24 is_stmt 0 view .LVU111
 451 002a 1849     		ldr	r1, .L39+12
 452 002c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 453 002e 5B00     		lsls	r3, r3, #1
 454 0030 DBB2     		uxtb	r3, r3
 455              		.loc 1 375 12 view .LVU112
 456 0032 0B70     		strb	r3, [r1]
 376:Core/Src/main.c **** 	key2_data &= 0b00001110;
 457              		.loc 1 376 2 is_stmt 1 view .LVU113
 458              		.loc 1 376 12 is_stmt 0 view .LVU114
 459 0034 03F00E03 		and	r3, r3, #14
 460 0038 0B70     		strb	r3, [r1]
 377:Core/Src/main.c **** 	key2_data |= (key_pindata >> 3); // Read KEY2 Input
 461              		.loc 1 377 2 is_stmt 1 view .LVU115
 462              		.loc 1 377 12 is_stmt 0 view .LVU116
 463 003a C0F3C000 		ubfx	r0, r0, #3, #1
 464              	.LVL14:
 465              		.loc 1 377 12 view .LVU117
 466 003e 0343     		orrs	r3, r3, r0
 467 0040 0B70     		strb	r3, [r1]
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** 	if (key1_data == KEY_PRESSED) // Checking if KEY1 is pressed
 468              		.loc 1 379 2 is_stmt 1 view .LVU118
 469              		.loc 1 379 5 is_stmt 0 view .LVU119
 470 0042 0C2A     		cmp	r2, #12
 471 0044 08D0     		beq	.L35
 380:Core/Src/main.c **** 	{
 381:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 382:Core/Src/main.c **** 	}
 383:Core/Src/main.c **** 	else if (key1_data == KEY_RELEASED) //  Checking if KEY1 is released
 472              		.loc 1 383 7 is_stmt 1 view .LVU120
 473              		.loc 1 383 10 is_stmt 0 view .LVU121
 474 0046 032A     		cmp	r2, #3
 475 0048 0BD0     		beq	.L36
 476              	.L32:
 384:Core/Src/main.c **** 	{
 385:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_RELEASED); // Store the event in buffer
 386:Core/Src/main.c **** 	}
 387:Core/Src/main.c **** 
ARM GAS  /tmp/ccPCXsH1.s 			page 17


 388:Core/Src/main.c **** 	if (key2_data == KEY_PRESSED) // Checking if KEY2 is pressed
 477              		.loc 1 388 2 is_stmt 1 view .LVU122
 478              		.loc 1 388 16 is_stmt 0 view .LVU123
 479 004a 104B     		ldr	r3, .L39+12
 480 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 481              		.loc 1 388 5 view .LVU124
 482 004e 0C2B     		cmp	r3, #12
 483 0050 0CD0     		beq	.L37
 389:Core/Src/main.c **** 	{
 390:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 391:Core/Src/main.c **** 	}
 392:Core/Src/main.c **** 	else if (key2_data == KEY_RELEASED) //  Checking if KEY2 is released
 484              		.loc 1 392 7 is_stmt 1 view .LVU125
 485              		.loc 1 392 10 is_stmt 0 view .LVU126
 486 0052 032B     		cmp	r3, #3
 487 0054 0FD0     		beq	.L38
 488              	.L29:
 393:Core/Src/main.c **** 	{
 394:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_RELEASED); // Store the event in buffer
 395:Core/Src/main.c **** 	}
 396:Core/Src/main.c **** }
 489              		.loc 1 396 1 view .LVU127
 490 0056 08BD     		pop	{r3, pc}
 491              	.L35:
 381:Core/Src/main.c **** 	}
 492              		.loc 1 381 3 is_stmt 1 view .LVU128
 493 0058 0121     		movs	r1, #1
 494 005a 0D48     		ldr	r0, .L39+16
 495 005c FFF7FEFF 		bl	buffer_push
 496              	.LVL15:
 497 0060 F3E7     		b	.L32
 498              	.L36:
 385:Core/Src/main.c **** 	}
 499              		.loc 1 385 3 view .LVU129
 500 0062 0321     		movs	r1, #3
 501 0064 0A48     		ldr	r0, .L39+16
 502 0066 FFF7FEFF 		bl	buffer_push
 503              	.LVL16:
 504 006a EEE7     		b	.L32
 505              	.L37:
 390:Core/Src/main.c **** 	}
 506              		.loc 1 390 3 view .LVU130
 507 006c 0221     		movs	r1, #2
 508 006e 0848     		ldr	r0, .L39+16
 509 0070 FFF7FEFF 		bl	buffer_push
 510              	.LVL17:
 511 0074 EFE7     		b	.L29
 512              	.L38:
 394:Core/Src/main.c **** 	}
 513              		.loc 1 394 3 view .LVU131
 514 0076 0421     		movs	r1, #4
 515 0078 0548     		ldr	r0, .L39+16
 516 007a FFF7FEFF 		bl	buffer_push
 517              	.LVL18:
 518 007e EAE7     		b	.L29
 519              	.L40:
 520              		.align	2
ARM GAS  /tmp/ccPCXsH1.s 			page 18


 521              	.L39:
 522 0080 00000000 		.word	.LANCHOR11
 523 0084 00180240 		.word	1073879040
 524 0088 00000000 		.word	.LANCHOR15
 525 008c 00000000 		.word	.LANCHOR16
 526 0090 00000000 		.word	.LANCHOR14
 527              		.cfi_endproc
 528              	.LFE135:
 530              		.section	.text.RS485_Read_Message,"ax",%progbits
 531              		.align	1
 532              		.global	RS485_Read_Message
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	RS485_Read_Message:
 539              	.LFB137:
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** void main_task(void)
 399:Core/Src/main.c **** {
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** 	if (event_buffer.head != event_buffer.tail)
 402:Core/Src/main.c **** 	{
 403:Core/Src/main.c **** 		
 404:Core/Src/main.c **** 		event = buffer_pop(&event_buffer); // if there is event then get the event from buffer
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** 	}
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** 	switch(state)
 410:Core/Src/main.c **** 	{
 411:Core/Src/main.c **** 		case STATE_ASSIGNED_ADDR:
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** 		break;
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** 		case STATE_OPERATION:
 416:Core/Src/main.c **** 		
 417:Core/Src/main.c **** 		break;
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** 	}
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** 	switch (event)
 422:Core/Src/main.c **** 		{
 423:Core/Src/main.c **** 		case EVENT_KEY1_PRESSED:
 424:Core/Src/main.c **** 			digit1++;
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** 			if (digit1 > 9)
 427:Core/Src/main.c **** 			{
 428:Core/Src/main.c **** 				digit1 = 0;
 429:Core/Src/main.c **** 			}
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** 			RS485_Send_Message(0x10, FUNC_WRITE, (digit1 + '0'));
 432:Core/Src/main.c **** 			event = EVENT_RESET;
 433:Core/Src/main.c **** 			break;
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** 		case EVENT_KEY2_PRESSED:
 436:Core/Src/main.c **** 			digit2++;
ARM GAS  /tmp/ccPCXsH1.s 			page 19


 437:Core/Src/main.c **** 			if (digit2 > 15)
 438:Core/Src/main.c **** 			{
 439:Core/Src/main.c **** 				digit2 = 10;
 440:Core/Src/main.c **** 			}
 441:Core/Src/main.c **** 			RS485_Send_Message(0x10, FUNC_WRITE, (digit1 + '0'));
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** 			event = EVENT_RESET;
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** 			break;
 446:Core/Src/main.c **** 		case EVENT_RX_COMPLETE:
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** 			RS485_Read_Message();
 449:Core/Src/main.c **** 			event = EVENT_RESET;
 450:Core/Src/main.c **** 			break;
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** 		case EVENT_QUERRY:
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** 			if (f_querry)
 455:Core/Src/main.c **** 			{
 456:Core/Src/main.c **** 				RS485_Send_Message(0x10, FUNC_READ, 0xFF);
 457:Core/Src/main.c **** 				f_querry = 0;
 458:Core/Src/main.c **** 			}
 459:Core/Src/main.c **** 			else
 460:Core/Src/main.c **** 			{
 461:Core/Src/main.c **** 				RS485_Send_Message(0x20, FUNC_READ, 0XFF);
 462:Core/Src/main.c **** 				f_querry = 1;
 463:Core/Src/main.c **** 			}
 464:Core/Src/main.c **** 			
 465:Core/Src/main.c **** 			event = EVENT_RESET;
 466:Core/Src/main.c **** 			break;
 467:Core/Src/main.c **** 		}
 468:Core/Src/main.c **** 	
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** }
 473:Core/Src/main.c **** 
 474:Core/Src/main.c **** /*
 475:Core/Src/main.c **** void TX1_delay_update(void){
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** 	if (TX1_delay_val==50) return;
 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** 	TX1_delay_val-=50;
 480:Core/Src/main.c **** }
 481:Core/Src/main.c **** 
 482:Core/Src/main.c **** void TX2_delay_update(void){
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** 	if (TX2_delay_val==50) return;
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** 	TX2_delay_val-=50;
 487:Core/Src/main.c **** }
 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** void RS485_Read_Message(void)
 492:Core/Src/main.c **** {
 540              		.loc 1 492 1 view -0
ARM GAS  /tmp/ccPCXsH1.s 			page 20


 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 493:Core/Src/main.c **** 	uint8_t * digit;
 544              		.loc 1 493 2 view .LVU133
 494:Core/Src/main.c **** 	if (rx2_buffer.tail == rx2_buffer.head)
 545              		.loc 1 494 2 view .LVU134
 546              		.loc 1 494 16 is_stmt 0 view .LVU135
 547 0000 144B     		ldr	r3, .L52
 548 0002 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 549              		.loc 1 494 35 view .LVU136
 550 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 551              		.loc 1 494 5 view .LVU137
 552 0006 9A42     		cmp	r2, r3
 553 0008 23D0     		beq	.L48
 492:Core/Src/main.c **** 	uint8_t * digit;
 554              		.loc 1 492 1 view .LVU138
 555 000a 10B5     		push	{r4, lr}
 556              	.LCFI4:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 4, -8
 559              		.cfi_offset 14, -4
 495:Core/Src/main.c **** 		return;
 496:Core/Src/main.c **** 
 497:Core/Src/main.c **** 	buffer_to_message(&rx2_buffer, RX_msg);
 560              		.loc 1 497 2 is_stmt 1 view .LVU139
 561 000c 124C     		ldr	r4, .L52+4
 562 000e 2146     		mov	r1, r4
 563 0010 1048     		ldr	r0, .L52
 564 0012 FFF7FEFF 		bl	buffer_to_message
 565              	.LVL19:
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** 	if (check_checksum(RX_msg) == CHECKSUM_ERROR)
 566              		.loc 1 499 2 view .LVU140
 567              		.loc 1 499 6 is_stmt 0 view .LVU141
 568 0016 2046     		mov	r0, r4
 569 0018 FFF7FEFF 		bl	check_checksum
 570              	.LVL20:
 571              		.loc 1 499 5 view .LVU142
 572 001c 48B1     		cbz	r0, .L51
 500:Core/Src/main.c **** 	{
 501:Core/Src/main.c **** 		error = ERROR_CHECKSUM;
 502:Core/Src/main.c **** 		return;
 503:Core/Src/main.c **** 	}
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** 	if (RX_msg[0] == 0x10)
 573              		.loc 1 505 2 is_stmt 1 view .LVU143
 574              		.loc 1 505 12 is_stmt 0 view .LVU144
 575 001e 0E4B     		ldr	r3, .L52+4
 576 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 577              		.loc 1 505 5 view .LVU145
 578 0022 102B     		cmp	r3, #16
 579 0024 09D0     		beq	.L45
 506:Core/Src/main.c **** 	{
 507:Core/Src/main.c **** 		 digit = &digit1;
 508:Core/Src/main.c **** 	}
 509:Core/Src/main.c **** 	else if (RX_msg[0] == 0x20)
ARM GAS  /tmp/ccPCXsH1.s 			page 21


 580              		.loc 1 509 7 is_stmt 1 view .LVU146
 581              		.loc 1 509 10 is_stmt 0 view .LVU147
 582 0026 202B     		cmp	r3, #32
 583 0028 11D0     		beq	.L46
 510:Core/Src/main.c **** 	{
 511:Core/Src/main.c **** 		 digit = &digit2;
 512:Core/Src/main.c **** 	}else{
 513:Core/Src/main.c **** 		error = ERROR_UNKNOWN_ADDR;
 584              		.loc 1 513 3 is_stmt 1 view .LVU148
 585              		.loc 1 513 9 is_stmt 0 view .LVU149
 586 002a 0C4B     		ldr	r3, .L52+8
 587 002c 0222     		movs	r2, #2
 588 002e 1A70     		strb	r2, [r3]
 514:Core/Src/main.c **** 		return;
 589              		.loc 1 514 3 is_stmt 1 view .LVU150
 590 0030 02E0     		b	.L41
 591              	.L51:
 501:Core/Src/main.c **** 		return;
 592              		.loc 1 501 3 view .LVU151
 501:Core/Src/main.c **** 		return;
 593              		.loc 1 501 9 is_stmt 0 view .LVU152
 594 0032 0A4B     		ldr	r3, .L52+8
 595 0034 0122     		movs	r2, #1
 596 0036 1A70     		strb	r2, [r3]
 502:Core/Src/main.c **** 	}
 597              		.loc 1 502 3 is_stmt 1 view .LVU153
 598              	.L41:
 515:Core/Src/main.c **** 	}
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** 	if (RX_msg[1] == FUNC_READ)
 518:Core/Src/main.c **** 	{
 519:Core/Src/main.c **** 		*digit = (RX_msg[2] - '0');
 520:Core/Src/main.c **** 	}
 521:Core/Src/main.c **** 	else if (RX_msg[1] == FUNC_RESEND)
 522:Core/Src/main.c **** 	{
 523:Core/Src/main.c **** 	
 524:Core/Src/main.c **** 	}
 525:Core/Src/main.c **** }
 599              		.loc 1 525 1 is_stmt 0 view .LVU154
 600 0038 10BD     		pop	{r4, pc}
 601              	.L45:
 507:Core/Src/main.c **** 	}
 602              		.loc 1 507 10 view .LVU155
 603 003a 094A     		ldr	r2, .L52+12
 604              	.L44:
 605              	.LVL21:
 517:Core/Src/main.c **** 	{
 606              		.loc 1 517 2 is_stmt 1 view .LVU156
 517:Core/Src/main.c **** 	{
 607              		.loc 1 517 12 is_stmt 0 view .LVU157
 608 003c 064B     		ldr	r3, .L52+4
 609 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 517:Core/Src/main.c **** 	{
 610              		.loc 1 517 5 view .LVU158
 611 0040 022B     		cmp	r3, #2
 612 0042 F9D1     		bne	.L41
 519:Core/Src/main.c **** 	}
ARM GAS  /tmp/ccPCXsH1.s 			page 22


 613              		.loc 1 519 3 is_stmt 1 view .LVU159
 519:Core/Src/main.c **** 	}
 614              		.loc 1 519 19 is_stmt 0 view .LVU160
 615 0044 044B     		ldr	r3, .L52+4
 616 0046 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 519:Core/Src/main.c **** 	}
 617              		.loc 1 519 23 view .LVU161
 618 0048 303B     		subs	r3, r3, #48
 519:Core/Src/main.c **** 	}
 619              		.loc 1 519 10 view .LVU162
 620 004a 1370     		strb	r3, [r2]
 524:Core/Src/main.c **** }
 621              		.loc 1 524 2 is_stmt 1 view .LVU163
 622 004c F4E7     		b	.L41
 623              	.LVL22:
 624              	.L46:
 511:Core/Src/main.c **** 	}else{
 625              		.loc 1 511 10 is_stmt 0 view .LVU164
 626 004e 054A     		ldr	r2, .L52+16
 627 0050 F4E7     		b	.L44
 628              	.L48:
 629              	.LCFI5:
 630              		.cfi_def_cfa_offset 0
 631              		.cfi_restore 4
 632              		.cfi_restore 14
 633 0052 7047     		bx	lr
 634              	.L53:
 635              		.align	2
 636              	.L52:
 637 0054 00000000 		.word	.LANCHOR17
 638 0058 00000000 		.word	.LANCHOR18
 639 005c 00000000 		.word	.LANCHOR19
 640 0060 00000000 		.word	.LANCHOR8
 641 0064 00000000 		.word	.LANCHOR6
 642              		.cfi_endproc
 643              	.LFE137:
 645              		.section	.text.RS485_Send_Message,"ax",%progbits
 646              		.align	1
 647              		.global	RS485_Send_Message
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu fpv4-sp-d16
 653              	RS485_Send_Message:
 654              	.LVL23:
 655              	.LFB138:
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** void RS485_Send_Message(uint8_t address, uint8_t func_code, uint8_t data)
 528:Core/Src/main.c **** {
 656              		.loc 1 528 1 is_stmt 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		.loc 1 528 1 is_stmt 0 view .LVU166
 661 0000 70B5     		push	{r4, r5, r6, lr}
 662              	.LCFI6:
 663              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccPCXsH1.s 			page 23


 664              		.cfi_offset 4, -16
 665              		.cfi_offset 5, -12
 666              		.cfi_offset 6, -8
 667              		.cfi_offset 14, -4
 529:Core/Src/main.c **** 	TX_msg[0] = address;
 668              		.loc 1 529 2 is_stmt 1 view .LVU167
 669              		.loc 1 529 12 is_stmt 0 view .LVU168
 670 0002 144C     		ldr	r4, .L56
 671 0004 2070     		strb	r0, [r4]
 530:Core/Src/main.c **** 	TX_msg[1] = func_code;
 672              		.loc 1 530 2 is_stmt 1 view .LVU169
 673              		.loc 1 530 12 is_stmt 0 view .LVU170
 674 0006 6170     		strb	r1, [r4, #1]
 531:Core/Src/main.c **** 	TX_msg[2] = data;
 675              		.loc 1 531 2 is_stmt 1 view .LVU171
 676              		.loc 1 531 12 is_stmt 0 view .LVU172
 677 0008 A270     		strb	r2, [r4, #2]
 532:Core/Src/main.c **** 	cal_checksum(TX_msg);
 678              		.loc 1 532 2 is_stmt 1 view .LVU173
 679 000a 2046     		mov	r0, r4
 680              	.LVL24:
 681              		.loc 1 532 2 is_stmt 0 view .LVU174
 682 000c FFF7FEFF 		bl	cal_checksum
 683              	.LVL25:
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
 535:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 684              		.loc 1 535 2 is_stmt 1 view .LVU175
 685 0010 114E     		ldr	r6, .L56+4
 686 0012 0122     		movs	r2, #1
 687 0014 4FF48051 		mov	r1, #4096
 688 0018 3046     		mov	r0, r6
 689 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 690              	.LVL26:
 536:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, &start_cmd, 1, 10);
 691              		.loc 1 536 2 view .LVU176
 692 001e 0F4D     		ldr	r5, .L56+8
 693 0020 0A23     		movs	r3, #10
 694 0022 0122     		movs	r2, #1
 695 0024 0E49     		ldr	r1, .L56+12
 696 0026 2846     		mov	r0, r5
 697 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 698              	.LVL27:
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, TX_msg, sizeof(TX_msg), 10);
 699              		.loc 1 538 2 view .LVU177
 700 002c 0A23     		movs	r3, #10
 701 002e 0422     		movs	r2, #4
 702 0030 2146     		mov	r1, r4
 703 0032 2846     		mov	r0, r5
 704 0034 FFF7FEFF 		bl	HAL_UART_Transmit
 705              	.LVL28:
 539:Core/Src/main.c **** 
 540:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, &stop_cmd, 1, 10);
 706              		.loc 1 540 2 view .LVU178
 707 0038 0A23     		movs	r3, #10
 708 003a 0122     		movs	r2, #1
ARM GAS  /tmp/ccPCXsH1.s 			page 24


 709 003c 0949     		ldr	r1, .L56+16
 710 003e 2846     		mov	r0, r5
 711 0040 FFF7FEFF 		bl	HAL_UART_Transmit
 712              	.LVL29:
 541:Core/Src/main.c **** 
 542:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 713              		.loc 1 542 2 view .LVU179
 714 0044 0022     		movs	r2, #0
 715 0046 4FF48051 		mov	r1, #4096
 716 004a 3046     		mov	r0, r6
 717 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 718              	.LVL30:
 543:Core/Src/main.c **** }
 719              		.loc 1 543 1 is_stmt 0 view .LVU180
 720 0050 70BD     		pop	{r4, r5, r6, pc}
 721              	.L57:
 722 0052 00BF     		.align	2
 723              	.L56:
 724 0054 00000000 		.word	.LANCHOR20
 725 0058 00000240 		.word	1073872896
 726 005c 00000000 		.word	huart4
 727 0060 00000000 		.word	.LANCHOR21
 728 0064 00000000 		.word	.LANCHOR22
 729              		.cfi_endproc
 730              	.LFE138:
 732              		.section	.text.main_task,"ax",%progbits
 733              		.align	1
 734              		.global	main_task
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv4-sp-d16
 740              	main_task:
 741              	.LFB136:
 399:Core/Src/main.c **** 
 742              		.loc 1 399 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746 0000 08B5     		push	{r3, lr}
 747              	.LCFI7:
 748              		.cfi_def_cfa_offset 8
 749              		.cfi_offset 3, -8
 750              		.cfi_offset 14, -4
 401:Core/Src/main.c **** 	{
 751              		.loc 1 401 2 view .LVU182
 401:Core/Src/main.c **** 	{
 752              		.loc 1 401 18 is_stmt 0 view .LVU183
 753 0002 2F4B     		ldr	r3, .L72
 754 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 401:Core/Src/main.c **** 	{
 755              		.loc 1 401 39 view .LVU184
 756 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 401:Core/Src/main.c **** 	{
 757              		.loc 1 401 5 view .LVU185
 758 0008 9A42     		cmp	r2, r3
 759 000a 09D1     		bne	.L71
ARM GAS  /tmp/ccPCXsH1.s 			page 25


 760              	.L59:
 409:Core/Src/main.c **** 	{
 761              		.loc 1 409 2 is_stmt 1 view .LVU186
 421:Core/Src/main.c **** 		{
 762              		.loc 1 421 2 view .LVU187
 763 000c 2D4B     		ldr	r3, .L72+4
 764 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 765 0010 013B     		subs	r3, r3, #1
 766 0012 052B     		cmp	r3, #5
 767 0014 1FD8     		bhi	.L58
 768 0016 DFE803F0 		tbb	[pc, r3]
 769              	.L62:
 770 001a 09       		.byte	(.L65-.L62)/2
 771 001b 1F       		.byte	(.L64-.L62)/2
 772 001c 1E       		.byte	(.L58-.L62)/2
 773 001d 1E       		.byte	(.L58-.L62)/2
 774 001e 35       		.byte	(.L63-.L62)/2
 775 001f 3B       		.byte	(.L61-.L62)/2
 776              		.p2align 1
 777              	.L71:
 404:Core/Src/main.c **** 
 778              		.loc 1 404 3 view .LVU188
 404:Core/Src/main.c **** 
 779              		.loc 1 404 11 is_stmt 0 view .LVU189
 780 0020 2748     		ldr	r0, .L72
 781 0022 FFF7FEFF 		bl	buffer_pop
 782              	.LVL31:
 404:Core/Src/main.c **** 
 783              		.loc 1 404 9 view .LVU190
 784 0026 274B     		ldr	r3, .L72+4
 785 0028 1870     		strb	r0, [r3]
 786 002a EFE7     		b	.L59
 787              	.L65:
 424:Core/Src/main.c **** 
 788              		.loc 1 424 4 is_stmt 1 view .LVU191
 424:Core/Src/main.c **** 
 789              		.loc 1 424 10 is_stmt 0 view .LVU192
 790 002c 264A     		ldr	r2, .L72+8
 791 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 792 0030 0133     		adds	r3, r3, #1
 793 0032 DBB2     		uxtb	r3, r3
 794 0034 1370     		strb	r3, [r2]
 426:Core/Src/main.c **** 			{
 795              		.loc 1 426 4 is_stmt 1 view .LVU193
 426:Core/Src/main.c **** 			{
 796              		.loc 1 426 7 is_stmt 0 view .LVU194
 797 0036 092B     		cmp	r3, #9
 798 0038 02D9     		bls	.L66
 428:Core/Src/main.c **** 			}
 799              		.loc 1 428 5 is_stmt 1 view .LVU195
 428:Core/Src/main.c **** 			}
 800              		.loc 1 428 12 is_stmt 0 view .LVU196
 801 003a 1346     		mov	r3, r2
 802 003c 0022     		movs	r2, #0
 803 003e 1A70     		strb	r2, [r3]
 804              	.L66:
 431:Core/Src/main.c **** 			event = EVENT_RESET;
ARM GAS  /tmp/ccPCXsH1.s 			page 26


 805              		.loc 1 431 4 is_stmt 1 view .LVU197
 806 0040 214B     		ldr	r3, .L72+8
 807 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 808 0044 3032     		adds	r2, r2, #48
 809 0046 D2B2     		uxtb	r2, r2
 810 0048 0121     		movs	r1, #1
 811 004a 1020     		movs	r0, #16
 812 004c FFF7FEFF 		bl	RS485_Send_Message
 813              	.LVL32:
 432:Core/Src/main.c **** 			break;
 814              		.loc 1 432 4 view .LVU198
 432:Core/Src/main.c **** 			break;
 815              		.loc 1 432 10 is_stmt 0 view .LVU199
 816 0050 1C4B     		ldr	r3, .L72+4
 817 0052 0022     		movs	r2, #0
 818 0054 1A70     		strb	r2, [r3]
 433:Core/Src/main.c **** 
 819              		.loc 1 433 4 is_stmt 1 view .LVU200
 820              	.L58:
 472:Core/Src/main.c **** 
 821              		.loc 1 472 1 is_stmt 0 view .LVU201
 822 0056 08BD     		pop	{r3, pc}
 823              	.L64:
 436:Core/Src/main.c **** 			if (digit2 > 15)
 824              		.loc 1 436 4 is_stmt 1 view .LVU202
 436:Core/Src/main.c **** 			if (digit2 > 15)
 825              		.loc 1 436 10 is_stmt 0 view .LVU203
 826 0058 1C4A     		ldr	r2, .L72+12
 827 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 828 005c 0133     		adds	r3, r3, #1
 829 005e DBB2     		uxtb	r3, r3
 830 0060 1370     		strb	r3, [r2]
 437:Core/Src/main.c **** 			{
 831              		.loc 1 437 4 is_stmt 1 view .LVU204
 437:Core/Src/main.c **** 			{
 832              		.loc 1 437 7 is_stmt 0 view .LVU205
 833 0062 0F2B     		cmp	r3, #15
 834 0064 02D9     		bls	.L67
 439:Core/Src/main.c **** 			}
 835              		.loc 1 439 5 is_stmt 1 view .LVU206
 439:Core/Src/main.c **** 			}
 836              		.loc 1 439 12 is_stmt 0 view .LVU207
 837 0066 1346     		mov	r3, r2
 838 0068 0A22     		movs	r2, #10
 839 006a 1A70     		strb	r2, [r3]
 840              	.L67:
 441:Core/Src/main.c **** 
 841              		.loc 1 441 4 is_stmt 1 view .LVU208
 842 006c 164B     		ldr	r3, .L72+8
 843 006e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 844 0070 3032     		adds	r2, r2, #48
 845 0072 D2B2     		uxtb	r2, r2
 846 0074 0121     		movs	r1, #1
 847 0076 1020     		movs	r0, #16
 848 0078 FFF7FEFF 		bl	RS485_Send_Message
 849              	.LVL33:
 443:Core/Src/main.c **** 
ARM GAS  /tmp/ccPCXsH1.s 			page 27


 850              		.loc 1 443 4 view .LVU209
 443:Core/Src/main.c **** 
 851              		.loc 1 443 10 is_stmt 0 view .LVU210
 852 007c 114B     		ldr	r3, .L72+4
 853 007e 0022     		movs	r2, #0
 854 0080 1A70     		strb	r2, [r3]
 445:Core/Src/main.c **** 		case EVENT_RX_COMPLETE:
 855              		.loc 1 445 4 is_stmt 1 view .LVU211
 856 0082 E8E7     		b	.L58
 857              	.L63:
 448:Core/Src/main.c **** 			event = EVENT_RESET;
 858              		.loc 1 448 4 view .LVU212
 859 0084 FFF7FEFF 		bl	RS485_Read_Message
 860              	.LVL34:
 449:Core/Src/main.c **** 			break;
 861              		.loc 1 449 4 view .LVU213
 449:Core/Src/main.c **** 			break;
 862              		.loc 1 449 10 is_stmt 0 view .LVU214
 863 0088 0E4B     		ldr	r3, .L72+4
 864 008a 0022     		movs	r2, #0
 865 008c 1A70     		strb	r2, [r3]
 450:Core/Src/main.c **** 
 866              		.loc 1 450 4 is_stmt 1 view .LVU215
 867 008e E2E7     		b	.L58
 868              	.L61:
 454:Core/Src/main.c **** 			{
 869              		.loc 1 454 4 view .LVU216
 454:Core/Src/main.c **** 			{
 870              		.loc 1 454 8 is_stmt 0 view .LVU217
 871 0090 0F4B     		ldr	r3, .L72+16
 872 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 454:Core/Src/main.c **** 			{
 873              		.loc 1 454 7 view .LVU218
 874 0094 5BB1     		cbz	r3, .L68
 456:Core/Src/main.c **** 				f_querry = 0;
 875              		.loc 1 456 5 is_stmt 1 view .LVU219
 876 0096 FF22     		movs	r2, #255
 877 0098 0221     		movs	r1, #2
 878 009a 1020     		movs	r0, #16
 879 009c FFF7FEFF 		bl	RS485_Send_Message
 880              	.LVL35:
 457:Core/Src/main.c **** 			}
 881              		.loc 1 457 5 view .LVU220
 457:Core/Src/main.c **** 			}
 882              		.loc 1 457 14 is_stmt 0 view .LVU221
 883 00a0 0B4B     		ldr	r3, .L72+16
 884 00a2 0022     		movs	r2, #0
 885 00a4 1A70     		strb	r2, [r3]
 886              	.L69:
 465:Core/Src/main.c **** 			break;
 887              		.loc 1 465 4 is_stmt 1 view .LVU222
 465:Core/Src/main.c **** 			break;
 888              		.loc 1 465 10 is_stmt 0 view .LVU223
 889 00a6 074B     		ldr	r3, .L72+4
 890 00a8 0022     		movs	r2, #0
 891 00aa 1A70     		strb	r2, [r3]
 466:Core/Src/main.c **** 		}
ARM GAS  /tmp/ccPCXsH1.s 			page 28


 892              		.loc 1 466 4 is_stmt 1 view .LVU224
 472:Core/Src/main.c **** 
 893              		.loc 1 472 1 is_stmt 0 view .LVU225
 894 00ac D3E7     		b	.L58
 895              	.L68:
 461:Core/Src/main.c **** 				f_querry = 1;
 896              		.loc 1 461 5 is_stmt 1 view .LVU226
 897 00ae FF22     		movs	r2, #255
 898 00b0 0221     		movs	r1, #2
 899 00b2 2020     		movs	r0, #32
 900 00b4 FFF7FEFF 		bl	RS485_Send_Message
 901              	.LVL36:
 462:Core/Src/main.c **** 			}
 902              		.loc 1 462 5 view .LVU227
 462:Core/Src/main.c **** 			}
 903              		.loc 1 462 14 is_stmt 0 view .LVU228
 904 00b8 054B     		ldr	r3, .L72+16
 905 00ba 0122     		movs	r2, #1
 906 00bc 1A70     		strb	r2, [r3]
 907 00be F2E7     		b	.L69
 908              	.L73:
 909              		.align	2
 910              	.L72:
 911 00c0 00000000 		.word	.LANCHOR14
 912 00c4 00000000 		.word	.LANCHOR23
 913 00c8 00000000 		.word	.LANCHOR8
 914 00cc 00000000 		.word	.LANCHOR6
 915 00d0 00000000 		.word	.LANCHOR24
 916              		.cfi_endproc
 917              	.LFE136:
 919              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 920              		.align	1
 921              		.global	HAL_TIM_PeriodElapsedCallback
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 925              		.fpu fpv4-sp-d16
 927              	HAL_TIM_PeriodElapsedCallback:
 928              	.LVL37:
 929              	.LFB139:
 544:Core/Src/main.c **** 
 545:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 546:Core/Src/main.c **** {
 930              		.loc 1 546 1 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 547:Core/Src/main.c **** 	// Check which version of the timer triggered this callback and toggle LED
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** 	if (htim == &htim4)
 935              		.loc 1 549 2 view .LVU230
 936              		.loc 1 549 5 is_stmt 0 view .LVU231
 937 0000 034B     		ldr	r3, .L77
 938 0002 8342     		cmp	r3, r0
 939 0004 00D0     		beq	.L76
 940              	.L74:
ARM GAS  /tmp/ccPCXsH1.s 			page 29


 550:Core/Src/main.c **** 	{
 551:Core/Src/main.c **** 		f_timer_10ms = 1;
 552:Core/Src/main.c **** 	}
 553:Core/Src/main.c **** }
 941              		.loc 1 553 1 view .LVU232
 942 0006 7047     		bx	lr
 943              	.L76:
 551:Core/Src/main.c **** 	}
 944              		.loc 1 551 3 is_stmt 1 view .LVU233
 551:Core/Src/main.c **** 	}
 945              		.loc 1 551 16 is_stmt 0 view .LVU234
 946 0008 024B     		ldr	r3, .L77+4
 947 000a 0122     		movs	r2, #1
 948 000c 1A70     		strb	r2, [r3]
 949              		.loc 1 553 1 view .LVU235
 950 000e FAE7     		b	.L74
 951              	.L78:
 952              		.align	2
 953              	.L77:
 954 0010 00000000 		.word	htim4
 955 0014 00000000 		.word	.LANCHOR9
 956              		.cfi_endproc
 957              	.LFE139:
 959              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 960              		.align	1
 961              		.global	HAL_UART_RxCpltCallback
 962              		.syntax unified
 963              		.thumb
 964              		.thumb_func
 965              		.fpu fpv4-sp-d16
 967              	HAL_UART_RxCpltCallback:
 968              	.LVL38:
 969              	.LFB140:
 554:Core/Src/main.c **** 
 555:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 556:Core/Src/main.c **** {
 970              		.loc 1 556 1 is_stmt 1 view -0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              		.loc 1 556 1 is_stmt 0 view .LVU237
 975 0000 08B5     		push	{r3, lr}
 976              	.LCFI8:
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 3, -8
 979              		.cfi_offset 14, -4
 557:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** 	if (huart == &huart4)
 980              		.loc 1 559 2 is_stmt 1 view .LVU238
 981              		.loc 1 559 5 is_stmt 0 view .LVU239
 982 0002 144B     		ldr	r3, .L87
 983 0004 8342     		cmp	r3, r0
 984 0006 00D0     		beq	.L85
 985              	.LVL39:
 986              	.L79:
 560:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccPCXsH1.s 			page 30


 561:Core/Src/main.c **** 
 562:Core/Src/main.c **** 		if (!transmission_f)
 563:Core/Src/main.c **** 		{
 564:Core/Src/main.c **** 			if (rx_temp == 0x2)
 565:Core/Src/main.c **** 			{
 566:Core/Src/main.c **** 				transmission_f = 1;
 567:Core/Src/main.c **** 			}
 568:Core/Src/main.c **** 		}
 569:Core/Src/main.c **** 		else
 570:Core/Src/main.c **** 		{
 571:Core/Src/main.c **** 			if (rx_temp == 0x3)
 572:Core/Src/main.c **** 			{ // digit1= 2;
 573:Core/Src/main.c **** 				transmission_f = 0;
 574:Core/Src/main.c **** 				buffer_push(&event_buffer, EVENT_RX_COMPLETE);
 575:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 576:Core/Src/main.c **** 				return;
 577:Core/Src/main.c **** 			}
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** 			buffer_push(&rx2_buffer, rx_temp);
 580:Core/Src/main.c **** 		}
 581:Core/Src/main.c **** 
 582:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 583:Core/Src/main.c **** 	}
 584:Core/Src/main.c **** }
 987              		.loc 1 584 1 view .LVU240
 988 0008 08BD     		pop	{r3, pc}
 989              	.LVL40:
 990              	.L85:
 562:Core/Src/main.c **** 		{
 991              		.loc 1 562 3 is_stmt 1 view .LVU241
 562:Core/Src/main.c **** 		{
 992              		.loc 1 562 7 is_stmt 0 view .LVU242
 993 000a 134B     		ldr	r3, .L87+4
 994 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 562:Core/Src/main.c **** 		{
 995              		.loc 1 562 6 view .LVU243
 996 000e 3BB9     		cbnz	r3, .L81
 564:Core/Src/main.c **** 			{
 997              		.loc 1 564 4 is_stmt 1 view .LVU244
 564:Core/Src/main.c **** 			{
 998              		.loc 1 564 16 is_stmt 0 view .LVU245
 999 0010 124B     		ldr	r3, .L87+8
 1000 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 564:Core/Src/main.c **** 			{
 1001              		.loc 1 564 7 view .LVU246
 1002 0014 022B     		cmp	r3, #2
 1003 0016 0AD1     		bne	.L82
 566:Core/Src/main.c **** 			}
 1004              		.loc 1 566 5 is_stmt 1 view .LVU247
 566:Core/Src/main.c **** 			}
 1005              		.loc 1 566 20 is_stmt 0 view .LVU248
 1006 0018 0F4B     		ldr	r3, .L87+4
 1007 001a 0122     		movs	r2, #1
 1008 001c 1A70     		strb	r2, [r3]
 1009 001e 06E0     		b	.L82
 1010              	.L81:
 571:Core/Src/main.c **** 			{ // digit1= 2;
ARM GAS  /tmp/ccPCXsH1.s 			page 31


 1011              		.loc 1 571 4 is_stmt 1 view .LVU249
 571:Core/Src/main.c **** 			{ // digit1= 2;
 1012              		.loc 1 571 16 is_stmt 0 view .LVU250
 1013 0020 0E4B     		ldr	r3, .L87+8
 1014 0022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 571:Core/Src/main.c **** 			{ // digit1= 2;
 1015              		.loc 1 571 7 view .LVU251
 1016 0024 0329     		cmp	r1, #3
 1017 0026 08D0     		beq	.L86
 579:Core/Src/main.c **** 		}
 1018              		.loc 1 579 4 is_stmt 1 view .LVU252
 1019 0028 0D48     		ldr	r0, .L87+12
 1020              	.LVL41:
 579:Core/Src/main.c **** 		}
 1021              		.loc 1 579 4 is_stmt 0 view .LVU253
 1022 002a FFF7FEFF 		bl	buffer_push
 1023              	.LVL42:
 1024              	.L82:
 582:Core/Src/main.c **** 	}
 1025              		.loc 1 582 3 is_stmt 1 view .LVU254
 1026 002e 0122     		movs	r2, #1
 1027 0030 0A49     		ldr	r1, .L87+8
 1028 0032 0848     		ldr	r0, .L87
 1029 0034 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1030              	.LVL43:
 1031 0038 E6E7     		b	.L79
 1032              	.LVL44:
 1033              	.L86:
 573:Core/Src/main.c **** 				buffer_push(&event_buffer, EVENT_RX_COMPLETE);
 1034              		.loc 1 573 5 view .LVU255
 573:Core/Src/main.c **** 				buffer_push(&event_buffer, EVENT_RX_COMPLETE);
 1035              		.loc 1 573 20 is_stmt 0 view .LVU256
 1036 003a 074B     		ldr	r3, .L87+4
 1037 003c 0022     		movs	r2, #0
 1038 003e 1A70     		strb	r2, [r3]
 574:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 1039              		.loc 1 574 5 is_stmt 1 view .LVU257
 1040 0040 0521     		movs	r1, #5
 1041 0042 0848     		ldr	r0, .L87+16
 1042              	.LVL45:
 574:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 1043              		.loc 1 574 5 is_stmt 0 view .LVU258
 1044 0044 FFF7FEFF 		bl	buffer_push
 1045              	.LVL46:
 575:Core/Src/main.c **** 				return;
 1046              		.loc 1 575 5 is_stmt 1 view .LVU259
 1047 0048 0122     		movs	r2, #1
 1048 004a 0449     		ldr	r1, .L87+8
 1049 004c 0148     		ldr	r0, .L87
 1050 004e FFF7FEFF 		bl	HAL_UART_Receive_IT
 1051              	.LVL47:
 576:Core/Src/main.c **** 			}
 1052              		.loc 1 576 5 view .LVU260
 1053 0052 D9E7     		b	.L79
 1054              	.L88:
 1055              		.align	2
 1056              	.L87:
ARM GAS  /tmp/ccPCXsH1.s 			page 32


 1057 0054 00000000 		.word	huart4
 1058 0058 00000000 		.word	.LANCHOR25
 1059 005c 00000000 		.word	.LANCHOR26
 1060 0060 00000000 		.word	.LANCHOR17
 1061 0064 00000000 		.word	.LANCHOR14
 1062              		.cfi_endproc
 1063              	.LFE140:
 1065              		.section	.text.Error_Handler,"ax",%progbits
 1066              		.align	1
 1067              		.global	Error_Handler
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu fpv4-sp-d16
 1073              	Error_Handler:
 1074              	.LFB141:
 585:Core/Src/main.c **** /* USER CODE END 4 */
 586:Core/Src/main.c **** 
 587:Core/Src/main.c **** /**
 588:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 589:Core/Src/main.c ****  * @retval None
 590:Core/Src/main.c ****  */
 591:Core/Src/main.c **** void Error_Handler(void)
 592:Core/Src/main.c **** {
 1075              		.loc 1 592 1 view -0
 1076              		.cfi_startproc
 1077              		@ Volatile: function does not return.
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 593:Core/Src/main.c **** 	/* USER CODE BEGIN Error_Handler_Debug */
 594:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 595:Core/Src/main.c **** 	__disable_irq();
 1081              		.loc 1 595 2 view .LVU262
 1082              	.LBB4:
 1083              	.LBI4:
 1084              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  /tmp/ccPCXsH1.s 			page 33


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccPCXsH1.s 			page 34


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccPCXsH1.s 			page 35


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1085              		.loc 2 140 27 view .LVU263
 1086              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1087              		.loc 2 142 3 view .LVU264
 1088              		.syntax unified
 1089              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1090 0000 72B6     		cpsid i
 1091              	@ 0 "" 2
 1092              		.thumb
 1093              		.syntax unified
 1094              	.L90:
 1095              	.LBE5:
 1096              	.LBE4:
 596:Core/Src/main.c **** 	while (1)
 1097              		.loc 1 596 2 discriminator 1 view .LVU265
 597:Core/Src/main.c **** 	{
 598:Core/Src/main.c **** 	}
 1098              		.loc 1 598 2 discriminator 1 view .LVU266
 596:Core/Src/main.c **** 	while (1)
 1099              		.loc 1 596 8 discriminator 1 view .LVU267
 1100 0002 FEE7     		b	.L90
 1101              		.cfi_endproc
 1102              	.LFE141:
 1104              		.section	.text.SystemClock_Config,"ax",%progbits
 1105              		.align	1
 1106              		.global	SystemClock_Config
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1110              		.fpu fpv4-sp-d16
 1112              	SystemClock_Config:
 1113              	.LFB131:
 208:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1114              		.loc 1 208 1 view -0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 80
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118 0000 00B5     		push	{lr}
 1119              	.LCFI9:
 1120              		.cfi_def_cfa_offset 4
 1121              		.cfi_offset 14, -4
 1122 0002 95B0     		sub	sp, sp, #84
 1123              	.LCFI10:
 1124              		.cfi_def_cfa_offset 88
 209:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1125              		.loc 1 209 2 view .LVU269
 209:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1126              		.loc 1 209 21 is_stmt 0 view .LVU270
 1127 0004 3022     		movs	r2, #48
 1128 0006 0021     		movs	r1, #0
ARM GAS  /tmp/ccPCXsH1.s 			page 36


 1129 0008 08A8     		add	r0, sp, #32
 1130 000a FFF7FEFF 		bl	memset
 1131              	.LVL48:
 210:Core/Src/main.c **** 
 1132              		.loc 1 210 2 is_stmt 1 view .LVU271
 210:Core/Src/main.c **** 
 1133              		.loc 1 210 21 is_stmt 0 view .LVU272
 1134 000e 0023     		movs	r3, #0
 1135 0010 0393     		str	r3, [sp, #12]
 1136 0012 0493     		str	r3, [sp, #16]
 1137 0014 0593     		str	r3, [sp, #20]
 1138 0016 0693     		str	r3, [sp, #24]
 1139 0018 0793     		str	r3, [sp, #28]
 214:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1140              		.loc 1 214 2 is_stmt 1 view .LVU273
 1141              	.LBB6:
 214:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1142              		.loc 1 214 2 view .LVU274
 1143 001a 0193     		str	r3, [sp, #4]
 214:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1144              		.loc 1 214 2 view .LVU275
 1145 001c 204A     		ldr	r2, .L97
 1146 001e 116C     		ldr	r1, [r2, #64]
 1147 0020 41F08051 		orr	r1, r1, #268435456
 1148 0024 1164     		str	r1, [r2, #64]
 214:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1149              		.loc 1 214 2 view .LVU276
 1150 0026 126C     		ldr	r2, [r2, #64]
 1151 0028 02F08052 		and	r2, r2, #268435456
 1152 002c 0192     		str	r2, [sp, #4]
 214:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1153              		.loc 1 214 2 view .LVU277
 1154 002e 019A     		ldr	r2, [sp, #4]
 1155              	.LBE6:
 214:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1156              		.loc 1 214 2 view .LVU278
 215:Core/Src/main.c **** 
 1157              		.loc 1 215 2 view .LVU279
 1158              	.LBB7:
 215:Core/Src/main.c **** 
 1159              		.loc 1 215 2 view .LVU280
 1160 0030 0293     		str	r3, [sp, #8]
 215:Core/Src/main.c **** 
 1161              		.loc 1 215 2 view .LVU281
 1162 0032 1C4A     		ldr	r2, .L97+4
 1163 0034 1368     		ldr	r3, [r2]
 1164 0036 23F44043 		bic	r3, r3, #49152
 1165 003a 43F48043 		orr	r3, r3, #16384
 1166 003e 1360     		str	r3, [r2]
 215:Core/Src/main.c **** 
 1167              		.loc 1 215 2 view .LVU282
 1168 0040 1368     		ldr	r3, [r2]
 1169 0042 03F44043 		and	r3, r3, #49152
 1170 0046 0293     		str	r3, [sp, #8]
 215:Core/Src/main.c **** 
 1171              		.loc 1 215 2 view .LVU283
 1172 0048 029B     		ldr	r3, [sp, #8]
ARM GAS  /tmp/ccPCXsH1.s 			page 37


 1173              	.LBE7:
 215:Core/Src/main.c **** 
 1174              		.loc 1 215 2 view .LVU284
 220:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1175              		.loc 1 220 2 view .LVU285
 220:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1176              		.loc 1 220 35 is_stmt 0 view .LVU286
 1177 004a 0123     		movs	r3, #1
 1178 004c 0893     		str	r3, [sp, #32]
 221:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1179              		.loc 1 221 2 is_stmt 1 view .LVU287
 221:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1180              		.loc 1 221 29 is_stmt 0 view .LVU288
 1181 004e 4FF48033 		mov	r3, #65536
 1182 0052 0993     		str	r3, [sp, #36]
 222:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1183              		.loc 1 222 2 is_stmt 1 view .LVU289
 222:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1184              		.loc 1 222 33 is_stmt 0 view .LVU290
 1185 0054 0223     		movs	r3, #2
 1186 0056 0E93     		str	r3, [sp, #56]
 223:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1187              		.loc 1 223 2 is_stmt 1 view .LVU291
 223:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1188              		.loc 1 223 34 is_stmt 0 view .LVU292
 1189 0058 4FF48002 		mov	r2, #4194304
 1190 005c 0F92     		str	r2, [sp, #60]
 224:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1191              		.loc 1 224 2 is_stmt 1 view .LVU293
 224:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1192              		.loc 1 224 29 is_stmt 0 view .LVU294
 1193 005e 0422     		movs	r2, #4
 1194 0060 1092     		str	r2, [sp, #64]
 225:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1195              		.loc 1 225 2 is_stmt 1 view .LVU295
 225:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1196              		.loc 1 225 29 is_stmt 0 view .LVU296
 1197 0062 6022     		movs	r2, #96
 1198 0064 1192     		str	r2, [sp, #68]
 226:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1199              		.loc 1 226 2 is_stmt 1 view .LVU297
 226:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1200              		.loc 1 226 29 is_stmt 0 view .LVU298
 1201 0066 1293     		str	r3, [sp, #72]
 227:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1202              		.loc 1 227 2 is_stmt 1 view .LVU299
 227:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1203              		.loc 1 227 29 is_stmt 0 view .LVU300
 1204 0068 0323     		movs	r3, #3
 1205 006a 1393     		str	r3, [sp, #76]
 228:Core/Src/main.c **** 	{
 1206              		.loc 1 228 2 is_stmt 1 view .LVU301
 228:Core/Src/main.c **** 	{
 1207              		.loc 1 228 6 is_stmt 0 view .LVU302
 1208 006c 08A8     		add	r0, sp, #32
 1209 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1210              	.LVL49:
ARM GAS  /tmp/ccPCXsH1.s 			page 38


 228:Core/Src/main.c **** 	{
 1211              		.loc 1 228 5 view .LVU303
 1212 0072 88B9     		cbnz	r0, .L95
 235:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1213              		.loc 1 235 2 is_stmt 1 view .LVU304
 235:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1214              		.loc 1 235 30 is_stmt 0 view .LVU305
 1215 0074 0F23     		movs	r3, #15
 1216 0076 0393     		str	r3, [sp, #12]
 236:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1217              		.loc 1 236 2 is_stmt 1 view .LVU306
 236:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1218              		.loc 1 236 33 is_stmt 0 view .LVU307
 1219 0078 0223     		movs	r3, #2
 1220 007a 0493     		str	r3, [sp, #16]
 237:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1221              		.loc 1 237 2 is_stmt 1 view .LVU308
 237:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1222              		.loc 1 237 34 is_stmt 0 view .LVU309
 1223 007c 8023     		movs	r3, #128
 1224 007e 0593     		str	r3, [sp, #20]
 238:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1225              		.loc 1 238 2 is_stmt 1 view .LVU310
 238:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1226              		.loc 1 238 35 is_stmt 0 view .LVU311
 1227 0080 4FF48053 		mov	r3, #4096
 1228 0084 0693     		str	r3, [sp, #24]
 239:Core/Src/main.c **** 
 1229              		.loc 1 239 2 is_stmt 1 view .LVU312
 239:Core/Src/main.c **** 
 1230              		.loc 1 239 35 is_stmt 0 view .LVU313
 1231 0086 0793     		str	r3, [sp, #28]
 241:Core/Src/main.c **** 	{
 1232              		.loc 1 241 2 is_stmt 1 view .LVU314
 241:Core/Src/main.c **** 	{
 1233              		.loc 1 241 6 is_stmt 0 view .LVU315
 1234 0088 0121     		movs	r1, #1
 1235 008a 03A8     		add	r0, sp, #12
 1236 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1237              	.LVL50:
 241:Core/Src/main.c **** 	{
 1238              		.loc 1 241 5 view .LVU316
 1239 0090 20B9     		cbnz	r0, .L96
 245:Core/Src/main.c **** 
 1240              		.loc 1 245 1 view .LVU317
 1241 0092 15B0     		add	sp, sp, #84
 1242              	.LCFI11:
 1243              		.cfi_remember_state
 1244              		.cfi_def_cfa_offset 4
 1245              		@ sp needed
 1246 0094 5DF804FB 		ldr	pc, [sp], #4
 1247              	.L95:
 1248              	.LCFI12:
 1249              		.cfi_restore_state
 230:Core/Src/main.c **** 	}
 1250              		.loc 1 230 3 is_stmt 1 view .LVU318
 1251 0098 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccPCXsH1.s 			page 39


 1252              	.LVL51:
 1253              	.L96:
 243:Core/Src/main.c **** 	}
 1254              		.loc 1 243 3 view .LVU319
 1255 009c FFF7FEFF 		bl	Error_Handler
 1256              	.LVL52:
 1257              	.L98:
 1258              		.align	2
 1259              	.L97:
 1260 00a0 00380240 		.word	1073887232
 1261 00a4 00700040 		.word	1073770496
 1262              		.cfi_endproc
 1263              	.LFE131:
 1265              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1266              		.align	2
 1267              	.LC0:
 1268 0000 54455452 		.ascii	"TETRADYNE\000"
 1268      4144594E 
 1268      4500
 1269 000a 0000     		.align	2
 1270              	.LC1:
 1271 000c 53323A00 		.ascii	"S2:\000"
 1272              		.align	2
 1273              	.LC2:
 1274 0010 53313A00 		.ascii	"S1:\000"
 1275              		.section	.text.main,"ax",%progbits
 1276              		.align	1
 1277              		.global	main
 1278              		.syntax unified
 1279              		.thumb
 1280              		.thumb_func
 1281              		.fpu fpv4-sp-d16
 1283              	main:
 1284              	.LFB130:
 136:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 1285              		.loc 1 136 1 view -0
 1286              		.cfi_startproc
 1287              		@ Volatile: function does not return.
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290 0000 08B5     		push	{r3, lr}
 1291              	.LCFI13:
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 3, -8
 1294              		.cfi_offset 14, -4
 144:Core/Src/main.c **** 
 1295              		.loc 1 144 2 view .LVU321
 1296 0002 FFF7FEFF 		bl	HAL_Init
 1297              	.LVL53:
 151:Core/Src/main.c **** 
 1298              		.loc 1 151 2 view .LVU322
 1299 0006 FFF7FEFF 		bl	SystemClock_Config
 1300              	.LVL54:
 158:Core/Src/main.c **** 	MX_TIM4_Init();
 1301              		.loc 1 158 2 view .LVU323
 1302 000a FFF7FEFF 		bl	MX_GPIO_Init
 1303              	.LVL55:
ARM GAS  /tmp/ccPCXsH1.s 			page 40


 159:Core/Src/main.c **** 	MX_UART4_Init();
 1304              		.loc 1 159 2 view .LVU324
 1305 000e FFF7FEFF 		bl	MX_TIM4_Init
 1306              	.LVL56:
 160:Core/Src/main.c **** 	MX_UART5_Init();
 1307              		.loc 1 160 2 view .LVU325
 1308 0012 FFF7FEFF 		bl	MX_UART4_Init
 1309              	.LVL57:
 161:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 1310              		.loc 1 161 2 view .LVU326
 1311 0016 FFF7FEFF 		bl	MX_UART5_Init
 1312              	.LVL58:
 164:Core/Src/main.c **** 
 1313              		.loc 1 164 2 view .LVU327
 1314 001a 1A48     		ldr	r0, .L102
 1315 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1316              	.LVL59:
 166:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 1317              		.loc 1 166 2 view .LVU328
 1318 0020 0022     		movs	r2, #0
 1319 0022 4FF48051 		mov	r1, #4096
 1320 0026 1848     		ldr	r0, .L102+4
 1321 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1322              	.LVL60:
 169:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1323              		.loc 1 169 2 view .LVU329
 1324 002c 0122     		movs	r2, #1
 1325 002e 1749     		ldr	r1, .L102+8
 1326 0030 1748     		ldr	r0, .L102+12
 1327 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1328              	.LVL61:
 172:Core/Src/main.c **** 	digit2 = 16;
 1329              		.loc 1 172 2 view .LVU330
 172:Core/Src/main.c **** 	digit2 = 16;
 1330              		.loc 1 172 9 is_stmt 0 view .LVU331
 1331 0036 1023     		movs	r3, #16
 1332 0038 164A     		ldr	r2, .L102+16
 1333 003a 1370     		strb	r3, [r2]
 173:Core/Src/main.c **** 
 1334              		.loc 1 173 2 is_stmt 1 view .LVU332
 173:Core/Src/main.c **** 
 1335              		.loc 1 173 9 is_stmt 0 view .LVU333
 1336 003c 164A     		ldr	r2, .L102+20
 1337 003e 1370     		strb	r3, [r2]
 175:Core/Src/main.c **** 	lcd_clear();
 1338              		.loc 1 175 2 is_stmt 1 view .LVU334
 1339 0040 FFF7FEFF 		bl	lcd_init
 1340              	.LVL62:
 176:Core/Src/main.c **** 	lcd_set_pos(0, 3);
 1341              		.loc 1 176 2 view .LVU335
 1342 0044 FFF7FEFF 		bl	lcd_clear
 1343              	.LVL63:
 177:Core/Src/main.c **** 	lcd_write_string("TETRADYNE");
 1344              		.loc 1 177 2 view .LVU336
 1345 0048 0321     		movs	r1, #3
 1346 004a 0020     		movs	r0, #0
 1347 004c FFF7FEFF 		bl	lcd_set_pos
ARM GAS  /tmp/ccPCXsH1.s 			page 41


 1348              	.LVL64:
 178:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 1349              		.loc 1 178 2 view .LVU337
 1350 0050 1248     		ldr	r0, .L102+24
 1351 0052 FFF7FEFF 		bl	lcd_write_string
 1352              	.LVL65:
 179:Core/Src/main.c **** 	lcd_write_string("S2:");
 1353              		.loc 1 179 2 view .LVU338
 1354 0056 0021     		movs	r1, #0
 1355 0058 0120     		movs	r0, #1
 1356 005a FFF7FEFF 		bl	lcd_set_pos
 1357              	.LVL66:
 180:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 1358              		.loc 1 180 2 view .LVU339
 1359 005e 1048     		ldr	r0, .L102+28
 1360 0060 FFF7FEFF 		bl	lcd_write_string
 1361              	.LVL67:
 181:Core/Src/main.c **** 	lcd_write_string("S1:");
 1362              		.loc 1 181 2 view .LVU340
 1363 0064 0C21     		movs	r1, #12
 1364 0066 0120     		movs	r0, #1
 1365 0068 FFF7FEFF 		bl	lcd_set_pos
 1366              	.LVL68:
 182:Core/Src/main.c **** 	/* USER CODE END 2 */
 1367              		.loc 1 182 2 view .LVU341
 1368 006c 0D48     		ldr	r0, .L102+32
 1369 006e FFF7FEFF 		bl	lcd_write_string
 1370              	.LVL69:
 1371              	.L100:
 187:Core/Src/main.c **** 	{
 1372              		.loc 1 187 2 discriminator 1 view .LVU342
 193:Core/Src/main.c **** 		/// segment_display_task();
 1373              		.loc 1 193 3 discriminator 1 view .LVU343
 1374 0072 FFF7FEFF 		bl	task_timer
 1375              	.LVL70:
 195:Core/Src/main.c **** 		key_read_task();
 1376              		.loc 1 195 3 discriminator 1 view .LVU344
 1377 0076 FFF7FEFF 		bl	lcd_display_task
 1378              	.LVL71:
 196:Core/Src/main.c **** 
 1379              		.loc 1 196 3 discriminator 1 view .LVU345
 1380 007a FFF7FEFF 		bl	key_read_task
 1381              	.LVL72:
 198:Core/Src/main.c **** 	}
 1382              		.loc 1 198 3 discriminator 1 view .LVU346
 1383 007e FFF7FEFF 		bl	main_task
 1384              	.LVL73:
 187:Core/Src/main.c **** 	{
 1385              		.loc 1 187 8 discriminator 1 view .LVU347
 1386 0082 F6E7     		b	.L100
 1387              	.L103:
 1388              		.align	2
 1389              	.L102:
 1390 0084 00000000 		.word	htim4
 1391 0088 00000240 		.word	1073872896
 1392 008c 00000000 		.word	.LANCHOR26
 1393 0090 00000000 		.word	huart4
ARM GAS  /tmp/ccPCXsH1.s 			page 42


 1394 0094 00000000 		.word	.LANCHOR8
 1395 0098 00000000 		.word	.LANCHOR6
 1396 009c 00000000 		.word	.LC0
 1397 00a0 0C000000 		.word	.LC1
 1398 00a4 10000000 		.word	.LC2
 1399              		.cfi_endproc
 1400              	.LFE130:
 1402              		.global	RX_msg
 1403              		.global	TX_msg
 1404              		.global	ID
 1405              		.global	event_buffer
 1406              		.global	rx2_buffer
 1407              		.global	rx1_buffer
 1408              		.global	stop_cmd
 1409              		.global	start_cmd
 1410              		.global	transmission_f
 1411              		.global	rx_temp
 1412              		.global	digit_table
 1413              		.global	lcd_process
 1414              		.global	data
 1415              		.global	cmd
 1416              		.global	digit2_update
 1417              		.global	digit1_update
 1418              		.global	lcd_digit1_f
 1419              		.global	is_EN
 1420              		.global	digit2
 1421              		.global	digit1
 1422              		.global	error
 1423              		.global	event
 1424              		.global	state
 1425              		.global	key2_data
 1426              		.global	key1_data
 1427              		.global	TX2_delay_val
 1428              		.global	d_timer_TX2
 1429              		.global	TX1_delay_val
 1430              		.global	d_timer_TX1
 1431              		.global	d_timer_20ms
 1432              		.global	d_timer_50ms
 1433              		.global	d_timer_30ms
 1434              		.global	tx1_buffer
 1435              		.global	tx2_buffer
 1436              		.global	flag_digit_1
 1437              		.global	f_querry
 1438              		.global	f_timer_50ms
 1439              		.global	f_timer_30ms
 1440              		.global	f_timer_20ms
 1441              		.global	f_timer_10ms
 1442              		.global	f_seg_timer_500ms
 1443              		.global	f_timer_TX
 1444              		.global	f_busy
 1445              		.section	.bss.ID,"aw",%nobits
 1448              	ID:
 1449 0000 00       		.space	1
 1450              		.section	.bss.RX_msg,"aw",%nobits
 1451              		.align	2
 1452              		.set	.LANCHOR18,. + 0
 1455              	RX_msg:
ARM GAS  /tmp/ccPCXsH1.s 			page 43


 1456 0000 00000000 		.space	4
 1457              		.section	.bss.TX_msg,"aw",%nobits
 1458              		.align	2
 1459              		.set	.LANCHOR20,. + 0
 1462              	TX_msg:
 1463 0000 00000000 		.space	4
 1464              		.section	.bss.cmd,"aw",%nobits
 1465              		.set	.LANCHOR4,. + 0
 1468              	cmd:
 1469 0000 00       		.space	1
 1470              		.section	.bss.d_timer_20ms,"aw",%nobits
 1471              		.set	.LANCHOR12,. + 0
 1474              	d_timer_20ms:
 1475 0000 00       		.space	1
 1476              		.section	.bss.d_timer_30ms,"aw",%nobits
 1477              		.set	.LANCHOR10,. + 0
 1480              	d_timer_30ms:
 1481 0000 00       		.space	1
 1482              		.section	.bss.d_timer_50ms,"aw",%nobits
 1483              		.set	.LANCHOR13,. + 0
 1486              	d_timer_50ms:
 1487 0000 00       		.space	1
 1488              		.section	.bss.d_timer_TX1,"aw",%nobits
 1491              	d_timer_TX1:
 1492 0000 00       		.space	1
 1493              		.section	.bss.d_timer_TX2,"aw",%nobits
 1496              	d_timer_TX2:
 1497 0000 00       		.space	1
 1498              		.section	.bss.data,"aw",%nobits
 1499              		.set	.LANCHOR7,. + 0
 1502              	data:
 1503 0000 00       		.space	1
 1504              		.section	.bss.digit1,"aw",%nobits
 1505              		.set	.LANCHOR8,. + 0
 1508              	digit1:
 1509 0000 00       		.space	1
 1510              		.section	.bss.digit1_update,"aw",%nobits
 1513              	digit1_update:
 1514 0000 00       		.space	1
 1515              		.section	.bss.digit2,"aw",%nobits
 1516              		.set	.LANCHOR6,. + 0
 1519              	digit2:
 1520 0000 00       		.space	1
 1521              		.section	.bss.digit2_update,"aw",%nobits
 1524              	digit2_update:
 1525 0000 00       		.space	1
 1526              		.section	.bss.error,"aw",%nobits
 1527              		.set	.LANCHOR19,. + 0
 1530              	error:
 1531 0000 00       		.space	1
 1532              		.section	.bss.event,"aw",%nobits
 1533              		.set	.LANCHOR23,. + 0
 1536              	event:
 1537 0000 00       		.space	1
 1538              		.section	.bss.event_buffer,"aw",%nobits
 1539              		.align	2
 1540              		.set	.LANCHOR14,. + 0
ARM GAS  /tmp/ccPCXsH1.s 			page 44


 1543              	event_buffer:
 1544 0000 00000000 		.space	66
 1544      00000000 
 1544      00000000 
 1544      00000000 
 1544      00000000 
 1545              		.section	.bss.f_busy,"aw",%nobits
 1548              	f_busy:
 1549 0000 00       		.space	1
 1550              		.section	.bss.f_querry,"aw",%nobits
 1551              		.set	.LANCHOR24,. + 0
 1554              	f_querry:
 1555 0000 00       		.space	1
 1556              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 1559              	f_seg_timer_500ms:
 1560 0000 00       		.space	1
 1561              		.section	.bss.f_timer_10ms,"aw",%nobits
 1562              		.set	.LANCHOR9,. + 0
 1565              	f_timer_10ms:
 1566 0000 00       		.space	1
 1567              		.section	.bss.f_timer_20ms,"aw",%nobits
 1568              		.set	.LANCHOR0,. + 0
 1571              	f_timer_20ms:
 1572 0000 00       		.space	1
 1573              		.section	.bss.f_timer_30ms,"aw",%nobits
 1574              		.set	.LANCHOR11,. + 0
 1577              	f_timer_30ms:
 1578 0000 00       		.space	1
 1579              		.section	.bss.f_timer_50ms,"aw",%nobits
 1582              	f_timer_50ms:
 1583 0000 00       		.space	1
 1584              		.section	.bss.f_timer_TX,"aw",%nobits
 1587              	f_timer_TX:
 1588 0000 00       		.space	1
 1589              		.section	.bss.is_EN,"aw",%nobits
 1590              		.set	.LANCHOR1,. + 0
 1593              	is_EN:
 1594 0000 00       		.space	1
 1595              		.section	.bss.key1_data,"aw",%nobits
 1596              		.set	.LANCHOR15,. + 0
 1599              	key1_data:
 1600 0000 00       		.space	1
 1601              		.section	.bss.key2_data,"aw",%nobits
 1602              		.set	.LANCHOR16,. + 0
 1605              	key2_data:
 1606 0000 00       		.space	1
 1607              		.section	.bss.lcd_digit1_f,"aw",%nobits
 1608              		.set	.LANCHOR3,. + 0
 1611              	lcd_digit1_f:
 1612 0000 00       		.space	1
 1613              		.section	.bss.lcd_process,"aw",%nobits
 1614              		.set	.LANCHOR2,. + 0
 1617              	lcd_process:
 1618 0000 00       		.space	1
 1619              		.section	.bss.rx1_buffer,"aw",%nobits
 1620              		.align	2
 1623              	rx1_buffer:
ARM GAS  /tmp/ccPCXsH1.s 			page 45


 1624 0000 00000000 		.space	66
 1624      00000000 
 1624      00000000 
 1624      00000000 
 1624      00000000 
 1625              		.section	.bss.rx2_buffer,"aw",%nobits
 1626              		.align	2
 1627              		.set	.LANCHOR17,. + 0
 1630              	rx2_buffer:
 1631 0000 00000000 		.space	66
 1631      00000000 
 1631      00000000 
 1631      00000000 
 1631      00000000 
 1632              		.section	.bss.rx_temp,"aw",%nobits
 1633              		.set	.LANCHOR26,. + 0
 1636              	rx_temp:
 1637 0000 00       		.space	1
 1638              		.section	.bss.state,"aw",%nobits
 1641              	state:
 1642 0000 00       		.space	1
 1643              		.section	.bss.transmission_f,"aw",%nobits
 1644              		.set	.LANCHOR25,. + 0
 1647              	transmission_f:
 1648 0000 00       		.space	1
 1649              		.section	.data.TX1_delay_val,"aw"
 1652              	TX1_delay_val:
 1653 0000 FA       		.byte	-6
 1654              		.section	.data.TX2_delay_val,"aw"
 1657              	TX2_delay_val:
 1658 0000 FA       		.byte	-6
 1659              		.section	.data.digit_table,"aw"
 1660              		.align	2
 1661              		.set	.LANCHOR5,. + 0
 1664              	digit_table:
 1665 0000 30313233 		.ascii	"0123456789abcdef-"
 1665      34353637 
 1665      38396162 
 1665      63646566 
 1665      2D
 1666              		.section	.data.flag_digit_1,"aw"
 1669              	flag_digit_1:
 1670 0000 01       		.byte	1
 1671              		.section	.data.start_cmd,"aw"
 1672              		.set	.LANCHOR21,. + 0
 1675              	start_cmd:
 1676 0000 02       		.byte	2
 1677              		.section	.data.stop_cmd,"aw"
 1678              		.set	.LANCHOR22,. + 0
 1681              	stop_cmd:
 1682 0000 03       		.byte	3
 1683              		.section	.data.tx1_buffer,"aw"
 1684              		.align	2
 1687              	tx1_buffer:
 1688 0000 61626364 		.ascii	"abcdef"
 1688      6566
 1689              		.section	.data.tx2_buffer,"aw"
ARM GAS  /tmp/ccPCXsH1.s 			page 46


 1690              		.align	2
 1693              	tx2_buffer:
 1694 0000 31323334 		.ascii	"123456789\000"
 1694      35363738 
 1694      3900
 1695              		.text
 1696              	.Letext0:
 1697              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1698              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1699              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1700              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1701              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1702              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1703              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1704              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1705              		.file 11 "Core/Inc/tim.h"
 1706              		.file 12 "Core/Inc/usart.h"
 1707              		.file 13 "Core/Inc/buffer.h"
 1708              		.file 14 "Core/Inc/message.h"
 1709              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1710              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1711              		.file 17 "Core/Inc/gpio.h"
 1712              		.file 18 "Core/Inc/lcd16x2.h"
 1713              		.file 19 "<built-in>"
ARM GAS  /tmp/ccPCXsH1.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccPCXsH1.s:18     .text.m_send_to_lcd:0000000000000000 $t
     /tmp/ccPCXsH1.s:26     .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/ccPCXsH1.s:122    .text.m_send_to_lcd:0000000000000068 $d
     /tmp/ccPCXsH1.s:131    .text.lcd_display_task:0000000000000000 $t
     /tmp/ccPCXsH1.s:138    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/ccPCXsH1.s:177    .text.lcd_display_task:0000000000000026 $d
     /tmp/ccPCXsH1.s:181    .text.lcd_display_task:000000000000002a $t
     /tmp/ccPCXsH1.s:268    .text.lcd_display_task:000000000000009c $d
     /tmp/ccPCXsH1.s:280    .text.task_timer:0000000000000000 $t
     /tmp/ccPCXsH1.s:287    .text.task_timer:0000000000000000 task_timer
     /tmp/ccPCXsH1.s:386    .text.task_timer:0000000000000068 $d
     /tmp/ccPCXsH1.s:397    .text.key_read_task:0000000000000000 $t
     /tmp/ccPCXsH1.s:404    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccPCXsH1.s:522    .text.key_read_task:0000000000000080 $d
     /tmp/ccPCXsH1.s:531    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccPCXsH1.s:538    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccPCXsH1.s:637    .text.RS485_Read_Message:0000000000000054 $d
     /tmp/ccPCXsH1.s:646    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccPCXsH1.s:653    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccPCXsH1.s:724    .text.RS485_Send_Message:0000000000000054 $d
     /tmp/ccPCXsH1.s:733    .text.main_task:0000000000000000 $t
     /tmp/ccPCXsH1.s:740    .text.main_task:0000000000000000 main_task
     /tmp/ccPCXsH1.s:770    .text.main_task:000000000000001a $d
     /tmp/ccPCXsH1.s:776    .text.main_task:0000000000000020 $t
     /tmp/ccPCXsH1.s:911    .text.main_task:00000000000000c0 $d
     /tmp/ccPCXsH1.s:920    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccPCXsH1.s:927    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccPCXsH1.s:954    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccPCXsH1.s:960    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccPCXsH1.s:967    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccPCXsH1.s:1057   .text.HAL_UART_RxCpltCallback:0000000000000054 $d
     /tmp/ccPCXsH1.s:1066   .text.Error_Handler:0000000000000000 $t
     /tmp/ccPCXsH1.s:1073   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccPCXsH1.s:1105   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccPCXsH1.s:1112   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccPCXsH1.s:1260   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccPCXsH1.s:1266   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccPCXsH1.s:1276   .text.main:0000000000000000 $t
     /tmp/ccPCXsH1.s:1283   .text.main:0000000000000000 main
     /tmp/ccPCXsH1.s:1390   .text.main:0000000000000084 $d
     /tmp/ccPCXsH1.s:1455   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccPCXsH1.s:1462   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccPCXsH1.s:1448   .bss.ID:0000000000000000 ID
     /tmp/ccPCXsH1.s:1543   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccPCXsH1.s:1630   .bss.rx2_buffer:0000000000000000 rx2_buffer
     /tmp/ccPCXsH1.s:1623   .bss.rx1_buffer:0000000000000000 rx1_buffer
     /tmp/ccPCXsH1.s:1681   .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/ccPCXsH1.s:1675   .data.start_cmd:0000000000000000 start_cmd
     /tmp/ccPCXsH1.s:1647   .bss.transmission_f:0000000000000000 transmission_f
     /tmp/ccPCXsH1.s:1636   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccPCXsH1.s:1664   .data.digit_table:0000000000000000 digit_table
     /tmp/ccPCXsH1.s:1617   .bss.lcd_process:0000000000000000 lcd_process
     /tmp/ccPCXsH1.s:1502   .bss.data:0000000000000000 data
     /tmp/ccPCXsH1.s:1468   .bss.cmd:0000000000000000 cmd
     /tmp/ccPCXsH1.s:1524   .bss.digit2_update:0000000000000000 digit2_update
ARM GAS  /tmp/ccPCXsH1.s 			page 48


     /tmp/ccPCXsH1.s:1513   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/ccPCXsH1.s:1611   .bss.lcd_digit1_f:0000000000000000 lcd_digit1_f
     /tmp/ccPCXsH1.s:1593   .bss.is_EN:0000000000000000 is_EN
     /tmp/ccPCXsH1.s:1519   .bss.digit2:0000000000000000 digit2
     /tmp/ccPCXsH1.s:1508   .bss.digit1:0000000000000000 digit1
     /tmp/ccPCXsH1.s:1530   .bss.error:0000000000000000 error
     /tmp/ccPCXsH1.s:1536   .bss.event:0000000000000000 event
     /tmp/ccPCXsH1.s:1641   .bss.state:0000000000000000 state
     /tmp/ccPCXsH1.s:1605   .bss.key2_data:0000000000000000 key2_data
     /tmp/ccPCXsH1.s:1599   .bss.key1_data:0000000000000000 key1_data
     /tmp/ccPCXsH1.s:1657   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/ccPCXsH1.s:1496   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/ccPCXsH1.s:1652   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/ccPCXsH1.s:1491   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/ccPCXsH1.s:1474   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/ccPCXsH1.s:1486   .bss.d_timer_50ms:0000000000000000 d_timer_50ms
     /tmp/ccPCXsH1.s:1480   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccPCXsH1.s:1687   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/ccPCXsH1.s:1693   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/ccPCXsH1.s:1669   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/ccPCXsH1.s:1554   .bss.f_querry:0000000000000000 f_querry
     /tmp/ccPCXsH1.s:1582   .bss.f_timer_50ms:0000000000000000 f_timer_50ms
     /tmp/ccPCXsH1.s:1577   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccPCXsH1.s:1571   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/ccPCXsH1.s:1565   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccPCXsH1.s:1559   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/ccPCXsH1.s:1587   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/ccPCXsH1.s:1548   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccPCXsH1.s:1449   .bss.ID:0000000000000000 $d
     /tmp/ccPCXsH1.s:1451   .bss.RX_msg:0000000000000000 $d
     /tmp/ccPCXsH1.s:1458   .bss.TX_msg:0000000000000000 $d
     /tmp/ccPCXsH1.s:1469   .bss.cmd:0000000000000000 $d
     /tmp/ccPCXsH1.s:1475   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/ccPCXsH1.s:1481   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccPCXsH1.s:1487   .bss.d_timer_50ms:0000000000000000 $d
     /tmp/ccPCXsH1.s:1492   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/ccPCXsH1.s:1497   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/ccPCXsH1.s:1503   .bss.data:0000000000000000 $d
     /tmp/ccPCXsH1.s:1509   .bss.digit1:0000000000000000 $d
     /tmp/ccPCXsH1.s:1514   .bss.digit1_update:0000000000000000 $d
     /tmp/ccPCXsH1.s:1520   .bss.digit2:0000000000000000 $d
     /tmp/ccPCXsH1.s:1525   .bss.digit2_update:0000000000000000 $d
     /tmp/ccPCXsH1.s:1531   .bss.error:0000000000000000 $d
     /tmp/ccPCXsH1.s:1537   .bss.event:0000000000000000 $d
     /tmp/ccPCXsH1.s:1539   .bss.event_buffer:0000000000000000 $d
     /tmp/ccPCXsH1.s:1549   .bss.f_busy:0000000000000000 $d
     /tmp/ccPCXsH1.s:1555   .bss.f_querry:0000000000000000 $d
     /tmp/ccPCXsH1.s:1560   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/ccPCXsH1.s:1566   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccPCXsH1.s:1572   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/ccPCXsH1.s:1578   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccPCXsH1.s:1583   .bss.f_timer_50ms:0000000000000000 $d
     /tmp/ccPCXsH1.s:1588   .bss.f_timer_TX:0000000000000000 $d
     /tmp/ccPCXsH1.s:1594   .bss.is_EN:0000000000000000 $d
     /tmp/ccPCXsH1.s:1600   .bss.key1_data:0000000000000000 $d
     /tmp/ccPCXsH1.s:1606   .bss.key2_data:0000000000000000 $d
     /tmp/ccPCXsH1.s:1612   .bss.lcd_digit1_f:0000000000000000 $d
ARM GAS  /tmp/ccPCXsH1.s 			page 49


     /tmp/ccPCXsH1.s:1618   .bss.lcd_process:0000000000000000 $d
     /tmp/ccPCXsH1.s:1620   .bss.rx1_buffer:0000000000000000 $d
     /tmp/ccPCXsH1.s:1626   .bss.rx2_buffer:0000000000000000 $d
     /tmp/ccPCXsH1.s:1637   .bss.rx_temp:0000000000000000 $d
     /tmp/ccPCXsH1.s:1642   .bss.state:0000000000000000 $d
     /tmp/ccPCXsH1.s:1648   .bss.transmission_f:0000000000000000 $d
     /tmp/ccPCXsH1.s:1660   .data.digit_table:0000000000000000 $d
     /tmp/ccPCXsH1.s:1684   .data.tx1_buffer:0000000000000000 $d
     /tmp/ccPCXsH1.s:1690   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
buffer_to_message
check_checksum
cal_checksum
HAL_UART_Transmit
huart4
buffer_pop
htim4
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
lcd_clear
lcd_set_pos
lcd_write_string
