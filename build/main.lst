ARM GAS  /tmp/cc6zIoes.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.update_lcd,"ax",%progbits
  20              		.align	1
  21              		.global	update_lcd
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	update_lcd:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "buffer.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/cc6zIoes.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** #define RAND __TIME__
  49:Core/Src/main.c **** uint8_t f_lcd_item =0;
  50:Core/Src/main.c **** uint8_t f_TX_ID=0;
  51:Core/Src/main.c **** uint8_t f_busy;
  52:Core/Src/main.c **** uint8_t f_querry=0;
  53:Core/Src/main.c **** uint8_t f_read_msg;
  54:Core/Src/main.c **** uint8_t tx_timeout = 0;
  55:Core/Src/main.c **** unsigned char f_timer_TX = 0;
  56:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  57:Core/Src/main.c **** unsigned char f_timer_10ms = 0;
  58:Core/Src/main.c **** unsigned char f_timer_update_digit = 0;
  59:Core/Src/main.c **** unsigned char f_waiting_rx = 0;
  60:Core/Src/main.c **** unsigned char f_timer_30ms = 0;
  61:Core/Src/main.c **** unsigned char f_timer_50ms = 0;
  62:Core/Src/main.c **** unsigned char n_querry = 0;
  63:Core/Src/main.c **** unsigned char flag_digit_1 = 1;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** unsigned char tx2_buffer[10] = {"123456789"};
  66:Core/Src/main.c **** unsigned char tx1_buffer[6] = {"abcdef"};
  67:Core/Src/main.c **** unsigned char d_timer_30ms;
  68:Core/Src/main.c **** unsigned char d_timer_50ms;
  69:Core/Src/main.c **** unsigned char d_timer_update_digit;
  70:Core/Src/main.c **** unsigned char d_timer_TX1;
  71:Core/Src/main.c **** unsigned char TX1_delay_val = 250;
  72:Core/Src/main.c **** unsigned char d_timer_TX2;
  73:Core/Src/main.c **** unsigned char TX2_delay_val = 250;
  74:Core/Src/main.c **** unsigned char key1_data, key2_data;
  75:Core/Src/main.c **** unsigned char state, old_state, event, error;
  76:Core/Src/main.c **** unsigned char num_slave=0;
  77:Core/Src/main.c **** uint8_t key1_ID,key2_ID;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** unsigned char digit1, digit2;
  80:Core/Src/main.c **** uint8_t old_num_slave, old_digit1,old_digit2;
  81:Core/Src/main.c **** // flag for LCD
  82:Core/Src/main.c **** unsigned char is_EN = 0;
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** unsigned char digit1_update = 0;
  85:Core/Src/main.c **** unsigned char digit2_update = 0;
  86:Core/Src/main.c **** unsigned char cmd, data;
ARM GAS  /tmp/cc6zIoes.s 			page 3


  87:Core/Src/main.c **** unsigned char lcd_process = 4;
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** char digit_table[17] = {"0123456789abcdef-"};
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** uint8_t rx_temp;
  92:Core/Src/main.c **** uint8_t x=1;
  93:Core/Src/main.c **** circular_buffer digit1_buf;
  94:Core/Src/main.c **** circular_buffer digit2_buf;
  95:Core/Src/main.c **** circular_buffer rx_buffer;
  96:Core/Src/main.c **** circular_buffer event_buffer;
  97:Core/Src/main.c **** uint8_t ID;
  98:Core/Src/main.c **** uint8_t ID_list[10];
  99:Core/Src/main.c **** uint8_t TX_msg[6];
 100:Core/Src/main.c **** uint8_t RX_msg[4];
 101:Core/Src/main.c **** uint8_t *pRX_msg;
 102:Core/Src/main.c **** uint8_t *pTX_msg;
 103:Core/Src/main.c **** uint8_t temp;
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END PV */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 108:Core/Src/main.c **** void SystemClock_Config(void);
 109:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 110:Core/Src/main.c **** void RS485_RX_Task(void);
 111:Core/Src/main.c **** void RS485_TX_Task(void);
 112:Core/Src/main.c **** void task_timer(void);
 113:Core/Src/main.c **** void counting_task(void);
 114:Core/Src/main.c **** void uart_TX2_task(void);
 115:Core/Src/main.c **** void uart_TX1_task(void);
 116:Core/Src/main.c **** void uart_RX1_task(void);
 117:Core/Src/main.c **** void uart_RX2_task(void);
 118:Core/Src/main.c **** void segment_display_task(void);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** void key_read_task(void);
 121:Core/Src/main.c **** void main_task(void);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** void seven_segment_driver(char input, char select_digit);
 124:Core/Src/main.c **** void TX1_delay_update(void);
 125:Core/Src/main.c **** void TX2_delay_update(void);
 126:Core/Src/main.c **** void m_send_to_lcd(char data);
 127:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 128:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 129:Core/Src/main.c **** void Set_Receiver_Port1(void);
 130:Core/Src/main.c **** void Set_Receiver_Port2(void);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** void RS485_Send_Message(uint8_t addr, uint8_t func_code, uint8_t data);
 133:Core/Src/main.c **** void RS485_Read_Message(void);
 134:Core/Src/main.c **** void check_slave(void);
 135:Core/Src/main.c **** void update_lcd(uint8_t* itm);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** void display_state_slave(uint8_t slave, uint8_t state);
 138:Core/Src/main.c **** /*
 139:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 140:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 141:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 142:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
 143:Core/Src/main.c **** */
ARM GAS  /tmp/cc6zIoes.s 			page 4


 144:Core/Src/main.c **** /* USER CODE END PFP */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 147:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** /* USER CODE END 0 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****  * @brief  The application entry point.
 153:Core/Src/main.c ****  * @retval int
 154:Core/Src/main.c ****  */
 155:Core/Src/main.c **** int main(void)
 156:Core/Src/main.c **** {
 157:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** 	/* USER CODE END 1 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 	/* MCU Configuration--------------------------------------------------------*/
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 164:Core/Src/main.c **** 	HAL_Init();
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** 	/* USER CODE BEGIN Init */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 	/* USER CODE END Init */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 	/* Configure the system clock */
 171:Core/Src/main.c **** 	SystemClock_Config();
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** 	/* USER CODE BEGIN SysInit */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 	/* USER CODE END SysInit */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** 	/* Initialize all configured peripherals */
 178:Core/Src/main.c **** 	MX_GPIO_Init();
 179:Core/Src/main.c **** 	MX_TIM4_Init();
 180:Core/Src/main.c **** 	MX_UART4_Init();
 181:Core/Src/main.c **** 	MX_UART5_Init();
 182:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim4);
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); // Enable Receiver 1
 187:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** 	HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 190:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** 	digit1 = 16;
 193:Core/Src/main.c **** 	digit2 = 16;
 194:Core/Src/main.c **** 	num_slave=0;
 195:Core/Src/main.c **** 	ID=0;
 196:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 197:Core/Src/main.c **** 	ID_list[SLAVE1]= 0;
 198:Core/Src/main.c **** 	ID_list[SLAVE2]= 0;
 199:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 200:Core/Src/main.c **** 	state = STATE_IDLE;
ARM GAS  /tmp/cc6zIoes.s 			page 5


 201:Core/Src/main.c **** 	/*
 202:Core/Src/main.c **** 	if (num_slave>0){
 203:Core/Src/main.c **** 		state = STATE_OPERATION;
 204:Core/Src/main.c **** 	}else{
 205:Core/Src/main.c **** 		state=STATE_ASSIGNED_ADDR;
 206:Core/Src/main.c **** 	}*/
 207:Core/Src/main.c **** 	HAL_Delay(1000);
 208:Core/Src/main.c **** 	lcd_init();
 209:Core/Src/main.c **** 	lcd_clear();
 210:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 211:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 212:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 213:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 214:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 215:Core/Src/main.c **** 	lcd_write_string("S2-00:");
 216:Core/Src/main.c **** 	lcd_set_pos(1, 0x6);
 217:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 218:Core/Src/main.c **** 	lcd_set_pos(1, 0x9);
 219:Core/Src/main.c **** 	lcd_write_string("S1-00:");
 220:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 221:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 222:Core/Src/main.c **** 	old_digit1 = digit1;
 223:Core/Src/main.c **** 	old_digit2=old_digit2;
 224:Core/Src/main.c **** 	old_num_slave= num_slave;
 225:Core/Src/main.c **** 	/* USER CODE END 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** 	/* Infinite loop */
 228:Core/Src/main.c **** 	/* USER CODE BEGIN WHILE */
 229:Core/Src/main.c **** 	while (1)
 230:Core/Src/main.c **** 	{
 231:Core/Src/main.c **** 		/* USER CODE END WHILE */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** 		/* USER CODE BEGIN 3 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** 		task_timer();
 236:Core/Src/main.c **** 		/// segment_display_task();
 237:Core/Src/main.c **** 		
 238:Core/Src/main.c **** 		key_read_task();
 239:Core/Src/main.c **** 		RS485_RX_Task();
 240:Core/Src/main.c **** 		main_task();
 241:Core/Src/main.c **** 	}
 242:Core/Src/main.c **** 	/* USER CODE END 3 */
 243:Core/Src/main.c **** }
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** /**
 246:Core/Src/main.c ****  * @brief System Clock Configuration
 247:Core/Src/main.c ****  * @retval None
 248:Core/Src/main.c ****  */
 249:Core/Src/main.c **** void SystemClock_Config(void)
 250:Core/Src/main.c **** {
 251:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 252:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** 	/** Configure the main internal regulator output voltage
 255:Core/Src/main.c **** 	 */
 256:Core/Src/main.c **** 	__HAL_RCC_PWR_CLK_ENABLE();
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
ARM GAS  /tmp/cc6zIoes.s 			page 6


 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** 	/** Initializes the RCC Oscillators according to the specified parameters
 260:Core/Src/main.c **** 	 * in the RCC_OscInitTypeDef structure.
 261:Core/Src/main.c **** 	 */
 262:Core/Src/main.c **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 263:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 267:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 268:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 269:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 270:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 271:Core/Src/main.c **** 	{
 272:Core/Src/main.c **** 		Error_Handler();
 273:Core/Src/main.c **** 	}
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** 	/** Initializes the CPU, AHB and APB buses clocks
 276:Core/Src/main.c **** 	 */
 277:Core/Src/main.c **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RC
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 279:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 280:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 281:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 284:Core/Src/main.c **** 	{
 285:Core/Src/main.c **** 		Error_Handler();
 286:Core/Src/main.c **** 	}
 287:Core/Src/main.c **** }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** void update_lcd(uint8_t* itm){
  30              		.loc 1 292 30 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 292 30 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** 	//if (lcd_process<4)return;
 295:Core/Src/main.c **** 	if (itm == &digit2){
  40              		.loc 1 295 2 is_stmt 1 view .LVU2
  41              		.loc 1 295 5 is_stmt 0 view .LVU3
  42 0002 154B     		ldr	r3, .L9
  43 0004 9842     		cmp	r0, r3
  44 0006 06D0     		beq	.L6
 296:Core/Src/main.c **** 		lcd_set_pos(1,0x6);
 297:Core/Src/main.c **** 		lcd_data(digit_table[digit2]);
 298:Core/Src/main.c **** 		
 299:Core/Src/main.c **** 	}else if(itm ==&digit1){
ARM GAS  /tmp/cc6zIoes.s 			page 7


  45              		.loc 1 299 8 is_stmt 1 view .LVU4
  46              		.loc 1 299 10 is_stmt 0 view .LVU5
  47 0008 144B     		ldr	r3, .L9+4
  48 000a 9842     		cmp	r0, r3
  49 000c 0ED0     		beq	.L7
 300:Core/Src/main.c **** 		lcd_set_pos(1,0xF);
 301:Core/Src/main.c **** 		lcd_data(digit_table[digit1]);
 302:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  50              		.loc 1 302 8 is_stmt 1 view .LVU6
  51              		.loc 1 302 10 is_stmt 0 view .LVU7
  52 000e 144B     		ldr	r3, .L9+8
  53 0010 9842     		cmp	r0, r3
  54 0012 16D0     		beq	.L8
  55              	.LVL1:
  56              	.L1:
 303:Core/Src/main.c **** 		lcd_set_pos(0,0xC);
 304:Core/Src/main.c **** 		lcd_data(digit_table[num_slave]);
 305:Core/Src/main.c **** 		
 306:Core/Src/main.c **** 	}
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** }
  57              		.loc 1 308 1 view .LVU8
  58 0014 08BD     		pop	{r3, pc}
  59              	.LVL2:
  60              	.L6:
 296:Core/Src/main.c **** 		lcd_data(digit_table[digit2]);
  61              		.loc 1 296 3 is_stmt 1 view .LVU9
  62 0016 0621     		movs	r1, #6
  63 0018 0120     		movs	r0, #1
  64              	.LVL3:
 296:Core/Src/main.c **** 		lcd_data(digit_table[digit2]);
  65              		.loc 1 296 3 is_stmt 0 view .LVU10
  66 001a FFF7FEFF 		bl	lcd_set_pos
  67              	.LVL4:
 297:Core/Src/main.c **** 		
  68              		.loc 1 297 3 is_stmt 1 view .LVU11
  69 001e 0E4B     		ldr	r3, .L9
  70 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  71 0022 104A     		ldr	r2, .L9+12
  72 0024 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
  73 0026 FFF7FEFF 		bl	lcd_data
  74              	.LVL5:
  75 002a F3E7     		b	.L1
  76              	.LVL6:
  77              	.L7:
 300:Core/Src/main.c **** 		lcd_data(digit_table[digit1]);
  78              		.loc 1 300 3 view .LVU12
  79 002c 0F21     		movs	r1, #15
  80 002e 0120     		movs	r0, #1
  81              	.LVL7:
 300:Core/Src/main.c **** 		lcd_data(digit_table[digit1]);
  82              		.loc 1 300 3 is_stmt 0 view .LVU13
  83 0030 FFF7FEFF 		bl	lcd_set_pos
  84              	.LVL8:
 301:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  85              		.loc 1 301 3 is_stmt 1 view .LVU14
  86 0034 094B     		ldr	r3, .L9+4
ARM GAS  /tmp/cc6zIoes.s 			page 8


  87 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88 0038 0A4A     		ldr	r2, .L9+12
  89 003a D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
  90 003c FFF7FEFF 		bl	lcd_data
  91              	.LVL9:
  92 0040 E8E7     		b	.L1
  93              	.LVL10:
  94              	.L8:
 303:Core/Src/main.c **** 		lcd_data(digit_table[num_slave]);
  95              		.loc 1 303 3 view .LVU15
  96 0042 0C21     		movs	r1, #12
  97 0044 0020     		movs	r0, #0
  98              	.LVL11:
 303:Core/Src/main.c **** 		lcd_data(digit_table[num_slave]);
  99              		.loc 1 303 3 is_stmt 0 view .LVU16
 100 0046 FFF7FEFF 		bl	lcd_set_pos
 101              	.LVL12:
 304:Core/Src/main.c **** 		
 102              		.loc 1 304 3 is_stmt 1 view .LVU17
 103 004a 054B     		ldr	r3, .L9+8
 104 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 105 004e 054A     		ldr	r2, .L9+12
 106 0050 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 107 0052 FFF7FEFF 		bl	lcd_data
 108              	.LVL13:
 109              		.loc 1 308 1 is_stmt 0 view .LVU18
 110 0056 DDE7     		b	.L1
 111              	.L10:
 112              		.align	2
 113              	.L9:
 114 0058 00000000 		.word	.LANCHOR0
 115 005c 00000000 		.word	.LANCHOR2
 116 0060 00000000 		.word	.LANCHOR3
 117 0064 00000000 		.word	.LANCHOR1
 118              		.cfi_endproc
 119              	.LFE132:
 121              		.section	.text.task_timer,"ax",%progbits
 122              		.align	1
 123              		.global	task_timer
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 128              	task_timer:
 129              	.LFB133:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** void task_timer(void)
 312:Core/Src/main.c **** {
 130              		.loc 1 312 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 313:Core/Src/main.c **** 	if (!f_timer_10ms)
 135              		.loc 1 313 2 view .LVU20
 136              		.loc 1 313 6 is_stmt 0 view .LVU21
 137 0000 174B     		ldr	r3, .L17
ARM GAS  /tmp/cc6zIoes.s 			page 9


 138 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139              		.loc 1 313 5 view .LVU22
 140 0004 EBB1     		cbz	r3, .L11
 314:Core/Src/main.c **** 		return;		  // checking if 10 ms timer interrupt is set (10 ms), if set then do timer task
 315:Core/Src/main.c **** 	f_timer_10ms = 0; // clear the flag to wait next interupt
 141              		.loc 1 315 2 is_stmt 1 view .LVU23
 142              		.loc 1 315 15 is_stmt 0 view .LVU24
 143 0006 164B     		ldr	r3, .L17
 144 0008 0022     		movs	r2, #0
 145 000a 1A70     		strb	r2, [r3]
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** 	d_timer_30ms++; // count timer for 30 ms interval
 146              		.loc 1 317 2 is_stmt 1 view .LVU25
 147              		.loc 1 317 14 is_stmt 0 view .LVU26
 148 000c 154A     		ldr	r2, .L17+4
 149 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 150 0010 0133     		adds	r3, r3, #1
 151 0012 DBB2     		uxtb	r3, r3
 152 0014 1370     		strb	r3, [r2]
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** 	if (d_timer_30ms == 3) // checking if the count reached 30 ms
 153              		.loc 1 319 2 is_stmt 1 view .LVU27
 154              		.loc 1 319 5 is_stmt 0 view .LVU28
 155 0016 032B     		cmp	r3, #3
 156 0018 14D0     		beq	.L15
 157              	.L13:
 320:Core/Src/main.c **** 	{
 321:Core/Src/main.c **** 		d_timer_30ms = 0; // assign "0" to repeat counting
 322:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 323:Core/Src/main.c **** 	}
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** 	d_timer_update_digit++;
 158              		.loc 1 325 2 is_stmt 1 view .LVU29
 159              		.loc 1 325 22 is_stmt 0 view .LVU30
 160 001a 134A     		ldr	r2, .L17+8
 161 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 162 001e 0133     		adds	r3, r3, #1
 163 0020 DBB2     		uxtb	r3, r3
 164 0022 1370     		strb	r3, [r2]
 326:Core/Src/main.c **** 	if (d_timer_update_digit > 125)
 165              		.loc 1 326 2 is_stmt 1 view .LVU31
 166              		.loc 1 326 5 is_stmt 0 view .LVU32
 167 0024 7D2B     		cmp	r3, #125
 168 0026 05D9     		bls	.L14
 327:Core/Src/main.c **** 	{
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** 		d_timer_update_digit = 0;
 169              		.loc 1 329 3 is_stmt 1 view .LVU33
 170              		.loc 1 329 24 is_stmt 0 view .LVU34
 171 0028 1346     		mov	r3, r2
 172 002a 0022     		movs	r2, #0
 173 002c 1A70     		strb	r2, [r3]
 330:Core/Src/main.c **** 		f_timer_update_digit = 1;
 174              		.loc 1 330 3 is_stmt 1 view .LVU35
 175              		.loc 1 330 24 is_stmt 0 view .LVU36
 176 002e 0F4B     		ldr	r3, .L17+12
 177 0030 0122     		movs	r2, #1
ARM GAS  /tmp/cc6zIoes.s 			page 10


 178 0032 1A70     		strb	r2, [r3]
 179              	.L14:
 331:Core/Src/main.c **** 	}
 332:Core/Src/main.c **** 	d_timer_50ms++;			// for querry 
 180              		.loc 1 332 2 is_stmt 1 view .LVU37
 181              		.loc 1 332 14 is_stmt 0 view .LVU38
 182 0034 0E4A     		ldr	r2, .L17+16
 183 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 184 0038 0133     		adds	r3, r3, #1
 185 003a DBB2     		uxtb	r3, r3
 186 003c 1370     		strb	r3, [r2]
 333:Core/Src/main.c **** 	if (d_timer_50ms == 5)
 187              		.loc 1 333 2 is_stmt 1 view .LVU39
 188              		.loc 1 333 5 is_stmt 0 view .LVU40
 189 003e 052B     		cmp	r3, #5
 190 0040 07D0     		beq	.L16
 191              	.L11:
 334:Core/Src/main.c **** 	{
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** 		d_timer_50ms = 0;
 337:Core/Src/main.c **** 		f_querry=1;
 338:Core/Src/main.c **** 	}
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** }
 192              		.loc 1 340 1 view .LVU41
 193 0042 7047     		bx	lr
 194              	.L15:
 321:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 195              		.loc 1 321 3 is_stmt 1 view .LVU42
 321:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 196              		.loc 1 321 16 is_stmt 0 view .LVU43
 197 0044 1346     		mov	r3, r2
 198 0046 0022     		movs	r2, #0
 199 0048 1A70     		strb	r2, [r3]
 322:Core/Src/main.c **** 	}
 200              		.loc 1 322 3 is_stmt 1 view .LVU44
 322:Core/Src/main.c **** 	}
 201              		.loc 1 322 16 is_stmt 0 view .LVU45
 202 004a 0A4B     		ldr	r3, .L17+20
 203 004c 0122     		movs	r2, #1
 204 004e 1A70     		strb	r2, [r3]
 205 0050 E3E7     		b	.L13
 206              	.L16:
 336:Core/Src/main.c **** 		f_querry=1;
 207              		.loc 1 336 3 is_stmt 1 view .LVU46
 336:Core/Src/main.c **** 		f_querry=1;
 208              		.loc 1 336 16 is_stmt 0 view .LVU47
 209 0052 1346     		mov	r3, r2
 210 0054 0022     		movs	r2, #0
 211 0056 1A70     		strb	r2, [r3]
 337:Core/Src/main.c **** 	}
 212              		.loc 1 337 3 is_stmt 1 view .LVU48
 337:Core/Src/main.c **** 	}
 213              		.loc 1 337 11 is_stmt 0 view .LVU49
 214 0058 074B     		ldr	r3, .L17+24
 215 005a 0122     		movs	r2, #1
 216 005c 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cc6zIoes.s 			page 11


 217 005e F0E7     		b	.L11
 218              	.L18:
 219              		.align	2
 220              	.L17:
 221 0060 00000000 		.word	.LANCHOR4
 222 0064 00000000 		.word	.LANCHOR5
 223 0068 00000000 		.word	.LANCHOR7
 224 006c 00000000 		.word	.LANCHOR8
 225 0070 00000000 		.word	.LANCHOR9
 226 0074 00000000 		.word	.LANCHOR6
 227 0078 00000000 		.word	.LANCHOR10
 228              		.cfi_endproc
 229              	.LFE133:
 231              		.section	.text.key_read_task,"ax",%progbits
 232              		.align	1
 233              		.global	key_read_task
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 238              	key_read_task:
 239              	.LFB134:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** void key_read_task(void)
 343:Core/Src/main.c **** {
 240              		.loc 1 343 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 08B5     		push	{r3, lr}
 245              	.LCFI1:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 3, -8
 248              		.cfi_offset 14, -4
 344:Core/Src/main.c **** 	if (!f_timer_30ms) return;		  // Checking if 30 ms counting is done
 249              		.loc 1 344 2 view .LVU51
 250              		.loc 1 344 6 is_stmt 0 view .LVU52
 251 0002 244B     		ldr	r3, .L29
 252 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253              		.loc 1 344 5 view .LVU53
 254 0006 33B3     		cbz	r3, .L19
 345:Core/Src/main.c **** 	f_timer_30ms = 0; // clear the flag to wait next counting
 255              		.loc 1 345 2 is_stmt 1 view .LVU54
 256              		.loc 1 345 15 is_stmt 0 view .LVU55
 257 0008 224B     		ldr	r3, .L29
 258 000a 0022     		movs	r2, #0
 259 000c 1A70     		strb	r2, [r3]
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin | KEY2_Pin));
 260              		.loc 1 347 2 is_stmt 1 view .LVU56
 261              		.loc 1 347 39 is_stmt 0 view .LVU57
 262 000e 224B     		ldr	r3, .L29+4
 263 0010 1869     		ldr	r0, [r3, #16]
 264              	.LVL14:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** 	key1_data = key1_data << 1; // Preparing to read KEY1 Input
 265              		.loc 1 349 2 is_stmt 1 view .LVU58
 266              		.loc 1 349 24 is_stmt 0 view .LVU59
ARM GAS  /tmp/cc6zIoes.s 			page 12


 267 0012 224A     		ldr	r2, .L29+8
 268 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 269 0016 5B00     		lsls	r3, r3, #1
 270 0018 DBB2     		uxtb	r3, r3
 271              		.loc 1 349 12 view .LVU60
 272 001a 1370     		strb	r3, [r2]
 350:Core/Src/main.c **** 	key1_data &= 0b00001110;
 273              		.loc 1 350 2 is_stmt 1 view .LVU61
 274              		.loc 1 350 12 is_stmt 0 view .LVU62
 275 001c 03F00E03 		and	r3, r3, #14
 276 0020 1370     		strb	r3, [r2]
 351:Core/Src/main.c **** 	key1_data |= ((key_pindata >> 2) & 0x1); // Read KEY1 Input
 277              		.loc 1 351 2 is_stmt 1 view .LVU63
 278              		.loc 1 351 35 is_stmt 0 view .LVU64
 279 0022 C0F38001 		ubfx	r1, r0, #2, #1
 280              		.loc 1 351 12 view .LVU65
 281 0026 0B43     		orrs	r3, r3, r1
 282 0028 1370     		strb	r3, [r2]
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** 	key2_data = key2_data << 1; // Preparing to read KEY2 Input
 283              		.loc 1 353 2 is_stmt 1 view .LVU66
 284              		.loc 1 353 24 is_stmt 0 view .LVU67
 285 002a 1D49     		ldr	r1, .L29+12
 286 002c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 287 002e 5200     		lsls	r2, r2, #1
 288 0030 D2B2     		uxtb	r2, r2
 289              		.loc 1 353 12 view .LVU68
 290 0032 0A70     		strb	r2, [r1]
 354:Core/Src/main.c **** 	key2_data &= 0b00001110;
 291              		.loc 1 354 2 is_stmt 1 view .LVU69
 292              		.loc 1 354 12 is_stmt 0 view .LVU70
 293 0034 02F00E02 		and	r2, r2, #14
 294 0038 0A70     		strb	r2, [r1]
 355:Core/Src/main.c **** 	key2_data |= (key_pindata >> 3); // Read KEY2 Input
 295              		.loc 1 355 2 is_stmt 1 view .LVU71
 296              		.loc 1 355 12 is_stmt 0 view .LVU72
 297 003a C0F3C000 		ubfx	r0, r0, #3, #1
 298              	.LVL15:
 299              		.loc 1 355 12 view .LVU73
 300 003e 0243     		orrs	r2, r2, r0
 301 0040 0A70     		strb	r2, [r1]
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** 	if (key1_data == KEY_PRESSED) // Checking if KEY1 is pressed
 302              		.loc 1 357 2 is_stmt 1 view .LVU74
 303              		.loc 1 357 5 is_stmt 0 view .LVU75
 304 0042 0C2B     		cmp	r3, #12
 305 0044 08D0     		beq	.L25
 358:Core/Src/main.c **** 	{
 359:Core/Src/main.c **** 		f_querry =0;
 360:Core/Src/main.c **** 		state = STATE_IDLE;
 361:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 362:Core/Src/main.c **** 	}else if(key1_data == KEY_RELEASED){
 306              		.loc 1 362 8 is_stmt 1 view .LVU76
 307              		.loc 1 362 10 is_stmt 0 view .LVU77
 308 0046 032B     		cmp	r3, #3
 309 0048 10D0     		beq	.L26
 310              	.L22:
ARM GAS  /tmp/cc6zIoes.s 			page 13


 363:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_RELEASED); 
 364:Core/Src/main.c **** 	}
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** 	if (key2_data == KEY_PRESSED) // Checking if KEY2 is pressed
 311              		.loc 1 366 2 is_stmt 1 view .LVU78
 312              		.loc 1 366 16 is_stmt 0 view .LVU79
 313 004a 154B     		ldr	r3, .L29+12
 314 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 315              		.loc 1 366 5 view .LVU80
 316 004e 0C2B     		cmp	r3, #12
 317 0050 11D0     		beq	.L27
 367:Core/Src/main.c **** 	{
 368:Core/Src/main.c **** 		
 369:Core/Src/main.c **** 		f_querry =0;
 370:Core/Src/main.c **** 		state = STATE_IDLE;
 371:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 372:Core/Src/main.c **** 	}else if(key2_data == KEY_RELEASED){
 318              		.loc 1 372 8 is_stmt 1 view .LVU81
 319              		.loc 1 372 10 is_stmt 0 view .LVU82
 320 0052 032B     		cmp	r3, #3
 321 0054 19D0     		beq	.L28
 322              	.L19:
 373:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_RELEASED);
 374:Core/Src/main.c **** 	}
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** }
 323              		.loc 1 376 1 view .LVU83
 324 0056 08BD     		pop	{r3, pc}
 325              	.L25:
 359:Core/Src/main.c **** 		state = STATE_IDLE;
 326              		.loc 1 359 3 is_stmt 1 view .LVU84
 359:Core/Src/main.c **** 		state = STATE_IDLE;
 327              		.loc 1 359 12 is_stmt 0 view .LVU85
 328 0058 0023     		movs	r3, #0
 329 005a 124A     		ldr	r2, .L29+16
 330 005c 1370     		strb	r3, [r2]
 360:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 331              		.loc 1 360 3 is_stmt 1 view .LVU86
 360:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 332              		.loc 1 360 9 is_stmt 0 view .LVU87
 333 005e 124A     		ldr	r2, .L29+20
 334 0060 1370     		strb	r3, [r2]
 361:Core/Src/main.c **** 	}else if(key1_data == KEY_RELEASED){
 335              		.loc 1 361 3 is_stmt 1 view .LVU88
 336 0062 0121     		movs	r1, #1
 337 0064 1148     		ldr	r0, .L29+24
 338 0066 FFF7FEFF 		bl	buffer_push
 339              	.LVL16:
 340 006a EEE7     		b	.L22
 341              	.L26:
 363:Core/Src/main.c **** 	}
 342              		.loc 1 363 3 view .LVU89
 343 006c 0321     		movs	r1, #3
 344 006e 0F48     		ldr	r0, .L29+24
 345 0070 FFF7FEFF 		bl	buffer_push
 346              	.LVL17:
 347 0074 E9E7     		b	.L22
ARM GAS  /tmp/cc6zIoes.s 			page 14


 348              	.L27:
 369:Core/Src/main.c **** 		state = STATE_IDLE;
 349              		.loc 1 369 3 view .LVU90
 369:Core/Src/main.c **** 		state = STATE_IDLE;
 350              		.loc 1 369 12 is_stmt 0 view .LVU91
 351 0076 0023     		movs	r3, #0
 352 0078 0A4A     		ldr	r2, .L29+16
 353 007a 1370     		strb	r3, [r2]
 370:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 354              		.loc 1 370 3 is_stmt 1 view .LVU92
 370:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 355              		.loc 1 370 9 is_stmt 0 view .LVU93
 356 007c 0A4A     		ldr	r2, .L29+20
 357 007e 1370     		strb	r3, [r2]
 371:Core/Src/main.c **** 	}else if(key2_data == KEY_RELEASED){
 358              		.loc 1 371 3 is_stmt 1 view .LVU94
 359 0080 0221     		movs	r1, #2
 360 0082 0A48     		ldr	r0, .L29+24
 361 0084 FFF7FEFF 		bl	buffer_push
 362              	.LVL18:
 363 0088 E5E7     		b	.L19
 364              	.L28:
 373:Core/Src/main.c **** 	}
 365              		.loc 1 373 3 view .LVU95
 366 008a 0421     		movs	r1, #4
 367 008c 0748     		ldr	r0, .L29+24
 368 008e FFF7FEFF 		bl	buffer_push
 369              	.LVL19:
 370 0092 E0E7     		b	.L19
 371              	.L30:
 372              		.align	2
 373              	.L29:
 374 0094 00000000 		.word	.LANCHOR6
 375 0098 00180240 		.word	1073879040
 376 009c 00000000 		.word	.LANCHOR11
 377 00a0 00000000 		.word	.LANCHOR12
 378 00a4 00000000 		.word	.LANCHOR10
 379 00a8 00000000 		.word	.LANCHOR13
 380 00ac 00000000 		.word	.LANCHOR14
 381              		.cfi_endproc
 382              	.LFE134:
 384              		.section	.text.RS485_RX_Task,"ax",%progbits
 385              		.align	1
 386              		.global	RS485_RX_Task
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	RS485_RX_Task:
 392              	.LFB137:
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** void main_task(void)
 379:Core/Src/main.c **** {
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** 	if (event_buffer.head != event_buffer.tail)
 382:Core/Src/main.c **** 	{
 383:Core/Src/main.c **** 		
 384:Core/Src/main.c **** 		event = buffer_pop(&event_buffer); // if there is event then get the event from buffer
ARM GAS  /tmp/cc6zIoes.s 			page 15


 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** 	}
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** 	switch (state)
 389:Core/Src/main.c **** 	{
 390:Core/Src/main.c **** 	case STATE_IDLE:
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** 		switch (event)
 393:Core/Src/main.c **** 		{
 394:Core/Src/main.c **** 		case EVENT_KEY1_PRESSED:
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** 			f_TX_ID = SLAVE1;
 397:Core/Src/main.c **** 			f_timer_update_digit=1;
 398:Core/Src/main.c **** 			//d_timer_update_digit = 250;			
 399:Core/Src/main.c **** 			event = EVENT_RESET;
 400:Core/Src/main.c **** 			state = STATE_TX;
 401:Core/Src/main.c **** 			
 402:Core/Src/main.c **** 			break;
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** 		case EVENT_KEY2_PRESSED:
 405:Core/Src/main.c **** 			
 406:Core/Src/main.c **** 			f_TX_ID = SLAVE2;
 407:Core/Src/main.c **** 			f_timer_update_digit=1;
 408:Core/Src/main.c **** 			//d_timer_update_digit = 250;	
 409:Core/Src/main.c **** 			event = EVENT_RESET;
 410:Core/Src/main.c **** 			state = STATE_TX;
 411:Core/Src/main.c **** 			
 412:Core/Src/main.c **** 			break;
 413:Core/Src/main.c **** 				
 414:Core/Src/main.c **** 		default:
 415:Core/Src/main.c **** 			if (!f_querry) break;
 416:Core/Src/main.c **** 			f_querry =0;
 417:Core/Src/main.c **** 					
 418:Core/Src/main.c **** 			if(ID>0){
 419:Core/Src/main.c **** 				
 420:Core/Src/main.c **** 				RS485_Send_Message(ID_list[ID],FUNC_READ, '0');
 421:Core/Src/main.c **** 			}else{
 422:Core/Src/main.c **** 				RS485_Send_Message(ID_list[ID],FUNC_FIND_SLAVE,'0');
 423:Core/Src/main.c **** 			}
 424:Core/Src/main.c **** 						
 425:Core/Src/main.c **** 			ID = (ID+1)== 3 ?0:ID+1;
 426:Core/Src/main.c **** 			
 427:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 428:Core/Src/main.c **** 			old_state = STATE_IDLE;
 429:Core/Src/main.c **** 			break;
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** 		}
 432:Core/Src/main.c **** 		break;
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** 	case STATE_TX:
 435:Core/Src/main.c **** 		switch (event)
 436:Core/Src/main.c **** 		{
 437:Core/Src/main.c **** 		case EVENT_KEY1_RELEASED:
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** 			f_timer_update_digit =1;
 440:Core/Src/main.c **** 			state = STATE_IDLE;
 441:Core/Src/main.c **** 
ARM GAS  /tmp/cc6zIoes.s 			page 16


 442:Core/Src/main.c **** 			break;
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** 		case EVENT_KEY2_RELEASED:
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** 			f_timer_update_digit =1;
 447:Core/Src/main.c **** 			state = STATE_IDLE;	
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** 			break;
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** 		default:
 452:Core/Src/main.c **** 			/// timer tx by key
 453:Core/Src/main.c **** 			if (!f_timer_update_digit) break;
 454:Core/Src/main.c **** 			f_timer_update_digit =0;
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** 			if(f_TX_ID == SLAVE1){
 457:Core/Src/main.c **** 				digit1=(digit1+1)>9? 0 :digit1+1;
 458:Core/Src/main.c **** 				update_lcd(&digit1);
 459:Core/Src/main.c **** 				old_digit1 = digit1;
 460:Core/Src/main.c **** 				//buffer_push(&digit1_buf,digit1);
 461:Core/Src/main.c **** 				RS485_Send_Message(ID_list[SLAVE1],FUNC_WRITE,(digit1+'0'));
 462:Core/Src/main.c **** 			}
 463:Core/Src/main.c **** 			else if (f_TX_ID == SLAVE2)
 464:Core/Src/main.c **** 			{
 465:Core/Src/main.c **** 				digit2=(digit2+1)>9? 0 :digit2+1;
 466:Core/Src/main.c **** 				update_lcd(&digit2);
 467:Core/Src/main.c **** 				old_digit2 = digit2;
 468:Core/Src/main.c **** 				//buffer_push(&digit1_buf,digit1);
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** 				RS485_Send_Message(ID_list[SLAVE2],FUNC_WRITE,(digit2+'0'));
 471:Core/Src/main.c **** 			}
 472:Core/Src/main.c **** 			event = EVENT_RESET;
 473:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 474:Core/Src/main.c **** 			old_state = STATE_TX;
 475:Core/Src/main.c **** 			break;
 476:Core/Src/main.c **** 		}
 477:Core/Src/main.c **** 		break;
 478:Core/Src/main.c **** 	case STATE_WAITING_RX:
 479:Core/Src/main.c **** 		
 480:Core/Src/main.c **** 		if (event==EVENT_RX_COMPLETE){
 481:Core/Src/main.c **** 			RS485_Read_Message();
 482:Core/Src/main.c **** 			
 483:Core/Src/main.c **** 			if (old_state==STATE_TX){
 484:Core/Src/main.c **** 				d_timer_update_digit=0;
 485:Core/Src/main.c **** 				f_timer_update_digit =0;
 486:Core/Src/main.c **** 			}
 487:Core/Src/main.c **** 			state=old_state;
 488:Core/Src/main.c **** 			event = EVENT_RESET;
 489:Core/Src/main.c **** 		
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** 		}else{
 492:Core/Src/main.c **** 			
 493:Core/Src/main.c **** 			if (!f_querry) break;
 494:Core/Src/main.c **** 			f_querry =0;
 495:Core/Src/main.c **** 			
 496:Core/Src/main.c **** 			RS485_Send_Message(TX_msg[1],TX_msg[2],TX_msg[3]);
 497:Core/Src/main.c **** 			tx_timeout++;
 498:Core/Src/main.c **** 			
ARM GAS  /tmp/cc6zIoes.s 			page 17


 499:Core/Src/main.c **** 			if (tx_timeout==2){
 500:Core/Src/main.c **** 				state = old_state;
 501:Core/Src/main.c **** 				event = EVENT_RESET;	
 502:Core/Src/main.c **** 				tx_timeout=0;
 503:Core/Src/main.c **** 				//check_slave();
 504:Core/Src/main.c **** 				break;
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** 			}
 507:Core/Src/main.c **** 			
 508:Core/Src/main.c **** 		}
 509:Core/Src/main.c **** 		
 510:Core/Src/main.c **** 		break;
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** 	}
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** 
 515:Core/Src/main.c **** }
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** void check_slave(void){
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** 	if ((TX_msg[1]==ID_list[0])||(TX_msg[1]==0)||(TX_msg[2]==FUNC_WRITE))return;
 520:Core/Src/main.c **** 	
 521:Core/Src/main.c **** 	if (TX_msg[1]==ID_list[SLAVE1]){
 522:Core/Src/main.c **** 		display_state_slave(SLAVE1, DISCONNECTED);
 523:Core/Src/main.c **** 		ID_list[SLAVE1] = 0;
 524:Core/Src/main.c **** 		digit1 = 16;
 525:Core/Src/main.c **** 	}else if (TX_msg[1]== ID_list[SLAVE2]){
 526:Core/Src/main.c **** 		display_state_slave(SLAVE2, DISCONNECTED);
 527:Core/Src/main.c **** 		ID_list[SLAVE2]	= 0;
 528:Core/Src/main.c **** 		digit2 =16;
 529:Core/Src/main.c **** 	}
 530:Core/Src/main.c **** 		
 531:Core/Src/main.c **** 	num_slave--;
 532:Core/Src/main.c **** 	update_lcd(&num_slave);
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** 	
 535:Core/Src/main.c **** }
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** void RS485_RX_Task(void)
 539:Core/Src/main.c **** {
 393              		.loc 1 539 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 08B5     		push	{r3, lr}
 398              	.LCFI2:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 3, -8
 401              		.cfi_offset 14, -4
 540:Core/Src/main.c **** 	
 541:Core/Src/main.c **** 	if (rx_buffer.tail==rx_buffer.head) return;
 402              		.loc 1 541 2 view .LVU97
 403              		.loc 1 541 15 is_stmt 0 view .LVU98
 404 0002 174B     		ldr	r3, .L39
 405 0004 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 406              		.loc 1 541 31 view .LVU99
ARM GAS  /tmp/cc6zIoes.s 			page 18


 407 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408              		.loc 1 541 5 view .LVU100
 409 0008 9A42     		cmp	r2, r3
 410 000a 20D0     		beq	.L31
 542:Core/Src/main.c **** 	
 543:Core/Src/main.c **** 	
 544:Core/Src/main.c **** 	if (rx_buffer.data[rx_buffer.tail]==SOF)
 411              		.loc 1 544 2 is_stmt 1 view .LVU101
 412              		.loc 1 544 20 is_stmt 0 view .LVU102
 413 000c 144B     		ldr	r3, .L39
 414 000e 1344     		add	r3, r3, r2
 415 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 416              		.loc 1 544 5 view .LVU103
 417 0012 022B     		cmp	r3, #2
 418 0014 0AD0     		beq	.L37
 545:Core/Src/main.c **** 	{
 546:Core/Src/main.c **** 		f_read_msg =1;
 547:Core/Src/main.c **** 		pRX_msg = RX_msg;
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** 	}else if(rx_buffer.data[rx_buffer.tail]==EOF)
 419              		.loc 1 549 8 is_stmt 1 view .LVU104
 420              		.loc 1 549 10 is_stmt 0 view .LVU105
 421 0016 032B     		cmp	r3, #3
 422 0018 1AD0     		beq	.L38
 550:Core/Src/main.c **** 	{
 551:Core/Src/main.c **** 		f_read_msg =0;
 552:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 553:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 554:Core/Src/main.c **** 	}else{
 555:Core/Src/main.c **** 
 556:Core/Src/main.c **** 		if (f_read_msg){
 423              		.loc 1 556 3 is_stmt 1 view .LVU106
 424              		.loc 1 556 7 is_stmt 0 view .LVU107
 425 001a 124A     		ldr	r2, .L39+4
 426 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 427              		.loc 1 556 6 view .LVU108
 428 001e 5AB1     		cbz	r2, .L34
 557:Core/Src/main.c **** 			*pRX_msg++=rx_buffer.data[rx_buffer.tail];
 429              		.loc 1 557 4 is_stmt 1 view .LVU109
 430              		.loc 1 557 12 is_stmt 0 view .LVU110
 431 0020 1149     		ldr	r1, .L39+8
 432 0022 0A68     		ldr	r2, [r1]
 433 0024 501C     		adds	r0, r2, #1
 434 0026 0860     		str	r0, [r1]
 435              		.loc 1 557 14 view .LVU111
 436 0028 1370     		strb	r3, [r2]
 437 002a 05E0     		b	.L34
 438              	.L37:
 546:Core/Src/main.c **** 		pRX_msg = RX_msg;
 439              		.loc 1 546 3 is_stmt 1 view .LVU112
 546:Core/Src/main.c **** 		pRX_msg = RX_msg;
 440              		.loc 1 546 14 is_stmt 0 view .LVU113
 441 002c 0D4B     		ldr	r3, .L39+4
 442 002e 0122     		movs	r2, #1
 443 0030 1A70     		strb	r2, [r3]
 547:Core/Src/main.c **** 
 444              		.loc 1 547 3 is_stmt 1 view .LVU114
ARM GAS  /tmp/cc6zIoes.s 			page 19


 547:Core/Src/main.c **** 
 445              		.loc 1 547 11 is_stmt 0 view .LVU115
 446 0032 0D4B     		ldr	r3, .L39+8
 447 0034 0D4A     		ldr	r2, .L39+12
 448 0036 1A60     		str	r2, [r3]
 449              	.L34:
 558:Core/Src/main.c **** 		}	
 559:Core/Src/main.c **** 	}
 560:Core/Src/main.c **** 	rx_buffer.tail = (rx_buffer.tail+1)%BUFFER_SIZE;
 450              		.loc 1 560 2 is_stmt 1 view .LVU116
 451              		.loc 1 560 29 is_stmt 0 view .LVU117
 452 0038 0949     		ldr	r1, .L39
 453 003a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 454              		.loc 1 560 34 view .LVU118
 455 003c 0133     		adds	r3, r3, #1
 456              		.loc 1 560 37 view .LVU119
 457 003e 5A42     		rsbs	r2, r3, #0
 458 0040 03F03F03 		and	r3, r3, #63
 459 0044 02F03F02 		and	r2, r2, #63
 460 0048 58BF     		it	pl
 461 004a 5342     		rsbpl	r3, r2, #0
 462              		.loc 1 560 17 view .LVU120
 463 004c 4B70     		strb	r3, [r1, #1]
 464              	.L31:
 561:Core/Src/main.c **** 
 562:Core/Src/main.c **** }
 465              		.loc 1 562 1 view .LVU121
 466 004e 08BD     		pop	{r3, pc}
 467              	.L38:
 551:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 468              		.loc 1 551 3 is_stmt 1 view .LVU122
 551:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 469              		.loc 1 551 14 is_stmt 0 view .LVU123
 470 0050 044B     		ldr	r3, .L39+4
 471 0052 0022     		movs	r2, #0
 472 0054 1A70     		strb	r2, [r3]
 552:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 473              		.loc 1 552 6 is_stmt 1 view .LVU124
 474 0056 0521     		movs	r1, #5
 475 0058 0548     		ldr	r0, .L39+16
 476 005a FFF7FEFF 		bl	buffer_push
 477              	.LVL20:
 478 005e EBE7     		b	.L34
 479              	.L40:
 480              		.align	2
 481              	.L39:
 482 0060 00000000 		.word	.LANCHOR15
 483 0064 00000000 		.word	.LANCHOR16
 484 0068 00000000 		.word	.LANCHOR17
 485 006c 00000000 		.word	.LANCHOR18
 486 0070 00000000 		.word	.LANCHOR14
 487              		.cfi_endproc
 488              	.LFE137:
 490              		.section	.rodata.display_state_slave.str1.4,"aMS",%progbits,1
 491              		.align	2
 492              	.LC0:
 493 0000 44495343 		.ascii	"DISCONNECTED\000"
ARM GAS  /tmp/cc6zIoes.s 			page 20


 493      4F4E4E45 
 493      43544544 
 493      00
 494 000d 000000   		.align	2
 495              	.LC1:
 496 0010 434F4E4E 		.ascii	"CONNECTED\000"
 496      45435445 
 496      4400
 497 001a 0000     		.align	2
 498              	.LC2:
 499 001c 53312041 		.ascii	"S1 ADDR:\000"
 499      4444523A 
 499      00
 500 0025 000000   		.align	2
 501              	.LC3:
 502 0028 53322041 		.ascii	"S2 ADDR:\000"
 502      4444523A 
 502      00
 503 0031 000000   		.align	2
 504              	.LC4:
 505 0034 4E554D20 		.ascii	"NUM SLAVE: \000"
 505      534C4156 
 505      453A2000 
 506              		.align	2
 507              	.LC5:
 508 0040 53322D00 		.ascii	"S2-\000"
 509              		.align	2
 510              	.LC6:
 511 0044 53312D00 		.ascii	"S1-\000"
 512              		.section	.text.display_state_slave,"ax",%progbits
 513              		.align	1
 514              		.global	display_state_slave
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 519              	display_state_slave:
 520              	.LVL21:
 521              	.LFB139:
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** void RS485_Read_Message(void)
 565:Core/Src/main.c **** {
 566:Core/Src/main.c **** 	//digit2 = 10;
 567:Core/Src/main.c **** 	//uint8_t * digit;
 568:Core/Src/main.c **** 	uint8_t checksum = 0;
 569:Core/Src/main.c **** 
 570:Core/Src/main.c **** 	checksum = checksum^RX_msg[0]^RX_msg[1]^RX_msg[2];
 571:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 572:Core/Src/main.c **** 	{
 573:Core/Src/main.c **** 		return;
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** 	}
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** 	if ((RX_msg[0] == ID_list[SLAVE1]))
 578:Core/Src/main.c **** 	{
 579:Core/Src/main.c **** 		if (RX_msg[1] == FUNC_READ)
 580:Core/Src/main.c **** 		{	
 581:Core/Src/main.c **** 			digit1 = (RX_msg[2] - '0');
ARM GAS  /tmp/cc6zIoes.s 			page 21


 582:Core/Src/main.c **** 			
 583:Core/Src/main.c **** 			if (digit1!= old_digit1){
 584:Core/Src/main.c **** 				update_lcd(&digit1);
 585:Core/Src/main.c **** 				old_digit1 = digit1;
 586:Core/Src/main.c **** 			}
 587:Core/Src/main.c **** 			
 588:Core/Src/main.c **** 		}
 589:Core/Src/main.c **** 		else if (RX_msg[1] == FUNC_WRITE)
 590:Core/Src/main.c **** 		{
 591:Core/Src/main.c **** 			
 592:Core/Src/main.c **** 		}
 593:Core/Src/main.c **** 
 594:Core/Src/main.c **** 	}else if ((RX_msg[0] == ID_list[SLAVE2]))
 595:Core/Src/main.c **** 	{
 596:Core/Src/main.c **** 		if (RX_msg[1] == FUNC_READ)
 597:Core/Src/main.c **** 		{	
 598:Core/Src/main.c **** 			digit2 = (RX_msg[2] - '0');
 599:Core/Src/main.c **** 			
 600:Core/Src/main.c **** 			if(digit2!= old_digit2)
 601:Core/Src/main.c **** 			{
 602:Core/Src/main.c **** 				update_lcd(&digit2);
 603:Core/Src/main.c **** 				old_digit2 =digit2;
 604:Core/Src/main.c **** 			}
 605:Core/Src/main.c **** 			
 606:Core/Src/main.c **** 		}
 607:Core/Src/main.c **** 		else if (RX_msg[1] == FUNC_WRITE)
 608:Core/Src/main.c **** 		{
 609:Core/Src/main.c **** 			
 610:Core/Src/main.c **** 	}
 611:Core/Src/main.c **** 	}else if(RX_msg[0]==ID_list[0]){
 612:Core/Src/main.c **** 
 613:Core/Src/main.c **** 		if (RX_msg[1]== FUNC_FIND_SLAVE){
 614:Core/Src/main.c **** 
 615:Core/Src/main.c **** 			if(ID_list[SLAVE1]==0){
 616:Core/Src/main.c **** 				ID_list[SLAVE1]=RX_msg[2];
 617:Core/Src/main.c **** 				display_state_slave(SLAVE1, CONNECTED);
 618:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 619:Core/Src/main.c **** 				ID_list[SLAVE2]= RX_msg[2];
 620:Core/Src/main.c **** 				display_state_slave(SLAVE2, CONNECTED);
 621:Core/Src/main.c **** 				}
 622:Core/Src/main.c **** 			else{
 623:Core/Src/main.c **** 				return;
 624:Core/Src/main.c **** 			}
 625:Core/Src/main.c **** 			num_slave++;
 626:Core/Src/main.c **** 			update_lcd(&num_slave);
 627:Core/Src/main.c **** 			
 628:Core/Src/main.c **** 		}
 629:Core/Src/main.c **** 		
 630:Core/Src/main.c **** 	}
 631:Core/Src/main.c **** 	else{
 632:Core/Src/main.c **** 		return;
 633:Core/Src/main.c **** 	}
 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** 	
 636:Core/Src/main.c **** }
 637:Core/Src/main.c **** 
 638:Core/Src/main.c **** void display_state_slave(uint8_t slave, uint8_t state){
ARM GAS  /tmp/cc6zIoes.s 			page 22


 522              		.loc 1 638 55 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		.loc 1 638 55 is_stmt 0 view .LVU126
 527 0000 70B5     		push	{r4, r5, r6, lr}
 528              	.LCFI3:
 529              		.cfi_def_cfa_offset 16
 530              		.cfi_offset 4, -16
 531              		.cfi_offset 5, -12
 532              		.cfi_offset 6, -8
 533              		.cfi_offset 14, -4
 534 0002 0446     		mov	r4, r0
 535 0004 0D46     		mov	r5, r1
 639:Core/Src/main.c **** 	
 640:Core/Src/main.c **** 	
 641:Core/Src/main.c **** 	lcd_clear();
 536              		.loc 1 641 2 is_stmt 1 view .LVU127
 537 0006 FFF7FEFF 		bl	lcd_clear
 538              	.LVL22:
 642:Core/Src/main.c **** 	
 643:Core/Src/main.c **** 	if (state == DISCONNECTED)
 539              		.loc 1 643 2 view .LVU128
 540              		.loc 1 643 5 is_stmt 0 view .LVU129
 541 000a 002D     		cmp	r5, #0
 542 000c 7DD1     		bne	.L42
 644:Core/Src/main.c **** 	{
 645:Core/Src/main.c **** 			lcd_set_pos(0, 0x1);
 543              		.loc 1 645 4 is_stmt 1 view .LVU130
 544 000e 0121     		movs	r1, #1
 545 0010 0020     		movs	r0, #0
 546 0012 FFF7FEFF 		bl	lcd_set_pos
 547              	.LVL23:
 646:Core/Src/main.c **** 			lcd_write_string("DISCONNECTED");
 548              		.loc 1 646 4 view .LVU131
 549 0016 6148     		ldr	r0, .L49
 550 0018 FFF7FEFF 		bl	lcd_write_string
 551              	.LVL24:
 552              	.L43:
 647:Core/Src/main.c **** 	}
 648:Core/Src/main.c **** 	else{
 649:Core/Src/main.c **** 			lcd_set_pos(0, 0x3);
 650:Core/Src/main.c **** 			lcd_write_string("CONNECTED");
 651:Core/Src/main.c **** 	}
 652:Core/Src/main.c **** 	
 653:Core/Src/main.c **** 	if (slave ==SLAVE1)
 553              		.loc 1 653 2 view .LVU132
 554              		.loc 1 653 5 is_stmt 0 view .LVU133
 555 001c 012C     		cmp	r4, #1
 556 001e 7CD0     		beq	.L47
 654:Core/Src/main.c **** 	{
 655:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 656:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 657:Core/Src/main.c **** 	
 658:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 659:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 660:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
ARM GAS  /tmp/cc6zIoes.s 			page 23


 661:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 662:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 663:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 664:Core/Src/main.c **** 	}
 665:Core/Src/main.c **** 	else if(slave == SLAVE2){
 557              		.loc 1 665 7 is_stmt 1 view .LVU134
 558              		.loc 1 665 9 is_stmt 0 view .LVU135
 559 0020 022C     		cmp	r4, #2
 560 0022 00F09A80 		beq	.L48
 561              	.L45:
 666:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 667:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 668:Core/Src/main.c **** 		
 669:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 670:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 671:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 672:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 673:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 674:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 675:Core/Src/main.c **** 	}
 676:Core/Src/main.c **** 
 677:Core/Src/main.c **** 	HAL_Delay(1000);
 562              		.loc 1 677 2 is_stmt 1 view .LVU136
 563 0026 4FF47A70 		mov	r0, #1000
 564 002a FFF7FEFF 		bl	HAL_Delay
 565              	.LVL25:
 678:Core/Src/main.c **** 	
 679:Core/Src/main.c **** 	lcd_clear();
 566              		.loc 1 679 2 view .LVU137
 567 002e FFF7FEFF 		bl	lcd_clear
 568              	.LVL26:
 680:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 569              		.loc 1 680 2 view .LVU138
 570 0032 0021     		movs	r1, #0
 571 0034 0846     		mov	r0, r1
 572 0036 FFF7FEFF 		bl	lcd_set_pos
 573              	.LVL27:
 681:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 574              		.loc 1 681 2 view .LVU139
 575 003a 5948     		ldr	r0, .L49+4
 576 003c FFF7FEFF 		bl	lcd_write_string
 577              	.LVL28:
 682:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 578              		.loc 1 682 2 view .LVU140
 579 0040 0C21     		movs	r1, #12
 580 0042 0020     		movs	r0, #0
 581 0044 FFF7FEFF 		bl	lcd_set_pos
 582              	.LVL29:
 683:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 583              		.loc 1 683 2 view .LVU141
 584 0048 564C     		ldr	r4, .L49+8
 585 004a 574B     		ldr	r3, .L49+12
 586 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 587 004e E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 588 0050 FFF7FEFF 		bl	lcd_data
 589              	.LVL30:
 684:Core/Src/main.c **** 	lcd_set_pos(1, 0);
ARM GAS  /tmp/cc6zIoes.s 			page 24


 590              		.loc 1 684 2 view .LVU142
 591 0054 0021     		movs	r1, #0
 592 0056 0120     		movs	r0, #1
 593 0058 FFF7FEFF 		bl	lcd_set_pos
 594              	.LVL31:
 685:Core/Src/main.c **** 	lcd_write_string("S2-");
 595              		.loc 1 685 2 view .LVU143
 596 005c 5348     		ldr	r0, .L49+16
 597 005e FFF7FEFF 		bl	lcd_write_string
 598              	.LVL32:
 686:Core/Src/main.c **** 
 687:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 599              		.loc 1 687 2 view .LVU144
 600 0062 0321     		movs	r1, #3
 601 0064 0120     		movs	r0, #1
 602 0066 FFF7FEFF 		bl	lcd_set_pos
 603              	.LVL33:
 688:Core/Src/main.c **** 	temp = ID_list[SLAVE2]/16;
 604              		.loc 1 688 2 view .LVU145
 605              		.loc 1 688 16 is_stmt 0 view .LVU146
 606 006a 514E     		ldr	r6, .L49+20
 607 006c B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 608              		.loc 1 688 7 view .LVU147
 609 006e 1B09     		lsrs	r3, r3, #4
 610 0070 504D     		ldr	r5, .L49+24
 611 0072 2B70     		strb	r3, [r5]
 689:Core/Src/main.c **** 	lcd_data(digit_table[temp]);
 612              		.loc 1 689 2 is_stmt 1 view .LVU148
 613 0074 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 614 0076 FFF7FEFF 		bl	lcd_data
 615              	.LVL34:
 690:Core/Src/main.c **** 	lcd_set_pos(1, 0x4);
 616              		.loc 1 690 2 view .LVU149
 617 007a 0421     		movs	r1, #4
 618 007c 0120     		movs	r0, #1
 619 007e FFF7FEFF 		bl	lcd_set_pos
 620              	.LVL35:
 691:Core/Src/main.c **** 	temp = ID_list[SLAVE2]%16;
 621              		.loc 1 691 2 view .LVU150
 622              		.loc 1 691 16 is_stmt 0 view .LVU151
 623 0082 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 624              		.loc 1 691 24 view .LVU152
 625 0084 03F00F03 		and	r3, r3, #15
 626              		.loc 1 691 7 view .LVU153
 627 0088 2B70     		strb	r3, [r5]
 692:Core/Src/main.c **** 	lcd_data(digit_table[temp]);
 628              		.loc 1 692 2 is_stmt 1 view .LVU154
 629 008a E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 630 008c FFF7FEFF 		bl	lcd_data
 631              	.LVL36:
 693:Core/Src/main.c **** 	lcd_set_pos(1, 0x5);
 632              		.loc 1 693 2 view .LVU155
 633 0090 0521     		movs	r1, #5
 634 0092 0120     		movs	r0, #1
 635 0094 FFF7FEFF 		bl	lcd_set_pos
 636              	.LVL37:
 694:Core/Src/main.c **** 	lcd_data(':');
ARM GAS  /tmp/cc6zIoes.s 			page 25


 637              		.loc 1 694 2 view .LVU156
 638 0098 3A20     		movs	r0, #58
 639 009a FFF7FEFF 		bl	lcd_data
 640              	.LVL38:
 695:Core/Src/main.c **** 	lcd_set_pos(1, 0x6);
 641              		.loc 1 695 2 view .LVU157
 642 009e 0621     		movs	r1, #6
 643 00a0 0120     		movs	r0, #1
 644 00a2 FFF7FEFF 		bl	lcd_set_pos
 645              	.LVL39:
 696:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 646              		.loc 1 696 2 view .LVU158
 647 00a6 444B     		ldr	r3, .L49+28
 648 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 649 00aa E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 650 00ac FFF7FEFF 		bl	lcd_data
 651              	.LVL40:
 697:Core/Src/main.c **** 
 698:Core/Src/main.c **** 
 699:Core/Src/main.c **** 	lcd_set_pos(1, 0x9);
 652              		.loc 1 699 2 view .LVU159
 653 00b0 0921     		movs	r1, #9
 654 00b2 0120     		movs	r0, #1
 655 00b4 FFF7FEFF 		bl	lcd_set_pos
 656              	.LVL41:
 700:Core/Src/main.c **** 	lcd_write_string("S1-");
 657              		.loc 1 700 2 view .LVU160
 658 00b8 4048     		ldr	r0, .L49+32
 659 00ba FFF7FEFF 		bl	lcd_write_string
 660              	.LVL42:
 701:Core/Src/main.c **** 
 702:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 661              		.loc 1 702 2 view .LVU161
 662 00be 0C21     		movs	r1, #12
 663 00c0 0120     		movs	r0, #1
 664 00c2 FFF7FEFF 		bl	lcd_set_pos
 665              	.LVL43:
 703:Core/Src/main.c **** 	temp = ID_list[SLAVE1]/16;
 666              		.loc 1 703 2 view .LVU162
 667              		.loc 1 703 16 is_stmt 0 view .LVU163
 668 00c6 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 669              		.loc 1 703 7 view .LVU164
 670 00c8 1B09     		lsrs	r3, r3, #4
 671 00ca 2B70     		strb	r3, [r5]
 704:Core/Src/main.c **** 	lcd_data(digit_table[temp]);
 672              		.loc 1 704 2 is_stmt 1 view .LVU165
 673 00cc E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 674 00ce FFF7FEFF 		bl	lcd_data
 675              	.LVL44:
 705:Core/Src/main.c **** 	lcd_set_pos(1, 0xD);
 676              		.loc 1 705 2 view .LVU166
 677 00d2 0D21     		movs	r1, #13
 678 00d4 0120     		movs	r0, #1
 679 00d6 FFF7FEFF 		bl	lcd_set_pos
 680              	.LVL45:
 706:Core/Src/main.c **** 	temp = ID_list[SLAVE1]%16;
 681              		.loc 1 706 2 view .LVU167
ARM GAS  /tmp/cc6zIoes.s 			page 26


 682              		.loc 1 706 16 is_stmt 0 view .LVU168
 683 00da 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 684              		.loc 1 706 24 view .LVU169
 685 00dc 03F00F03 		and	r3, r3, #15
 686              		.loc 1 706 7 view .LVU170
 687 00e0 2B70     		strb	r3, [r5]
 707:Core/Src/main.c **** 	lcd_data(digit_table[temp]);
 688              		.loc 1 707 2 is_stmt 1 view .LVU171
 689 00e2 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 690 00e4 FFF7FEFF 		bl	lcd_data
 691              	.LVL46:
 708:Core/Src/main.c **** 	lcd_set_pos(1, 0xE);
 692              		.loc 1 708 2 view .LVU172
 693 00e8 0E21     		movs	r1, #14
 694 00ea 0120     		movs	r0, #1
 695 00ec FFF7FEFF 		bl	lcd_set_pos
 696              	.LVL47:
 709:Core/Src/main.c **** 	lcd_data(':');
 697              		.loc 1 709 2 view .LVU173
 698 00f0 3A20     		movs	r0, #58
 699 00f2 FFF7FEFF 		bl	lcd_data
 700              	.LVL48:
 710:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 701              		.loc 1 710 2 view .LVU174
 702 00f6 0F21     		movs	r1, #15
 703 00f8 0120     		movs	r0, #1
 704 00fa FFF7FEFF 		bl	lcd_set_pos
 705              	.LVL49:
 711:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 706              		.loc 1 711 2 view .LVU175
 707 00fe 304B     		ldr	r3, .L49+36
 708 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 709 0102 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 710 0104 FFF7FEFF 		bl	lcd_data
 711              	.LVL50:
 712:Core/Src/main.c **** }
 712              		.loc 1 712 1 is_stmt 0 view .LVU176
 713 0108 70BD     		pop	{r4, r5, r6, pc}
 714              	.L42:
 649:Core/Src/main.c **** 			lcd_write_string("CONNECTED");
 715              		.loc 1 649 4 is_stmt 1 view .LVU177
 716 010a 0321     		movs	r1, #3
 717 010c 0020     		movs	r0, #0
 718 010e FFF7FEFF 		bl	lcd_set_pos
 719              	.LVL51:
 650:Core/Src/main.c **** 	}
 720              		.loc 1 650 4 view .LVU178
 721 0112 2C48     		ldr	r0, .L49+40
 722 0114 FFF7FEFF 		bl	lcd_write_string
 723              	.LVL52:
 724 0118 80E7     		b	.L43
 725              	.L47:
 655:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 726              		.loc 1 655 3 view .LVU179
 727 011a 0221     		movs	r1, #2
 728 011c 0120     		movs	r0, #1
 729 011e FFF7FEFF 		bl	lcd_set_pos
ARM GAS  /tmp/cc6zIoes.s 			page 27


 730              	.LVL53:
 656:Core/Src/main.c **** 	
 731              		.loc 1 656 3 view .LVU180
 732 0122 2948     		ldr	r0, .L49+44
 733 0124 FFF7FEFF 		bl	lcd_write_string
 734              	.LVL54:
 658:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 735              		.loc 1 658 3 view .LVU181
 736 0128 0C21     		movs	r1, #12
 737 012a 0120     		movs	r0, #1
 738 012c FFF7FEFF 		bl	lcd_set_pos
 739              	.LVL55:
 659:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 740              		.loc 1 659 3 view .LVU182
 659:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 741              		.loc 1 659 17 is_stmt 0 view .LVU183
 742 0130 1F4E     		ldr	r6, .L49+20
 743 0132 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 659:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 744              		.loc 1 659 8 view .LVU184
 745 0134 1B09     		lsrs	r3, r3, #4
 746 0136 1F4D     		ldr	r5, .L49+24
 747 0138 2B70     		strb	r3, [r5]
 660:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 748              		.loc 1 660 3 is_stmt 1 view .LVU185
 749 013a 1A4C     		ldr	r4, .L49+8
 750 013c E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 751 013e FFF7FEFF 		bl	lcd_data
 752              	.LVL56:
 661:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 753              		.loc 1 661 3 view .LVU186
 754 0142 0D21     		movs	r1, #13
 755 0144 0120     		movs	r0, #1
 756 0146 FFF7FEFF 		bl	lcd_set_pos
 757              	.LVL57:
 662:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 758              		.loc 1 662 3 view .LVU187
 662:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 759              		.loc 1 662 17 is_stmt 0 view .LVU188
 760 014a 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 662:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 761              		.loc 1 662 25 view .LVU189
 762 014c 03F00F03 		and	r3, r3, #15
 662:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 763              		.loc 1 662 8 view .LVU190
 764 0150 2B70     		strb	r3, [r5]
 663:Core/Src/main.c **** 	}
 765              		.loc 1 663 3 is_stmt 1 view .LVU191
 766 0152 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 767 0154 FFF7FEFF 		bl	lcd_data
 768              	.LVL58:
 769 0158 65E7     		b	.L45
 770              	.L48:
 666:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 771              		.loc 1 666 3 view .LVU192
 772 015a 0221     		movs	r1, #2
 773 015c 0120     		movs	r0, #1
ARM GAS  /tmp/cc6zIoes.s 			page 28


 774 015e FFF7FEFF 		bl	lcd_set_pos
 775              	.LVL59:
 667:Core/Src/main.c **** 		
 776              		.loc 1 667 3 view .LVU193
 777 0162 1A48     		ldr	r0, .L49+48
 778 0164 FFF7FEFF 		bl	lcd_write_string
 779              	.LVL60:
 669:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 780              		.loc 1 669 3 view .LVU194
 781 0168 0C21     		movs	r1, #12
 782 016a 0120     		movs	r0, #1
 783 016c FFF7FEFF 		bl	lcd_set_pos
 784              	.LVL61:
 670:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 785              		.loc 1 670 3 view .LVU195
 670:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 786              		.loc 1 670 17 is_stmt 0 view .LVU196
 787 0170 0F4E     		ldr	r6, .L49+20
 788 0172 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 670:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 789              		.loc 1 670 8 view .LVU197
 790 0174 1B09     		lsrs	r3, r3, #4
 791 0176 0F4D     		ldr	r5, .L49+24
 792 0178 2B70     		strb	r3, [r5]
 671:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 793              		.loc 1 671 3 is_stmt 1 view .LVU198
 794 017a 0A4C     		ldr	r4, .L49+8
 795 017c E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 796 017e FFF7FEFF 		bl	lcd_data
 797              	.LVL62:
 672:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 798              		.loc 1 672 3 view .LVU199
 799 0182 0D21     		movs	r1, #13
 800 0184 0120     		movs	r0, #1
 801 0186 FFF7FEFF 		bl	lcd_set_pos
 802              	.LVL63:
 673:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 803              		.loc 1 673 3 view .LVU200
 673:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 804              		.loc 1 673 17 is_stmt 0 view .LVU201
 805 018a B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 673:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 806              		.loc 1 673 25 view .LVU202
 807 018c 03F00F03 		and	r3, r3, #15
 673:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 808              		.loc 1 673 8 view .LVU203
 809 0190 2B70     		strb	r3, [r5]
 674:Core/Src/main.c **** 	}
 810              		.loc 1 674 3 is_stmt 1 view .LVU204
 811 0192 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 812 0194 FFF7FEFF 		bl	lcd_data
 813              	.LVL64:
 814 0198 45E7     		b	.L45
 815              	.L50:
 816 019a 00BF     		.align	2
 817              	.L49:
 818 019c 00000000 		.word	.LC0
ARM GAS  /tmp/cc6zIoes.s 			page 29


 819 01a0 34000000 		.word	.LC4
 820 01a4 00000000 		.word	.LANCHOR1
 821 01a8 00000000 		.word	.LANCHOR3
 822 01ac 40000000 		.word	.LC5
 823 01b0 00000000 		.word	.LANCHOR19
 824 01b4 00000000 		.word	.LANCHOR20
 825 01b8 00000000 		.word	.LANCHOR0
 826 01bc 44000000 		.word	.LC6
 827 01c0 00000000 		.word	.LANCHOR2
 828 01c4 10000000 		.word	.LC1
 829 01c8 1C000000 		.word	.LC2
 830 01cc 28000000 		.word	.LC3
 831              		.cfi_endproc
 832              	.LFE139:
 834              		.section	.text.check_slave,"ax",%progbits
 835              		.align	1
 836              		.global	check_slave
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 841              	check_slave:
 842              	.LFB136:
 517:Core/Src/main.c **** 
 843              		.loc 1 517 23 view -0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847 0000 08B5     		push	{r3, lr}
 848              	.LCFI4:
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 3, -8
 851              		.cfi_offset 14, -4
 519:Core/Src/main.c **** 	
 852              		.loc 1 519 2 view .LVU206
 519:Core/Src/main.c **** 	
 853              		.loc 1 519 13 is_stmt 0 view .LVU207
 854 0002 184B     		ldr	r3, .L58
 855 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 519:Core/Src/main.c **** 	
 856              		.loc 1 519 25 view .LVU208
 857 0006 184A     		ldr	r2, .L58+4
 858 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 519:Core/Src/main.c **** 	
 859              		.loc 1 519 5 view .LVU209
 860 000a 9342     		cmp	r3, r2
 861 000c 12D0     		beq	.L51
 519:Core/Src/main.c **** 	
 862              		.loc 1 519 29 discriminator 2 view .LVU210
 863 000e 8BB1     		cbz	r3, .L51
 519:Core/Src/main.c **** 	
 864              		.loc 1 519 54 discriminator 4 view .LVU211
 865 0010 144A     		ldr	r2, .L58
 866 0012 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 519:Core/Src/main.c **** 	
 867              		.loc 1 519 45 discriminator 4 view .LVU212
 868 0014 F12A     		cmp	r2, #241
 869 0016 0DD0     		beq	.L51
ARM GAS  /tmp/cc6zIoes.s 			page 30


 521:Core/Src/main.c **** 		display_state_slave(SLAVE1, DISCONNECTED);
 870              		.loc 1 521 2 is_stmt 1 view .LVU213
 521:Core/Src/main.c **** 		display_state_slave(SLAVE1, DISCONNECTED);
 871              		.loc 1 521 24 is_stmt 0 view .LVU214
 872 0018 134A     		ldr	r2, .L58+4
 873 001a 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 521:Core/Src/main.c **** 		display_state_slave(SLAVE1, DISCONNECTED);
 874              		.loc 1 521 5 view .LVU215
 875 001c 9342     		cmp	r3, r2
 876 001e 0AD0     		beq	.L56
 525:Core/Src/main.c **** 		display_state_slave(SLAVE2, DISCONNECTED);
 877              		.loc 1 525 8 is_stmt 1 view .LVU216
 525:Core/Src/main.c **** 		display_state_slave(SLAVE2, DISCONNECTED);
 878              		.loc 1 525 31 is_stmt 0 view .LVU217
 879 0020 114A     		ldr	r2, .L58+4
 880 0022 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 525:Core/Src/main.c **** 		display_state_slave(SLAVE2, DISCONNECTED);
 881              		.loc 1 525 11 view .LVU218
 882 0024 9342     		cmp	r3, r2
 883 0026 11D0     		beq	.L57
 884              	.L54:
 531:Core/Src/main.c **** 	update_lcd(&num_slave);
 885              		.loc 1 531 2 is_stmt 1 view .LVU219
 531:Core/Src/main.c **** 	update_lcd(&num_slave);
 886              		.loc 1 531 11 is_stmt 0 view .LVU220
 887 0028 1048     		ldr	r0, .L58+8
 888 002a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 889 002c 013B     		subs	r3, r3, #1
 890 002e 0370     		strb	r3, [r0]
 532:Core/Src/main.c **** 
 891              		.loc 1 532 2 is_stmt 1 view .LVU221
 892 0030 FFF7FEFF 		bl	update_lcd
 893              	.LVL65:
 894              	.L51:
 535:Core/Src/main.c **** 
 895              		.loc 1 535 1 is_stmt 0 view .LVU222
 896 0034 08BD     		pop	{r3, pc}
 897              	.L56:
 522:Core/Src/main.c **** 		ID_list[SLAVE1] = 0;
 898              		.loc 1 522 3 is_stmt 1 view .LVU223
 899 0036 0021     		movs	r1, #0
 900 0038 0120     		movs	r0, #1
 901 003a FFF7FEFF 		bl	display_state_slave
 902              	.LVL66:
 523:Core/Src/main.c **** 		digit1 = 16;
 903              		.loc 1 523 3 view .LVU224
 523:Core/Src/main.c **** 		digit1 = 16;
 904              		.loc 1 523 19 is_stmt 0 view .LVU225
 905 003e 0A4B     		ldr	r3, .L58+4
 906 0040 0022     		movs	r2, #0
 907 0042 5A70     		strb	r2, [r3, #1]
 524:Core/Src/main.c **** 	}else if (TX_msg[1]== ID_list[SLAVE2]){
 908              		.loc 1 524 3 is_stmt 1 view .LVU226
 524:Core/Src/main.c **** 	}else if (TX_msg[1]== ID_list[SLAVE2]){
 909              		.loc 1 524 10 is_stmt 0 view .LVU227
 910 0044 0A4B     		ldr	r3, .L58+12
 911 0046 1022     		movs	r2, #16
ARM GAS  /tmp/cc6zIoes.s 			page 31


 912 0048 1A70     		strb	r2, [r3]
 913 004a EDE7     		b	.L54
 914              	.L57:
 526:Core/Src/main.c **** 		ID_list[SLAVE2]	= 0;
 915              		.loc 1 526 3 is_stmt 1 view .LVU228
 916 004c 0021     		movs	r1, #0
 917 004e 0220     		movs	r0, #2
 918 0050 FFF7FEFF 		bl	display_state_slave
 919              	.LVL67:
 527:Core/Src/main.c **** 		digit2 =16;
 920              		.loc 1 527 3 view .LVU229
 527:Core/Src/main.c **** 		digit2 =16;
 921              		.loc 1 527 19 is_stmt 0 view .LVU230
 922 0054 044B     		ldr	r3, .L58+4
 923 0056 0022     		movs	r2, #0
 924 0058 9A70     		strb	r2, [r3, #2]
 528:Core/Src/main.c **** 	}
 925              		.loc 1 528 3 is_stmt 1 view .LVU231
 528:Core/Src/main.c **** 	}
 926              		.loc 1 528 10 is_stmt 0 view .LVU232
 927 005a 064B     		ldr	r3, .L58+16
 928 005c 1022     		movs	r2, #16
 929 005e 1A70     		strb	r2, [r3]
 930 0060 E2E7     		b	.L54
 931              	.L59:
 932 0062 00BF     		.align	2
 933              	.L58:
 934 0064 00000000 		.word	.LANCHOR21
 935 0068 00000000 		.word	.LANCHOR19
 936 006c 00000000 		.word	.LANCHOR3
 937 0070 00000000 		.word	.LANCHOR2
 938 0074 00000000 		.word	.LANCHOR0
 939              		.cfi_endproc
 940              	.LFE136:
 942              		.section	.text.RS485_Read_Message,"ax",%progbits
 943              		.align	1
 944              		.global	RS485_Read_Message
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 949              	RS485_Read_Message:
 950              	.LFB138:
 565:Core/Src/main.c **** 	//digit2 = 10;
 951              		.loc 1 565 1 is_stmt 1 view -0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 568:Core/Src/main.c **** 
 955              		.loc 1 568 2 view .LVU234
 956              	.LVL68:
 570:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 957              		.loc 1 570 2 view .LVU235
 570:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 958              		.loc 1 570 28 is_stmt 0 view .LVU236
 959 0000 2C4B     		ldr	r3, .L74
 960 0002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 570:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
ARM GAS  /tmp/cc6zIoes.s 			page 32


 961              		.loc 1 570 38 view .LVU237
 962 0004 93F801C0 		ldrb	ip, [r3, #1]	@ zero_extendqisi2
 570:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 963              		.loc 1 570 48 view .LVU238
 964 0008 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 570:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 965              		.loc 1 570 11 view .LVU239
 966 000a 81EA0C02 		eor	r2, r1, ip
 967 000e 4240     		eors	r2, r2, r0
 968              	.LVL69:
 571:Core/Src/main.c **** 	{
 969              		.loc 1 571 2 is_stmt 1 view .LVU240
 571:Core/Src/main.c **** 	{
 970              		.loc 1 571 25 is_stmt 0 view .LVU241
 971 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 571:Core/Src/main.c **** 	{
 972              		.loc 1 571 5 view .LVU242
 973 0012 9342     		cmp	r3, r2
 974 0014 4CD1     		bne	.L67
 565:Core/Src/main.c **** 	//digit2 = 10;
 975              		.loc 1 565 1 view .LVU243
 976 0016 10B5     		push	{r4, lr}
 977              	.LCFI5:
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 4, -8
 980              		.cfi_offset 14, -4
 577:Core/Src/main.c **** 	{
 981              		.loc 1 577 2 is_stmt 1 view .LVU244
 577:Core/Src/main.c **** 	{
 982              		.loc 1 577 27 is_stmt 0 view .LVU245
 983 0018 274B     		ldr	r3, .L74+4
 984 001a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 577:Core/Src/main.c **** 	{
 985              		.loc 1 577 5 view .LVU246
 986 001c 9942     		cmp	r1, r3
 987 001e 14D0     		beq	.L70
 594:Core/Src/main.c **** 	{
 988              		.loc 1 594 8 is_stmt 1 view .LVU247
 594:Core/Src/main.c **** 	{
 989              		.loc 1 594 33 is_stmt 0 view .LVU248
 990 0020 254A     		ldr	r2, .L74+4
 991              	.LVL70:
 594:Core/Src/main.c **** 	{
 992              		.loc 1 594 33 view .LVU249
 993 0022 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 594:Core/Src/main.c **** 	{
 994              		.loc 1 594 11 view .LVU250
 995 0024 9142     		cmp	r1, r2
 996 0026 24D0     		beq	.L71
 611:Core/Src/main.c **** 
 997              		.loc 1 611 8 is_stmt 1 view .LVU251
 611:Core/Src/main.c **** 
 998              		.loc 1 611 29 is_stmt 0 view .LVU252
 999 0028 234C     		ldr	r4, .L74+4
 1000 002a 94F800E0 		ldrb	lr, [r4]	@ zero_extendqisi2
 611:Core/Src/main.c **** 
 1001              		.loc 1 611 10 view .LVU253
ARM GAS  /tmp/cc6zIoes.s 			page 33


 1002 002e 7145     		cmp	r1, lr
 1003 0030 0ED1     		bne	.L60
 613:Core/Src/main.c **** 
 1004              		.loc 1 613 3 is_stmt 1 view .LVU254
 613:Core/Src/main.c **** 
 1005              		.loc 1 613 6 is_stmt 0 view .LVU255
 1006 0032 BCF1F40F 		cmp	ip, #244
 1007 0036 0BD1     		bne	.L60
 615:Core/Src/main.c **** 				ID_list[SLAVE1]=RX_msg[2];
 1008              		.loc 1 615 4 is_stmt 1 view .LVU256
 615:Core/Src/main.c **** 				ID_list[SLAVE1]=RX_msg[2];
 1009              		.loc 1 615 6 is_stmt 0 view .LVU257
 1010 0038 73B3     		cbz	r3, .L72
 618:Core/Src/main.c **** 				ID_list[SLAVE2]= RX_msg[2];
 1011              		.loc 1 618 10 is_stmt 1 view .LVU258
 618:Core/Src/main.c **** 				ID_list[SLAVE2]= RX_msg[2];
 1012              		.loc 1 618 13 is_stmt 0 view .LVU259
 1013 003a 4AB9     		cbnz	r2, .L60
 619:Core/Src/main.c **** 				display_state_slave(SLAVE2, CONNECTED);
 1014              		.loc 1 619 5 is_stmt 1 view .LVU260
 619:Core/Src/main.c **** 				display_state_slave(SLAVE2, CONNECTED);
 1015              		.loc 1 619 20 is_stmt 0 view .LVU261
 1016 003c 1E4B     		ldr	r3, .L74+4
 1017 003e 9870     		strb	r0, [r3, #2]
 620:Core/Src/main.c **** 				}
 1018              		.loc 1 620 5 is_stmt 1 view .LVU262
 1019 0040 0121     		movs	r1, #1
 1020              	.LVL71:
 620:Core/Src/main.c **** 				}
 1021              		.loc 1 620 5 is_stmt 0 view .LVU263
 1022 0042 0220     		movs	r0, #2
 1023              	.LVL72:
 620:Core/Src/main.c **** 				}
 1024              		.loc 1 620 5 view .LVU264
 1025 0044 FFF7FEFF 		bl	display_state_slave
 1026              	.LVL73:
 620:Core/Src/main.c **** 				}
 1027              		.loc 1 620 5 view .LVU265
 1028 0048 2BE0     		b	.L65
 1029              	.LVL74:
 1030              	.L70:
 579:Core/Src/main.c **** 		{	
 1031              		.loc 1 579 3 is_stmt 1 view .LVU266
 579:Core/Src/main.c **** 		{	
 1032              		.loc 1 579 6 is_stmt 0 view .LVU267
 1033 004a BCF1F20F 		cmp	ip, #242
 1034 004e 00D0     		beq	.L73
 1035              	.LVL75:
 1036              	.L60:
 636:Core/Src/main.c **** 
 1037              		.loc 1 636 1 view .LVU268
 1038 0050 10BD     		pop	{r4, pc}
 1039              	.LVL76:
 1040              	.L73:
 581:Core/Src/main.c **** 			
 1041              		.loc 1 581 4 is_stmt 1 view .LVU269
 581:Core/Src/main.c **** 			
ARM GAS  /tmp/cc6zIoes.s 			page 34


 1042              		.loc 1 581 24 is_stmt 0 view .LVU270
 1043 0052 3038     		subs	r0, r0, #48
 1044 0054 C0B2     		uxtb	r0, r0
 581:Core/Src/main.c **** 			
 1045              		.loc 1 581 11 view .LVU271
 1046 0056 194B     		ldr	r3, .L74+8
 1047 0058 1870     		strb	r0, [r3]
 583:Core/Src/main.c **** 				update_lcd(&digit1);
 1048              		.loc 1 583 4 is_stmt 1 view .LVU272
 583:Core/Src/main.c **** 				update_lcd(&digit1);
 1049              		.loc 1 583 14 is_stmt 0 view .LVU273
 1050 005a 194B     		ldr	r3, .L74+12
 1051 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 583:Core/Src/main.c **** 				update_lcd(&digit1);
 1052              		.loc 1 583 7 view .LVU274
 1053 005e 9842     		cmp	r0, r3
 1054 0060 F6D0     		beq	.L60
 584:Core/Src/main.c **** 				old_digit1 = digit1;
 1055              		.loc 1 584 5 is_stmt 1 view .LVU275
 1056 0062 164C     		ldr	r4, .L74+8
 1057 0064 2046     		mov	r0, r4
 1058 0066 FFF7FEFF 		bl	update_lcd
 1059              	.LVL77:
 585:Core/Src/main.c **** 			}
 1060              		.loc 1 585 5 view .LVU276
 585:Core/Src/main.c **** 			}
 1061              		.loc 1 585 16 is_stmt 0 view .LVU277
 1062 006a 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1063 006c 144B     		ldr	r3, .L74+12
 1064 006e 1A70     		strb	r2, [r3]
 1065 0070 EEE7     		b	.L60
 1066              	.LVL78:
 1067              	.L71:
 596:Core/Src/main.c **** 		{	
 1068              		.loc 1 596 3 is_stmt 1 view .LVU278
 596:Core/Src/main.c **** 		{	
 1069              		.loc 1 596 6 is_stmt 0 view .LVU279
 1070 0072 BCF1F20F 		cmp	ip, #242
 1071 0076 EBD1     		bne	.L60
 598:Core/Src/main.c **** 			
 1072              		.loc 1 598 4 is_stmt 1 view .LVU280
 598:Core/Src/main.c **** 			
 1073              		.loc 1 598 24 is_stmt 0 view .LVU281
 1074 0078 3038     		subs	r0, r0, #48
 1075              	.LVL79:
 598:Core/Src/main.c **** 			
 1076              		.loc 1 598 24 view .LVU282
 1077 007a C0B2     		uxtb	r0, r0
 1078              	.LVL80:
 598:Core/Src/main.c **** 			
 1079              		.loc 1 598 11 view .LVU283
 1080 007c 114B     		ldr	r3, .L74+16
 1081 007e 1870     		strb	r0, [r3]
 600:Core/Src/main.c **** 			{
 1082              		.loc 1 600 4 is_stmt 1 view .LVU284
 600:Core/Src/main.c **** 			{
 1083              		.loc 1 600 13 is_stmt 0 view .LVU285
ARM GAS  /tmp/cc6zIoes.s 			page 35


 1084 0080 114B     		ldr	r3, .L74+20
 1085 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 600:Core/Src/main.c **** 			{
 1086              		.loc 1 600 6 view .LVU286
 1087 0084 9842     		cmp	r0, r3
 1088 0086 E3D0     		beq	.L60
 602:Core/Src/main.c **** 				old_digit2 =digit2;
 1089              		.loc 1 602 5 is_stmt 1 view .LVU287
 1090 0088 0E4C     		ldr	r4, .L74+16
 1091 008a 2046     		mov	r0, r4
 1092 008c FFF7FEFF 		bl	update_lcd
 1093              	.LVL81:
 603:Core/Src/main.c **** 			}
 1094              		.loc 1 603 5 view .LVU288
 603:Core/Src/main.c **** 			}
 1095              		.loc 1 603 16 is_stmt 0 view .LVU289
 1096 0090 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1097 0092 0D4B     		ldr	r3, .L74+20
 1098 0094 1A70     		strb	r2, [r3]
 1099 0096 DBE7     		b	.L60
 1100              	.LVL82:
 1101              	.L72:
 616:Core/Src/main.c **** 				display_state_slave(SLAVE1, CONNECTED);
 1102              		.loc 1 616 5 is_stmt 1 view .LVU290
 616:Core/Src/main.c **** 				display_state_slave(SLAVE1, CONNECTED);
 1103              		.loc 1 616 20 is_stmt 0 view .LVU291
 1104 0098 6070     		strb	r0, [r4, #1]
 617:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 1105              		.loc 1 617 5 is_stmt 1 view .LVU292
 1106 009a 0121     		movs	r1, #1
 1107              	.LVL83:
 617:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 1108              		.loc 1 617 5 is_stmt 0 view .LVU293
 1109 009c 0846     		mov	r0, r1
 1110              	.LVL84:
 617:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 1111              		.loc 1 617 5 view .LVU294
 1112 009e FFF7FEFF 		bl	display_state_slave
 1113              	.LVL85:
 1114              	.L65:
 625:Core/Src/main.c **** 			update_lcd(&num_slave);
 1115              		.loc 1 625 4 is_stmt 1 view .LVU295
 625:Core/Src/main.c **** 			update_lcd(&num_slave);
 1116              		.loc 1 625 13 is_stmt 0 view .LVU296
 1117 00a2 0A48     		ldr	r0, .L74+24
 1118 00a4 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1119 00a6 0133     		adds	r3, r3, #1
 1120 00a8 0370     		strb	r3, [r0]
 626:Core/Src/main.c **** 			
 1121              		.loc 1 626 4 is_stmt 1 view .LVU297
 1122 00aa FFF7FEFF 		bl	update_lcd
 1123              	.LVL86:
 1124 00ae CFE7     		b	.L60
 1125              	.LVL87:
 1126              	.L67:
 1127              	.LCFI6:
 1128              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc6zIoes.s 			page 36


 1129              		.cfi_restore 4
 1130              		.cfi_restore 14
 626:Core/Src/main.c **** 			
 1131              		.loc 1 626 4 is_stmt 0 view .LVU298
 1132 00b0 7047     		bx	lr
 1133              	.L75:
 1134 00b2 00BF     		.align	2
 1135              	.L74:
 1136 00b4 00000000 		.word	.LANCHOR18
 1137 00b8 00000000 		.word	.LANCHOR19
 1138 00bc 00000000 		.word	.LANCHOR2
 1139 00c0 00000000 		.word	.LANCHOR22
 1140 00c4 00000000 		.word	.LANCHOR0
 1141 00c8 00000000 		.word	.LANCHOR23
 1142 00cc 00000000 		.word	.LANCHOR3
 1143              		.cfi_endproc
 1144              	.LFE138:
 1146              		.section	.text.RS485_Send_Message,"ax",%progbits
 1147              		.align	1
 1148              		.global	RS485_Send_Message
 1149              		.syntax unified
 1150              		.thumb
 1151              		.thumb_func
 1153              	RS485_Send_Message:
 1154              	.LVL88:
 1155              	.LFB140:
 713:Core/Src/main.c **** 
 714:Core/Src/main.c **** void RS485_Send_Message(uint8_t addr, uint8_t func_code, uint8_t data)
 715:Core/Src/main.c **** {
 1156              		.loc 1 715 1 is_stmt 1 view -0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 0
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160              		.loc 1 715 1 is_stmt 0 view .LVU300
 1161 0000 38B5     		push	{r3, r4, r5, lr}
 1162              	.LCFI7:
 1163              		.cfi_def_cfa_offset 16
 1164              		.cfi_offset 3, -16
 1165              		.cfi_offset 4, -12
 1166              		.cfi_offset 5, -8
 1167              		.cfi_offset 14, -4
 716:Core/Src/main.c **** 	
 717:Core/Src/main.c **** 	TX_msg[0] = SOF;
 1168              		.loc 1 717 2 is_stmt 1 view .LVU301
 1169              		.loc 1 717 12 is_stmt 0 view .LVU302
 1170 0002 0F4C     		ldr	r4, .L78
 1171 0004 0223     		movs	r3, #2
 1172 0006 2370     		strb	r3, [r4]
 718:Core/Src/main.c **** 	TX_msg[1] = addr;
 1173              		.loc 1 718 2 is_stmt 1 view .LVU303
 1174              		.loc 1 718 12 is_stmt 0 view .LVU304
 1175 0008 6070     		strb	r0, [r4, #1]
 719:Core/Src/main.c **** 	TX_msg[2] = func_code;
 1176              		.loc 1 719 2 is_stmt 1 view .LVU305
 1177              		.loc 1 719 12 is_stmt 0 view .LVU306
 1178 000a A170     		strb	r1, [r4, #2]
 720:Core/Src/main.c **** 	TX_msg[3] = data;
ARM GAS  /tmp/cc6zIoes.s 			page 37


 1179              		.loc 1 720 2 is_stmt 1 view .LVU307
 1180              		.loc 1 720 12 is_stmt 0 view .LVU308
 1181 000c E270     		strb	r2, [r4, #3]
 721:Core/Src/main.c **** 	TX_msg[4] = (((0x00^TX_msg[1])^TX_msg[2])^TX_msg[3]);    // checksum
 1182              		.loc 1 721 2 is_stmt 1 view .LVU309
 1183              		.loc 1 721 12 is_stmt 0 view .LVU310
 1184 000e 4840     		eors	r0, r0, r1
 1185              	.LVL89:
 1186              		.loc 1 721 12 view .LVU311
 1187 0010 4240     		eors	r2, r2, r0
 1188              	.LVL90:
 1189              		.loc 1 721 12 view .LVU312
 1190 0012 2271     		strb	r2, [r4, #4]
 722:Core/Src/main.c **** 	TX_msg[5] = EOF;
 1191              		.loc 1 722 2 is_stmt 1 view .LVU313
 1192              		.loc 1 722 12 is_stmt 0 view .LVU314
 1193 0014 0323     		movs	r3, #3
 1194 0016 6371     		strb	r3, [r4, #5]
 723:Core/Src/main.c **** 
 724:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
 725:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 1195              		.loc 1 725 2 is_stmt 1 view .LVU315
 1196 0018 0A4D     		ldr	r5, .L78+4
 1197 001a 0122     		movs	r2, #1
 1198 001c 4FF48051 		mov	r1, #4096
 1199              	.LVL91:
 1200              		.loc 1 725 2 is_stmt 0 view .LVU316
 1201 0020 2846     		mov	r0, r5
 1202 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1203              	.LVL92:
 726:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, TX_msg, sizeof(TX_msg), 10);
 1204              		.loc 1 726 2 is_stmt 1 view .LVU317
 1205 0026 0A23     		movs	r3, #10
 1206 0028 0622     		movs	r2, #6
 1207 002a 2146     		mov	r1, r4
 1208 002c 0648     		ldr	r0, .L78+8
 1209 002e FFF7FEFF 		bl	HAL_UART_Transmit
 1210              	.LVL93:
 727:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 1211              		.loc 1 727 2 view .LVU318
 1212 0032 0022     		movs	r2, #0
 1213 0034 4FF48051 		mov	r1, #4096
 1214 0038 2846     		mov	r0, r5
 1215 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1216              	.LVL94:
 728:Core/Src/main.c **** }
 1217              		.loc 1 728 1 is_stmt 0 view .LVU319
 1218 003e 38BD     		pop	{r3, r4, r5, pc}
 1219              	.L79:
 1220              		.align	2
 1221              	.L78:
 1222 0040 00000000 		.word	.LANCHOR21
 1223 0044 00000240 		.word	1073872896
 1224 0048 00000000 		.word	huart4
 1225              		.cfi_endproc
 1226              	.LFE140:
 1228              		.section	.text.main_task,"ax",%progbits
ARM GAS  /tmp/cc6zIoes.s 			page 38


 1229              		.align	1
 1230              		.global	main_task
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1235              	main_task:
 1236              	.LFB135:
 379:Core/Src/main.c **** 
 1237              		.loc 1 379 1 is_stmt 1 view -0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241 0000 10B5     		push	{r4, lr}
 1242              	.LCFI8:
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 4, -8
 1245              		.cfi_offset 14, -4
 381:Core/Src/main.c **** 	{
 1246              		.loc 1 381 2 view .LVU321
 381:Core/Src/main.c **** 	{
 1247              		.loc 1 381 18 is_stmt 0 view .LVU322
 1248 0002 744B     		ldr	r3, .L111
 1249 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 381:Core/Src/main.c **** 	{
 1250              		.loc 1 381 39 view .LVU323
 1251 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 381:Core/Src/main.c **** 	{
 1252              		.loc 1 381 5 view .LVU324
 1253 0008 9A42     		cmp	r2, r3
 1254 000a 08D1     		bne	.L105
 1255              	.L81:
 388:Core/Src/main.c **** 	{
 1256              		.loc 1 388 2 is_stmt 1 view .LVU325
 1257 000c 724B     		ldr	r3, .L111+4
 1258 000e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1259 0010 012C     		cmp	r4, #1
 1260 0012 4DD0     		beq	.L82
 1261 0014 022C     		cmp	r4, #2
 1262 0016 00F0A680 		beq	.L83
 1263 001a 34B1     		cbz	r4, .L106
 1264              	.L80:
 515:Core/Src/main.c **** 
 1265              		.loc 1 515 1 is_stmt 0 view .LVU326
 1266 001c 10BD     		pop	{r4, pc}
 1267              	.L105:
 384:Core/Src/main.c **** 
 1268              		.loc 1 384 3 is_stmt 1 view .LVU327
 384:Core/Src/main.c **** 
 1269              		.loc 1 384 11 is_stmt 0 view .LVU328
 1270 001e 6D48     		ldr	r0, .L111
 1271 0020 FFF7FEFF 		bl	buffer_pop
 1272              	.LVL95:
 384:Core/Src/main.c **** 
 1273              		.loc 1 384 9 view .LVU329
 1274 0024 6D4B     		ldr	r3, .L111+8
 1275 0026 1870     		strb	r0, [r3]
 1276 0028 F0E7     		b	.L81
ARM GAS  /tmp/cc6zIoes.s 			page 39


 1277              	.L106:
 392:Core/Src/main.c **** 		{
 1278              		.loc 1 392 3 is_stmt 1 view .LVU330
 1279 002a 6C4B     		ldr	r3, .L111+8
 1280 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1281 002e 012B     		cmp	r3, #1
 1282 0030 20D0     		beq	.L85
 1283 0032 022B     		cmp	r3, #2
 1284 0034 29D0     		beq	.L86
 415:Core/Src/main.c **** 			f_querry =0;
 1285              		.loc 1 415 4 view .LVU331
 415:Core/Src/main.c **** 			f_querry =0;
 1286              		.loc 1 415 8 is_stmt 0 view .LVU332
 1287 0036 6A4B     		ldr	r3, .L111+12
 1288 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 415:Core/Src/main.c **** 			f_querry =0;
 1289              		.loc 1 415 7 view .LVU333
 1290 003a 002B     		cmp	r3, #0
 1291 003c EED0     		beq	.L80
 416:Core/Src/main.c **** 					
 1292              		.loc 1 416 4 is_stmt 1 view .LVU334
 416:Core/Src/main.c **** 					
 1293              		.loc 1 416 13 is_stmt 0 view .LVU335
 1294 003e 684B     		ldr	r3, .L111+12
 1295 0040 0022     		movs	r2, #0
 1296 0042 1A70     		strb	r2, [r3]
 418:Core/Src/main.c **** 				
 1297              		.loc 1 418 4 is_stmt 1 view .LVU336
 418:Core/Src/main.c **** 				
 1298              		.loc 1 418 9 is_stmt 0 view .LVU337
 1299 0044 674B     		ldr	r3, .L111+16
 1300 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 418:Core/Src/main.c **** 				
 1301              		.loc 1 418 6 view .LVU338
 1302 0048 5BB3     		cbz	r3, .L88
 420:Core/Src/main.c **** 			}else{
 1303              		.loc 1 420 5 is_stmt 1 view .LVU339
 1304 004a 3022     		movs	r2, #48
 1305 004c F221     		movs	r1, #242
 1306 004e 6648     		ldr	r0, .L111+20
 1307 0050 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 1308 0052 FFF7FEFF 		bl	RS485_Send_Message
 1309              	.LVL96:
 1310              	.L89:
 425:Core/Src/main.c **** 			
 1311              		.loc 1 425 4 view .LVU340
 425:Core/Src/main.c **** 			
 1312              		.loc 1 425 15 is_stmt 0 view .LVU341
 1313 0056 634B     		ldr	r3, .L111+16
 1314 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 425:Core/Src/main.c **** 			
 1315              		.loc 1 425 7 view .LVU342
 1316 005a 022B     		cmp	r3, #2
 1317 005c 01D0     		beq	.L90
 425:Core/Src/main.c **** 			
 1318              		.loc 1 425 7 discriminator 1 view .LVU343
 1319 005e 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc6zIoes.s 			page 40


 1320 0060 DCB2     		uxtb	r4, r3
 1321              	.L90:
 425:Core/Src/main.c **** 			
 1322              		.loc 1 425 7 discriminator 4 view .LVU344
 1323 0062 604B     		ldr	r3, .L111+16
 1324 0064 1C70     		strb	r4, [r3]
 427:Core/Src/main.c **** 			old_state = STATE_IDLE;
 1325              		.loc 1 427 4 is_stmt 1 discriminator 4 view .LVU345
 427:Core/Src/main.c **** 			old_state = STATE_IDLE;
 1326              		.loc 1 427 10 is_stmt 0 discriminator 4 view .LVU346
 1327 0066 5C4B     		ldr	r3, .L111+4
 1328 0068 0222     		movs	r2, #2
 1329 006a 1A70     		strb	r2, [r3]
 428:Core/Src/main.c **** 			break;
 1330              		.loc 1 428 4 is_stmt 1 discriminator 4 view .LVU347
 428:Core/Src/main.c **** 			break;
 1331              		.loc 1 428 14 is_stmt 0 discriminator 4 view .LVU348
 1332 006c 5F4B     		ldr	r3, .L111+24
 1333 006e 0022     		movs	r2, #0
 1334 0070 1A70     		strb	r2, [r3]
 429:Core/Src/main.c **** 
 1335              		.loc 1 429 4 is_stmt 1 discriminator 4 view .LVU349
 1336 0072 D3E7     		b	.L80
 1337              	.L85:
 396:Core/Src/main.c **** 			f_timer_update_digit=1;
 1338              		.loc 1 396 4 view .LVU350
 396:Core/Src/main.c **** 			f_timer_update_digit=1;
 1339              		.loc 1 396 12 is_stmt 0 view .LVU351
 1340 0074 0123     		movs	r3, #1
 1341 0076 5E4A     		ldr	r2, .L111+28
 1342 0078 1370     		strb	r3, [r2]
 397:Core/Src/main.c **** 			//d_timer_update_digit = 250;			
 1343              		.loc 1 397 4 is_stmt 1 view .LVU352
 397:Core/Src/main.c **** 			//d_timer_update_digit = 250;			
 1344              		.loc 1 397 24 is_stmt 0 view .LVU353
 1345 007a 5E4A     		ldr	r2, .L111+32
 1346 007c 1370     		strb	r3, [r2]
 399:Core/Src/main.c **** 			state = STATE_TX;
 1347              		.loc 1 399 4 is_stmt 1 view .LVU354
 399:Core/Src/main.c **** 			state = STATE_TX;
 1348              		.loc 1 399 10 is_stmt 0 view .LVU355
 1349 007e 574A     		ldr	r2, .L111+8
 1350 0080 0021     		movs	r1, #0
 1351 0082 1170     		strb	r1, [r2]
 400:Core/Src/main.c **** 			
 1352              		.loc 1 400 4 is_stmt 1 view .LVU356
 400:Core/Src/main.c **** 			
 1353              		.loc 1 400 10 is_stmt 0 view .LVU357
 1354 0084 544A     		ldr	r2, .L111+4
 1355 0086 1370     		strb	r3, [r2]
 402:Core/Src/main.c **** 
 1356              		.loc 1 402 4 is_stmt 1 view .LVU358
 1357 0088 C8E7     		b	.L80
 1358              	.L86:
 406:Core/Src/main.c **** 			f_timer_update_digit=1;
 1359              		.loc 1 406 4 view .LVU359
 406:Core/Src/main.c **** 			f_timer_update_digit=1;
ARM GAS  /tmp/cc6zIoes.s 			page 41


 1360              		.loc 1 406 12 is_stmt 0 view .LVU360
 1361 008a 594B     		ldr	r3, .L111+28
 1362 008c 0222     		movs	r2, #2
 1363 008e 1A70     		strb	r2, [r3]
 407:Core/Src/main.c **** 			//d_timer_update_digit = 250;	
 1364              		.loc 1 407 4 is_stmt 1 view .LVU361
 407:Core/Src/main.c **** 			//d_timer_update_digit = 250;	
 1365              		.loc 1 407 24 is_stmt 0 view .LVU362
 1366 0090 0123     		movs	r3, #1
 1367 0092 584A     		ldr	r2, .L111+32
 1368 0094 1370     		strb	r3, [r2]
 409:Core/Src/main.c **** 			state = STATE_TX;
 1369              		.loc 1 409 4 is_stmt 1 view .LVU363
 409:Core/Src/main.c **** 			state = STATE_TX;
 1370              		.loc 1 409 10 is_stmt 0 view .LVU364
 1371 0096 514A     		ldr	r2, .L111+8
 1372 0098 0021     		movs	r1, #0
 1373 009a 1170     		strb	r1, [r2]
 410:Core/Src/main.c **** 			
 1374              		.loc 1 410 4 is_stmt 1 view .LVU365
 410:Core/Src/main.c **** 			
 1375              		.loc 1 410 10 is_stmt 0 view .LVU366
 1376 009c 4E4A     		ldr	r2, .L111+4
 1377 009e 1370     		strb	r3, [r2]
 412:Core/Src/main.c **** 				
 1378              		.loc 1 412 4 is_stmt 1 view .LVU367
 1379 00a0 BCE7     		b	.L80
 1380              	.L88:
 422:Core/Src/main.c **** 			}
 1381              		.loc 1 422 5 view .LVU368
 1382 00a2 3022     		movs	r2, #48
 1383 00a4 F421     		movs	r1, #244
 1384 00a6 5048     		ldr	r0, .L111+20
 1385 00a8 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 1386 00aa FFF7FEFF 		bl	RS485_Send_Message
 1387              	.LVL97:
 1388 00ae D2E7     		b	.L89
 1389              	.L82:
 435:Core/Src/main.c **** 		{
 1390              		.loc 1 435 3 view .LVU369
 1391 00b0 4A4B     		ldr	r3, .L111+8
 1392 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1393 00b4 032B     		cmp	r3, #3
 1394 00b6 18D0     		beq	.L91
 1395 00b8 042B     		cmp	r3, #4
 1396 00ba 1DD0     		beq	.L92
 453:Core/Src/main.c **** 			f_timer_update_digit =0;
 1397              		.loc 1 453 4 view .LVU370
 453:Core/Src/main.c **** 			f_timer_update_digit =0;
 1398              		.loc 1 453 8 is_stmt 0 view .LVU371
 1399 00bc 4D4B     		ldr	r3, .L111+32
 1400 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 453:Core/Src/main.c **** 			f_timer_update_digit =0;
 1401              		.loc 1 453 7 view .LVU372
 1402 00c0 002B     		cmp	r3, #0
 1403 00c2 ABD0     		beq	.L80
 454:Core/Src/main.c **** 
ARM GAS  /tmp/cc6zIoes.s 			page 42


 1404              		.loc 1 454 4 is_stmt 1 view .LVU373
 454:Core/Src/main.c **** 
 1405              		.loc 1 454 25 is_stmt 0 view .LVU374
 1406 00c4 4B4B     		ldr	r3, .L111+32
 1407 00c6 0022     		movs	r2, #0
 1408 00c8 1A70     		strb	r2, [r3]
 456:Core/Src/main.c **** 				digit1=(digit1+1)>9? 0 :digit1+1;
 1409              		.loc 1 456 4 is_stmt 1 view .LVU375
 456:Core/Src/main.c **** 				digit1=(digit1+1)>9? 0 :digit1+1;
 1410              		.loc 1 456 15 is_stmt 0 view .LVU376
 1411 00ca 494B     		ldr	r3, .L111+28
 1412 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 456:Core/Src/main.c **** 				digit1=(digit1+1)>9? 0 :digit1+1;
 1413              		.loc 1 456 6 view .LVU377
 1414 00ce 012B     		cmp	r3, #1
 1415 00d0 19D0     		beq	.L107
 463:Core/Src/main.c **** 			{
 1416              		.loc 1 463 9 is_stmt 1 view .LVU378
 463:Core/Src/main.c **** 			{
 1417              		.loc 1 463 12 is_stmt 0 view .LVU379
 1418 00d2 022B     		cmp	r3, #2
 1419 00d4 2FD0     		beq	.L108
 1420              	.L96:
 472:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1421              		.loc 1 472 4 is_stmt 1 view .LVU380
 472:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1422              		.loc 1 472 10 is_stmt 0 view .LVU381
 1423 00d6 414B     		ldr	r3, .L111+8
 1424 00d8 0022     		movs	r2, #0
 1425 00da 1A70     		strb	r2, [r3]
 473:Core/Src/main.c **** 			old_state = STATE_TX;
 1426              		.loc 1 473 4 is_stmt 1 view .LVU382
 473:Core/Src/main.c **** 			old_state = STATE_TX;
 1427              		.loc 1 473 10 is_stmt 0 view .LVU383
 1428 00dc 3E4B     		ldr	r3, .L111+4
 1429 00de 0222     		movs	r2, #2
 1430 00e0 1A70     		strb	r2, [r3]
 474:Core/Src/main.c **** 			break;
 1431              		.loc 1 474 4 is_stmt 1 view .LVU384
 474:Core/Src/main.c **** 			break;
 1432              		.loc 1 474 14 is_stmt 0 view .LVU385
 1433 00e2 424B     		ldr	r3, .L111+24
 1434 00e4 0122     		movs	r2, #1
 1435 00e6 1A70     		strb	r2, [r3]
 475:Core/Src/main.c **** 		}
 1436              		.loc 1 475 4 is_stmt 1 view .LVU386
 1437 00e8 98E7     		b	.L80
 1438              	.L91:
 439:Core/Src/main.c **** 			state = STATE_IDLE;
 1439              		.loc 1 439 4 view .LVU387
 439:Core/Src/main.c **** 			state = STATE_IDLE;
 1440              		.loc 1 439 25 is_stmt 0 view .LVU388
 1441 00ea 424B     		ldr	r3, .L111+32
 1442 00ec 0122     		movs	r2, #1
 1443 00ee 1A70     		strb	r2, [r3]
 440:Core/Src/main.c **** 
 1444              		.loc 1 440 4 is_stmt 1 view .LVU389
ARM GAS  /tmp/cc6zIoes.s 			page 43


 440:Core/Src/main.c **** 
 1445              		.loc 1 440 10 is_stmt 0 view .LVU390
 1446 00f0 394B     		ldr	r3, .L111+4
 1447 00f2 0022     		movs	r2, #0
 1448 00f4 1A70     		strb	r2, [r3]
 442:Core/Src/main.c **** 
 1449              		.loc 1 442 4 is_stmt 1 view .LVU391
 1450 00f6 91E7     		b	.L80
 1451              	.L92:
 446:Core/Src/main.c **** 			state = STATE_IDLE;	
 1452              		.loc 1 446 4 view .LVU392
 446:Core/Src/main.c **** 			state = STATE_IDLE;	
 1453              		.loc 1 446 25 is_stmt 0 view .LVU393
 1454 00f8 3E4B     		ldr	r3, .L111+32
 1455 00fa 0122     		movs	r2, #1
 1456 00fc 1A70     		strb	r2, [r3]
 447:Core/Src/main.c **** 
 1457              		.loc 1 447 4 is_stmt 1 view .LVU394
 447:Core/Src/main.c **** 
 1458              		.loc 1 447 10 is_stmt 0 view .LVU395
 1459 00fe 364B     		ldr	r3, .L111+4
 1460 0100 0022     		movs	r2, #0
 1461 0102 1A70     		strb	r2, [r3]
 449:Core/Src/main.c **** 
 1462              		.loc 1 449 4 is_stmt 1 view .LVU396
 1463 0104 8AE7     		b	.L80
 1464              	.L107:
 457:Core/Src/main.c **** 				update_lcd(&digit1);
 1465              		.loc 1 457 5 view .LVU397
 457:Core/Src/main.c **** 				update_lcd(&digit1);
 1466              		.loc 1 457 22 is_stmt 0 view .LVU398
 1467 0106 3C4B     		ldr	r3, .L111+36
 1468 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 457:Core/Src/main.c **** 				update_lcd(&digit1);
 1469              		.loc 1 457 11 view .LVU399
 1470 010a 082B     		cmp	r3, #8
 1471 010c 02D8     		bhi	.L100
 457:Core/Src/main.c **** 				update_lcd(&digit1);
 1472              		.loc 1 457 11 discriminator 1 view .LVU400
 1473 010e 0133     		adds	r3, r3, #1
 1474 0110 DBB2     		uxtb	r3, r3
 1475 0112 00E0     		b	.L95
 1476              	.L100:
 457:Core/Src/main.c **** 				update_lcd(&digit1);
 1477              		.loc 1 457 11 view .LVU401
 1478 0114 0023     		movs	r3, #0
 1479              	.L95:
 457:Core/Src/main.c **** 				update_lcd(&digit1);
 1480              		.loc 1 457 11 discriminator 4 view .LVU402
 1481 0116 384C     		ldr	r4, .L111+36
 1482 0118 2370     		strb	r3, [r4]
 458:Core/Src/main.c **** 				old_digit1 = digit1;
 1483              		.loc 1 458 5 is_stmt 1 discriminator 4 view .LVU403
 1484 011a 2046     		mov	r0, r4
 1485 011c FFF7FEFF 		bl	update_lcd
 1486              	.LVL98:
 459:Core/Src/main.c **** 				//buffer_push(&digit1_buf,digit1);
ARM GAS  /tmp/cc6zIoes.s 			page 44


 1487              		.loc 1 459 5 discriminator 4 view .LVU404
 459:Core/Src/main.c **** 				//buffer_push(&digit1_buf,digit1);
 1488              		.loc 1 459 16 is_stmt 0 discriminator 4 view .LVU405
 1489 0120 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1490 0122 364A     		ldr	r2, .L111+40
 1491 0124 1370     		strb	r3, [r2]
 461:Core/Src/main.c **** 			}
 1492              		.loc 1 461 5 is_stmt 1 discriminator 4 view .LVU406
 1493 0126 3033     		adds	r3, r3, #48
 1494 0128 DAB2     		uxtb	r2, r3
 1495 012a F121     		movs	r1, #241
 1496 012c 2E4B     		ldr	r3, .L111+20
 1497 012e 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1498 0130 FFF7FEFF 		bl	RS485_Send_Message
 1499              	.LVL99:
 1500 0134 CFE7     		b	.L96
 1501              	.L108:
 465:Core/Src/main.c **** 				update_lcd(&digit2);
 1502              		.loc 1 465 5 view .LVU407
 465:Core/Src/main.c **** 				update_lcd(&digit2);
 1503              		.loc 1 465 22 is_stmt 0 view .LVU408
 1504 0136 324B     		ldr	r3, .L111+44
 1505 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 465:Core/Src/main.c **** 				update_lcd(&digit2);
 1506              		.loc 1 465 11 view .LVU409
 1507 013a 082B     		cmp	r3, #8
 1508 013c 11D8     		bhi	.L101
 465:Core/Src/main.c **** 				update_lcd(&digit2);
 1509              		.loc 1 465 11 discriminator 1 view .LVU410
 1510 013e 0133     		adds	r3, r3, #1
 1511 0140 DBB2     		uxtb	r3, r3
 1512              	.L97:
 465:Core/Src/main.c **** 				update_lcd(&digit2);
 1513              		.loc 1 465 11 discriminator 4 view .LVU411
 1514 0142 2F4C     		ldr	r4, .L111+44
 1515 0144 2370     		strb	r3, [r4]
 466:Core/Src/main.c **** 				old_digit2 = digit2;
 1516              		.loc 1 466 5 is_stmt 1 discriminator 4 view .LVU412
 1517 0146 2046     		mov	r0, r4
 1518 0148 FFF7FEFF 		bl	update_lcd
 1519              	.LVL100:
 467:Core/Src/main.c **** 				//buffer_push(&digit1_buf,digit1);
 1520              		.loc 1 467 5 discriminator 4 view .LVU413
 467:Core/Src/main.c **** 				//buffer_push(&digit1_buf,digit1);
 1521              		.loc 1 467 16 is_stmt 0 discriminator 4 view .LVU414
 1522 014c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1523 014e 2D4A     		ldr	r2, .L111+48
 1524 0150 1370     		strb	r3, [r2]
 470:Core/Src/main.c **** 			}
 1525              		.loc 1 470 5 is_stmt 1 discriminator 4 view .LVU415
 1526 0152 3033     		adds	r3, r3, #48
 1527 0154 DAB2     		uxtb	r2, r3
 1528 0156 F121     		movs	r1, #241
 1529 0158 234B     		ldr	r3, .L111+20
 1530 015a 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 1531 015c FFF7FEFF 		bl	RS485_Send_Message
 1532              	.LVL101:
ARM GAS  /tmp/cc6zIoes.s 			page 45


 1533 0160 B9E7     		b	.L96
 1534              	.L101:
 465:Core/Src/main.c **** 				update_lcd(&digit2);
 1535              		.loc 1 465 11 is_stmt 0 view .LVU416
 1536 0162 0023     		movs	r3, #0
 1537 0164 EDE7     		b	.L97
 1538              	.L83:
 480:Core/Src/main.c **** 			RS485_Read_Message();
 1539              		.loc 1 480 3 is_stmt 1 view .LVU417
 480:Core/Src/main.c **** 			RS485_Read_Message();
 1540              		.loc 1 480 12 is_stmt 0 view .LVU418
 1541 0166 1D4B     		ldr	r3, .L111+8
 1542 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 480:Core/Src/main.c **** 			RS485_Read_Message();
 1543              		.loc 1 480 6 view .LVU419
 1544 016a 052B     		cmp	r3, #5
 1545 016c 1FD0     		beq	.L109
 493:Core/Src/main.c **** 			f_querry =0;
 1546              		.loc 1 493 4 is_stmt 1 view .LVU420
 493:Core/Src/main.c **** 			f_querry =0;
 1547              		.loc 1 493 8 is_stmt 0 view .LVU421
 1548 016e 1C4B     		ldr	r3, .L111+12
 1549 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 493:Core/Src/main.c **** 			f_querry =0;
 1550              		.loc 1 493 7 view .LVU422
 1551 0172 002B     		cmp	r3, #0
 1552 0174 3FF452AF 		beq	.L80
 494:Core/Src/main.c **** 			
 1553              		.loc 1 494 4 is_stmt 1 view .LVU423
 494:Core/Src/main.c **** 			
 1554              		.loc 1 494 13 is_stmt 0 view .LVU424
 1555 0178 194B     		ldr	r3, .L111+12
 1556 017a 0022     		movs	r2, #0
 1557 017c 1A70     		strb	r2, [r3]
 496:Core/Src/main.c **** 			tx_timeout++;
 1558              		.loc 1 496 4 is_stmt 1 view .LVU425
 1559 017e 224B     		ldr	r3, .L111+52
 1560 0180 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1561 0182 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1562 0184 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1563 0186 FFF7FEFF 		bl	RS485_Send_Message
 1564              	.LVL102:
 497:Core/Src/main.c **** 			
 1565              		.loc 1 497 4 view .LVU426
 497:Core/Src/main.c **** 			
 1566              		.loc 1 497 14 is_stmt 0 view .LVU427
 1567 018a 204A     		ldr	r2, .L111+56
 1568 018c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1569 018e 0133     		adds	r3, r3, #1
 1570 0190 DBB2     		uxtb	r3, r3
 1571 0192 1370     		strb	r3, [r2]
 499:Core/Src/main.c **** 				state = old_state;
 1572              		.loc 1 499 4 is_stmt 1 view .LVU428
 499:Core/Src/main.c **** 				state = old_state;
 1573              		.loc 1 499 7 is_stmt 0 view .LVU429
 1574 0194 022B     		cmp	r3, #2
 1575 0196 7FF441AF 		bne	.L80
ARM GAS  /tmp/cc6zIoes.s 			page 46


 500:Core/Src/main.c **** 				event = EVENT_RESET;	
 1576              		.loc 1 500 5 is_stmt 1 view .LVU430
 500:Core/Src/main.c **** 				event = EVENT_RESET;	
 1577              		.loc 1 500 11 is_stmt 0 view .LVU431
 1578 019a 144B     		ldr	r3, .L111+24
 1579 019c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1580 019e 0E4B     		ldr	r3, .L111+4
 1581 01a0 1A70     		strb	r2, [r3]
 501:Core/Src/main.c **** 				tx_timeout=0;
 1582              		.loc 1 501 5 is_stmt 1 view .LVU432
 501:Core/Src/main.c **** 				tx_timeout=0;
 1583              		.loc 1 501 11 is_stmt 0 view .LVU433
 1584 01a2 0023     		movs	r3, #0
 1585 01a4 0D4A     		ldr	r2, .L111+8
 1586 01a6 1370     		strb	r3, [r2]
 502:Core/Src/main.c **** 				//check_slave();
 1587              		.loc 1 502 5 is_stmt 1 view .LVU434
 502:Core/Src/main.c **** 				//check_slave();
 1588              		.loc 1 502 15 is_stmt 0 view .LVU435
 1589 01a8 184A     		ldr	r2, .L111+56
 1590 01aa 1370     		strb	r3, [r2]
 504:Core/Src/main.c **** 
 1591              		.loc 1 504 5 is_stmt 1 view .LVU436
 515:Core/Src/main.c **** 
 1592              		.loc 1 515 1 is_stmt 0 view .LVU437
 1593 01ac 36E7     		b	.L80
 1594              	.L109:
 481:Core/Src/main.c **** 			
 1595              		.loc 1 481 4 is_stmt 1 view .LVU438
 1596 01ae FFF7FEFF 		bl	RS485_Read_Message
 1597              	.LVL103:
 483:Core/Src/main.c **** 				d_timer_update_digit=0;
 1598              		.loc 1 483 4 view .LVU439
 483:Core/Src/main.c **** 				d_timer_update_digit=0;
 1599              		.loc 1 483 17 is_stmt 0 view .LVU440
 1600 01b2 0E4B     		ldr	r3, .L111+24
 1601 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 483:Core/Src/main.c **** 				d_timer_update_digit=0;
 1602              		.loc 1 483 7 view .LVU441
 1603 01b6 012B     		cmp	r3, #1
 1604 01b8 05D0     		beq	.L110
 1605              	.L99:
 487:Core/Src/main.c **** 			event = EVENT_RESET;
 1606              		.loc 1 487 4 is_stmt 1 view .LVU442
 487:Core/Src/main.c **** 			event = EVENT_RESET;
 1607              		.loc 1 487 9 is_stmt 0 view .LVU443
 1608 01ba 074A     		ldr	r2, .L111+4
 1609 01bc 1370     		strb	r3, [r2]
 488:Core/Src/main.c **** 		
 1610              		.loc 1 488 4 is_stmt 1 view .LVU444
 488:Core/Src/main.c **** 		
 1611              		.loc 1 488 10 is_stmt 0 view .LVU445
 1612 01be 074B     		ldr	r3, .L111+8
 1613 01c0 0022     		movs	r2, #0
 1614 01c2 1A70     		strb	r2, [r3]
 1615 01c4 2AE7     		b	.L80
 1616              	.L110:
ARM GAS  /tmp/cc6zIoes.s 			page 47


 484:Core/Src/main.c **** 				f_timer_update_digit =0;
 1617              		.loc 1 484 5 is_stmt 1 view .LVU446
 484:Core/Src/main.c **** 				f_timer_update_digit =0;
 1618              		.loc 1 484 25 is_stmt 0 view .LVU447
 1619 01c6 0022     		movs	r2, #0
 1620 01c8 1149     		ldr	r1, .L111+60
 1621 01ca 0A70     		strb	r2, [r1]
 485:Core/Src/main.c **** 			}
 1622              		.loc 1 485 5 is_stmt 1 view .LVU448
 485:Core/Src/main.c **** 			}
 1623              		.loc 1 485 26 is_stmt 0 view .LVU449
 1624 01cc 0949     		ldr	r1, .L111+32
 1625 01ce 0A70     		strb	r2, [r1]
 1626 01d0 F3E7     		b	.L99
 1627              	.L112:
 1628 01d2 00BF     		.align	2
 1629              	.L111:
 1630 01d4 00000000 		.word	.LANCHOR14
 1631 01d8 00000000 		.word	.LANCHOR13
 1632 01dc 00000000 		.word	.LANCHOR24
 1633 01e0 00000000 		.word	.LANCHOR10
 1634 01e4 00000000 		.word	.LANCHOR26
 1635 01e8 00000000 		.word	.LANCHOR19
 1636 01ec 00000000 		.word	.LANCHOR27
 1637 01f0 00000000 		.word	.LANCHOR25
 1638 01f4 00000000 		.word	.LANCHOR8
 1639 01f8 00000000 		.word	.LANCHOR2
 1640 01fc 00000000 		.word	.LANCHOR22
 1641 0200 00000000 		.word	.LANCHOR0
 1642 0204 00000000 		.word	.LANCHOR23
 1643 0208 00000000 		.word	.LANCHOR21
 1644 020c 00000000 		.word	.LANCHOR28
 1645 0210 00000000 		.word	.LANCHOR7
 1646              		.cfi_endproc
 1647              	.LFE135:
 1649              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1650              		.align	1
 1651              		.global	HAL_TIM_PeriodElapsedCallback
 1652              		.syntax unified
 1653              		.thumb
 1654              		.thumb_func
 1656              	HAL_TIM_PeriodElapsedCallback:
 1657              	.LVL104:
 1658              	.LFB141:
 729:Core/Src/main.c **** 
 730:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 731:Core/Src/main.c **** {
 1659              		.loc 1 731 1 is_stmt 1 view -0
 1660              		.cfi_startproc
 1661              		@ args = 0, pretend = 0, frame = 0
 1662              		@ frame_needed = 0, uses_anonymous_args = 0
 1663              		@ link register save eliminated.
 732:Core/Src/main.c **** 	// Check which version of the timer triggered this callback and toggle LED
 733:Core/Src/main.c **** 
 734:Core/Src/main.c **** 	if (htim == &htim4)
 1664              		.loc 1 734 2 view .LVU451
 1665              		.loc 1 734 5 is_stmt 0 view .LVU452
ARM GAS  /tmp/cc6zIoes.s 			page 48


 1666 0000 034B     		ldr	r3, .L116
 1667 0002 8342     		cmp	r3, r0
 1668 0004 00D0     		beq	.L115
 1669              	.L113:
 735:Core/Src/main.c **** 	{
 736:Core/Src/main.c **** 		f_timer_10ms = 1;
 737:Core/Src/main.c **** 	}
 738:Core/Src/main.c **** }
 1670              		.loc 1 738 1 view .LVU453
 1671 0006 7047     		bx	lr
 1672              	.L115:
 736:Core/Src/main.c **** 	}
 1673              		.loc 1 736 3 is_stmt 1 view .LVU454
 736:Core/Src/main.c **** 	}
 1674              		.loc 1 736 16 is_stmt 0 view .LVU455
 1675 0008 024B     		ldr	r3, .L116+4
 1676 000a 0122     		movs	r2, #1
 1677 000c 1A70     		strb	r2, [r3]
 1678              		.loc 1 738 1 view .LVU456
 1679 000e FAE7     		b	.L113
 1680              	.L117:
 1681              		.align	2
 1682              	.L116:
 1683 0010 00000000 		.word	htim4
 1684 0014 00000000 		.word	.LANCHOR4
 1685              		.cfi_endproc
 1686              	.LFE141:
 1688              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1689              		.align	1
 1690              		.global	HAL_UART_RxCpltCallback
 1691              		.syntax unified
 1692              		.thumb
 1693              		.thumb_func
 1695              	HAL_UART_RxCpltCallback:
 1696              	.LVL105:
 1697              	.LFB142:
 739:Core/Src/main.c **** 
 740:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 741:Core/Src/main.c **** {
 1698              		.loc 1 741 1 is_stmt 1 view -0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 0, uses_anonymous_args = 0
 742:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 743:Core/Src/main.c **** 
 744:Core/Src/main.c **** 	if (huart == &huart4)
 1702              		.loc 1 744 2 view .LVU458
 1703              		.loc 1 744 5 is_stmt 0 view .LVU459
 1704 0000 074B     		ldr	r3, .L125
 1705 0002 8342     		cmp	r3, r0
 1706 0004 00D0     		beq	.L124
 1707 0006 7047     		bx	lr
 1708              	.L124:
 741:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 1709              		.loc 1 741 1 view .LVU460
 1710 0008 10B5     		push	{r4, lr}
 1711              	.LCFI9:
ARM GAS  /tmp/cc6zIoes.s 			page 49


 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 4, -8
 1714              		.cfi_offset 14, -4
 745:Core/Src/main.c **** 	{
 746:Core/Src/main.c **** 		buffer_push(&rx_buffer, rx_temp);
 1715              		.loc 1 746 3 is_stmt 1 view .LVU461
 1716 000a 064C     		ldr	r4, .L125+4
 1717 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1718 000e 0648     		ldr	r0, .L125+8
 1719              	.LVL106:
 1720              		.loc 1 746 3 is_stmt 0 view .LVU462
 1721 0010 FFF7FEFF 		bl	buffer_push
 1722              	.LVL107:
 747:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 1723              		.loc 1 747 3 is_stmt 1 view .LVU463
 1724 0014 0122     		movs	r2, #1
 1725 0016 2146     		mov	r1, r4
 1726 0018 0148     		ldr	r0, .L125
 1727 001a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1728              	.LVL108:
 748:Core/Src/main.c **** 	}
 749:Core/Src/main.c **** }
 1729              		.loc 1 749 1 is_stmt 0 view .LVU464
 1730 001e 10BD     		pop	{r4, pc}
 1731              	.L126:
 1732              		.align	2
 1733              	.L125:
 1734 0020 00000000 		.word	huart4
 1735 0024 00000000 		.word	.LANCHOR29
 1736 0028 00000000 		.word	.LANCHOR15
 1737              		.cfi_endproc
 1738              	.LFE142:
 1740              		.section	.text.Error_Handler,"ax",%progbits
 1741              		.align	1
 1742              		.global	Error_Handler
 1743              		.syntax unified
 1744              		.thumb
 1745              		.thumb_func
 1747              	Error_Handler:
 1748              	.LFB143:
 750:Core/Src/main.c **** /* USER CODE END 4 */
 751:Core/Src/main.c **** 
 752:Core/Src/main.c **** /**
 753:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 754:Core/Src/main.c ****  * @retval None
 755:Core/Src/main.c ****  */
 756:Core/Src/main.c **** void Error_Handler(void)
 757:Core/Src/main.c **** {
 1749              		.loc 1 757 1 is_stmt 1 view -0
 1750              		.cfi_startproc
 1751              		@ Volatile: function does not return.
 1752              		@ args = 0, pretend = 0, frame = 0
 1753              		@ frame_needed = 0, uses_anonymous_args = 0
 1754              		@ link register save eliminated.
 758:Core/Src/main.c **** 	/* USER CODE BEGIN Error_Handler_Debug */
 759:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 760:Core/Src/main.c **** 	__disable_irq();
ARM GAS  /tmp/cc6zIoes.s 			page 50


 1755              		.loc 1 760 2 view .LVU466
 1756              	.LBB4:
 1757              	.LBI4:
 1758              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  /tmp/cc6zIoes.s 			page 51


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  /tmp/cc6zIoes.s 			page 52


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1759              		.loc 2 140 27 view .LVU467
 1760              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1761              		.loc 2 142 3 view .LVU468
 1762              		.syntax unified
 1763              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1764 0000 72B6     		cpsid i
 1765              	@ 0 "" 2
 1766              		.thumb
 1767              		.syntax unified
 1768              	.L128:
 1769              	.LBE5:
 1770              	.LBE4:
 761:Core/Src/main.c **** 	while (1)
 1771              		.loc 1 761 2 discriminator 1 view .LVU469
 762:Core/Src/main.c **** 	{
 763:Core/Src/main.c **** 	}
 1772              		.loc 1 763 2 discriminator 1 view .LVU470
 761:Core/Src/main.c **** 	while (1)
 1773              		.loc 1 761 8 discriminator 1 view .LVU471
 1774 0002 FEE7     		b	.L128
 1775              		.cfi_endproc
 1776              	.LFE143:
 1778              		.section	.text.SystemClock_Config,"ax",%progbits
 1779              		.align	1
 1780              		.global	SystemClock_Config
ARM GAS  /tmp/cc6zIoes.s 			page 53


 1781              		.syntax unified
 1782              		.thumb
 1783              		.thumb_func
 1785              	SystemClock_Config:
 1786              	.LFB131:
 250:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1787              		.loc 1 250 1 view -0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 80
 1790              		@ frame_needed = 0, uses_anonymous_args = 0
 1791 0000 00B5     		push	{lr}
 1792              	.LCFI10:
 1793              		.cfi_def_cfa_offset 4
 1794              		.cfi_offset 14, -4
 1795 0002 95B0     		sub	sp, sp, #84
 1796              	.LCFI11:
 1797              		.cfi_def_cfa_offset 88
 251:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1798              		.loc 1 251 2 view .LVU473
 251:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1799              		.loc 1 251 21 is_stmt 0 view .LVU474
 1800 0004 3022     		movs	r2, #48
 1801 0006 0021     		movs	r1, #0
 1802 0008 08A8     		add	r0, sp, #32
 1803 000a FFF7FEFF 		bl	memset
 1804              	.LVL109:
 252:Core/Src/main.c **** 
 1805              		.loc 1 252 2 is_stmt 1 view .LVU475
 252:Core/Src/main.c **** 
 1806              		.loc 1 252 21 is_stmt 0 view .LVU476
 1807 000e 0023     		movs	r3, #0
 1808 0010 0393     		str	r3, [sp, #12]
 1809 0012 0493     		str	r3, [sp, #16]
 1810 0014 0593     		str	r3, [sp, #20]
 1811 0016 0693     		str	r3, [sp, #24]
 1812 0018 0793     		str	r3, [sp, #28]
 256:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1813              		.loc 1 256 2 is_stmt 1 view .LVU477
 1814              	.LBB6:
 256:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1815              		.loc 1 256 2 view .LVU478
 1816 001a 0193     		str	r3, [sp, #4]
 256:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1817              		.loc 1 256 2 view .LVU479
 1818 001c 204A     		ldr	r2, .L135
 1819 001e 116C     		ldr	r1, [r2, #64]
 1820 0020 41F08051 		orr	r1, r1, #268435456
 1821 0024 1164     		str	r1, [r2, #64]
 256:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1822              		.loc 1 256 2 view .LVU480
 1823 0026 126C     		ldr	r2, [r2, #64]
 1824 0028 02F08052 		and	r2, r2, #268435456
 1825 002c 0192     		str	r2, [sp, #4]
 256:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1826              		.loc 1 256 2 view .LVU481
 1827 002e 019A     		ldr	r2, [sp, #4]
 1828              	.LBE6:
ARM GAS  /tmp/cc6zIoes.s 			page 54


 256:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1829              		.loc 1 256 2 view .LVU482
 257:Core/Src/main.c **** 
 1830              		.loc 1 257 2 view .LVU483
 1831              	.LBB7:
 257:Core/Src/main.c **** 
 1832              		.loc 1 257 2 view .LVU484
 1833 0030 0293     		str	r3, [sp, #8]
 257:Core/Src/main.c **** 
 1834              		.loc 1 257 2 view .LVU485
 1835 0032 1C4A     		ldr	r2, .L135+4
 1836 0034 1368     		ldr	r3, [r2]
 1837 0036 23F44043 		bic	r3, r3, #49152
 1838 003a 43F48043 		orr	r3, r3, #16384
 1839 003e 1360     		str	r3, [r2]
 257:Core/Src/main.c **** 
 1840              		.loc 1 257 2 view .LVU486
 1841 0040 1368     		ldr	r3, [r2]
 1842 0042 03F44043 		and	r3, r3, #49152
 1843 0046 0293     		str	r3, [sp, #8]
 257:Core/Src/main.c **** 
 1844              		.loc 1 257 2 view .LVU487
 1845 0048 029B     		ldr	r3, [sp, #8]
 1846              	.LBE7:
 257:Core/Src/main.c **** 
 1847              		.loc 1 257 2 view .LVU488
 262:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1848              		.loc 1 262 2 view .LVU489
 262:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1849              		.loc 1 262 35 is_stmt 0 view .LVU490
 1850 004a 0123     		movs	r3, #1
 1851 004c 0893     		str	r3, [sp, #32]
 263:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1852              		.loc 1 263 2 is_stmt 1 view .LVU491
 263:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1853              		.loc 1 263 29 is_stmt 0 view .LVU492
 1854 004e 4FF48033 		mov	r3, #65536
 1855 0052 0993     		str	r3, [sp, #36]
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1856              		.loc 1 264 2 is_stmt 1 view .LVU493
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1857              		.loc 1 264 33 is_stmt 0 view .LVU494
 1858 0054 0223     		movs	r3, #2
 1859 0056 0E93     		str	r3, [sp, #56]
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1860              		.loc 1 265 2 is_stmt 1 view .LVU495
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1861              		.loc 1 265 34 is_stmt 0 view .LVU496
 1862 0058 4FF48002 		mov	r2, #4194304
 1863 005c 0F92     		str	r2, [sp, #60]
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1864              		.loc 1 266 2 is_stmt 1 view .LVU497
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1865              		.loc 1 266 29 is_stmt 0 view .LVU498
 1866 005e 0422     		movs	r2, #4
 1867 0060 1092     		str	r2, [sp, #64]
 267:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /tmp/cc6zIoes.s 			page 55


 1868              		.loc 1 267 2 is_stmt 1 view .LVU499
 267:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1869              		.loc 1 267 29 is_stmt 0 view .LVU500
 1870 0062 6022     		movs	r2, #96
 1871 0064 1192     		str	r2, [sp, #68]
 268:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1872              		.loc 1 268 2 is_stmt 1 view .LVU501
 268:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1873              		.loc 1 268 29 is_stmt 0 view .LVU502
 1874 0066 1293     		str	r3, [sp, #72]
 269:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1875              		.loc 1 269 2 is_stmt 1 view .LVU503
 269:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1876              		.loc 1 269 29 is_stmt 0 view .LVU504
 1877 0068 0323     		movs	r3, #3
 1878 006a 1393     		str	r3, [sp, #76]
 270:Core/Src/main.c **** 	{
 1879              		.loc 1 270 2 is_stmt 1 view .LVU505
 270:Core/Src/main.c **** 	{
 1880              		.loc 1 270 6 is_stmt 0 view .LVU506
 1881 006c 08A8     		add	r0, sp, #32
 1882 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1883              	.LVL110:
 270:Core/Src/main.c **** 	{
 1884              		.loc 1 270 5 view .LVU507
 1885 0072 88B9     		cbnz	r0, .L133
 277:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1886              		.loc 1 277 2 is_stmt 1 view .LVU508
 277:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1887              		.loc 1 277 30 is_stmt 0 view .LVU509
 1888 0074 0F23     		movs	r3, #15
 1889 0076 0393     		str	r3, [sp, #12]
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1890              		.loc 1 278 2 is_stmt 1 view .LVU510
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1891              		.loc 1 278 33 is_stmt 0 view .LVU511
 1892 0078 0223     		movs	r3, #2
 1893 007a 0493     		str	r3, [sp, #16]
 279:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1894              		.loc 1 279 2 is_stmt 1 view .LVU512
 279:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1895              		.loc 1 279 34 is_stmt 0 view .LVU513
 1896 007c 8023     		movs	r3, #128
 1897 007e 0593     		str	r3, [sp, #20]
 280:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1898              		.loc 1 280 2 is_stmt 1 view .LVU514
 280:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1899              		.loc 1 280 35 is_stmt 0 view .LVU515
 1900 0080 4FF48053 		mov	r3, #4096
 1901 0084 0693     		str	r3, [sp, #24]
 281:Core/Src/main.c **** 
 1902              		.loc 1 281 2 is_stmt 1 view .LVU516
 281:Core/Src/main.c **** 
 1903              		.loc 1 281 35 is_stmt 0 view .LVU517
 1904 0086 0793     		str	r3, [sp, #28]
 283:Core/Src/main.c **** 	{
 1905              		.loc 1 283 2 is_stmt 1 view .LVU518
ARM GAS  /tmp/cc6zIoes.s 			page 56


 283:Core/Src/main.c **** 	{
 1906              		.loc 1 283 6 is_stmt 0 view .LVU519
 1907 0088 0121     		movs	r1, #1
 1908 008a 03A8     		add	r0, sp, #12
 1909 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1910              	.LVL111:
 283:Core/Src/main.c **** 	{
 1911              		.loc 1 283 5 view .LVU520
 1912 0090 20B9     		cbnz	r0, .L134
 287:Core/Src/main.c **** 
 1913              		.loc 1 287 1 view .LVU521
 1914 0092 15B0     		add	sp, sp, #84
 1915              	.LCFI12:
 1916              		.cfi_remember_state
 1917              		.cfi_def_cfa_offset 4
 1918              		@ sp needed
 1919 0094 5DF804FB 		ldr	pc, [sp], #4
 1920              	.L133:
 1921              	.LCFI13:
 1922              		.cfi_restore_state
 272:Core/Src/main.c **** 	}
 1923              		.loc 1 272 3 is_stmt 1 view .LVU522
 1924 0098 FFF7FEFF 		bl	Error_Handler
 1925              	.LVL112:
 1926              	.L134:
 285:Core/Src/main.c **** 	}
 1927              		.loc 1 285 3 view .LVU523
 1928 009c FFF7FEFF 		bl	Error_Handler
 1929              	.LVL113:
 1930              	.L136:
 1931              		.align	2
 1932              	.L135:
 1933 00a0 00380240 		.word	1073887232
 1934 00a4 00700040 		.word	1073770496
 1935              		.cfi_endproc
 1936              	.LFE131:
 1938              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1939              		.align	2
 1940              	.LC7:
 1941 0000 53322D30 		.ascii	"S2-00:\000"
 1941      303A00
 1942 0007 00       		.align	2
 1943              	.LC8:
 1944 0008 53312D30 		.ascii	"S1-00:\000"
 1944      303A00
 1945              		.section	.text.main,"ax",%progbits
 1946              		.align	1
 1947              		.global	main
 1948              		.syntax unified
 1949              		.thumb
 1950              		.thumb_func
 1952              	main:
 1953              	.LFB130:
 156:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 1954              		.loc 1 156 1 view -0
 1955              		.cfi_startproc
 1956              		@ Volatile: function does not return.
ARM GAS  /tmp/cc6zIoes.s 			page 57


 1957              		@ args = 0, pretend = 0, frame = 0
 1958              		@ frame_needed = 0, uses_anonymous_args = 0
 1959 0000 80B5     		push	{r7, lr}
 1960              	.LCFI14:
 1961              		.cfi_def_cfa_offset 8
 1962              		.cfi_offset 7, -8
 1963              		.cfi_offset 14, -4
 164:Core/Src/main.c **** 
 1964              		.loc 1 164 2 view .LVU525
 1965 0002 FFF7FEFF 		bl	HAL_Init
 1966              	.LVL114:
 171:Core/Src/main.c **** 
 1967              		.loc 1 171 2 view .LVU526
 1968 0006 FFF7FEFF 		bl	SystemClock_Config
 1969              	.LVL115:
 178:Core/Src/main.c **** 	MX_TIM4_Init();
 1970              		.loc 1 178 2 view .LVU527
 1971 000a FFF7FEFF 		bl	MX_GPIO_Init
 1972              	.LVL116:
 179:Core/Src/main.c **** 	MX_UART4_Init();
 1973              		.loc 1 179 2 view .LVU528
 1974 000e FFF7FEFF 		bl	MX_TIM4_Init
 1975              	.LVL117:
 180:Core/Src/main.c **** 	MX_UART5_Init();
 1976              		.loc 1 180 2 view .LVU529
 1977 0012 FFF7FEFF 		bl	MX_UART4_Init
 1978              	.LVL118:
 181:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 1979              		.loc 1 181 2 view .LVU530
 1980 0016 FFF7FEFF 		bl	MX_UART5_Init
 1981              	.LVL119:
 184:Core/Src/main.c **** 
 1982              		.loc 1 184 2 view .LVU531
 1983 001a 3348     		ldr	r0, .L140
 1984 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1985              	.LVL120:
 186:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 1986              		.loc 1 186 2 view .LVU532
 1987 0020 0022     		movs	r2, #0
 1988 0022 4FF48051 		mov	r1, #4096
 1989 0026 3148     		ldr	r0, .L140+4
 1990 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1991              	.LVL121:
 189:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1992              		.loc 1 189 2 view .LVU533
 1993 002c 0122     		movs	r2, #1
 1994 002e 3049     		ldr	r1, .L140+8
 1995 0030 3048     		ldr	r0, .L140+12
 1996 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1997              	.LVL122:
 192:Core/Src/main.c **** 	digit2 = 16;
 1998              		.loc 1 192 2 view .LVU534
 192:Core/Src/main.c **** 	digit2 = 16;
 1999              		.loc 1 192 9 is_stmt 0 view .LVU535
 2000 0036 304E     		ldr	r6, .L140+16
 2001 0038 1023     		movs	r3, #16
 2002 003a 3370     		strb	r3, [r6]
ARM GAS  /tmp/cc6zIoes.s 			page 58


 193:Core/Src/main.c **** 	num_slave=0;
 2003              		.loc 1 193 2 is_stmt 1 view .LVU536
 193:Core/Src/main.c **** 	num_slave=0;
 2004              		.loc 1 193 9 is_stmt 0 view .LVU537
 2005 003c DFF8E480 		ldr	r8, .L140+60
 2006 0040 88F80030 		strb	r3, [r8]
 194:Core/Src/main.c **** 	ID=0;
 2007              		.loc 1 194 2 is_stmt 1 view .LVU538
 194:Core/Src/main.c **** 	ID=0;
 2008              		.loc 1 194 11 is_stmt 0 view .LVU539
 2009 0044 2D4D     		ldr	r5, .L140+20
 2010 0046 0024     		movs	r4, #0
 2011 0048 2C70     		strb	r4, [r5]
 195:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 2012              		.loc 1 195 2 is_stmt 1 view .LVU540
 195:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 2013              		.loc 1 195 4 is_stmt 0 view .LVU541
 2014 004a 2D4B     		ldr	r3, .L140+24
 2015 004c 1C70     		strb	r4, [r3]
 196:Core/Src/main.c **** 	ID_list[SLAVE1]= 0;
 2016              		.loc 1 196 2 is_stmt 1 view .LVU542
 196:Core/Src/main.c **** 	ID_list[SLAVE1]= 0;
 2017              		.loc 1 196 12 is_stmt 0 view .LVU543
 2018 004e 2D4B     		ldr	r3, .L140+28
 2019 0050 FF22     		movs	r2, #255
 2020 0052 1A70     		strb	r2, [r3]
 197:Core/Src/main.c **** 	ID_list[SLAVE2]= 0;
 2021              		.loc 1 197 2 is_stmt 1 view .LVU544
 197:Core/Src/main.c **** 	ID_list[SLAVE2]= 0;
 2022              		.loc 1 197 17 is_stmt 0 view .LVU545
 2023 0054 5C70     		strb	r4, [r3, #1]
 198:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 2024              		.loc 1 198 2 is_stmt 1 view .LVU546
 198:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 2025              		.loc 1 198 17 is_stmt 0 view .LVU547
 2026 0056 9C70     		strb	r4, [r3, #2]
 200:Core/Src/main.c **** 	/*
 2027              		.loc 1 200 2 is_stmt 1 view .LVU548
 200:Core/Src/main.c **** 	/*
 2028              		.loc 1 200 8 is_stmt 0 view .LVU549
 2029 0058 2B4B     		ldr	r3, .L140+32
 2030 005a 1C70     		strb	r4, [r3]
 207:Core/Src/main.c **** 	lcd_init();
 2031              		.loc 1 207 2 is_stmt 1 view .LVU550
 2032 005c 4FF47A70 		mov	r0, #1000
 2033 0060 FFF7FEFF 		bl	HAL_Delay
 2034              	.LVL123:
 208:Core/Src/main.c **** 	lcd_clear();
 2035              		.loc 1 208 2 view .LVU551
 2036 0064 FFF7FEFF 		bl	lcd_init
 2037              	.LVL124:
 209:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 2038              		.loc 1 209 2 view .LVU552
 2039 0068 FFF7FEFF 		bl	lcd_clear
 2040              	.LVL125:
 210:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 2041              		.loc 1 210 2 view .LVU553
ARM GAS  /tmp/cc6zIoes.s 			page 59


 2042 006c 2146     		mov	r1, r4
 2043 006e 2046     		mov	r0, r4
 2044 0070 FFF7FEFF 		bl	lcd_set_pos
 2045              	.LVL126:
 211:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 2046              		.loc 1 211 2 view .LVU554
 2047 0074 2548     		ldr	r0, .L140+36
 2048 0076 FFF7FEFF 		bl	lcd_write_string
 2049              	.LVL127:
 212:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 2050              		.loc 1 212 2 view .LVU555
 2051 007a 0C21     		movs	r1, #12
 2052 007c 2046     		mov	r0, r4
 2053 007e FFF7FEFF 		bl	lcd_set_pos
 2054              	.LVL128:
 213:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 2055              		.loc 1 213 2 view .LVU556
 2056 0082 234F     		ldr	r7, .L140+40
 2057 0084 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2058 0086 F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 2059 0088 FFF7FEFF 		bl	lcd_data
 2060              	.LVL129:
 214:Core/Src/main.c **** 	lcd_write_string("S2-00:");
 2061              		.loc 1 214 2 view .LVU557
 2062 008c 2146     		mov	r1, r4
 2063 008e 0120     		movs	r0, #1
 2064 0090 FFF7FEFF 		bl	lcd_set_pos
 2065              	.LVL130:
 215:Core/Src/main.c **** 	lcd_set_pos(1, 0x6);
 2066              		.loc 1 215 2 view .LVU558
 2067 0094 1F48     		ldr	r0, .L140+44
 2068 0096 FFF7FEFF 		bl	lcd_write_string
 2069              	.LVL131:
 216:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 2070              		.loc 1 216 2 view .LVU559
 2071 009a 0621     		movs	r1, #6
 2072 009c 0120     		movs	r0, #1
 2073 009e FFF7FEFF 		bl	lcd_set_pos
 2074              	.LVL132:
 217:Core/Src/main.c **** 	lcd_set_pos(1, 0x9);
 2075              		.loc 1 217 2 view .LVU560
 2076 00a2 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 2077 00a6 F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 2078 00a8 FFF7FEFF 		bl	lcd_data
 2079              	.LVL133:
 218:Core/Src/main.c **** 	lcd_write_string("S1-00:");
 2080              		.loc 1 218 2 view .LVU561
 2081 00ac 0921     		movs	r1, #9
 2082 00ae 0120     		movs	r0, #1
 2083 00b0 FFF7FEFF 		bl	lcd_set_pos
 2084              	.LVL134:
 219:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 2085              		.loc 1 219 2 view .LVU562
 2086 00b4 1848     		ldr	r0, .L140+48
 2087 00b6 FFF7FEFF 		bl	lcd_write_string
 2088              	.LVL135:
 220:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
ARM GAS  /tmp/cc6zIoes.s 			page 60


 2089              		.loc 1 220 2 view .LVU563
 2090 00ba 0F21     		movs	r1, #15
 2091 00bc 0120     		movs	r0, #1
 2092 00be FFF7FEFF 		bl	lcd_set_pos
 2093              	.LVL136:
 221:Core/Src/main.c **** 	old_digit1 = digit1;
 2094              		.loc 1 221 2 view .LVU564
 2095 00c2 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2096 00c4 F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 2097 00c6 FFF7FEFF 		bl	lcd_data
 2098              	.LVL137:
 222:Core/Src/main.c **** 	old_digit2=old_digit2;
 2099              		.loc 1 222 2 view .LVU565
 222:Core/Src/main.c **** 	old_digit2=old_digit2;
 2100              		.loc 1 222 13 is_stmt 0 view .LVU566
 2101 00ca 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 2102 00cc 134B     		ldr	r3, .L140+52
 2103 00ce 1A70     		strb	r2, [r3]
 223:Core/Src/main.c **** 	old_num_slave= num_slave;
 2104              		.loc 1 223 2 is_stmt 1 view .LVU567
 224:Core/Src/main.c **** 	/* USER CODE END 2 */
 2105              		.loc 1 224 2 view .LVU568
 224:Core/Src/main.c **** 	/* USER CODE END 2 */
 2106              		.loc 1 224 15 is_stmt 0 view .LVU569
 2107 00d0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2108 00d2 134B     		ldr	r3, .L140+56
 2109 00d4 1A70     		strb	r2, [r3]
 2110              	.L138:
 229:Core/Src/main.c **** 	{
 2111              		.loc 1 229 2 is_stmt 1 discriminator 1 view .LVU570
 235:Core/Src/main.c **** 		/// segment_display_task();
 2112              		.loc 1 235 3 discriminator 1 view .LVU571
 2113 00d6 FFF7FEFF 		bl	task_timer
 2114              	.LVL138:
 238:Core/Src/main.c **** 		RS485_RX_Task();
 2115              		.loc 1 238 3 discriminator 1 view .LVU572
 2116 00da FFF7FEFF 		bl	key_read_task
 2117              	.LVL139:
 239:Core/Src/main.c **** 		main_task();
 2118              		.loc 1 239 3 discriminator 1 view .LVU573
 2119 00de FFF7FEFF 		bl	RS485_RX_Task
 2120              	.LVL140:
 240:Core/Src/main.c **** 	}
 2121              		.loc 1 240 3 discriminator 1 view .LVU574
 2122 00e2 FFF7FEFF 		bl	main_task
 2123              	.LVL141:
 229:Core/Src/main.c **** 	{
 2124              		.loc 1 229 8 discriminator 1 view .LVU575
 2125 00e6 F6E7     		b	.L138
 2126              	.L141:
 2127              		.align	2
 2128              	.L140:
 2129 00e8 00000000 		.word	htim4
 2130 00ec 00000240 		.word	1073872896
 2131 00f0 00000000 		.word	.LANCHOR29
 2132 00f4 00000000 		.word	huart4
 2133 00f8 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/cc6zIoes.s 			page 61


 2134 00fc 00000000 		.word	.LANCHOR3
 2135 0100 00000000 		.word	.LANCHOR26
 2136 0104 00000000 		.word	.LANCHOR19
 2137 0108 00000000 		.word	.LANCHOR13
 2138 010c 34000000 		.word	.LC4
 2139 0110 00000000 		.word	.LANCHOR1
 2140 0114 00000000 		.word	.LC7
 2141 0118 08000000 		.word	.LC8
 2142 011c 00000000 		.word	.LANCHOR22
 2143 0120 00000000 		.word	.LANCHOR30
 2144 0124 00000000 		.word	.LANCHOR0
 2145              		.cfi_endproc
 2146              	.LFE130:
 2148              		.global	temp
 2149              		.global	pTX_msg
 2150              		.global	pRX_msg
 2151              		.global	RX_msg
 2152              		.global	TX_msg
 2153              		.global	ID_list
 2154              		.global	ID
 2155              		.global	event_buffer
 2156              		.global	rx_buffer
 2157              		.global	digit2_buf
 2158              		.global	digit1_buf
 2159              		.global	x
 2160              		.global	rx_temp
 2161              		.global	digit_table
 2162              		.global	lcd_process
 2163              		.global	data
 2164              		.global	cmd
 2165              		.global	digit2_update
 2166              		.global	digit1_update
 2167              		.global	is_EN
 2168              		.global	old_digit2
 2169              		.global	old_digit1
 2170              		.global	old_num_slave
 2171              		.global	digit2
 2172              		.global	digit1
 2173              		.global	key2_ID
 2174              		.global	key1_ID
 2175              		.global	num_slave
 2176              		.global	error
 2177              		.global	event
 2178              		.global	old_state
 2179              		.global	state
 2180              		.global	key2_data
 2181              		.global	key1_data
 2182              		.global	TX2_delay_val
 2183              		.global	d_timer_TX2
 2184              		.global	TX1_delay_val
 2185              		.global	d_timer_TX1
 2186              		.global	d_timer_update_digit
 2187              		.global	d_timer_50ms
 2188              		.global	d_timer_30ms
 2189              		.global	tx1_buffer
 2190              		.global	tx2_buffer
 2191              		.global	flag_digit_1
ARM GAS  /tmp/cc6zIoes.s 			page 62


 2192              		.global	n_querry
 2193              		.global	f_timer_50ms
 2194              		.global	f_timer_30ms
 2195              		.global	f_waiting_rx
 2196              		.global	f_timer_update_digit
 2197              		.global	f_timer_10ms
 2198              		.global	f_seg_timer_500ms
 2199              		.global	f_timer_TX
 2200              		.global	tx_timeout
 2201              		.global	f_read_msg
 2202              		.global	f_querry
 2203              		.global	f_busy
 2204              		.global	f_TX_ID
 2205              		.global	f_lcd_item
 2206              		.section	.bss.ID,"aw",%nobits
 2207              		.set	.LANCHOR26,. + 0
 2210              	ID:
 2211 0000 00       		.space	1
 2212              		.section	.bss.ID_list,"aw",%nobits
 2213              		.align	2
 2214              		.set	.LANCHOR19,. + 0
 2217              	ID_list:
 2218 0000 00000000 		.space	10
 2218      00000000 
 2218      0000
 2219              		.section	.bss.RX_msg,"aw",%nobits
 2220              		.align	2
 2221              		.set	.LANCHOR18,. + 0
 2224              	RX_msg:
 2225 0000 00000000 		.space	4
 2226              		.section	.bss.TX_msg,"aw",%nobits
 2227              		.align	2
 2228              		.set	.LANCHOR21,. + 0
 2231              	TX_msg:
 2232 0000 00000000 		.space	6
 2232      0000
 2233              		.section	.bss.cmd,"aw",%nobits
 2236              	cmd:
 2237 0000 00       		.space	1
 2238              		.section	.bss.d_timer_30ms,"aw",%nobits
 2239              		.set	.LANCHOR5,. + 0
 2242              	d_timer_30ms:
 2243 0000 00       		.space	1
 2244              		.section	.bss.d_timer_50ms,"aw",%nobits
 2245              		.set	.LANCHOR9,. + 0
 2248              	d_timer_50ms:
 2249 0000 00       		.space	1
 2250              		.section	.bss.d_timer_TX1,"aw",%nobits
 2253              	d_timer_TX1:
 2254 0000 00       		.space	1
 2255              		.section	.bss.d_timer_TX2,"aw",%nobits
 2258              	d_timer_TX2:
 2259 0000 00       		.space	1
 2260              		.section	.bss.d_timer_update_digit,"aw",%nobits
 2261              		.set	.LANCHOR7,. + 0
 2264              	d_timer_update_digit:
 2265 0000 00       		.space	1
ARM GAS  /tmp/cc6zIoes.s 			page 63


 2266              		.section	.bss.data,"aw",%nobits
 2269              	data:
 2270 0000 00       		.space	1
 2271              		.section	.bss.digit1,"aw",%nobits
 2272              		.set	.LANCHOR2,. + 0
 2275              	digit1:
 2276 0000 00       		.space	1
 2277              		.section	.bss.digit1_buf,"aw",%nobits
 2278              		.align	2
 2281              	digit1_buf:
 2282 0000 00000000 		.space	66
 2282      00000000 
 2282      00000000 
 2282      00000000 
 2282      00000000 
 2283              		.section	.bss.digit1_update,"aw",%nobits
 2286              	digit1_update:
 2287 0000 00       		.space	1
 2288              		.section	.bss.digit2,"aw",%nobits
 2289              		.set	.LANCHOR0,. + 0
 2292              	digit2:
 2293 0000 00       		.space	1
 2294              		.section	.bss.digit2_buf,"aw",%nobits
 2295              		.align	2
 2298              	digit2_buf:
 2299 0000 00000000 		.space	66
 2299      00000000 
 2299      00000000 
 2299      00000000 
 2299      00000000 
 2300              		.section	.bss.digit2_update,"aw",%nobits
 2303              	digit2_update:
 2304 0000 00       		.space	1
 2305              		.section	.bss.error,"aw",%nobits
 2308              	error:
 2309 0000 00       		.space	1
 2310              		.section	.bss.event,"aw",%nobits
 2311              		.set	.LANCHOR24,. + 0
 2314              	event:
 2315 0000 00       		.space	1
 2316              		.section	.bss.event_buffer,"aw",%nobits
 2317              		.align	2
 2318              		.set	.LANCHOR14,. + 0
 2321              	event_buffer:
 2322 0000 00000000 		.space	66
 2322      00000000 
 2322      00000000 
 2322      00000000 
 2322      00000000 
 2323              		.section	.bss.f_TX_ID,"aw",%nobits
 2324              		.set	.LANCHOR25,. + 0
 2327              	f_TX_ID:
 2328 0000 00       		.space	1
 2329              		.section	.bss.f_busy,"aw",%nobits
 2332              	f_busy:
 2333 0000 00       		.space	1
 2334              		.section	.bss.f_lcd_item,"aw",%nobits
ARM GAS  /tmp/cc6zIoes.s 			page 64


 2337              	f_lcd_item:
 2338 0000 00       		.space	1
 2339              		.section	.bss.f_querry,"aw",%nobits
 2340              		.set	.LANCHOR10,. + 0
 2343              	f_querry:
 2344 0000 00       		.space	1
 2345              		.section	.bss.f_read_msg,"aw",%nobits
 2346              		.set	.LANCHOR16,. + 0
 2349              	f_read_msg:
 2350 0000 00       		.space	1
 2351              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 2354              	f_seg_timer_500ms:
 2355 0000 00       		.space	1
 2356              		.section	.bss.f_timer_10ms,"aw",%nobits
 2357              		.set	.LANCHOR4,. + 0
 2360              	f_timer_10ms:
 2361 0000 00       		.space	1
 2362              		.section	.bss.f_timer_30ms,"aw",%nobits
 2363              		.set	.LANCHOR6,. + 0
 2366              	f_timer_30ms:
 2367 0000 00       		.space	1
 2368              		.section	.bss.f_timer_50ms,"aw",%nobits
 2371              	f_timer_50ms:
 2372 0000 00       		.space	1
 2373              		.section	.bss.f_timer_TX,"aw",%nobits
 2376              	f_timer_TX:
 2377 0000 00       		.space	1
 2378              		.section	.bss.f_timer_update_digit,"aw",%nobits
 2379              		.set	.LANCHOR8,. + 0
 2382              	f_timer_update_digit:
 2383 0000 00       		.space	1
 2384              		.section	.bss.f_waiting_rx,"aw",%nobits
 2387              	f_waiting_rx:
 2388 0000 00       		.space	1
 2389              		.section	.bss.is_EN,"aw",%nobits
 2392              	is_EN:
 2393 0000 00       		.space	1
 2394              		.section	.bss.key1_ID,"aw",%nobits
 2397              	key1_ID:
 2398 0000 00       		.space	1
 2399              		.section	.bss.key1_data,"aw",%nobits
 2400              		.set	.LANCHOR11,. + 0
 2403              	key1_data:
 2404 0000 00       		.space	1
 2405              		.section	.bss.key2_ID,"aw",%nobits
 2408              	key2_ID:
 2409 0000 00       		.space	1
 2410              		.section	.bss.key2_data,"aw",%nobits
 2411              		.set	.LANCHOR12,. + 0
 2414              	key2_data:
 2415 0000 00       		.space	1
 2416              		.section	.bss.n_querry,"aw",%nobits
 2419              	n_querry:
 2420 0000 00       		.space	1
 2421              		.section	.bss.num_slave,"aw",%nobits
 2422              		.set	.LANCHOR3,. + 0
 2425              	num_slave:
ARM GAS  /tmp/cc6zIoes.s 			page 65


 2426 0000 00       		.space	1
 2427              		.section	.bss.old_digit1,"aw",%nobits
 2428              		.set	.LANCHOR22,. + 0
 2431              	old_digit1:
 2432 0000 00       		.space	1
 2433              		.section	.bss.old_digit2,"aw",%nobits
 2434              		.set	.LANCHOR23,. + 0
 2437              	old_digit2:
 2438 0000 00       		.space	1
 2439              		.section	.bss.old_num_slave,"aw",%nobits
 2440              		.set	.LANCHOR30,. + 0
 2443              	old_num_slave:
 2444 0000 00       		.space	1
 2445              		.section	.bss.old_state,"aw",%nobits
 2446              		.set	.LANCHOR27,. + 0
 2449              	old_state:
 2450 0000 00       		.space	1
 2451              		.section	.bss.pRX_msg,"aw",%nobits
 2452              		.align	2
 2453              		.set	.LANCHOR17,. + 0
 2456              	pRX_msg:
 2457 0000 00000000 		.space	4
 2458              		.section	.bss.pTX_msg,"aw",%nobits
 2459              		.align	2
 2462              	pTX_msg:
 2463 0000 00000000 		.space	4
 2464              		.section	.bss.rx_buffer,"aw",%nobits
 2465              		.align	2
 2466              		.set	.LANCHOR15,. + 0
 2469              	rx_buffer:
 2470 0000 00000000 		.space	66
 2470      00000000 
 2470      00000000 
 2470      00000000 
 2470      00000000 
 2471              		.section	.bss.rx_temp,"aw",%nobits
 2472              		.set	.LANCHOR29,. + 0
 2475              	rx_temp:
 2476 0000 00       		.space	1
 2477              		.section	.bss.state,"aw",%nobits
 2478              		.set	.LANCHOR13,. + 0
 2481              	state:
 2482 0000 00       		.space	1
 2483              		.section	.bss.temp,"aw",%nobits
 2484              		.set	.LANCHOR20,. + 0
 2487              	temp:
 2488 0000 00       		.space	1
 2489              		.section	.bss.tx_timeout,"aw",%nobits
 2490              		.set	.LANCHOR28,. + 0
 2493              	tx_timeout:
 2494 0000 00       		.space	1
 2495              		.section	.data.TX1_delay_val,"aw"
 2498              	TX1_delay_val:
 2499 0000 FA       		.byte	-6
 2500              		.section	.data.TX2_delay_val,"aw"
 2503              	TX2_delay_val:
 2504 0000 FA       		.byte	-6
ARM GAS  /tmp/cc6zIoes.s 			page 66


 2505              		.section	.data.digit_table,"aw"
 2506              		.align	2
 2507              		.set	.LANCHOR1,. + 0
 2510              	digit_table:
 2511 0000 30313233 		.ascii	"0123456789abcdef-"
 2511      34353637 
 2511      38396162 
 2511      63646566 
 2511      2D
 2512              		.section	.data.flag_digit_1,"aw"
 2515              	flag_digit_1:
 2516 0000 01       		.byte	1
 2517              		.section	.data.lcd_process,"aw"
 2520              	lcd_process:
 2521 0000 04       		.byte	4
 2522              		.section	.data.tx1_buffer,"aw"
 2523              		.align	2
 2526              	tx1_buffer:
 2527 0000 61626364 		.ascii	"abcdef"
 2527      6566
 2528              		.section	.data.tx2_buffer,"aw"
 2529              		.align	2
 2532              	tx2_buffer:
 2533 0000 31323334 		.ascii	"123456789\000"
 2533      35363738 
 2533      3900
 2534              		.section	.data.x,"aw"
 2537              	x:
 2538 0000 01       		.byte	1
 2539              		.text
 2540              	.Letext0:
 2541              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2542              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2543              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2544              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2545              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2546              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2547              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2548              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2549              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2550              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2551              		.file 13 "Core/Inc/tim.h"
 2552              		.file 14 "Core/Inc/usart.h"
 2553              		.file 15 "Core/Inc/buffer.h"
 2554              		.file 16 "Core/Inc/lcd16x2.h"
 2555              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2556              		.file 18 "Core/Inc/gpio.h"
 2557              		.file 19 "<built-in>"
ARM GAS  /tmp/cc6zIoes.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc6zIoes.s:20     .text.update_lcd:0000000000000000 $t
     /tmp/cc6zIoes.s:26     .text.update_lcd:0000000000000000 update_lcd
     /tmp/cc6zIoes.s:114    .text.update_lcd:0000000000000058 $d
     /tmp/cc6zIoes.s:122    .text.task_timer:0000000000000000 $t
     /tmp/cc6zIoes.s:128    .text.task_timer:0000000000000000 task_timer
     /tmp/cc6zIoes.s:221    .text.task_timer:0000000000000060 $d
     /tmp/cc6zIoes.s:232    .text.key_read_task:0000000000000000 $t
     /tmp/cc6zIoes.s:238    .text.key_read_task:0000000000000000 key_read_task
     /tmp/cc6zIoes.s:374    .text.key_read_task:0000000000000094 $d
     /tmp/cc6zIoes.s:385    .text.RS485_RX_Task:0000000000000000 $t
     /tmp/cc6zIoes.s:391    .text.RS485_RX_Task:0000000000000000 RS485_RX_Task
     /tmp/cc6zIoes.s:482    .text.RS485_RX_Task:0000000000000060 $d
     /tmp/cc6zIoes.s:491    .rodata.display_state_slave.str1.4:0000000000000000 $d
     /tmp/cc6zIoes.s:513    .text.display_state_slave:0000000000000000 $t
     /tmp/cc6zIoes.s:519    .text.display_state_slave:0000000000000000 display_state_slave
     /tmp/cc6zIoes.s:818    .text.display_state_slave:000000000000019c $d
     /tmp/cc6zIoes.s:835    .text.check_slave:0000000000000000 $t
     /tmp/cc6zIoes.s:841    .text.check_slave:0000000000000000 check_slave
     /tmp/cc6zIoes.s:934    .text.check_slave:0000000000000064 $d
     /tmp/cc6zIoes.s:943    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/cc6zIoes.s:949    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/cc6zIoes.s:1136   .text.RS485_Read_Message:00000000000000b4 $d
     /tmp/cc6zIoes.s:1147   .text.RS485_Send_Message:0000000000000000 $t
     /tmp/cc6zIoes.s:1153   .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/cc6zIoes.s:1222   .text.RS485_Send_Message:0000000000000040 $d
     /tmp/cc6zIoes.s:1229   .text.main_task:0000000000000000 $t
     /tmp/cc6zIoes.s:1235   .text.main_task:0000000000000000 main_task
     /tmp/cc6zIoes.s:1630   .text.main_task:00000000000001d4 $d
     /tmp/cc6zIoes.s:1650   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc6zIoes.s:1656   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc6zIoes.s:1683   .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/cc6zIoes.s:1689   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc6zIoes.s:1695   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc6zIoes.s:1734   .text.HAL_UART_RxCpltCallback:0000000000000020 $d
     /tmp/cc6zIoes.s:1741   .text.Error_Handler:0000000000000000 $t
     /tmp/cc6zIoes.s:1747   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc6zIoes.s:1779   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc6zIoes.s:1785   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc6zIoes.s:1933   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/cc6zIoes.s:1939   .rodata.main.str1.4:0000000000000000 $d
     /tmp/cc6zIoes.s:1946   .text.main:0000000000000000 $t
     /tmp/cc6zIoes.s:1952   .text.main:0000000000000000 main
     /tmp/cc6zIoes.s:2129   .text.main:00000000000000e8 $d
     /tmp/cc6zIoes.s:2487   .bss.temp:0000000000000000 temp
     /tmp/cc6zIoes.s:2462   .bss.pTX_msg:0000000000000000 pTX_msg
     /tmp/cc6zIoes.s:2456   .bss.pRX_msg:0000000000000000 pRX_msg
     /tmp/cc6zIoes.s:2224   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/cc6zIoes.s:2231   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/cc6zIoes.s:2217   .bss.ID_list:0000000000000000 ID_list
     /tmp/cc6zIoes.s:2210   .bss.ID:0000000000000000 ID
     /tmp/cc6zIoes.s:2321   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/cc6zIoes.s:2469   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/cc6zIoes.s:2298   .bss.digit2_buf:0000000000000000 digit2_buf
     /tmp/cc6zIoes.s:2281   .bss.digit1_buf:0000000000000000 digit1_buf
     /tmp/cc6zIoes.s:2537   .data.x:0000000000000000 x
ARM GAS  /tmp/cc6zIoes.s 			page 68


     /tmp/cc6zIoes.s:2475   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/cc6zIoes.s:2510   .data.digit_table:0000000000000000 digit_table
     /tmp/cc6zIoes.s:2520   .data.lcd_process:0000000000000000 lcd_process
     /tmp/cc6zIoes.s:2269   .bss.data:0000000000000000 data
     /tmp/cc6zIoes.s:2236   .bss.cmd:0000000000000000 cmd
     /tmp/cc6zIoes.s:2303   .bss.digit2_update:0000000000000000 digit2_update
     /tmp/cc6zIoes.s:2286   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/cc6zIoes.s:2392   .bss.is_EN:0000000000000000 is_EN
     /tmp/cc6zIoes.s:2437   .bss.old_digit2:0000000000000000 old_digit2
     /tmp/cc6zIoes.s:2431   .bss.old_digit1:0000000000000000 old_digit1
     /tmp/cc6zIoes.s:2443   .bss.old_num_slave:0000000000000000 old_num_slave
     /tmp/cc6zIoes.s:2292   .bss.digit2:0000000000000000 digit2
     /tmp/cc6zIoes.s:2275   .bss.digit1:0000000000000000 digit1
     /tmp/cc6zIoes.s:2408   .bss.key2_ID:0000000000000000 key2_ID
     /tmp/cc6zIoes.s:2397   .bss.key1_ID:0000000000000000 key1_ID
     /tmp/cc6zIoes.s:2425   .bss.num_slave:0000000000000000 num_slave
     /tmp/cc6zIoes.s:2308   .bss.error:0000000000000000 error
     /tmp/cc6zIoes.s:2314   .bss.event:0000000000000000 event
     /tmp/cc6zIoes.s:2449   .bss.old_state:0000000000000000 old_state
     /tmp/cc6zIoes.s:2481   .bss.state:0000000000000000 state
     /tmp/cc6zIoes.s:2414   .bss.key2_data:0000000000000000 key2_data
     /tmp/cc6zIoes.s:2403   .bss.key1_data:0000000000000000 key1_data
     /tmp/cc6zIoes.s:2503   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/cc6zIoes.s:2258   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/cc6zIoes.s:2498   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/cc6zIoes.s:2253   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/cc6zIoes.s:2264   .bss.d_timer_update_digit:0000000000000000 d_timer_update_digit
     /tmp/cc6zIoes.s:2248   .bss.d_timer_50ms:0000000000000000 d_timer_50ms
     /tmp/cc6zIoes.s:2242   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/cc6zIoes.s:2526   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/cc6zIoes.s:2532   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/cc6zIoes.s:2515   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/cc6zIoes.s:2419   .bss.n_querry:0000000000000000 n_querry
     /tmp/cc6zIoes.s:2371   .bss.f_timer_50ms:0000000000000000 f_timer_50ms
     /tmp/cc6zIoes.s:2366   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/cc6zIoes.s:2387   .bss.f_waiting_rx:0000000000000000 f_waiting_rx
     /tmp/cc6zIoes.s:2382   .bss.f_timer_update_digit:0000000000000000 f_timer_update_digit
     /tmp/cc6zIoes.s:2360   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/cc6zIoes.s:2354   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/cc6zIoes.s:2376   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/cc6zIoes.s:2493   .bss.tx_timeout:0000000000000000 tx_timeout
     /tmp/cc6zIoes.s:2349   .bss.f_read_msg:0000000000000000 f_read_msg
     /tmp/cc6zIoes.s:2343   .bss.f_querry:0000000000000000 f_querry
     /tmp/cc6zIoes.s:2332   .bss.f_busy:0000000000000000 f_busy
     /tmp/cc6zIoes.s:2327   .bss.f_TX_ID:0000000000000000 f_TX_ID
     /tmp/cc6zIoes.s:2337   .bss.f_lcd_item:0000000000000000 f_lcd_item
     /tmp/cc6zIoes.s:2211   .bss.ID:0000000000000000 $d
     /tmp/cc6zIoes.s:2213   .bss.ID_list:0000000000000000 $d
     /tmp/cc6zIoes.s:2220   .bss.RX_msg:0000000000000000 $d
     /tmp/cc6zIoes.s:2227   .bss.TX_msg:0000000000000000 $d
     /tmp/cc6zIoes.s:2237   .bss.cmd:0000000000000000 $d
     /tmp/cc6zIoes.s:2243   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/cc6zIoes.s:2249   .bss.d_timer_50ms:0000000000000000 $d
     /tmp/cc6zIoes.s:2254   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/cc6zIoes.s:2259   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/cc6zIoes.s:2265   .bss.d_timer_update_digit:0000000000000000 $d
     /tmp/cc6zIoes.s:2270   .bss.data:0000000000000000 $d
ARM GAS  /tmp/cc6zIoes.s 			page 69


     /tmp/cc6zIoes.s:2276   .bss.digit1:0000000000000000 $d
     /tmp/cc6zIoes.s:2278   .bss.digit1_buf:0000000000000000 $d
     /tmp/cc6zIoes.s:2287   .bss.digit1_update:0000000000000000 $d
     /tmp/cc6zIoes.s:2293   .bss.digit2:0000000000000000 $d
     /tmp/cc6zIoes.s:2295   .bss.digit2_buf:0000000000000000 $d
     /tmp/cc6zIoes.s:2304   .bss.digit2_update:0000000000000000 $d
     /tmp/cc6zIoes.s:2309   .bss.error:0000000000000000 $d
     /tmp/cc6zIoes.s:2315   .bss.event:0000000000000000 $d
     /tmp/cc6zIoes.s:2317   .bss.event_buffer:0000000000000000 $d
     /tmp/cc6zIoes.s:2328   .bss.f_TX_ID:0000000000000000 $d
     /tmp/cc6zIoes.s:2333   .bss.f_busy:0000000000000000 $d
     /tmp/cc6zIoes.s:2338   .bss.f_lcd_item:0000000000000000 $d
     /tmp/cc6zIoes.s:2344   .bss.f_querry:0000000000000000 $d
     /tmp/cc6zIoes.s:2350   .bss.f_read_msg:0000000000000000 $d
     /tmp/cc6zIoes.s:2355   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/cc6zIoes.s:2361   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/cc6zIoes.s:2367   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/cc6zIoes.s:2372   .bss.f_timer_50ms:0000000000000000 $d
     /tmp/cc6zIoes.s:2377   .bss.f_timer_TX:0000000000000000 $d
     /tmp/cc6zIoes.s:2383   .bss.f_timer_update_digit:0000000000000000 $d
     /tmp/cc6zIoes.s:2388   .bss.f_waiting_rx:0000000000000000 $d
     /tmp/cc6zIoes.s:2393   .bss.is_EN:0000000000000000 $d
     /tmp/cc6zIoes.s:2398   .bss.key1_ID:0000000000000000 $d
     /tmp/cc6zIoes.s:2404   .bss.key1_data:0000000000000000 $d
     /tmp/cc6zIoes.s:2409   .bss.key2_ID:0000000000000000 $d
     /tmp/cc6zIoes.s:2415   .bss.key2_data:0000000000000000 $d
     /tmp/cc6zIoes.s:2420   .bss.n_querry:0000000000000000 $d
     /tmp/cc6zIoes.s:2426   .bss.num_slave:0000000000000000 $d
     /tmp/cc6zIoes.s:2432   .bss.old_digit1:0000000000000000 $d
     /tmp/cc6zIoes.s:2438   .bss.old_digit2:0000000000000000 $d
     /tmp/cc6zIoes.s:2444   .bss.old_num_slave:0000000000000000 $d
     /tmp/cc6zIoes.s:2450   .bss.old_state:0000000000000000 $d
     /tmp/cc6zIoes.s:2452   .bss.pRX_msg:0000000000000000 $d
     /tmp/cc6zIoes.s:2459   .bss.pTX_msg:0000000000000000 $d
     /tmp/cc6zIoes.s:2465   .bss.rx_buffer:0000000000000000 $d
     /tmp/cc6zIoes.s:2476   .bss.rx_temp:0000000000000000 $d
     /tmp/cc6zIoes.s:2482   .bss.state:0000000000000000 $d
     /tmp/cc6zIoes.s:2488   .bss.temp:0000000000000000 $d
     /tmp/cc6zIoes.s:2494   .bss.tx_timeout:0000000000000000 $d
     /tmp/cc6zIoes.s:2506   .data.digit_table:0000000000000000 $d
     /tmp/cc6zIoes.s:2523   .data.tx1_buffer:0000000000000000 $d
     /tmp/cc6zIoes.s:2529   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
lcd_set_pos
lcd_data
buffer_push
lcd_clear
lcd_write_string
HAL_Delay
HAL_GPIO_WritePin
HAL_UART_Transmit
huart4
buffer_pop
htim4
HAL_UART_Receive_IT
memset
ARM GAS  /tmp/cc6zIoes.s 			page 70


HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
