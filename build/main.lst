ARM GAS  /tmp/ccLnQTJ0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.update_lcd,"ax",%progbits
  18              		.align	1
  19              		.global	update_lcd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	update_lcd:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "buffer.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccLnQTJ0.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** #define RAND __TIME__
  49:Core/Src/main.c **** uint8_t f_lcd_item =0;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** uint8_t f_busy;
  52:Core/Src/main.c **** uint8_t f_querry=0;
  53:Core/Src/main.c **** uint8_t f_read_msg;
  54:Core/Src/main.c **** uint8_t tx_timeout = 0;
  55:Core/Src/main.c **** unsigned char f_timer_TX = 0;
  56:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  57:Core/Src/main.c **** unsigned char f_timer_10ms = 0;
  58:Core/Src/main.c **** unsigned char f_timer_20ms = 0;
  59:Core/Src/main.c **** unsigned char f_waiting_rx = 0;
  60:Core/Src/main.c **** unsigned char f_timer_30ms = 0;
  61:Core/Src/main.c **** unsigned char f_timer_50ms = 0;
  62:Core/Src/main.c **** unsigned char n_querry = 0;
  63:Core/Src/main.c **** unsigned char flag_digit_1 = 1;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** unsigned char tx2_buffer[10] = {"123456789"};
  66:Core/Src/main.c **** unsigned char tx1_buffer[6] = {"abcdef"};
  67:Core/Src/main.c **** unsigned char d_timer_30ms;
  68:Core/Src/main.c **** unsigned char d_timer_50ms;
  69:Core/Src/main.c **** unsigned char d_timer_20ms;
  70:Core/Src/main.c **** unsigned char d_timer_TX1;
  71:Core/Src/main.c **** unsigned char TX1_delay_val = 250;
  72:Core/Src/main.c **** unsigned char d_timer_TX2;
  73:Core/Src/main.c **** unsigned char TX2_delay_val = 250;
  74:Core/Src/main.c **** unsigned char key1_data, key2_data;
  75:Core/Src/main.c **** unsigned char state, event, error;
  76:Core/Src/main.c **** unsigned char num_slave=0;
  77:Core/Src/main.c **** uint8_t key1_ID,key2_ID;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** unsigned char digit1, digit2;
  80:Core/Src/main.c **** uint8_t old_num_slave, old_digit1,old_digit2;
  81:Core/Src/main.c **** // flag for LCD
  82:Core/Src/main.c **** unsigned char is_EN = 0;
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** unsigned char digit1_update = 0;
  85:Core/Src/main.c **** unsigned char digit2_update = 0;
  86:Core/Src/main.c **** unsigned char cmd, data;
ARM GAS  /tmp/ccLnQTJ0.s 			page 3


  87:Core/Src/main.c **** unsigned char lcd_process = 4;
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** char digit_table[17] = {"0123456789abcdef-"};
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** uint8_t rx_temp;
  92:Core/Src/main.c **** uint8_t x=1;
  93:Core/Src/main.c **** circular_buffer digit1_buf;
  94:Core/Src/main.c **** circular_buffer digit2_buf;
  95:Core/Src/main.c **** circular_buffer rx_buffer;
  96:Core/Src/main.c **** circular_buffer event_buffer;
  97:Core/Src/main.c **** uint8_t ID;
  98:Core/Src/main.c **** uint8_t ID_list[10];
  99:Core/Src/main.c **** uint8_t TX_msg[6];
 100:Core/Src/main.c **** uint8_t RX_msg[4];
 101:Core/Src/main.c **** uint8_t *pRX_msg;
 102:Core/Src/main.c **** uint8_t *pTX_msg;
 103:Core/Src/main.c **** uint8_t temp;
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END PV */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 108:Core/Src/main.c **** void SystemClock_Config(void);
 109:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 110:Core/Src/main.c **** void RS485_RX_Task(void);
 111:Core/Src/main.c **** void RS485_TX_Task(void);
 112:Core/Src/main.c **** void task_timer(void);
 113:Core/Src/main.c **** void counting_task(void);
 114:Core/Src/main.c **** void uart_TX2_task(void);
 115:Core/Src/main.c **** void uart_TX1_task(void);
 116:Core/Src/main.c **** void uart_RX1_task(void);
 117:Core/Src/main.c **** void uart_RX2_task(void);
 118:Core/Src/main.c **** void segment_display_task(void);
 119:Core/Src/main.c **** void lcd_display_task(void);
 120:Core/Src/main.c **** void key_read_task(void);
 121:Core/Src/main.c **** void main_task(void);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** void seven_segment_driver(char input, char select_digit);
 124:Core/Src/main.c **** void TX1_delay_update(void);
 125:Core/Src/main.c **** void TX2_delay_update(void);
 126:Core/Src/main.c **** void m_send_to_lcd(char data);
 127:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 128:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 129:Core/Src/main.c **** void Set_Receiver_Port1(void);
 130:Core/Src/main.c **** void Set_Receiver_Port2(void);
 131:Core/Src/main.c **** void RS485_Send_Message(void);
 132:Core/Src/main.c **** void RS485_Read_Message(void);
 133:Core/Src/main.c **** void check_slave(void);
 134:Core/Src/main.c **** void update_lcd(uint8_t* itm);
 135:Core/Src/main.c **** /*
 136:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 137:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 138:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 139:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
 140:Core/Src/main.c **** */
 141:Core/Src/main.c **** /* USER CODE END PFP */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
ARM GAS  /tmp/ccLnQTJ0.s 			page 4


 144:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /* USER CODE END 0 */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****  * @brief  The application entry point.
 150:Core/Src/main.c ****  * @retval int
 151:Core/Src/main.c ****  */
 152:Core/Src/main.c **** int main(void)
 153:Core/Src/main.c **** {
 154:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** 	/* USER CODE END 1 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 	/* MCU Configuration--------------------------------------------------------*/
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 161:Core/Src/main.c **** 	HAL_Init();
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 	/* USER CODE BEGIN Init */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** 	/* USER CODE END Init */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 	/* Configure the system clock */
 168:Core/Src/main.c **** 	SystemClock_Config();
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 	/* USER CODE BEGIN SysInit */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 	/* USER CODE END SysInit */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** 	/* Initialize all configured peripherals */
 175:Core/Src/main.c **** 	MX_GPIO_Init();
 176:Core/Src/main.c **** 	MX_TIM4_Init();
 177:Core/Src/main.c **** 	MX_UART4_Init();
 178:Core/Src/main.c **** 	MX_UART5_Init();
 179:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim4);
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); // Enable Receiver 1
 184:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** 	HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 187:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** 	digit1 = 16;
 190:Core/Src/main.c **** 	digit2 = 16;
 191:Core/Src/main.c **** 	num_slave=0;
 192:Core/Src/main.c **** 	ID=0;
 193:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 194:Core/Src/main.c **** 	ID_list[1]= 0;
 195:Core/Src/main.c **** 	ID_list[2]= 0;
 196:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 197:Core/Src/main.c **** 	state = STATE_TX;
 198:Core/Src/main.c **** 	/*
 199:Core/Src/main.c **** 	if (num_slave>0){
 200:Core/Src/main.c **** 		state = STATE_OPERATION;
ARM GAS  /tmp/ccLnQTJ0.s 			page 5


 201:Core/Src/main.c **** 	}else{
 202:Core/Src/main.c **** 		state=STATE_ASSIGNED_ADDR;
 203:Core/Src/main.c **** 	}*/
 204:Core/Src/main.c **** 	HAL_Delay(1000);
 205:Core/Src/main.c **** 	lcd_init();
 206:Core/Src/main.c **** 	lcd_clear();
 207:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 208:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 209:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 210:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 211:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 212:Core/Src/main.c **** 	lcd_write_string("S2:");
 213:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 214:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 215:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 216:Core/Src/main.c **** 	lcd_write_string("S1:");
 217:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 218:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 219:Core/Src/main.c **** 	old_digit1 = digit1;
 220:Core/Src/main.c **** 	old_digit2=old_digit2;
 221:Core/Src/main.c **** 	old_num_slave= num_slave;
 222:Core/Src/main.c **** 	/* USER CODE END 2 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** 	/* Infinite loop */
 225:Core/Src/main.c **** 	/* USER CODE BEGIN WHILE */
 226:Core/Src/main.c **** 	while (1)
 227:Core/Src/main.c **** 	{
 228:Core/Src/main.c **** 		/* USER CODE END WHILE */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** 		/* USER CODE BEGIN 3 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** 		task_timer();
 233:Core/Src/main.c **** 		/// segment_display_task();
 234:Core/Src/main.c **** 		lcd_display_task();
 235:Core/Src/main.c **** 		key_read_task();
 236:Core/Src/main.c **** 		RS485_RX_Task();
 237:Core/Src/main.c **** 		main_task();
 238:Core/Src/main.c **** 	}
 239:Core/Src/main.c **** 	/* USER CODE END 3 */
 240:Core/Src/main.c **** }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /**
 243:Core/Src/main.c ****  * @brief System Clock Configuration
 244:Core/Src/main.c ****  * @retval None
 245:Core/Src/main.c ****  */
 246:Core/Src/main.c **** void SystemClock_Config(void)
 247:Core/Src/main.c **** {
 248:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 249:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** 	/** Configure the main internal regulator output voltage
 252:Core/Src/main.c **** 	 */
 253:Core/Src/main.c **** 	__HAL_RCC_PWR_CLK_ENABLE();
 254:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** 	/** Initializes the RCC Oscillators according to the specified parameters
 257:Core/Src/main.c **** 	 * in the RCC_OscInitTypeDef structure.
ARM GAS  /tmp/ccLnQTJ0.s 			page 6


 258:Core/Src/main.c **** 	 */
 259:Core/Src/main.c **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 260:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 261:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 262:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 263:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 267:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 268:Core/Src/main.c **** 	{
 269:Core/Src/main.c **** 		Error_Handler();
 270:Core/Src/main.c **** 	}
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** 	/** Initializes the CPU, AHB and APB buses clocks
 273:Core/Src/main.c **** 	 */
 274:Core/Src/main.c **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RC
 275:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 276:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 277:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 281:Core/Src/main.c **** 	{
 282:Core/Src/main.c **** 		Error_Handler();
 283:Core/Src/main.c **** 	}
 284:Core/Src/main.c **** }
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** void update_lcd(uint8_t* itm){
  30              		.loc 1 288 30 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** 	if (lcd_process<4)return;
  35              		.loc 1 290 2 view .LVU1
  36              		.loc 1 290 17 is_stmt 0 view .LVU2
  37 0000 1A4B     		ldr	r3, .L8
  38 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  39              		.loc 1 290 5 view .LVU3
  40 0004 032B     		cmp	r3, #3
  41 0006 08D9     		bls	.L1
 291:Core/Src/main.c **** 	if (itm == &digit2){
  42              		.loc 1 291 2 is_stmt 1 view .LVU4
  43              		.loc 1 291 5 is_stmt 0 view .LVU5
  44 0008 194B     		ldr	r3, .L8+4
  45 000a 9842     		cmp	r0, r3
  46 000c 06D0     		beq	.L5
 292:Core/Src/main.c **** 		cmd = 0xC3;
 293:Core/Src/main.c **** 		data = digit_table[digit2];
 294:Core/Src/main.c **** 		lcd_process = 0;
 295:Core/Src/main.c **** 	}else if(itm ==&digit1){
  47              		.loc 1 295 8 is_stmt 1 view .LVU6
  48              		.loc 1 295 10 is_stmt 0 view .LVU7
ARM GAS  /tmp/ccLnQTJ0.s 			page 7


  49 000e 194B     		ldr	r3, .L8+8
  50 0010 9842     		cmp	r0, r3
  51 0012 10D0     		beq	.L6
 296:Core/Src/main.c **** 		cmd = 0xCF;
 297:Core/Src/main.c **** 		data = digit_table[digit1];
 298:Core/Src/main.c **** 		lcd_process = 0;
 299:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  52              		.loc 1 299 8 is_stmt 1 view .LVU8
  53              		.loc 1 299 10 is_stmt 0 view .LVU9
  54 0014 184B     		ldr	r3, .L8+12
  55 0016 9842     		cmp	r0, r3
  56 0018 1AD0     		beq	.L7
  57              	.L1:
 300:Core/Src/main.c **** 		cmd =0x8C;
 301:Core/Src/main.c **** 		data = digit_table[num_slave];
 302:Core/Src/main.c **** 		lcd_process = 0;
 303:Core/Src/main.c **** 	}
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** }
  58              		.loc 1 305 1 view .LVU10
  59 001a 7047     		bx	lr
  60              	.L5:
 292:Core/Src/main.c **** 		data = digit_table[digit2];
  61              		.loc 1 292 3 is_stmt 1 view .LVU11
 292:Core/Src/main.c **** 		data = digit_table[digit2];
  62              		.loc 1 292 7 is_stmt 0 view .LVU12
  63 001c 174B     		ldr	r3, .L8+16
  64 001e C322     		movs	r2, #195
  65 0020 1A70     		strb	r2, [r3]
 293:Core/Src/main.c **** 		lcd_process = 0;
  66              		.loc 1 293 3 is_stmt 1 view .LVU13
 293:Core/Src/main.c **** 		lcd_process = 0;
  67              		.loc 1 293 21 is_stmt 0 view .LVU14
  68 0022 134B     		ldr	r3, .L8+4
  69 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70 0026 164A     		ldr	r2, .L8+20
  71 0028 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 293:Core/Src/main.c **** 		lcd_process = 0;
  72              		.loc 1 293 8 view .LVU15
  73 002a 164B     		ldr	r3, .L8+24
  74 002c 1A70     		strb	r2, [r3]
 294:Core/Src/main.c **** 	}else if(itm ==&digit1){
  75              		.loc 1 294 3 is_stmt 1 view .LVU16
 294:Core/Src/main.c **** 	}else if(itm ==&digit1){
  76              		.loc 1 294 15 is_stmt 0 view .LVU17
  77 002e 0F4B     		ldr	r3, .L8
  78 0030 0022     		movs	r2, #0
  79 0032 1A70     		strb	r2, [r3]
  80 0034 7047     		bx	lr
  81              	.L6:
 296:Core/Src/main.c **** 		data = digit_table[digit1];
  82              		.loc 1 296 3 is_stmt 1 view .LVU18
 296:Core/Src/main.c **** 		data = digit_table[digit1];
  83              		.loc 1 296 7 is_stmt 0 view .LVU19
  84 0036 114B     		ldr	r3, .L8+16
  85 0038 CF22     		movs	r2, #207
  86 003a 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccLnQTJ0.s 			page 8


 297:Core/Src/main.c **** 		lcd_process = 0;
  87              		.loc 1 297 3 is_stmt 1 view .LVU20
 297:Core/Src/main.c **** 		lcd_process = 0;
  88              		.loc 1 297 21 is_stmt 0 view .LVU21
  89 003c 0D4B     		ldr	r3, .L8+8
  90 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91 0040 0F4A     		ldr	r2, .L8+20
  92 0042 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 297:Core/Src/main.c **** 		lcd_process = 0;
  93              		.loc 1 297 8 view .LVU22
  94 0044 0F4B     		ldr	r3, .L8+24
  95 0046 1A70     		strb	r2, [r3]
 298:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  96              		.loc 1 298 3 is_stmt 1 view .LVU23
 298:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  97              		.loc 1 298 15 is_stmt 0 view .LVU24
  98 0048 084B     		ldr	r3, .L8
  99 004a 0022     		movs	r2, #0
 100 004c 1A70     		strb	r2, [r3]
 101 004e 7047     		bx	lr
 102              	.L7:
 300:Core/Src/main.c **** 		data = digit_table[num_slave];
 103              		.loc 1 300 3 is_stmt 1 view .LVU25
 300:Core/Src/main.c **** 		data = digit_table[num_slave];
 104              		.loc 1 300 7 is_stmt 0 view .LVU26
 105 0050 0A4B     		ldr	r3, .L8+16
 106 0052 8C22     		movs	r2, #140
 107 0054 1A70     		strb	r2, [r3]
 301:Core/Src/main.c **** 		lcd_process = 0;
 108              		.loc 1 301 3 is_stmt 1 view .LVU27
 301:Core/Src/main.c **** 		lcd_process = 0;
 109              		.loc 1 301 21 is_stmt 0 view .LVU28
 110 0056 084B     		ldr	r3, .L8+12
 111 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 005a 094A     		ldr	r2, .L8+20
 113 005c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 301:Core/Src/main.c **** 		lcd_process = 0;
 114              		.loc 1 301 8 view .LVU29
 115 005e 094B     		ldr	r3, .L8+24
 116 0060 1A70     		strb	r2, [r3]
 302:Core/Src/main.c **** 	}
 117              		.loc 1 302 3 is_stmt 1 view .LVU30
 302:Core/Src/main.c **** 	}
 118              		.loc 1 302 15 is_stmt 0 view .LVU31
 119 0062 024B     		ldr	r3, .L8
 120 0064 0022     		movs	r2, #0
 121 0066 1A70     		strb	r2, [r3]
 122 0068 D7E7     		b	.L1
 123              	.L9:
 124 006a 00BF     		.align	2
 125              	.L8:
 126 006c 00000000 		.word	.LANCHOR0
 127 0070 00000000 		.word	.LANCHOR1
 128 0074 00000000 		.word	.LANCHOR5
 129 0078 00000000 		.word	.LANCHOR6
 130 007c 00000000 		.word	.LANCHOR2
 131 0080 00000000 		.word	.LANCHOR3
ARM GAS  /tmp/ccLnQTJ0.s 			page 9


 132 0084 00000000 		.word	.LANCHOR4
 133              		.cfi_endproc
 134              	.LFE132:
 136              		.section	.text.m_send_to_lcd,"ax",%progbits
 137              		.align	1
 138              		.global	m_send_to_lcd
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu fpv4-sp-d16
 144              	m_send_to_lcd:
 145              	.LVL1:
 146              	.LFB134:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** void lcd_display_task(void)
 309:Core/Src/main.c **** {
 310:Core/Src/main.c **** 	/*
 311:Core/Src/main.c **** 	if (digit2!=old_digit2){
 312:Core/Src/main.c **** 		cmd = 0xC3;
 313:Core/Src/main.c **** 		data = digit_table[digit2];
 314:Core/Src/main.c **** 		old_digit2=digit2;
 315:Core/Src/main.c **** 		lcd_process = 0;
 316:Core/Src/main.c **** 	}else if(digit1!=old_digit1){
 317:Core/Src/main.c **** 		cmd = 0xCF;
 318:Core/Src/main.c **** 		data = digit_table[digit1];
 319:Core/Src/main.c **** 		old_digit1 = digit1;
 320:Core/Src/main.c **** 		lcd_process = 0;
 321:Core/Src/main.c **** 	}else if(old_num_slave!=num_slave){
 322:Core/Src/main.c **** 		cmd =0x8C;
 323:Core/Src/main.c **** 		data = digit_table[num_slave];
 324:Core/Src/main.c **** 		old_num_slave = num_slave;
 325:Core/Src/main.c **** 		lcd_process = 0;
 326:Core/Src/main.c **** 	}
 327:Core/Src/main.c **** 	*/
 328:Core/Src/main.c **** 	
 329:Core/Src/main.c **** 	if(lcd_process>3) return;
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** 	switch (lcd_process)
 332:Core/Src/main.c **** 	{
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** 	case 0:
 335:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 336:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 337:Core/Src/main.c **** 		break;
 338:Core/Src/main.c **** 	case 1:
 339:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 340:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 341:Core/Src/main.c **** 		break;
 342:Core/Src/main.c **** 	case 2:
 343:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 344:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 345:Core/Src/main.c **** 		break;
 346:Core/Src/main.c **** 	case 3:
 347:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 348:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 349:Core/Src/main.c **** 		break;
ARM GAS  /tmp/ccLnQTJ0.s 			page 10


 350:Core/Src/main.c **** 	}
 351:Core/Src/main.c **** }
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** void m_send_to_lcd(char data)
 354:Core/Src/main.c **** {
 147              		.loc 1 354 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 354 1 is_stmt 0 view .LVU33
 152 0000 08B5     		push	{r3, lr}
 153              	.LCFI0:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 3, -8
 156              		.cfi_offset 14, -4
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** 	// writing data to pin PE0~PE3
 357:Core/Src/main.c **** 	GPIOE->ODR = (GPIOE->ODR & 0xFFFFFFF0) | data;
 157              		.loc 1 357 2 is_stmt 1 view .LVU34
 158              		.loc 1 357 21 is_stmt 0 view .LVU35
 159 0002 124A     		ldr	r2, .L14
 160 0004 5369     		ldr	r3, [r2, #20]
 161              		.loc 1 357 27 view .LVU36
 162 0006 23F00F03 		bic	r3, r3, #15
 163              		.loc 1 357 41 view .LVU37
 164 000a 1843     		orrs	r0, r0, r3
 165              	.LVL2:
 166              		.loc 1 357 13 view .LVU38
 167 000c 5061     		str	r0, [r2, #20]
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** 	if (!f_timer_20ms)
 168              		.loc 1 359 2 is_stmt 1 view .LVU39
 169              		.loc 1 359 6 is_stmt 0 view .LVU40
 170 000e 104B     		ldr	r3, .L14+4
 171 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 172              		.loc 1 359 5 view .LVU41
 173 0012 6BB1     		cbz	r3, .L10
 360:Core/Src/main.c **** 		return;
 361:Core/Src/main.c **** 	f_timer_20ms = 0;
 174              		.loc 1 361 2 is_stmt 1 view .LVU42
 175              		.loc 1 361 15 is_stmt 0 view .LVU43
 176 0014 0E4B     		ldr	r3, .L14+4
 177 0016 0022     		movs	r2, #0
 178 0018 1A70     		strb	r2, [r3]
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** 	if (!is_EN)
 179              		.loc 1 363 2 is_stmt 1 view .LVU44
 180              		.loc 1 363 6 is_stmt 0 view .LVU45
 181 001a 0E4B     		ldr	r3, .L14+8
 182 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 183              		.loc 1 363 5 view .LVU46
 184 001e 43B9     		cbnz	r3, .L12
 364:Core/Src/main.c **** 	{
 365:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
 185              		.loc 1 365 3 is_stmt 1 view .LVU47
 186 0020 0122     		movs	r2, #1
 187 0022 2021     		movs	r1, #32
ARM GAS  /tmp/ccLnQTJ0.s 			page 11


 188 0024 0948     		ldr	r0, .L14
 189 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 190              	.LVL3:
 366:Core/Src/main.c **** 		is_EN = 1;
 191              		.loc 1 366 3 view .LVU48
 192              		.loc 1 366 9 is_stmt 0 view .LVU49
 193 002a 0A4B     		ldr	r3, .L14+8
 194 002c 0122     		movs	r2, #1
 195 002e 1A70     		strb	r2, [r3]
 196              	.L10:
 367:Core/Src/main.c **** 	}
 368:Core/Src/main.c **** 	else
 369:Core/Src/main.c **** 	{
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 372:Core/Src/main.c **** 		is_EN = 0;
 373:Core/Src/main.c **** 		lcd_process++;
 374:Core/Src/main.c **** 	
 375:Core/Src/main.c **** 	}
 376:Core/Src/main.c **** }
 197              		.loc 1 376 1 view .LVU50
 198 0030 08BD     		pop	{r3, pc}
 199              	.L12:
 371:Core/Src/main.c **** 		is_EN = 0;
 200              		.loc 1 371 3 is_stmt 1 view .LVU51
 201 0032 0022     		movs	r2, #0
 202 0034 2021     		movs	r1, #32
 203 0036 0548     		ldr	r0, .L14
 204 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 205              	.LVL4:
 372:Core/Src/main.c **** 		lcd_process++;
 206              		.loc 1 372 3 view .LVU52
 372:Core/Src/main.c **** 		lcd_process++;
 207              		.loc 1 372 9 is_stmt 0 view .LVU53
 208 003c 054B     		ldr	r3, .L14+8
 209 003e 0022     		movs	r2, #0
 210 0040 1A70     		strb	r2, [r3]
 373:Core/Src/main.c **** 	
 211              		.loc 1 373 3 is_stmt 1 view .LVU54
 373:Core/Src/main.c **** 	
 212              		.loc 1 373 14 is_stmt 0 view .LVU55
 213 0042 054A     		ldr	r2, .L14+12
 214 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 215 0046 0133     		adds	r3, r3, #1
 216 0048 1370     		strb	r3, [r2]
 217 004a F1E7     		b	.L10
 218              	.L15:
 219              		.align	2
 220              	.L14:
 221 004c 00100240 		.word	1073876992
 222 0050 00000000 		.word	.LANCHOR7
 223 0054 00000000 		.word	.LANCHOR8
 224 0058 00000000 		.word	.LANCHOR0
 225              		.cfi_endproc
 226              	.LFE134:
 228              		.section	.text.lcd_display_task,"ax",%progbits
 229              		.align	1
ARM GAS  /tmp/ccLnQTJ0.s 			page 12


 230              		.global	lcd_display_task
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv4-sp-d16
 236              	lcd_display_task:
 237              	.LFB133:
 309:Core/Src/main.c **** 	/*
 238              		.loc 1 309 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 08B5     		push	{r3, lr}
 243              	.LCFI1:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 329:Core/Src/main.c **** 
 247              		.loc 1 329 2 view .LVU57
 329:Core/Src/main.c **** 
 248              		.loc 1 329 16 is_stmt 0 view .LVU58
 249 0002 1C4B     		ldr	r3, .L24
 250 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 329:Core/Src/main.c **** 
 251              		.loc 1 329 4 view .LVU59
 252 0006 032B     		cmp	r3, #3
 253 0008 0FD8     		bhi	.L16
 331:Core/Src/main.c **** 	{
 254              		.loc 1 331 2 is_stmt 1 view .LVU60
 255 000a 032B     		cmp	r3, #3
 256 000c 0DD8     		bhi	.L16
 257 000e DFE803F0 		tbb	[pc, r3]
 258              	.L19:
 259 0012 02       		.byte	(.L22-.L19)/2
 260 0013 0D       		.byte	(.L21-.L19)/2
 261 0014 19       		.byte	(.L20-.L19)/2
 262 0015 24       		.byte	(.L18-.L19)/2
 263              		.p2align 1
 264              	.L22:
 335:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 265              		.loc 1 335 3 view .LVU61
 266 0016 0022     		movs	r2, #0
 267 0018 1021     		movs	r1, #16
 268 001a 1748     		ldr	r0, .L24+4
 269 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 270              	.LVL5:
 336:Core/Src/main.c **** 		break;
 271              		.loc 1 336 3 view .LVU62
 272 0020 164B     		ldr	r3, .L24+8
 273 0022 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 274 0024 0009     		lsrs	r0, r0, #4
 275 0026 FFF7FEFF 		bl	m_send_to_lcd
 276              	.LVL6:
 337:Core/Src/main.c **** 	case 1:
 277              		.loc 1 337 3 view .LVU63
 278              	.L16:
 351:Core/Src/main.c **** 
ARM GAS  /tmp/ccLnQTJ0.s 			page 13


 279              		.loc 1 351 1 is_stmt 0 view .LVU64
 280 002a 08BD     		pop	{r3, pc}
 281              	.L21:
 339:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 282              		.loc 1 339 3 is_stmt 1 view .LVU65
 283 002c 0022     		movs	r2, #0
 284 002e 1021     		movs	r1, #16
 285 0030 1148     		ldr	r0, .L24+4
 286 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 287              	.LVL7:
 340:Core/Src/main.c **** 		break;
 288              		.loc 1 340 3 view .LVU66
 340:Core/Src/main.c **** 		break;
 289              		.loc 1 340 22 is_stmt 0 view .LVU67
 290 0036 114B     		ldr	r3, .L24+8
 291 0038 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 340:Core/Src/main.c **** 		break;
 292              		.loc 1 340 3 view .LVU68
 293 003a 00F00F00 		and	r0, r0, #15
 294 003e FFF7FEFF 		bl	m_send_to_lcd
 295              	.LVL8:
 341:Core/Src/main.c **** 	case 2:
 296              		.loc 1 341 3 is_stmt 1 view .LVU69
 297 0042 F2E7     		b	.L16
 298              	.L20:
 343:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 299              		.loc 1 343 3 view .LVU70
 300 0044 0122     		movs	r2, #1
 301 0046 1021     		movs	r1, #16
 302 0048 0B48     		ldr	r0, .L24+4
 303 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 304              	.LVL9:
 344:Core/Src/main.c **** 		break;
 305              		.loc 1 344 3 view .LVU71
 306 004e 0C4B     		ldr	r3, .L24+12
 307 0050 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 308 0052 0009     		lsrs	r0, r0, #4
 309 0054 FFF7FEFF 		bl	m_send_to_lcd
 310              	.LVL10:
 345:Core/Src/main.c **** 	case 3:
 311              		.loc 1 345 3 view .LVU72
 312 0058 E7E7     		b	.L16
 313              	.L18:
 347:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 314              		.loc 1 347 3 view .LVU73
 315 005a 0122     		movs	r2, #1
 316 005c 1021     		movs	r1, #16
 317 005e 0648     		ldr	r0, .L24+4
 318 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 319              	.LVL11:
 348:Core/Src/main.c **** 		break;
 320              		.loc 1 348 3 view .LVU74
 348:Core/Src/main.c **** 		break;
 321              		.loc 1 348 22 is_stmt 0 view .LVU75
 322 0064 064B     		ldr	r3, .L24+12
 323 0066 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 348:Core/Src/main.c **** 		break;
ARM GAS  /tmp/ccLnQTJ0.s 			page 14


 324              		.loc 1 348 3 view .LVU76
 325 0068 00F00F00 		and	r0, r0, #15
 326 006c FFF7FEFF 		bl	m_send_to_lcd
 327              	.LVL12:
 349:Core/Src/main.c **** 	}
 328              		.loc 1 349 3 is_stmt 1 view .LVU77
 329 0070 DBE7     		b	.L16
 330              	.L25:
 331 0072 00BF     		.align	2
 332              	.L24:
 333 0074 00000000 		.word	.LANCHOR0
 334 0078 00100240 		.word	1073876992
 335 007c 00000000 		.word	.LANCHOR2
 336 0080 00000000 		.word	.LANCHOR4
 337              		.cfi_endproc
 338              	.LFE133:
 340              		.section	.text.task_timer,"ax",%progbits
 341              		.align	1
 342              		.global	task_timer
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 346              		.fpu fpv4-sp-d16
 348              	task_timer:
 349              	.LFB135:
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** void task_timer(void)
 379:Core/Src/main.c **** {
 350              		.loc 1 379 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 380:Core/Src/main.c **** 	if (!f_timer_10ms)
 355              		.loc 1 380 2 view .LVU79
 356              		.loc 1 380 6 is_stmt 0 view .LVU80
 357 0000 184B     		ldr	r3, .L33
 358 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 359              		.loc 1 380 5 view .LVU81
 360 0004 BBB1     		cbz	r3, .L26
 381:Core/Src/main.c **** 		return;		  // checking if 10 ms timer interrupt is set (10 ms), if set then do timer task
 382:Core/Src/main.c **** 	f_timer_10ms = 0; // clear the flag to wait next interupt
 361              		.loc 1 382 2 is_stmt 1 view .LVU82
 362              		.loc 1 382 15 is_stmt 0 view .LVU83
 363 0006 174B     		ldr	r3, .L33
 364 0008 0022     		movs	r2, #0
 365 000a 1A70     		strb	r2, [r3]
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** 	d_timer_30ms++; // count timer for 30 ms interval
 366              		.loc 1 384 2 is_stmt 1 view .LVU84
 367              		.loc 1 384 14 is_stmt 0 view .LVU85
 368 000c 164A     		ldr	r2, .L33+4
 369 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 370 0010 0133     		adds	r3, r3, #1
 371 0012 DBB2     		uxtb	r3, r3
 372 0014 1370     		strb	r3, [r2]
 385:Core/Src/main.c **** 
ARM GAS  /tmp/ccLnQTJ0.s 			page 15


 386:Core/Src/main.c **** 	if (d_timer_30ms == 3) // checking if the count reached 30 ms
 373              		.loc 1 386 2 is_stmt 1 view .LVU86
 374              		.loc 1 386 5 is_stmt 0 view .LVU87
 375 0016 032B     		cmp	r3, #3
 376 0018 0ED0     		beq	.L30
 377              	.L28:
 387:Core/Src/main.c **** 	{
 388:Core/Src/main.c **** 		d_timer_30ms = 0; // assign "0" to repeat counting
 389:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 390:Core/Src/main.c **** 	}
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** 	d_timer_20ms++;
 378              		.loc 1 392 2 is_stmt 1 view .LVU88
 379              		.loc 1 392 14 is_stmt 0 view .LVU89
 380 001a 144A     		ldr	r2, .L33+8
 381 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 382 001e 0133     		adds	r3, r3, #1
 383 0020 DBB2     		uxtb	r3, r3
 384 0022 1370     		strb	r3, [r2]
 393:Core/Src/main.c **** 	if (d_timer_20ms == 2)
 385              		.loc 1 393 2 is_stmt 1 view .LVU90
 386              		.loc 1 393 5 is_stmt 0 view .LVU91
 387 0024 022B     		cmp	r3, #2
 388 0026 0ED0     		beq	.L31
 389              	.L29:
 394:Core/Src/main.c **** 	{
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** 		d_timer_20ms = 0;
 397:Core/Src/main.c **** 		f_timer_20ms = 1;
 398:Core/Src/main.c **** 	}
 399:Core/Src/main.c **** 	d_timer_50ms++;
 390              		.loc 1 399 2 is_stmt 1 view .LVU92
 391              		.loc 1 399 14 is_stmt 0 view .LVU93
 392 0028 114A     		ldr	r2, .L33+12
 393 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 394 002c 0133     		adds	r3, r3, #1
 395 002e DBB2     		uxtb	r3, r3
 396 0030 1370     		strb	r3, [r2]
 400:Core/Src/main.c **** 	if (d_timer_50ms == 5)
 397              		.loc 1 400 2 is_stmt 1 view .LVU94
 398              		.loc 1 400 5 is_stmt 0 view .LVU95
 399 0032 052B     		cmp	r3, #5
 400 0034 0ED0     		beq	.L32
 401              	.L26:
 401:Core/Src/main.c **** 	{
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** 		d_timer_50ms = 0;
 404:Core/Src/main.c **** 		// f_timer_50ms=1;
 405:Core/Src/main.c **** 		//buffer_push(&event_buffer, EVENT_QUERRY);
 406:Core/Src/main.c **** 		f_querry=1;
 407:Core/Src/main.c **** 	}
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** }
 402              		.loc 1 409 1 view .LVU96
 403 0036 7047     		bx	lr
 404              	.L30:
 388:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
ARM GAS  /tmp/ccLnQTJ0.s 			page 16


 405              		.loc 1 388 3 is_stmt 1 view .LVU97
 388:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 406              		.loc 1 388 16 is_stmt 0 view .LVU98
 407 0038 1346     		mov	r3, r2
 408 003a 0022     		movs	r2, #0
 409 003c 1A70     		strb	r2, [r3]
 389:Core/Src/main.c **** 	}
 410              		.loc 1 389 3 is_stmt 1 view .LVU99
 389:Core/Src/main.c **** 	}
 411              		.loc 1 389 16 is_stmt 0 view .LVU100
 412 003e 0D4B     		ldr	r3, .L33+16
 413 0040 0122     		movs	r2, #1
 414 0042 1A70     		strb	r2, [r3]
 415 0044 E9E7     		b	.L28
 416              	.L31:
 396:Core/Src/main.c **** 		f_timer_20ms = 1;
 417              		.loc 1 396 3 is_stmt 1 view .LVU101
 396:Core/Src/main.c **** 		f_timer_20ms = 1;
 418              		.loc 1 396 16 is_stmt 0 view .LVU102
 419 0046 1346     		mov	r3, r2
 420 0048 0022     		movs	r2, #0
 421 004a 1A70     		strb	r2, [r3]
 397:Core/Src/main.c **** 	}
 422              		.loc 1 397 3 is_stmt 1 view .LVU103
 397:Core/Src/main.c **** 	}
 423              		.loc 1 397 16 is_stmt 0 view .LVU104
 424 004c 0A4B     		ldr	r3, .L33+20
 425 004e 0122     		movs	r2, #1
 426 0050 1A70     		strb	r2, [r3]
 427 0052 E9E7     		b	.L29
 428              	.L32:
 403:Core/Src/main.c **** 		// f_timer_50ms=1;
 429              		.loc 1 403 3 is_stmt 1 view .LVU105
 403:Core/Src/main.c **** 		// f_timer_50ms=1;
 430              		.loc 1 403 16 is_stmt 0 view .LVU106
 431 0054 1346     		mov	r3, r2
 432 0056 0022     		movs	r2, #0
 433 0058 1A70     		strb	r2, [r3]
 406:Core/Src/main.c **** 	}
 434              		.loc 1 406 3 is_stmt 1 view .LVU107
 406:Core/Src/main.c **** 	}
 435              		.loc 1 406 11 is_stmt 0 view .LVU108
 436 005a 084B     		ldr	r3, .L33+24
 437 005c 0122     		movs	r2, #1
 438 005e 1A70     		strb	r2, [r3]
 439 0060 E9E7     		b	.L26
 440              	.L34:
 441 0062 00BF     		.align	2
 442              	.L33:
 443 0064 00000000 		.word	.LANCHOR9
 444 0068 00000000 		.word	.LANCHOR10
 445 006c 00000000 		.word	.LANCHOR12
 446 0070 00000000 		.word	.LANCHOR13
 447 0074 00000000 		.word	.LANCHOR11
 448 0078 00000000 		.word	.LANCHOR7
 449 007c 00000000 		.word	.LANCHOR14
 450              		.cfi_endproc
ARM GAS  /tmp/ccLnQTJ0.s 			page 17


 451              	.LFE135:
 453              		.section	.text.key_read_task,"ax",%progbits
 454              		.align	1
 455              		.global	key_read_task
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu fpv4-sp-d16
 461              	key_read_task:
 462              	.LFB136:
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** void key_read_task(void)
 412:Core/Src/main.c **** {
 463              		.loc 1 412 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 413:Core/Src/main.c **** 	if (!f_timer_30ms) return;		  // Checking if 30 ms counting is done
 467              		.loc 1 413 2 view .LVU110
 468              		.loc 1 413 6 is_stmt 0 view .LVU111
 469 0000 2F4B     		ldr	r3, .L48
 470 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 471              		.loc 1 413 5 view .LVU112
 472 0004 002B     		cmp	r3, #0
 473 0006 59D0     		beq	.L43
 412:Core/Src/main.c **** 	if (!f_timer_30ms) return;		  // Checking if 30 ms counting is done
 474              		.loc 1 412 1 view .LVU113
 475 0008 10B5     		push	{r4, lr}
 476              	.LCFI2:
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 4, -8
 479              		.cfi_offset 14, -4
 414:Core/Src/main.c **** 	f_timer_30ms = 0; // clear the flag to wait next counting
 480              		.loc 1 414 2 is_stmt 1 view .LVU114
 481              		.loc 1 414 15 is_stmt 0 view .LVU115
 482 000a 2D4B     		ldr	r3, .L48
 483 000c 0022     		movs	r2, #0
 484 000e 1A70     		strb	r2, [r3]
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin | KEY2_Pin));
 485              		.loc 1 416 2 is_stmt 1 view .LVU116
 486              		.loc 1 416 39 is_stmt 0 view .LVU117
 487 0010 2C4B     		ldr	r3, .L48+4
 488 0012 1869     		ldr	r0, [r3, #16]
 489              	.LVL13:
 417:Core/Src/main.c **** 
 418:Core/Src/main.c **** 	key1_data = key1_data << 1; // Preparing to read KEY1 Input
 490              		.loc 1 418 2 is_stmt 1 view .LVU118
 491              		.loc 1 418 24 is_stmt 0 view .LVU119
 492 0014 2C4B     		ldr	r3, .L48+8
 493 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 494 0018 5200     		lsls	r2, r2, #1
 495 001a D2B2     		uxtb	r2, r2
 496              		.loc 1 418 12 view .LVU120
 497 001c 1A70     		strb	r2, [r3]
 419:Core/Src/main.c **** 	key1_data &= 0b00001110;
 498              		.loc 1 419 2 is_stmt 1 view .LVU121
ARM GAS  /tmp/ccLnQTJ0.s 			page 18


 499              		.loc 1 419 12 is_stmt 0 view .LVU122
 500 001e 02F00E02 		and	r2, r2, #14
 501 0022 1A70     		strb	r2, [r3]
 420:Core/Src/main.c **** 	key1_data |= ((key_pindata >> 2) & 0x1); // Read KEY1 Input
 502              		.loc 1 420 2 is_stmt 1 view .LVU123
 503              		.loc 1 420 35 is_stmt 0 view .LVU124
 504 0024 C0F38001 		ubfx	r1, r0, #2, #1
 505              		.loc 1 420 12 view .LVU125
 506 0028 0A43     		orrs	r2, r2, r1
 507 002a 1A70     		strb	r2, [r3]
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** 	key2_data = key2_data << 1; // Preparing to read KEY2 Input
 508              		.loc 1 422 2 is_stmt 1 view .LVU126
 509              		.loc 1 422 24 is_stmt 0 view .LVU127
 510 002c 2749     		ldr	r1, .L48+12
 511 002e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 512 0030 5B00     		lsls	r3, r3, #1
 513 0032 DBB2     		uxtb	r3, r3
 514              		.loc 1 422 12 view .LVU128
 515 0034 0B70     		strb	r3, [r1]
 423:Core/Src/main.c **** 	key2_data &= 0b00001110;
 516              		.loc 1 423 2 is_stmt 1 view .LVU129
 517              		.loc 1 423 12 is_stmt 0 view .LVU130
 518 0036 03F00E03 		and	r3, r3, #14
 519 003a 0B70     		strb	r3, [r1]
 424:Core/Src/main.c **** 	key2_data |= (key_pindata >> 3); // Read KEY2 Input
 520              		.loc 1 424 2 is_stmt 1 view .LVU131
 521              		.loc 1 424 12 is_stmt 0 view .LVU132
 522 003c C0F3C000 		ubfx	r0, r0, #3, #1
 523              	.LVL14:
 524              		.loc 1 424 12 view .LVU133
 525 0040 0343     		orrs	r3, r3, r0
 526 0042 0B70     		strb	r3, [r1]
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** 	if (key1_data == KEY_PRESSED) // Checking if KEY1 is pressed
 527              		.loc 1 426 2 is_stmt 1 view .LVU134
 528              		.loc 1 426 5 is_stmt 0 view .LVU135
 529 0044 0C2A     		cmp	r2, #12
 530 0046 04D0     		beq	.L46
 531              	.L37:
 427:Core/Src/main.c **** 	{
 428:Core/Src/main.c **** 		digit1=(digit1+1)>9? 0 :digit1+1;
 429:Core/Src/main.c **** 		update_lcd(&digit1);
 430:Core/Src/main.c **** 		old_digit1 = digit1;
 431:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 432:Core/Src/main.c **** 		
 433:Core/Src/main.c **** 		state = STATE_TX;
 434:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 435:Core/Src/main.c **** 	}
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** 	if (key2_data == KEY_PRESSED) // Checking if KEY2 is pressed
 532              		.loc 1 437 2 is_stmt 1 view .LVU136
 533              		.loc 1 437 16 is_stmt 0 view .LVU137
 534 0048 204B     		ldr	r3, .L48+12
 535 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536              		.loc 1 437 5 view .LVU138
 537 004c 0C2B     		cmp	r3, #12
ARM GAS  /tmp/ccLnQTJ0.s 			page 19


 538 004e 1AD0     		beq	.L47
 539              	.L35:
 438:Core/Src/main.c **** 	{
 439:Core/Src/main.c **** 		digit2=(digit2+1)>15? 0 :digit2+1;
 440:Core/Src/main.c **** 		update_lcd(&digit2);
 441:Core/Src/main.c **** 		old_digit2 =digit2;
 442:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 443:Core/Src/main.c **** 		state = STATE_TX;
 444:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 445:Core/Src/main.c **** 	}
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** }
 540              		.loc 1 447 1 view .LVU139
 541 0050 10BD     		pop	{r4, pc}
 542              	.L46:
 428:Core/Src/main.c **** 		update_lcd(&digit1);
 543              		.loc 1 428 3 is_stmt 1 view .LVU140
 428:Core/Src/main.c **** 		update_lcd(&digit1);
 544              		.loc 1 428 20 is_stmt 0 view .LVU141
 545 0052 1F4B     		ldr	r3, .L48+16
 546 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428:Core/Src/main.c **** 		update_lcd(&digit1);
 547              		.loc 1 428 9 view .LVU142
 548 0056 082B     		cmp	r3, #8
 549 0058 13D8     		bhi	.L40
 428:Core/Src/main.c **** 		update_lcd(&digit1);
 550              		.loc 1 428 9 discriminator 1 view .LVU143
 551 005a 0133     		adds	r3, r3, #1
 552 005c DBB2     		uxtb	r3, r3
 553              	.L38:
 428:Core/Src/main.c **** 		update_lcd(&digit1);
 554              		.loc 1 428 9 discriminator 4 view .LVU144
 555 005e 1C4C     		ldr	r4, .L48+16
 556 0060 2370     		strb	r3, [r4]
 429:Core/Src/main.c **** 		old_digit1 = digit1;
 557              		.loc 1 429 3 is_stmt 1 discriminator 4 view .LVU145
 558 0062 2046     		mov	r0, r4
 559 0064 FFF7FEFF 		bl	update_lcd
 560              	.LVL15:
 430:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 561              		.loc 1 430 3 discriminator 4 view .LVU146
 430:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 562              		.loc 1 430 14 is_stmt 0 discriminator 4 view .LVU147
 563 0068 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 564 006a 1A4B     		ldr	r3, .L48+20
 565 006c 1970     		strb	r1, [r3]
 431:Core/Src/main.c **** 		
 566              		.loc 1 431 3 is_stmt 1 discriminator 4 view .LVU148
 567 006e 1A48     		ldr	r0, .L48+24
 568 0070 FFF7FEFF 		bl	buffer_push
 569              	.LVL16:
 433:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 570              		.loc 1 433 3 discriminator 4 view .LVU149
 433:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 571              		.loc 1 433 9 is_stmt 0 discriminator 4 view .LVU150
 572 0074 0121     		movs	r1, #1
 573 0076 194B     		ldr	r3, .L48+28
ARM GAS  /tmp/ccLnQTJ0.s 			page 20


 574 0078 1970     		strb	r1, [r3]
 434:Core/Src/main.c **** 	}
 575              		.loc 1 434 3 is_stmt 1 discriminator 4 view .LVU151
 576 007a 1948     		ldr	r0, .L48+32
 577 007c FFF7FEFF 		bl	buffer_push
 578              	.LVL17:
 579 0080 E2E7     		b	.L37
 580              	.L40:
 428:Core/Src/main.c **** 		update_lcd(&digit1);
 581              		.loc 1 428 9 is_stmt 0 view .LVU152
 582 0082 0023     		movs	r3, #0
 583 0084 EBE7     		b	.L38
 584              	.L47:
 439:Core/Src/main.c **** 		update_lcd(&digit2);
 585              		.loc 1 439 3 is_stmt 1 view .LVU153
 439:Core/Src/main.c **** 		update_lcd(&digit2);
 586              		.loc 1 439 20 is_stmt 0 view .LVU154
 587 0086 174B     		ldr	r3, .L48+36
 588 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 439:Core/Src/main.c **** 		update_lcd(&digit2);
 589              		.loc 1 439 9 view .LVU155
 590 008a 0E2B     		cmp	r3, #14
 591 008c 14D8     		bhi	.L41
 439:Core/Src/main.c **** 		update_lcd(&digit2);
 592              		.loc 1 439 9 discriminator 1 view .LVU156
 593 008e 0133     		adds	r3, r3, #1
 594 0090 DBB2     		uxtb	r3, r3
 595              	.L39:
 439:Core/Src/main.c **** 		update_lcd(&digit2);
 596              		.loc 1 439 9 discriminator 4 view .LVU157
 597 0092 144C     		ldr	r4, .L48+36
 598 0094 2370     		strb	r3, [r4]
 440:Core/Src/main.c **** 		old_digit2 =digit2;
 599              		.loc 1 440 3 is_stmt 1 discriminator 4 view .LVU158
 600 0096 2046     		mov	r0, r4
 601 0098 FFF7FEFF 		bl	update_lcd
 602              	.LVL18:
 441:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 603              		.loc 1 441 3 discriminator 4 view .LVU159
 441:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 604              		.loc 1 441 14 is_stmt 0 discriminator 4 view .LVU160
 605 009c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 606 009e 124B     		ldr	r3, .L48+40
 607 00a0 1970     		strb	r1, [r3]
 442:Core/Src/main.c **** 		state = STATE_TX;
 608              		.loc 1 442 3 is_stmt 1 discriminator 4 view .LVU161
 609 00a2 1248     		ldr	r0, .L48+44
 610 00a4 FFF7FEFF 		bl	buffer_push
 611              	.LVL19:
 443:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 612              		.loc 1 443 3 discriminator 4 view .LVU162
 443:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 613              		.loc 1 443 9 is_stmt 0 discriminator 4 view .LVU163
 614 00a8 0C4B     		ldr	r3, .L48+28
 615 00aa 0122     		movs	r2, #1
 616 00ac 1A70     		strb	r2, [r3]
 444:Core/Src/main.c **** 	}
ARM GAS  /tmp/ccLnQTJ0.s 			page 21


 617              		.loc 1 444 3 is_stmt 1 discriminator 4 view .LVU164
 618 00ae 0221     		movs	r1, #2
 619 00b0 0B48     		ldr	r0, .L48+32
 620 00b2 FFF7FEFF 		bl	buffer_push
 621              	.LVL20:
 622 00b6 CBE7     		b	.L35
 623              	.L41:
 439:Core/Src/main.c **** 		update_lcd(&digit2);
 624              		.loc 1 439 9 is_stmt 0 view .LVU165
 625 00b8 0023     		movs	r3, #0
 626 00ba EAE7     		b	.L39
 627              	.L43:
 628              	.LCFI3:
 629              		.cfi_def_cfa_offset 0
 630              		.cfi_restore 4
 631              		.cfi_restore 14
 439:Core/Src/main.c **** 		update_lcd(&digit2);
 632              		.loc 1 439 9 view .LVU166
 633 00bc 7047     		bx	lr
 634              	.L49:
 635 00be 00BF     		.align	2
 636              	.L48:
 637 00c0 00000000 		.word	.LANCHOR11
 638 00c4 00180240 		.word	1073879040
 639 00c8 00000000 		.word	.LANCHOR15
 640 00cc 00000000 		.word	.LANCHOR16
 641 00d0 00000000 		.word	.LANCHOR5
 642 00d4 00000000 		.word	.LANCHOR17
 643 00d8 00000000 		.word	.LANCHOR18
 644 00dc 00000000 		.word	.LANCHOR19
 645 00e0 00000000 		.word	.LANCHOR20
 646 00e4 00000000 		.word	.LANCHOR1
 647 00e8 00000000 		.word	.LANCHOR21
 648 00ec 00000000 		.word	.LANCHOR22
 649              		.cfi_endproc
 650              	.LFE136:
 652              		.section	.text.check_slave,"ax",%progbits
 653              		.align	1
 654              		.global	check_slave
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu fpv4-sp-d16
 660              	check_slave:
 661              	.LFB138:
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** void main_task(void)
 450:Core/Src/main.c **** {
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** 	if (event_buffer.head != event_buffer.tail)
 453:Core/Src/main.c **** 	{
 454:Core/Src/main.c **** 		
 455:Core/Src/main.c **** 		event = buffer_pop(&event_buffer); // if there is event then get the event from buffer
 456:Core/Src/main.c **** 
 457:Core/Src/main.c **** 	}
 458:Core/Src/main.c **** 
 459:Core/Src/main.c **** 	switch (state)
ARM GAS  /tmp/ccLnQTJ0.s 			page 22


 460:Core/Src/main.c **** 	{
 461:Core/Src/main.c **** 	case STATE_TX:
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** 		switch (event)
 464:Core/Src/main.c **** 		{
 465:Core/Src/main.c **** 		case EVENT_KEY1_PRESSED:
 466:Core/Src/main.c **** 			
 467:Core/Src/main.c **** 			//if(key1_ID==0)break;
 468:Core/Src/main.c **** 			pTX_msg = &TX_msg[1];
 469:Core/Src/main.c **** 			
 470:Core/Src/main.c **** 			*pTX_msg++ = ID_list[1];
 471:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 472:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit1_buf)+'0';
 473:Core/Src/main.c **** 			 			
 474:Core/Src/main.c **** 			RS485_Send_Message();
 475:Core/Src/main.c **** 			event = EVENT_RESET;
 476:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 477:Core/Src/main.c **** 			f_querry =0;
 478:Core/Src/main.c **** 			break;
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** 		case EVENT_KEY2_PRESSED:
 481:Core/Src/main.c **** 			
 482:Core/Src/main.c **** 		//	if(key2_ID==0)break;
 483:Core/Src/main.c **** 			pTX_msg = &TX_msg[1];
 484:Core/Src/main.c **** 			
 485:Core/Src/main.c **** 			*pTX_msg++ = ID_list[2];
 486:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 487:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit2_buf)+'0';
 488:Core/Src/main.c **** 					
 489:Core/Src/main.c **** 			RS485_Send_Message();
 490:Core/Src/main.c **** 			event = EVENT_RESET;
 491:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 492:Core/Src/main.c **** 			f_querry =0;
 493:Core/Src/main.c **** 			break;
 494:Core/Src/main.c **** 		
 495:Core/Src/main.c **** 		
 496:Core/Src/main.c **** 		default:
 497:Core/Src/main.c **** 			if (!f_querry) break;
 498:Core/Src/main.c **** 			f_querry =0;
 499:Core/Src/main.c **** 			
 500:Core/Src/main.c **** 			pTX_msg = &TX_msg[1];
 501:Core/Src/main.c **** 			
 502:Core/Src/main.c **** 			*pTX_msg++ = ID_list[ID];
 503:Core/Src/main.c **** 			
 504:Core/Src/main.c **** 			if(ID>0){
 505:Core/Src/main.c **** 				*pTX_msg++ = FUNC_READ;
 506:Core/Src/main.c **** 				*pTX_msg++ = '0';
 507:Core/Src/main.c **** 			}else{
 508:Core/Src/main.c **** 			//digit2=(digit2+1)>15? 0 :digit2+1;
 509:Core/Src/main.c **** 				
 510:Core/Src/main.c **** 				*pTX_msg++ = FUNC_FIND_SLAVE;
 511:Core/Src/main.c **** 				*pTX_msg++ = '0';
 512:Core/Src/main.c **** 			}
 513:Core/Src/main.c **** 			
 514:Core/Src/main.c **** 			RS485_Send_Message();
 515:Core/Src/main.c **** 			
 516:Core/Src/main.c **** 			ID = (ID+1)== 3 ?0:ID+1;
ARM GAS  /tmp/ccLnQTJ0.s 			page 23


 517:Core/Src/main.c **** 			
 518:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 519:Core/Src/main.c **** 			break;
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** 		}
 522:Core/Src/main.c **** 		break;
 523:Core/Src/main.c **** 		
 524:Core/Src/main.c **** 	case STATE_WAITING_RX:
 525:Core/Src/main.c **** 		
 526:Core/Src/main.c **** 		if (event==EVENT_RX_COMPLETE){
 527:Core/Src/main.c **** 			RS485_Read_Message();
 528:Core/Src/main.c **** 
 529:Core/Src/main.c **** 			state=STATE_TX;
 530:Core/Src/main.c **** 			event = EVENT_RESET;
 531:Core/Src/main.c **** 		
 532:Core/Src/main.c **** 
 533:Core/Src/main.c **** 		}else{
 534:Core/Src/main.c **** 			
 535:Core/Src/main.c **** 			if (!f_querry) break;
 536:Core/Src/main.c **** 			f_querry =0;
 537:Core/Src/main.c **** 			
 538:Core/Src/main.c **** 			/*if((TX_msg[2]==FUNC_FIND_SLAVE)){
 539:Core/Src/main.c **** 				state = STATE_TX;
 540:Core/Src/main.c **** 				break;
 541:Core/Src/main.c **** 			}*/
 542:Core/Src/main.c **** 			RS485_Send_Message();
 543:Core/Src/main.c **** 			tx_timeout++;
 544:Core/Src/main.c **** 			
 545:Core/Src/main.c **** 			if (tx_timeout==2){
 546:Core/Src/main.c **** 				state = STATE_TX;
 547:Core/Src/main.c **** 				event = EVENT_RESET;	
 548:Core/Src/main.c **** 				tx_timeout=0;
 549:Core/Src/main.c **** 				check_slave();
 550:Core/Src/main.c **** 				break;
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** 			}
 553:Core/Src/main.c **** 			
 554:Core/Src/main.c **** 		}
 555:Core/Src/main.c **** 		
 556:Core/Src/main.c **** 		break;
 557:Core/Src/main.c **** 
 558:Core/Src/main.c **** 	}
 559:Core/Src/main.c **** 
 560:Core/Src/main.c **** 
 561:Core/Src/main.c **** }
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** void check_slave(void){
 662              		.loc 1 563 23 is_stmt 1 view -0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** 	if ((TX_msg[1]==ID_list[0])||(TX_msg[1]==0))return;
 667              		.loc 1 565 2 view .LVU168
 668              		.loc 1 565 13 is_stmt 0 view .LVU169
 669 0000 084B     		ldr	r3, .L55
ARM GAS  /tmp/ccLnQTJ0.s 			page 24


 670 0002 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 671              		.loc 1 565 25 view .LVU170
 672 0004 084B     		ldr	r3, .L55+4
 673 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 674              		.loc 1 565 5 view .LVU171
 675 0008 9A42     		cmp	r2, r3
 676 000a 09D0     		beq	.L50
 677              		.loc 1 565 29 discriminator 2 view .LVU172
 678 000c 42B1     		cbz	r2, .L50
 679              	.LBB4:
 566:Core/Src/main.c **** 	
 567:Core/Src/main.c **** 	for (int i=1; i<3;i++){
 680              		.loc 1 567 11 view .LVU173
 681 000e 0123     		movs	r3, #1
 682 0010 00E0     		b	.L52
 683              	.LVL21:
 684              	.L54:
 685              		.loc 1 567 20 is_stmt 1 discriminator 2 view .LVU174
 686              		.loc 1 567 21 is_stmt 0 discriminator 2 view .LVU175
 687 0012 0133     		adds	r3, r3, #1
 688              	.LVL22:
 689              	.L52:
 690              		.loc 1 567 16 is_stmt 1 discriminator 1 view .LVU176
 691              		.loc 1 567 2 is_stmt 0 discriminator 1 view .LVU177
 692 0014 022B     		cmp	r3, #2
 693 0016 03DC     		bgt	.L50
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** 		if (TX_msg[1]==ID_list[i]){
 694              		.loc 1 569 3 is_stmt 1 view .LVU178
 695              		.loc 1 569 25 is_stmt 0 view .LVU179
 696 0018 0349     		ldr	r1, .L55+4
 697 001a C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 698              		.loc 1 569 6 view .LVU180
 699 001c 8A42     		cmp	r2, r1
 700 001e F8D1     		bne	.L54
 701              	.LVL23:
 702              	.L50:
 703              		.loc 1 569 6 view .LVU181
 704              	.LBE4:
 570:Core/Src/main.c **** 			
 571:Core/Src/main.c **** 			/*	
 572:Core/Src/main.c **** 			if (ID_list[i]==key1_ID){
 573:Core/Src/main.c **** 				key1_ID=0;
 574:Core/Src/main.c **** 			}else if(ID_list[i]==key2_ID)
 575:Core/Src/main.c **** 			{
 576:Core/Src/main.c **** 				key2_ID=0;
 577:Core/Src/main.c **** 			}
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** 			if(i==1){
 580:Core/Src/main.c **** 				ID_list[1]=ID_list[2];
 581:Core/Src/main.c **** 			}
 582:Core/Src/main.c **** */			//ID_list[i]=0;
 583:Core/Src/main.c **** 			//num_slave--;
 584:Core/Src/main.c **** 			//update_lcd(&num_slave);
 585:Core/Src/main.c **** 			return;
 586:Core/Src/main.c **** 		}
 587:Core/Src/main.c **** 	}	
ARM GAS  /tmp/ccLnQTJ0.s 			page 25


 588:Core/Src/main.c **** }
 705              		.loc 1 588 1 view .LVU182
 706 0020 7047     		bx	lr
 707              	.L56:
 708 0022 00BF     		.align	2
 709              	.L55:
 710 0024 00000000 		.word	.LANCHOR23
 711 0028 00000000 		.word	.LANCHOR24
 712              		.cfi_endproc
 713              	.LFE138:
 715              		.section	.text.RS485_RX_Task,"ax",%progbits
 716              		.align	1
 717              		.global	RS485_RX_Task
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	RS485_RX_Task:
 724              	.LFB139:
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** 
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** 
 593:Core/Src/main.c **** void RS485_RX_Task(void)
 594:Core/Src/main.c **** {
 725              		.loc 1 594 1 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729 0000 08B5     		push	{r3, lr}
 730              	.LCFI4:
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 3, -8
 733              		.cfi_offset 14, -4
 595:Core/Src/main.c **** 	
 596:Core/Src/main.c **** 	if (rx_buffer.tail==rx_buffer.head) return;
 734              		.loc 1 596 2 view .LVU184
 735              		.loc 1 596 15 is_stmt 0 view .LVU185
 736 0002 174A     		ldr	r2, .L65
 737 0004 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 738              		.loc 1 596 31 view .LVU186
 739 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 740              		.loc 1 596 5 view .LVU187
 741 0008 9942     		cmp	r1, r3
 742 000a 20D0     		beq	.L57
 597:Core/Src/main.c **** 	
 598:Core/Src/main.c **** 	
 599:Core/Src/main.c **** 	if (rx_buffer.data[rx_buffer.tail]==SOF)
 743              		.loc 1 599 2 is_stmt 1 view .LVU188
 744              		.loc 1 599 20 is_stmt 0 view .LVU189
 745 000c 1346     		mov	r3, r2
 746 000e 0B44     		add	r3, r3, r1
 747 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 748              		.loc 1 599 5 view .LVU190
 749 0012 022B     		cmp	r3, #2
 750 0014 0AD0     		beq	.L63
 600:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccLnQTJ0.s 			page 26


 601:Core/Src/main.c **** 		f_read_msg =1;
 602:Core/Src/main.c **** 		pRX_msg = RX_msg;
 603:Core/Src/main.c **** 
 604:Core/Src/main.c **** 	}else if(rx_buffer.data[rx_buffer.tail]==EOF)
 751              		.loc 1 604 8 is_stmt 1 view .LVU191
 752              		.loc 1 604 10 is_stmt 0 view .LVU192
 753 0016 032B     		cmp	r3, #3
 754 0018 1AD0     		beq	.L64
 605:Core/Src/main.c **** 	{
 606:Core/Src/main.c **** 		f_read_msg =0;
 607:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 608:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 609:Core/Src/main.c **** 	}else{
 610:Core/Src/main.c **** 
 611:Core/Src/main.c **** 		if (f_read_msg){
 755              		.loc 1 611 3 is_stmt 1 view .LVU193
 756              		.loc 1 611 7 is_stmt 0 view .LVU194
 757 001a 124A     		ldr	r2, .L65+4
 758 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 759              		.loc 1 611 6 view .LVU195
 760 001e 5AB1     		cbz	r2, .L60
 612:Core/Src/main.c **** 			*pRX_msg++=rx_buffer.data[rx_buffer.tail];
 761              		.loc 1 612 4 is_stmt 1 view .LVU196
 762              		.loc 1 612 12 is_stmt 0 view .LVU197
 763 0020 1149     		ldr	r1, .L65+8
 764 0022 0A68     		ldr	r2, [r1]
 765 0024 501C     		adds	r0, r2, #1
 766 0026 0860     		str	r0, [r1]
 767              		.loc 1 612 14 view .LVU198
 768 0028 1370     		strb	r3, [r2]
 769 002a 05E0     		b	.L60
 770              	.L63:
 601:Core/Src/main.c **** 		pRX_msg = RX_msg;
 771              		.loc 1 601 3 is_stmt 1 view .LVU199
 601:Core/Src/main.c **** 		pRX_msg = RX_msg;
 772              		.loc 1 601 14 is_stmt 0 view .LVU200
 773 002c 0D4B     		ldr	r3, .L65+4
 774 002e 0122     		movs	r2, #1
 775 0030 1A70     		strb	r2, [r3]
 602:Core/Src/main.c **** 
 776              		.loc 1 602 3 is_stmt 1 view .LVU201
 602:Core/Src/main.c **** 
 777              		.loc 1 602 11 is_stmt 0 view .LVU202
 778 0032 0D4B     		ldr	r3, .L65+8
 779 0034 0D4A     		ldr	r2, .L65+12
 780 0036 1A60     		str	r2, [r3]
 781              	.L60:
 613:Core/Src/main.c **** 		}	
 614:Core/Src/main.c **** 	}
 615:Core/Src/main.c **** 	rx_buffer.tail = (rx_buffer.tail+1)%BUFFER_SIZE;
 782              		.loc 1 615 2 is_stmt 1 view .LVU203
 783              		.loc 1 615 29 is_stmt 0 view .LVU204
 784 0038 0949     		ldr	r1, .L65
 785 003a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 786              		.loc 1 615 34 view .LVU205
 787 003c 0133     		adds	r3, r3, #1
 788              		.loc 1 615 37 view .LVU206
ARM GAS  /tmp/ccLnQTJ0.s 			page 27


 789 003e 5A42     		rsbs	r2, r3, #0
 790 0040 03F03F03 		and	r3, r3, #63
 791 0044 02F03F02 		and	r2, r2, #63
 792 0048 58BF     		it	pl
 793 004a 5342     		rsbpl	r3, r2, #0
 794              		.loc 1 615 17 view .LVU207
 795 004c 4B70     		strb	r3, [r1, #1]
 796              	.L57:
 616:Core/Src/main.c **** 
 617:Core/Src/main.c **** }
 797              		.loc 1 617 1 view .LVU208
 798 004e 08BD     		pop	{r3, pc}
 799              	.L64:
 606:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 800              		.loc 1 606 3 is_stmt 1 view .LVU209
 606:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 801              		.loc 1 606 14 is_stmt 0 view .LVU210
 802 0050 044B     		ldr	r3, .L65+4
 803 0052 0022     		movs	r2, #0
 804 0054 1A70     		strb	r2, [r3]
 607:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 805              		.loc 1 607 6 is_stmt 1 view .LVU211
 806 0056 0521     		movs	r1, #5
 807 0058 0548     		ldr	r0, .L65+16
 808 005a FFF7FEFF 		bl	buffer_push
 809              	.LVL24:
 810 005e EBE7     		b	.L60
 811              	.L66:
 812              		.align	2
 813              	.L65:
 814 0060 00000000 		.word	.LANCHOR25
 815 0064 00000000 		.word	.LANCHOR26
 816 0068 00000000 		.word	.LANCHOR27
 817 006c 00000000 		.word	.LANCHOR28
 818 0070 00000000 		.word	.LANCHOR20
 819              		.cfi_endproc
 820              	.LFE139:
 822              		.section	.text.RS485_Read_Message,"ax",%progbits
 823              		.align	1
 824              		.global	RS485_Read_Message
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 828              		.fpu fpv4-sp-d16
 830              	RS485_Read_Message:
 831              	.LFB140:
 618:Core/Src/main.c **** 
 619:Core/Src/main.c **** void RS485_Read_Message(void)
 620:Core/Src/main.c **** {
 832              		.loc 1 620 1 view -0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 621:Core/Src/main.c **** 	//digit2 = 10;
 622:Core/Src/main.c **** 	//uint8_t * digit;
 623:Core/Src/main.c **** 	uint8_t checksum = 0;
 836              		.loc 1 623 2 view .LVU213
ARM GAS  /tmp/ccLnQTJ0.s 			page 28


 837              	.LVL25:
 624:Core/Src/main.c **** 
 625:Core/Src/main.c **** 	checksum = checksum^RX_msg[0]^RX_msg[1]^RX_msg[2];
 838              		.loc 1 625 2 view .LVU214
 839              		.loc 1 625 28 is_stmt 0 view .LVU215
 840 0000 274B     		ldr	r3, .L78
 841 0002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 842              		.loc 1 625 38 view .LVU216
 843 0004 93F801C0 		ldrb	ip, [r3, #1]	@ zero_extendqisi2
 844              		.loc 1 625 48 view .LVU217
 845 0008 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 846              		.loc 1 625 11 view .LVU218
 847 000a 81EA0C02 		eor	r2, r1, ip
 848 000e 4240     		eors	r2, r2, r0
 849              	.LVL26:
 626:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 850              		.loc 1 626 2 is_stmt 1 view .LVU219
 851              		.loc 1 626 25 is_stmt 0 view .LVU220
 852 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 853              		.loc 1 626 5 view .LVU221
 854 0012 9342     		cmp	r3, r2
 855 0014 43D1     		bne	.L72
 620:Core/Src/main.c **** 	//digit2 = 10;
 856              		.loc 1 620 1 view .LVU222
 857 0016 10B5     		push	{r4, lr}
 858              	.LCFI5:
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 4, -8
 861              		.cfi_offset 14, -4
 627:Core/Src/main.c **** 	{
 628:Core/Src/main.c **** 		return;
 629:Core/Src/main.c **** 
 630:Core/Src/main.c **** 	}
 631:Core/Src/main.c **** 
 632:Core/Src/main.c **** 	if ((RX_msg[0] == ID_list[1]))
 862              		.loc 1 632 2 is_stmt 1 view .LVU223
 863              		.loc 1 632 27 is_stmt 0 view .LVU224
 864 0018 224B     		ldr	r3, .L78+4
 865 001a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 866              		.loc 1 632 5 view .LVU225
 867 001c 9942     		cmp	r1, r3
 868 001e 17D0     		beq	.L75
 633:Core/Src/main.c **** 	{
 634:Core/Src/main.c **** 		if (RX_msg[1] == FUNC_READ)
 635:Core/Src/main.c **** 		{	
 636:Core/Src/main.c **** 			digit1 = (RX_msg[2] - '0');
 637:Core/Src/main.c **** 			
 638:Core/Src/main.c **** 			if (digit1!= old_digit1){
 639:Core/Src/main.c **** 				update_lcd(&digit1);
 640:Core/Src/main.c **** 				old_digit1 = digit1;
 641:Core/Src/main.c **** 			}
 642:Core/Src/main.c **** 			
 643:Core/Src/main.c **** 		}
 644:Core/Src/main.c **** 		else if (RX_msg[1] == FUNC_WRITE)
 645:Core/Src/main.c **** 		{
 646:Core/Src/main.c **** 			
 647:Core/Src/main.c **** 		}
ARM GAS  /tmp/ccLnQTJ0.s 			page 29


 648:Core/Src/main.c **** 
 649:Core/Src/main.c **** 	}else if ((RX_msg[0] == ID_list[2]))
 869              		.loc 1 649 8 is_stmt 1 view .LVU226
 870              		.loc 1 649 33 is_stmt 0 view .LVU227
 871 0020 204B     		ldr	r3, .L78+4
 872 0022 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 873              		.loc 1 649 11 view .LVU228
 874 0024 9942     		cmp	r1, r3
 875 0026 27D0     		beq	.L76
 650:Core/Src/main.c **** 	{
 651:Core/Src/main.c **** 		if (RX_msg[1] == FUNC_READ)
 652:Core/Src/main.c **** 		{	
 653:Core/Src/main.c **** 			digit2 = (RX_msg[2] - '0');
 654:Core/Src/main.c **** 			
 655:Core/Src/main.c **** 			if(digit2!= old_digit2)
 656:Core/Src/main.c **** 			{
 657:Core/Src/main.c **** 				update_lcd(&digit2);
 658:Core/Src/main.c **** 				old_digit2 =digit2;
 659:Core/Src/main.c **** 			}
 660:Core/Src/main.c **** 			
 661:Core/Src/main.c **** 		}
 662:Core/Src/main.c **** 		else if (RX_msg[1] == FUNC_WRITE)
 663:Core/Src/main.c **** 		{
 664:Core/Src/main.c **** 			
 665:Core/Src/main.c **** 	}
 666:Core/Src/main.c **** 	}else if(RX_msg[0]==ID_list[0]){
 876              		.loc 1 666 8 is_stmt 1 view .LVU229
 877              		.loc 1 666 29 is_stmt 0 view .LVU230
 878 0028 1E4B     		ldr	r3, .L78+4
 879 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 880              		.loc 1 666 10 view .LVU231
 881 002c 9942     		cmp	r1, r3
 882 002e 12D1     		bne	.L67
 667:Core/Src/main.c **** 
 668:Core/Src/main.c **** 		if (RX_msg[1]== FUNC_FIND_SLAVE){
 883              		.loc 1 668 3 is_stmt 1 view .LVU232
 884              		.loc 1 668 6 is_stmt 0 view .LVU233
 885 0030 BCF1F40F 		cmp	ip, #244
 886 0034 0FD1     		bne	.L67
 669:Core/Src/main.c **** 
 670:Core/Src/main.c **** 				num_slave++;
 887              		.loc 1 670 5 is_stmt 1 view .LVU234
 888              		.loc 1 670 14 is_stmt 0 view .LVU235
 889 0036 1C4C     		ldr	r4, .L78+8
 890 0038 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 891 003a 0133     		adds	r3, r3, #1
 892 003c 2370     		strb	r3, [r4]
 671:Core/Src/main.c **** 				
 672:Core/Src/main.c **** 				update_lcd(&num_slave);
 893              		.loc 1 672 5 is_stmt 1 view .LVU236
 894 003e 2046     		mov	r0, r4
 895 0040 FFF7FEFF 		bl	update_lcd
 896              	.LVL27:
 673:Core/Src/main.c **** 				ID_list[num_slave]= RX_msg[2];
 897              		.loc 1 673 5 view .LVU237
 898              		.loc 1 673 12 is_stmt 0 view .LVU238
 899 0044 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccLnQTJ0.s 			page 30


 900              		.loc 1 673 31 view .LVU239
 901 0046 164A     		ldr	r2, .L78
 902 0048 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 903              		.loc 1 673 23 view .LVU240
 904 004a 164A     		ldr	r2, .L78+4
 905 004c D154     		strb	r1, [r2, r3]
 906 004e 02E0     		b	.L67
 907              	.LVL28:
 908              	.L75:
 634:Core/Src/main.c **** 		{	
 909              		.loc 1 634 3 is_stmt 1 view .LVU241
 634:Core/Src/main.c **** 		{	
 910              		.loc 1 634 6 is_stmt 0 view .LVU242
 911 0050 BCF1F20F 		cmp	ip, #242
 912 0054 00D0     		beq	.L77
 913              	.LVL29:
 914              	.L67:
 674:Core/Src/main.c **** 					/*if(ID_list[1]==0){
 675:Core/Src/main.c **** 						ID_list[1]=RX_msg[2];
 676:Core/Src/main.c **** 
 677:Core/Src/main.c **** 					}else if (ID_list[2]==0){
 678:Core/Src/main.c **** 					ID_list[2]= RX_msg[2];
 679:Core/Src/main.c **** 					}*/
 680:Core/Src/main.c **** 			
 681:Core/Src/main.c **** 		}
 682:Core/Src/main.c **** 		//buffer_push(&event_buffer,EVENT_SLAVE_FOUND);
 683:Core/Src/main.c **** 	
 684:Core/Src/main.c **** 	}
 685:Core/Src/main.c **** 	else{
 686:Core/Src/main.c **** 		return;
 687:Core/Src/main.c **** 	}
 688:Core/Src/main.c **** 
 689:Core/Src/main.c **** 	
 690:Core/Src/main.c **** }
 915              		.loc 1 690 1 view .LVU243
 916 0056 10BD     		pop	{r4, pc}
 917              	.LVL30:
 918              	.L77:
 636:Core/Src/main.c **** 			
 919              		.loc 1 636 4 is_stmt 1 view .LVU244
 636:Core/Src/main.c **** 			
 920              		.loc 1 636 24 is_stmt 0 view .LVU245
 921 0058 3038     		subs	r0, r0, #48
 922 005a C0B2     		uxtb	r0, r0
 636:Core/Src/main.c **** 			
 923              		.loc 1 636 11 view .LVU246
 924 005c 134B     		ldr	r3, .L78+12
 925 005e 1870     		strb	r0, [r3]
 638:Core/Src/main.c **** 				update_lcd(&digit1);
 926              		.loc 1 638 4 is_stmt 1 view .LVU247
 638:Core/Src/main.c **** 				update_lcd(&digit1);
 927              		.loc 1 638 14 is_stmt 0 view .LVU248
 928 0060 134B     		ldr	r3, .L78+16
 929 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638:Core/Src/main.c **** 				update_lcd(&digit1);
 930              		.loc 1 638 7 view .LVU249
 931 0064 9842     		cmp	r0, r3
ARM GAS  /tmp/ccLnQTJ0.s 			page 31


 932 0066 F6D0     		beq	.L67
 639:Core/Src/main.c **** 				old_digit1 = digit1;
 933              		.loc 1 639 5 is_stmt 1 view .LVU250
 934 0068 104C     		ldr	r4, .L78+12
 935 006a 2046     		mov	r0, r4
 936 006c FFF7FEFF 		bl	update_lcd
 937              	.LVL31:
 640:Core/Src/main.c **** 			}
 938              		.loc 1 640 5 view .LVU251
 640:Core/Src/main.c **** 			}
 939              		.loc 1 640 16 is_stmt 0 view .LVU252
 940 0070 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 941 0072 0F4B     		ldr	r3, .L78+16
 942 0074 1A70     		strb	r2, [r3]
 943 0076 EEE7     		b	.L67
 944              	.LVL32:
 945              	.L76:
 651:Core/Src/main.c **** 		{	
 946              		.loc 1 651 3 is_stmt 1 view .LVU253
 651:Core/Src/main.c **** 		{	
 947              		.loc 1 651 6 is_stmt 0 view .LVU254
 948 0078 BCF1F20F 		cmp	ip, #242
 949 007c EBD1     		bne	.L67
 653:Core/Src/main.c **** 			
 950              		.loc 1 653 4 is_stmt 1 view .LVU255
 653:Core/Src/main.c **** 			
 951              		.loc 1 653 24 is_stmt 0 view .LVU256
 952 007e 3038     		subs	r0, r0, #48
 953 0080 C0B2     		uxtb	r0, r0
 653:Core/Src/main.c **** 			
 954              		.loc 1 653 11 view .LVU257
 955 0082 0C4B     		ldr	r3, .L78+20
 956 0084 1870     		strb	r0, [r3]
 655:Core/Src/main.c **** 			{
 957              		.loc 1 655 4 is_stmt 1 view .LVU258
 655:Core/Src/main.c **** 			{
 958              		.loc 1 655 13 is_stmt 0 view .LVU259
 959 0086 0C4B     		ldr	r3, .L78+24
 960 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655:Core/Src/main.c **** 			{
 961              		.loc 1 655 6 view .LVU260
 962 008a 9842     		cmp	r0, r3
 963 008c E3D0     		beq	.L67
 657:Core/Src/main.c **** 				old_digit2 =digit2;
 964              		.loc 1 657 5 is_stmt 1 view .LVU261
 965 008e 094C     		ldr	r4, .L78+20
 966 0090 2046     		mov	r0, r4
 967 0092 FFF7FEFF 		bl	update_lcd
 968              	.LVL33:
 658:Core/Src/main.c **** 			}
 969              		.loc 1 658 5 view .LVU262
 658:Core/Src/main.c **** 			}
 970              		.loc 1 658 16 is_stmt 0 view .LVU263
 971 0096 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 972 0098 074B     		ldr	r3, .L78+24
 973 009a 1A70     		strb	r2, [r3]
 974 009c DBE7     		b	.L67
ARM GAS  /tmp/ccLnQTJ0.s 			page 32


 975              	.LVL34:
 976              	.L72:
 977              	.LCFI6:
 978              		.cfi_def_cfa_offset 0
 979              		.cfi_restore 4
 980              		.cfi_restore 14
 658:Core/Src/main.c **** 			}
 981              		.loc 1 658 16 view .LVU264
 982 009e 7047     		bx	lr
 983              	.L79:
 984              		.align	2
 985              	.L78:
 986 00a0 00000000 		.word	.LANCHOR28
 987 00a4 00000000 		.word	.LANCHOR24
 988 00a8 00000000 		.word	.LANCHOR6
 989 00ac 00000000 		.word	.LANCHOR5
 990 00b0 00000000 		.word	.LANCHOR17
 991 00b4 00000000 		.word	.LANCHOR1
 992 00b8 00000000 		.word	.LANCHOR21
 993              		.cfi_endproc
 994              	.LFE140:
 996              		.section	.text.RS485_Send_Message,"ax",%progbits
 997              		.align	1
 998              		.global	RS485_Send_Message
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv4-sp-d16
 1004              	RS485_Send_Message:
 1005              	.LFB141:
 691:Core/Src/main.c **** 
 692:Core/Src/main.c **** 
 693:Core/Src/main.c **** 
 694:Core/Src/main.c **** void RS485_Send_Message(void)
 695:Core/Src/main.c **** {
 1006              		.loc 1 695 1 is_stmt 1 view -0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010 0000 38B5     		push	{r3, r4, r5, lr}
 1011              	.LCFI7:
 1012              		.cfi_def_cfa_offset 16
 1013              		.cfi_offset 3, -16
 1014              		.cfi_offset 4, -12
 1015              		.cfi_offset 5, -8
 1016              		.cfi_offset 14, -4
 696:Core/Src/main.c **** 	
 697:Core/Src/main.c **** 	TX_msg[0] = SOF;
 1017              		.loc 1 697 2 view .LVU266
 1018              		.loc 1 697 12 is_stmt 0 view .LVU267
 1019 0002 0F4C     		ldr	r4, .L82
 1020 0004 0223     		movs	r3, #2
 1021 0006 2370     		strb	r3, [r4]
 698:Core/Src/main.c **** 	TX_msg[4] = (((0x00^TX_msg[1])^TX_msg[2])^TX_msg[3]);    // checksum
 1022              		.loc 1 698 2 is_stmt 1 view .LVU268
 1023              		.loc 1 698 28 is_stmt 0 view .LVU269
 1024 0008 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccLnQTJ0.s 			page 33


 1025              		.loc 1 698 39 view .LVU270
 1026 000a A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 1027              		.loc 1 698 50 view .LVU271
 1028 000c E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 1029              		.loc 1 698 12 view .LVU272
 1030 000e 4A40     		eors	r2, r2, r1
 1031 0010 5340     		eors	r3, r3, r2
 1032 0012 2371     		strb	r3, [r4, #4]
 699:Core/Src/main.c **** 	TX_msg[5] = EOF;
 1033              		.loc 1 699 2 is_stmt 1 view .LVU273
 1034              		.loc 1 699 12 is_stmt 0 view .LVU274
 1035 0014 0323     		movs	r3, #3
 1036 0016 6371     		strb	r3, [r4, #5]
 700:Core/Src/main.c **** 
 701:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
 702:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 1037              		.loc 1 702 2 is_stmt 1 view .LVU275
 1038 0018 0A4D     		ldr	r5, .L82+4
 1039 001a 0122     		movs	r2, #1
 1040 001c 4FF48051 		mov	r1, #4096
 1041 0020 2846     		mov	r0, r5
 1042 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1043              	.LVL35:
 703:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, TX_msg, sizeof(TX_msg), 10);
 1044              		.loc 1 703 2 view .LVU276
 1045 0026 0A23     		movs	r3, #10
 1046 0028 0622     		movs	r2, #6
 1047 002a 2146     		mov	r1, r4
 1048 002c 0648     		ldr	r0, .L82+8
 1049 002e FFF7FEFF 		bl	HAL_UART_Transmit
 1050              	.LVL36:
 704:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 1051              		.loc 1 704 2 view .LVU277
 1052 0032 0022     		movs	r2, #0
 1053 0034 4FF48051 		mov	r1, #4096
 1054 0038 2846     		mov	r0, r5
 1055 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1056              	.LVL37:
 705:Core/Src/main.c **** }
 1057              		.loc 1 705 1 is_stmt 0 view .LVU278
 1058 003e 38BD     		pop	{r3, r4, r5, pc}
 1059              	.L83:
 1060              		.align	2
 1061              	.L82:
 1062 0040 00000000 		.word	.LANCHOR23
 1063 0044 00000240 		.word	1073872896
 1064 0048 00000000 		.word	huart4
 1065              		.cfi_endproc
 1066              	.LFE141:
 1068              		.section	.text.main_task,"ax",%progbits
 1069              		.align	1
 1070              		.global	main_task
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1074              		.fpu fpv4-sp-d16
 1076              	main_task:
ARM GAS  /tmp/ccLnQTJ0.s 			page 34


 1077              	.LFB137:
 450:Core/Src/main.c **** 
 1078              		.loc 1 450 1 is_stmt 1 view -0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 0
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082 0000 10B5     		push	{r4, lr}
 1083              	.LCFI8:
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 4, -8
 1086              		.cfi_offset 14, -4
 452:Core/Src/main.c **** 	{
 1087              		.loc 1 452 2 view .LVU280
 452:Core/Src/main.c **** 	{
 1088              		.loc 1 452 18 is_stmt 0 view .LVU281
 1089 0002 5C4B     		ldr	r3, .L101
 1090 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 452:Core/Src/main.c **** 	{
 1091              		.loc 1 452 39 view .LVU282
 1092 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 452:Core/Src/main.c **** 	{
 1093              		.loc 1 452 5 view .LVU283
 1094 0008 9A42     		cmp	r2, r3
 1095 000a 07D1     		bne	.L99
 1096              	.L85:
 459:Core/Src/main.c **** 	{
 1097              		.loc 1 459 2 is_stmt 1 view .LVU284
 1098 000c 5A4B     		ldr	r3, .L101+4
 1099 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1100 0010 012B     		cmp	r3, #1
 1101 0012 09D0     		beq	.L86
 1102 0014 022B     		cmp	r3, #2
 1103 0016 00F08580 		beq	.L87
 1104              	.L84:
 561:Core/Src/main.c **** 
 1105              		.loc 1 561 1 is_stmt 0 view .LVU285
 1106 001a 10BD     		pop	{r4, pc}
 1107              	.L99:
 455:Core/Src/main.c **** 
 1108              		.loc 1 455 3 is_stmt 1 view .LVU286
 455:Core/Src/main.c **** 
 1109              		.loc 1 455 11 is_stmt 0 view .LVU287
 1110 001c 5548     		ldr	r0, .L101
 1111 001e FFF7FEFF 		bl	buffer_pop
 1112              	.LVL38:
 455:Core/Src/main.c **** 
 1113              		.loc 1 455 9 view .LVU288
 1114 0022 564B     		ldr	r3, .L101+8
 1115 0024 1870     		strb	r0, [r3]
 1116 0026 F1E7     		b	.L85
 1117              	.L86:
 463:Core/Src/main.c **** 		{
 1118              		.loc 1 463 3 is_stmt 1 view .LVU289
 1119 0028 544B     		ldr	r3, .L101+8
 1120 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1121 002c 012B     		cmp	r3, #1
 1122 002e 2CD0     		beq	.L89
ARM GAS  /tmp/ccLnQTJ0.s 			page 35


 1123 0030 022B     		cmp	r3, #2
 1124 0032 4AD0     		beq	.L90
 497:Core/Src/main.c **** 			f_querry =0;
 1125              		.loc 1 497 4 view .LVU290
 497:Core/Src/main.c **** 			f_querry =0;
 1126              		.loc 1 497 8 is_stmt 0 view .LVU291
 1127 0034 524B     		ldr	r3, .L101+12
 1128 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497:Core/Src/main.c **** 			f_querry =0;
 1129              		.loc 1 497 7 view .LVU292
 1130 0038 002B     		cmp	r3, #0
 1131 003a EED0     		beq	.L84
 498:Core/Src/main.c **** 			
 1132              		.loc 1 498 4 is_stmt 1 view .LVU293
 498:Core/Src/main.c **** 			
 1133              		.loc 1 498 13 is_stmt 0 view .LVU294
 1134 003c 504B     		ldr	r3, .L101+12
 1135 003e 0022     		movs	r2, #0
 1136 0040 1A70     		strb	r2, [r3]
 500:Core/Src/main.c **** 			
 1137              		.loc 1 500 4 is_stmt 1 view .LVU295
 500:Core/Src/main.c **** 			
 1138              		.loc 1 500 12 is_stmt 0 view .LVU296
 1139 0042 5049     		ldr	r1, .L101+16
 1140 0044 504B     		ldr	r3, .L101+20
 1141 0046 5A1C     		adds	r2, r3, #1
 1142 0048 0A60     		str	r2, [r1]
 502:Core/Src/main.c **** 			
 1143              		.loc 1 502 4 is_stmt 1 view .LVU297
 502:Core/Src/main.c **** 			
 1144              		.loc 1 502 24 is_stmt 0 view .LVU298
 1145 004a 504A     		ldr	r2, .L101+24
 1146 004c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 502:Core/Src/main.c **** 			
 1147              		.loc 1 502 12 view .LVU299
 1148 004e 981C     		adds	r0, r3, #2
 1149 0050 0860     		str	r0, [r1]
 502:Core/Src/main.c **** 			
 1150              		.loc 1 502 24 view .LVU300
 1151 0052 4F49     		ldr	r1, .L101+28
 1152 0054 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 502:Core/Src/main.c **** 			
 1153              		.loc 1 502 15 view .LVU301
 1154 0056 5970     		strb	r1, [r3, #1]
 504:Core/Src/main.c **** 				*pTX_msg++ = FUNC_READ;
 1155              		.loc 1 504 4 is_stmt 1 view .LVU302
 504:Core/Src/main.c **** 				*pTX_msg++ = FUNC_READ;
 1156              		.loc 1 504 6 is_stmt 0 view .LVU303
 1157 0058 002A     		cmp	r2, #0
 1158 005a 56D0     		beq	.L92
 505:Core/Src/main.c **** 				*pTX_msg++ = '0';
 1159              		.loc 1 505 5 is_stmt 1 view .LVU304
 505:Core/Src/main.c **** 				*pTX_msg++ = '0';
 1160              		.loc 1 505 13 is_stmt 0 view .LVU305
 1161 005c 494A     		ldr	r2, .L101+16
 1162 005e D91C     		adds	r1, r3, #3
 1163 0060 1160     		str	r1, [r2]
ARM GAS  /tmp/ccLnQTJ0.s 			page 36


 505:Core/Src/main.c **** 				*pTX_msg++ = '0';
 1164              		.loc 1 505 16 view .LVU306
 1165 0062 F221     		movs	r1, #242
 1166 0064 9970     		strb	r1, [r3, #2]
 506:Core/Src/main.c **** 			}else{
 1167              		.loc 1 506 5 is_stmt 1 view .LVU307
 506:Core/Src/main.c **** 			}else{
 1168              		.loc 1 506 13 is_stmt 0 view .LVU308
 1169 0066 191D     		adds	r1, r3, #4
 1170 0068 1160     		str	r1, [r2]
 506:Core/Src/main.c **** 			}else{
 1171              		.loc 1 506 16 view .LVU309
 1172 006a 3022     		movs	r2, #48
 1173 006c DA70     		strb	r2, [r3, #3]
 1174              	.L93:
 514:Core/Src/main.c **** 			
 1175              		.loc 1 514 4 is_stmt 1 view .LVU310
 1176 006e FFF7FEFF 		bl	RS485_Send_Message
 1177              	.LVL39:
 516:Core/Src/main.c **** 			
 1178              		.loc 1 516 4 view .LVU311
 516:Core/Src/main.c **** 			
 1179              		.loc 1 516 15 is_stmt 0 view .LVU312
 1180 0072 464B     		ldr	r3, .L101+24
 1181 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 516:Core/Src/main.c **** 			
 1182              		.loc 1 516 7 view .LVU313
 1183 0076 022B     		cmp	r3, #2
 1184 0078 52D0     		beq	.L96
 516:Core/Src/main.c **** 			
 1185              		.loc 1 516 7 discriminator 1 view .LVU314
 1186 007a 0133     		adds	r3, r3, #1
 1187 007c DBB2     		uxtb	r3, r3
 1188              	.L94:
 516:Core/Src/main.c **** 			
 1189              		.loc 1 516 7 discriminator 4 view .LVU315
 1190 007e 434A     		ldr	r2, .L101+24
 1191 0080 1370     		strb	r3, [r2]
 518:Core/Src/main.c **** 			break;
 1192              		.loc 1 518 4 is_stmt 1 discriminator 4 view .LVU316
 518:Core/Src/main.c **** 			break;
 1193              		.loc 1 518 10 is_stmt 0 discriminator 4 view .LVU317
 1194 0082 3D4B     		ldr	r3, .L101+4
 1195 0084 0222     		movs	r2, #2
 1196 0086 1A70     		strb	r2, [r3]
 519:Core/Src/main.c **** 
 1197              		.loc 1 519 4 is_stmt 1 discriminator 4 view .LVU318
 1198 0088 C7E7     		b	.L84
 1199              	.L89:
 468:Core/Src/main.c **** 			
 1200              		.loc 1 468 4 view .LVU319
 468:Core/Src/main.c **** 			
 1201              		.loc 1 468 12 is_stmt 0 view .LVU320
 1202 008a 3E4C     		ldr	r4, .L101+16
 1203 008c 3E4B     		ldr	r3, .L101+20
 1204 008e 5A1C     		adds	r2, r3, #1
 1205 0090 2260     		str	r2, [r4]
ARM GAS  /tmp/ccLnQTJ0.s 			page 37


 470:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1206              		.loc 1 470 4 is_stmt 1 view .LVU321
 470:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1207              		.loc 1 470 12 is_stmt 0 view .LVU322
 1208 0092 9A1C     		adds	r2, r3, #2
 1209 0094 2260     		str	r2, [r4]
 470:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1210              		.loc 1 470 24 view .LVU323
 1211 0096 3E4A     		ldr	r2, .L101+28
 1212 0098 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 470:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1213              		.loc 1 470 15 view .LVU324
 1214 009a 5A70     		strb	r2, [r3, #1]
 471:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit1_buf)+'0';
 1215              		.loc 1 471 4 is_stmt 1 view .LVU325
 471:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit1_buf)+'0';
 1216              		.loc 1 471 12 is_stmt 0 view .LVU326
 1217 009c DA1C     		adds	r2, r3, #3
 1218 009e 2260     		str	r2, [r4]
 471:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit1_buf)+'0';
 1219              		.loc 1 471 15 view .LVU327
 1220 00a0 F122     		movs	r2, #241
 1221 00a2 9A70     		strb	r2, [r3, #2]
 472:Core/Src/main.c **** 			 			
 1222              		.loc 1 472 4 is_stmt 1 view .LVU328
 472:Core/Src/main.c **** 			 			
 1223              		.loc 1 472 17 is_stmt 0 view .LVU329
 1224 00a4 3B48     		ldr	r0, .L101+32
 1225 00a6 FFF7FEFF 		bl	buffer_pop
 1226              	.LVL40:
 472:Core/Src/main.c **** 			 			
 1227              		.loc 1 472 12 view .LVU330
 1228 00aa 2368     		ldr	r3, [r4]
 1229 00ac 5A1C     		adds	r2, r3, #1
 1230 00ae 2260     		str	r2, [r4]
 472:Core/Src/main.c **** 			 			
 1231              		.loc 1 472 40 view .LVU331
 1232 00b0 3030     		adds	r0, r0, #48
 472:Core/Src/main.c **** 			 			
 1233              		.loc 1 472 15 view .LVU332
 1234 00b2 1870     		strb	r0, [r3]
 474:Core/Src/main.c **** 			event = EVENT_RESET;
 1235              		.loc 1 474 4 is_stmt 1 view .LVU333
 1236 00b4 FFF7FEFF 		bl	RS485_Send_Message
 1237              	.LVL41:
 475:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1238              		.loc 1 475 4 view .LVU334
 475:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1239              		.loc 1 475 10 is_stmt 0 view .LVU335
 1240 00b8 0023     		movs	r3, #0
 1241 00ba 304A     		ldr	r2, .L101+8
 1242 00bc 1370     		strb	r3, [r2]
 476:Core/Src/main.c **** 			f_querry =0;
 1243              		.loc 1 476 4 is_stmt 1 view .LVU336
 476:Core/Src/main.c **** 			f_querry =0;
 1244              		.loc 1 476 10 is_stmt 0 view .LVU337
 1245 00be 2E4A     		ldr	r2, .L101+4
ARM GAS  /tmp/ccLnQTJ0.s 			page 38


 1246 00c0 0221     		movs	r1, #2
 1247 00c2 1170     		strb	r1, [r2]
 477:Core/Src/main.c **** 			break;
 1248              		.loc 1 477 4 is_stmt 1 view .LVU338
 477:Core/Src/main.c **** 			break;
 1249              		.loc 1 477 13 is_stmt 0 view .LVU339
 1250 00c4 2E4A     		ldr	r2, .L101+12
 1251 00c6 1370     		strb	r3, [r2]
 478:Core/Src/main.c **** 
 1252              		.loc 1 478 4 is_stmt 1 view .LVU340
 1253 00c8 A7E7     		b	.L84
 1254              	.L90:
 483:Core/Src/main.c **** 			
 1255              		.loc 1 483 4 view .LVU341
 483:Core/Src/main.c **** 			
 1256              		.loc 1 483 12 is_stmt 0 view .LVU342
 1257 00ca 2E4C     		ldr	r4, .L101+16
 1258 00cc 2E4B     		ldr	r3, .L101+20
 1259 00ce 5A1C     		adds	r2, r3, #1
 1260 00d0 2260     		str	r2, [r4]
 485:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1261              		.loc 1 485 4 is_stmt 1 view .LVU343
 485:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1262              		.loc 1 485 12 is_stmt 0 view .LVU344
 1263 00d2 9A1C     		adds	r2, r3, #2
 1264 00d4 2260     		str	r2, [r4]
 485:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1265              		.loc 1 485 24 view .LVU345
 1266 00d6 2E4A     		ldr	r2, .L101+28
 1267 00d8 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 485:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1268              		.loc 1 485 15 view .LVU346
 1269 00da 5A70     		strb	r2, [r3, #1]
 486:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit2_buf)+'0';
 1270              		.loc 1 486 4 is_stmt 1 view .LVU347
 486:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit2_buf)+'0';
 1271              		.loc 1 486 12 is_stmt 0 view .LVU348
 1272 00dc DA1C     		adds	r2, r3, #3
 1273 00de 2260     		str	r2, [r4]
 486:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit2_buf)+'0';
 1274              		.loc 1 486 15 view .LVU349
 1275 00e0 F122     		movs	r2, #241
 1276 00e2 9A70     		strb	r2, [r3, #2]
 487:Core/Src/main.c **** 					
 1277              		.loc 1 487 4 is_stmt 1 view .LVU350
 487:Core/Src/main.c **** 					
 1278              		.loc 1 487 17 is_stmt 0 view .LVU351
 1279 00e4 2C48     		ldr	r0, .L101+36
 1280 00e6 FFF7FEFF 		bl	buffer_pop
 1281              	.LVL42:
 487:Core/Src/main.c **** 					
 1282              		.loc 1 487 12 view .LVU352
 1283 00ea 2368     		ldr	r3, [r4]
 1284 00ec 5A1C     		adds	r2, r3, #1
 1285 00ee 2260     		str	r2, [r4]
 487:Core/Src/main.c **** 					
 1286              		.loc 1 487 40 view .LVU353
ARM GAS  /tmp/ccLnQTJ0.s 			page 39


 1287 00f0 3030     		adds	r0, r0, #48
 487:Core/Src/main.c **** 					
 1288              		.loc 1 487 15 view .LVU354
 1289 00f2 1870     		strb	r0, [r3]
 489:Core/Src/main.c **** 			event = EVENT_RESET;
 1290              		.loc 1 489 4 is_stmt 1 view .LVU355
 1291 00f4 FFF7FEFF 		bl	RS485_Send_Message
 1292              	.LVL43:
 490:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1293              		.loc 1 490 4 view .LVU356
 490:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1294              		.loc 1 490 10 is_stmt 0 view .LVU357
 1295 00f8 0023     		movs	r3, #0
 1296 00fa 204A     		ldr	r2, .L101+8
 1297 00fc 1370     		strb	r3, [r2]
 491:Core/Src/main.c **** 			f_querry =0;
 1298              		.loc 1 491 4 is_stmt 1 view .LVU358
 491:Core/Src/main.c **** 			f_querry =0;
 1299              		.loc 1 491 10 is_stmt 0 view .LVU359
 1300 00fe 1E4A     		ldr	r2, .L101+4
 1301 0100 0221     		movs	r1, #2
 1302 0102 1170     		strb	r1, [r2]
 492:Core/Src/main.c **** 			break;
 1303              		.loc 1 492 4 is_stmt 1 view .LVU360
 492:Core/Src/main.c **** 			break;
 1304              		.loc 1 492 13 is_stmt 0 view .LVU361
 1305 0104 1E4A     		ldr	r2, .L101+12
 1306 0106 1370     		strb	r3, [r2]
 493:Core/Src/main.c **** 		
 1307              		.loc 1 493 4 is_stmt 1 view .LVU362
 1308 0108 87E7     		b	.L84
 1309              	.L92:
 510:Core/Src/main.c **** 				*pTX_msg++ = '0';
 1310              		.loc 1 510 5 view .LVU363
 510:Core/Src/main.c **** 				*pTX_msg++ = '0';
 1311              		.loc 1 510 13 is_stmt 0 view .LVU364
 1312 010a 1E4A     		ldr	r2, .L101+16
 1313 010c 1E4B     		ldr	r3, .L101+20
 1314 010e D91C     		adds	r1, r3, #3
 1315 0110 1160     		str	r1, [r2]
 510:Core/Src/main.c **** 				*pTX_msg++ = '0';
 1316              		.loc 1 510 16 view .LVU365
 1317 0112 F421     		movs	r1, #244
 1318 0114 9970     		strb	r1, [r3, #2]
 511:Core/Src/main.c **** 			}
 1319              		.loc 1 511 5 is_stmt 1 view .LVU366
 511:Core/Src/main.c **** 			}
 1320              		.loc 1 511 13 is_stmt 0 view .LVU367
 1321 0116 191D     		adds	r1, r3, #4
 1322 0118 1160     		str	r1, [r2]
 511:Core/Src/main.c **** 			}
 1323              		.loc 1 511 16 view .LVU368
 1324 011a 3022     		movs	r2, #48
 1325 011c DA70     		strb	r2, [r3, #3]
 1326 011e A6E7     		b	.L93
 1327              	.L96:
 516:Core/Src/main.c **** 			
ARM GAS  /tmp/ccLnQTJ0.s 			page 40


 1328              		.loc 1 516 7 view .LVU369
 1329 0120 0023     		movs	r3, #0
 1330 0122 ACE7     		b	.L94
 1331              	.L87:
 526:Core/Src/main.c **** 			RS485_Read_Message();
 1332              		.loc 1 526 3 is_stmt 1 view .LVU370
 526:Core/Src/main.c **** 			RS485_Read_Message();
 1333              		.loc 1 526 12 is_stmt 0 view .LVU371
 1334 0124 154B     		ldr	r3, .L101+8
 1335 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 526:Core/Src/main.c **** 			RS485_Read_Message();
 1336              		.loc 1 526 6 view .LVU372
 1337 0128 052B     		cmp	r3, #5
 1338 012a 1AD0     		beq	.L100
 535:Core/Src/main.c **** 			f_querry =0;
 1339              		.loc 1 535 4 is_stmt 1 view .LVU373
 535:Core/Src/main.c **** 			f_querry =0;
 1340              		.loc 1 535 8 is_stmt 0 view .LVU374
 1341 012c 144B     		ldr	r3, .L101+12
 1342 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 535:Core/Src/main.c **** 			f_querry =0;
 1343              		.loc 1 535 7 view .LVU375
 1344 0130 002B     		cmp	r3, #0
 1345 0132 3FF472AF 		beq	.L84
 536:Core/Src/main.c **** 			
 1346              		.loc 1 536 4 is_stmt 1 view .LVU376
 536:Core/Src/main.c **** 			
 1347              		.loc 1 536 13 is_stmt 0 view .LVU377
 1348 0136 124B     		ldr	r3, .L101+12
 1349 0138 0022     		movs	r2, #0
 1350 013a 1A70     		strb	r2, [r3]
 542:Core/Src/main.c **** 			tx_timeout++;
 1351              		.loc 1 542 4 is_stmt 1 view .LVU378
 1352 013c FFF7FEFF 		bl	RS485_Send_Message
 1353              	.LVL44:
 543:Core/Src/main.c **** 			
 1354              		.loc 1 543 4 view .LVU379
 543:Core/Src/main.c **** 			
 1355              		.loc 1 543 14 is_stmt 0 view .LVU380
 1356 0140 164A     		ldr	r2, .L101+40
 1357 0142 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1358 0144 0133     		adds	r3, r3, #1
 1359 0146 DBB2     		uxtb	r3, r3
 1360 0148 1370     		strb	r3, [r2]
 545:Core/Src/main.c **** 				state = STATE_TX;
 1361              		.loc 1 545 4 is_stmt 1 view .LVU381
 545:Core/Src/main.c **** 				state = STATE_TX;
 1362              		.loc 1 545 7 is_stmt 0 view .LVU382
 1363 014a 022B     		cmp	r3, #2
 1364 014c 7FF465AF 		bne	.L84
 546:Core/Src/main.c **** 				event = EVENT_RESET;	
 1365              		.loc 1 546 5 is_stmt 1 view .LVU383
 546:Core/Src/main.c **** 				event = EVENT_RESET;	
 1366              		.loc 1 546 11 is_stmt 0 view .LVU384
 1367 0150 094B     		ldr	r3, .L101+4
 1368 0152 0122     		movs	r2, #1
 1369 0154 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccLnQTJ0.s 			page 41


 547:Core/Src/main.c **** 				tx_timeout=0;
 1370              		.loc 1 547 5 is_stmt 1 view .LVU385
 547:Core/Src/main.c **** 				tx_timeout=0;
 1371              		.loc 1 547 11 is_stmt 0 view .LVU386
 1372 0156 0023     		movs	r3, #0
 1373 0158 084A     		ldr	r2, .L101+8
 1374 015a 1370     		strb	r3, [r2]
 548:Core/Src/main.c **** 				check_slave();
 1375              		.loc 1 548 5 is_stmt 1 view .LVU387
 548:Core/Src/main.c **** 				check_slave();
 1376              		.loc 1 548 15 is_stmt 0 view .LVU388
 1377 015c 0F4A     		ldr	r2, .L101+40
 1378 015e 1370     		strb	r3, [r2]
 549:Core/Src/main.c **** 				break;
 1379              		.loc 1 549 5 is_stmt 1 view .LVU389
 550:Core/Src/main.c **** 
 1380              		.loc 1 550 5 view .LVU390
 561:Core/Src/main.c **** 
 1381              		.loc 1 561 1 is_stmt 0 view .LVU391
 1382 0160 5BE7     		b	.L84
 1383              	.L100:
 527:Core/Src/main.c **** 
 1384              		.loc 1 527 4 is_stmt 1 view .LVU392
 1385 0162 FFF7FEFF 		bl	RS485_Read_Message
 1386              	.LVL45:
 529:Core/Src/main.c **** 			event = EVENT_RESET;
 1387              		.loc 1 529 4 view .LVU393
 529:Core/Src/main.c **** 			event = EVENT_RESET;
 1388              		.loc 1 529 9 is_stmt 0 view .LVU394
 1389 0166 044B     		ldr	r3, .L101+4
 1390 0168 0122     		movs	r2, #1
 1391 016a 1A70     		strb	r2, [r3]
 530:Core/Src/main.c **** 		
 1392              		.loc 1 530 4 is_stmt 1 view .LVU395
 530:Core/Src/main.c **** 		
 1393              		.loc 1 530 10 is_stmt 0 view .LVU396
 1394 016c 034B     		ldr	r3, .L101+8
 1395 016e 0022     		movs	r2, #0
 1396 0170 1A70     		strb	r2, [r3]
 1397 0172 52E7     		b	.L84
 1398              	.L102:
 1399              		.align	2
 1400              	.L101:
 1401 0174 00000000 		.word	.LANCHOR20
 1402 0178 00000000 		.word	.LANCHOR19
 1403 017c 00000000 		.word	.LANCHOR29
 1404 0180 00000000 		.word	.LANCHOR14
 1405 0184 00000000 		.word	.LANCHOR30
 1406 0188 00000000 		.word	.LANCHOR23
 1407 018c 00000000 		.word	.LANCHOR31
 1408 0190 00000000 		.word	.LANCHOR24
 1409 0194 00000000 		.word	.LANCHOR18
 1410 0198 00000000 		.word	.LANCHOR22
 1411 019c 00000000 		.word	.LANCHOR32
 1412              		.cfi_endproc
 1413              	.LFE137:
 1415              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
ARM GAS  /tmp/ccLnQTJ0.s 			page 42


 1416              		.align	1
 1417              		.global	HAL_TIM_PeriodElapsedCallback
 1418              		.syntax unified
 1419              		.thumb
 1420              		.thumb_func
 1421              		.fpu fpv4-sp-d16
 1423              	HAL_TIM_PeriodElapsedCallback:
 1424              	.LVL46:
 1425              	.LFB142:
 706:Core/Src/main.c **** 
 707:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 708:Core/Src/main.c **** {
 1426              		.loc 1 708 1 is_stmt 1 view -0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 0, uses_anonymous_args = 0
 1430              		@ link register save eliminated.
 709:Core/Src/main.c **** 	// Check which version of the timer triggered this callback and toggle LED
 710:Core/Src/main.c **** 
 711:Core/Src/main.c **** 	if (htim == &htim4)
 1431              		.loc 1 711 2 view .LVU398
 1432              		.loc 1 711 5 is_stmt 0 view .LVU399
 1433 0000 034B     		ldr	r3, .L106
 1434 0002 8342     		cmp	r3, r0
 1435 0004 00D0     		beq	.L105
 1436              	.L103:
 712:Core/Src/main.c **** 	{
 713:Core/Src/main.c **** 		f_timer_10ms = 1;
 714:Core/Src/main.c **** 	}
 715:Core/Src/main.c **** }
 1437              		.loc 1 715 1 view .LVU400
 1438 0006 7047     		bx	lr
 1439              	.L105:
 713:Core/Src/main.c **** 	}
 1440              		.loc 1 713 3 is_stmt 1 view .LVU401
 713:Core/Src/main.c **** 	}
 1441              		.loc 1 713 16 is_stmt 0 view .LVU402
 1442 0008 024B     		ldr	r3, .L106+4
 1443 000a 0122     		movs	r2, #1
 1444 000c 1A70     		strb	r2, [r3]
 1445              		.loc 1 715 1 view .LVU403
 1446 000e FAE7     		b	.L103
 1447              	.L107:
 1448              		.align	2
 1449              	.L106:
 1450 0010 00000000 		.word	htim4
 1451 0014 00000000 		.word	.LANCHOR9
 1452              		.cfi_endproc
 1453              	.LFE142:
 1455              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1456              		.align	1
 1457              		.global	HAL_UART_RxCpltCallback
 1458              		.syntax unified
 1459              		.thumb
 1460              		.thumb_func
 1461              		.fpu fpv4-sp-d16
 1463              	HAL_UART_RxCpltCallback:
ARM GAS  /tmp/ccLnQTJ0.s 			page 43


 1464              	.LVL47:
 1465              	.LFB143:
 716:Core/Src/main.c **** 
 717:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 718:Core/Src/main.c **** {
 1466              		.loc 1 718 1 is_stmt 1 view -0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 719:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 720:Core/Src/main.c **** 
 721:Core/Src/main.c **** 	if (huart == &huart4)
 1470              		.loc 1 721 2 view .LVU405
 1471              		.loc 1 721 5 is_stmt 0 view .LVU406
 1472 0000 074B     		ldr	r3, .L115
 1473 0002 8342     		cmp	r3, r0
 1474 0004 00D0     		beq	.L114
 1475 0006 7047     		bx	lr
 1476              	.L114:
 718:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 1477              		.loc 1 718 1 view .LVU407
 1478 0008 10B5     		push	{r4, lr}
 1479              	.LCFI9:
 1480              		.cfi_def_cfa_offset 8
 1481              		.cfi_offset 4, -8
 1482              		.cfi_offset 14, -4
 722:Core/Src/main.c **** 	{
 723:Core/Src/main.c **** 		buffer_push(&rx_buffer, rx_temp);
 1483              		.loc 1 723 3 is_stmt 1 view .LVU408
 1484 000a 064C     		ldr	r4, .L115+4
 1485 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1486 000e 0648     		ldr	r0, .L115+8
 1487              	.LVL48:
 1488              		.loc 1 723 3 is_stmt 0 view .LVU409
 1489 0010 FFF7FEFF 		bl	buffer_push
 1490              	.LVL49:
 724:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 1491              		.loc 1 724 3 is_stmt 1 view .LVU410
 1492 0014 0122     		movs	r2, #1
 1493 0016 2146     		mov	r1, r4
 1494 0018 0148     		ldr	r0, .L115
 1495 001a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1496              	.LVL50:
 725:Core/Src/main.c **** 	}
 726:Core/Src/main.c **** }
 1497              		.loc 1 726 1 is_stmt 0 view .LVU411
 1498 001e 10BD     		pop	{r4, pc}
 1499              	.L116:
 1500              		.align	2
 1501              	.L115:
 1502 0020 00000000 		.word	huart4
 1503 0024 00000000 		.word	.LANCHOR33
 1504 0028 00000000 		.word	.LANCHOR25
 1505              		.cfi_endproc
 1506              	.LFE143:
 1508              		.section	.text.Error_Handler,"ax",%progbits
 1509              		.align	1
ARM GAS  /tmp/ccLnQTJ0.s 			page 44


 1510              		.global	Error_Handler
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu fpv4-sp-d16
 1516              	Error_Handler:
 1517              	.LFB144:
 727:Core/Src/main.c **** /* USER CODE END 4 */
 728:Core/Src/main.c **** 
 729:Core/Src/main.c **** /**
 730:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 731:Core/Src/main.c ****  * @retval None
 732:Core/Src/main.c ****  */
 733:Core/Src/main.c **** void Error_Handler(void)
 734:Core/Src/main.c **** {
 1518              		.loc 1 734 1 is_stmt 1 view -0
 1519              		.cfi_startproc
 1520              		@ Volatile: function does not return.
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 1523              		@ link register save eliminated.
 735:Core/Src/main.c **** 	/* USER CODE BEGIN Error_Handler_Debug */
 736:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 737:Core/Src/main.c **** 	__disable_irq();
 1524              		.loc 1 737 2 view .LVU413
 1525              	.LBB5:
 1526              	.LBI5:
 1527              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  /tmp/ccLnQTJ0.s 			page 45


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  /tmp/ccLnQTJ0.s 			page 46


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1528              		.loc 2 140 27 view .LVU414
 1529              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccLnQTJ0.s 			page 47


 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1530              		.loc 2 142 3 view .LVU415
 1531              		.syntax unified
 1532              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1533 0000 72B6     		cpsid i
 1534              	@ 0 "" 2
 1535              		.thumb
 1536              		.syntax unified
 1537              	.L118:
 1538              	.LBE6:
 1539              	.LBE5:
 738:Core/Src/main.c **** 	while (1)
 1540              		.loc 1 738 2 discriminator 1 view .LVU416
 739:Core/Src/main.c **** 	{
 740:Core/Src/main.c **** 	}
 1541              		.loc 1 740 2 discriminator 1 view .LVU417
 738:Core/Src/main.c **** 	while (1)
 1542              		.loc 1 738 8 discriminator 1 view .LVU418
 1543 0002 FEE7     		b	.L118
 1544              		.cfi_endproc
 1545              	.LFE144:
 1547              		.section	.text.SystemClock_Config,"ax",%progbits
 1548              		.align	1
 1549              		.global	SystemClock_Config
 1550              		.syntax unified
 1551              		.thumb
 1552              		.thumb_func
 1553              		.fpu fpv4-sp-d16
 1555              	SystemClock_Config:
 1556              	.LFB131:
 247:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1557              		.loc 1 247 1 view -0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 80
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561 0000 00B5     		push	{lr}
 1562              	.LCFI10:
 1563              		.cfi_def_cfa_offset 4
 1564              		.cfi_offset 14, -4
 1565 0002 95B0     		sub	sp, sp, #84
 1566              	.LCFI11:
 1567              		.cfi_def_cfa_offset 88
 248:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1568              		.loc 1 248 2 view .LVU420
 248:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1569              		.loc 1 248 21 is_stmt 0 view .LVU421
 1570 0004 3022     		movs	r2, #48
 1571 0006 0021     		movs	r1, #0
 1572 0008 08A8     		add	r0, sp, #32
 1573 000a FFF7FEFF 		bl	memset
 1574              	.LVL51:
 249:Core/Src/main.c **** 
 1575              		.loc 1 249 2 is_stmt 1 view .LVU422
 249:Core/Src/main.c **** 
 1576              		.loc 1 249 21 is_stmt 0 view .LVU423
 1577 000e 0023     		movs	r3, #0
 1578 0010 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccLnQTJ0.s 			page 48


 1579 0012 0493     		str	r3, [sp, #16]
 1580 0014 0593     		str	r3, [sp, #20]
 1581 0016 0693     		str	r3, [sp, #24]
 1582 0018 0793     		str	r3, [sp, #28]
 253:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1583              		.loc 1 253 2 is_stmt 1 view .LVU424
 1584              	.LBB7:
 253:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1585              		.loc 1 253 2 view .LVU425
 1586 001a 0193     		str	r3, [sp, #4]
 253:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1587              		.loc 1 253 2 view .LVU426
 1588 001c 204A     		ldr	r2, .L125
 1589 001e 116C     		ldr	r1, [r2, #64]
 1590 0020 41F08051 		orr	r1, r1, #268435456
 1591 0024 1164     		str	r1, [r2, #64]
 253:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1592              		.loc 1 253 2 view .LVU427
 1593 0026 126C     		ldr	r2, [r2, #64]
 1594 0028 02F08052 		and	r2, r2, #268435456
 1595 002c 0192     		str	r2, [sp, #4]
 253:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1596              		.loc 1 253 2 view .LVU428
 1597 002e 019A     		ldr	r2, [sp, #4]
 1598              	.LBE7:
 253:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1599              		.loc 1 253 2 view .LVU429
 254:Core/Src/main.c **** 
 1600              		.loc 1 254 2 view .LVU430
 1601              	.LBB8:
 254:Core/Src/main.c **** 
 1602              		.loc 1 254 2 view .LVU431
 1603 0030 0293     		str	r3, [sp, #8]
 254:Core/Src/main.c **** 
 1604              		.loc 1 254 2 view .LVU432
 1605 0032 1C4A     		ldr	r2, .L125+4
 1606 0034 1368     		ldr	r3, [r2]
 1607 0036 23F44043 		bic	r3, r3, #49152
 1608 003a 43F48043 		orr	r3, r3, #16384
 1609 003e 1360     		str	r3, [r2]
 254:Core/Src/main.c **** 
 1610              		.loc 1 254 2 view .LVU433
 1611 0040 1368     		ldr	r3, [r2]
 1612 0042 03F44043 		and	r3, r3, #49152
 1613 0046 0293     		str	r3, [sp, #8]
 254:Core/Src/main.c **** 
 1614              		.loc 1 254 2 view .LVU434
 1615 0048 029B     		ldr	r3, [sp, #8]
 1616              	.LBE8:
 254:Core/Src/main.c **** 
 1617              		.loc 1 254 2 view .LVU435
 259:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1618              		.loc 1 259 2 view .LVU436
 259:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1619              		.loc 1 259 35 is_stmt 0 view .LVU437
 1620 004a 0123     		movs	r3, #1
 1621 004c 0893     		str	r3, [sp, #32]
ARM GAS  /tmp/ccLnQTJ0.s 			page 49


 260:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1622              		.loc 1 260 2 is_stmt 1 view .LVU438
 260:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1623              		.loc 1 260 29 is_stmt 0 view .LVU439
 1624 004e 4FF48033 		mov	r3, #65536
 1625 0052 0993     		str	r3, [sp, #36]
 261:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1626              		.loc 1 261 2 is_stmt 1 view .LVU440
 261:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1627              		.loc 1 261 33 is_stmt 0 view .LVU441
 1628 0054 0223     		movs	r3, #2
 1629 0056 0E93     		str	r3, [sp, #56]
 262:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1630              		.loc 1 262 2 is_stmt 1 view .LVU442
 262:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1631              		.loc 1 262 34 is_stmt 0 view .LVU443
 1632 0058 4FF48002 		mov	r2, #4194304
 1633 005c 0F92     		str	r2, [sp, #60]
 263:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1634              		.loc 1 263 2 is_stmt 1 view .LVU444
 263:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1635              		.loc 1 263 29 is_stmt 0 view .LVU445
 1636 005e 0422     		movs	r2, #4
 1637 0060 1092     		str	r2, [sp, #64]
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1638              		.loc 1 264 2 is_stmt 1 view .LVU446
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1639              		.loc 1 264 29 is_stmt 0 view .LVU447
 1640 0062 6022     		movs	r2, #96
 1641 0064 1192     		str	r2, [sp, #68]
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1642              		.loc 1 265 2 is_stmt 1 view .LVU448
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1643              		.loc 1 265 29 is_stmt 0 view .LVU449
 1644 0066 1293     		str	r3, [sp, #72]
 266:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1645              		.loc 1 266 2 is_stmt 1 view .LVU450
 266:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1646              		.loc 1 266 29 is_stmt 0 view .LVU451
 1647 0068 0323     		movs	r3, #3
 1648 006a 1393     		str	r3, [sp, #76]
 267:Core/Src/main.c **** 	{
 1649              		.loc 1 267 2 is_stmt 1 view .LVU452
 267:Core/Src/main.c **** 	{
 1650              		.loc 1 267 6 is_stmt 0 view .LVU453
 1651 006c 08A8     		add	r0, sp, #32
 1652 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1653              	.LVL52:
 267:Core/Src/main.c **** 	{
 1654              		.loc 1 267 5 view .LVU454
 1655 0072 88B9     		cbnz	r0, .L123
 274:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1656              		.loc 1 274 2 is_stmt 1 view .LVU455
 274:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1657              		.loc 1 274 30 is_stmt 0 view .LVU456
 1658 0074 0F23     		movs	r3, #15
 1659 0076 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccLnQTJ0.s 			page 50


 275:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1660              		.loc 1 275 2 is_stmt 1 view .LVU457
 275:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1661              		.loc 1 275 33 is_stmt 0 view .LVU458
 1662 0078 0223     		movs	r3, #2
 1663 007a 0493     		str	r3, [sp, #16]
 276:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1664              		.loc 1 276 2 is_stmt 1 view .LVU459
 276:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1665              		.loc 1 276 34 is_stmt 0 view .LVU460
 1666 007c 8023     		movs	r3, #128
 1667 007e 0593     		str	r3, [sp, #20]
 277:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1668              		.loc 1 277 2 is_stmt 1 view .LVU461
 277:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1669              		.loc 1 277 35 is_stmt 0 view .LVU462
 1670 0080 4FF48053 		mov	r3, #4096
 1671 0084 0693     		str	r3, [sp, #24]
 278:Core/Src/main.c **** 
 1672              		.loc 1 278 2 is_stmt 1 view .LVU463
 278:Core/Src/main.c **** 
 1673              		.loc 1 278 35 is_stmt 0 view .LVU464
 1674 0086 0793     		str	r3, [sp, #28]
 280:Core/Src/main.c **** 	{
 1675              		.loc 1 280 2 is_stmt 1 view .LVU465
 280:Core/Src/main.c **** 	{
 1676              		.loc 1 280 6 is_stmt 0 view .LVU466
 1677 0088 0121     		movs	r1, #1
 1678 008a 03A8     		add	r0, sp, #12
 1679 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1680              	.LVL53:
 280:Core/Src/main.c **** 	{
 1681              		.loc 1 280 5 view .LVU467
 1682 0090 20B9     		cbnz	r0, .L124
 284:Core/Src/main.c **** 
 1683              		.loc 1 284 1 view .LVU468
 1684 0092 15B0     		add	sp, sp, #84
 1685              	.LCFI12:
 1686              		.cfi_remember_state
 1687              		.cfi_def_cfa_offset 4
 1688              		@ sp needed
 1689 0094 5DF804FB 		ldr	pc, [sp], #4
 1690              	.L123:
 1691              	.LCFI13:
 1692              		.cfi_restore_state
 269:Core/Src/main.c **** 	}
 1693              		.loc 1 269 3 is_stmt 1 view .LVU469
 1694 0098 FFF7FEFF 		bl	Error_Handler
 1695              	.LVL54:
 1696              	.L124:
 282:Core/Src/main.c **** 	}
 1697              		.loc 1 282 3 view .LVU470
 1698 009c FFF7FEFF 		bl	Error_Handler
 1699              	.LVL55:
 1700              	.L126:
 1701              		.align	2
 1702              	.L125:
ARM GAS  /tmp/ccLnQTJ0.s 			page 51


 1703 00a0 00380240 		.word	1073887232
 1704 00a4 00700040 		.word	1073770496
 1705              		.cfi_endproc
 1706              	.LFE131:
 1708              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1709              		.align	2
 1710              	.LC0:
 1711 0000 4E554D20 		.ascii	"NUM SLAVE: \000"
 1711      534C4156 
 1711      453A2000 
 1712              		.align	2
 1713              	.LC1:
 1714 000c 53323A00 		.ascii	"S2:\000"
 1715              		.align	2
 1716              	.LC2:
 1717 0010 53313A00 		.ascii	"S1:\000"
 1718              		.section	.text.main,"ax",%progbits
 1719              		.align	1
 1720              		.global	main
 1721              		.syntax unified
 1722              		.thumb
 1723              		.thumb_func
 1724              		.fpu fpv4-sp-d16
 1726              	main:
 1727              	.LFB130:
 153:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 1728              		.loc 1 153 1 view -0
 1729              		.cfi_startproc
 1730              		@ Volatile: function does not return.
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733 0000 80B5     		push	{r7, lr}
 1734              	.LCFI14:
 1735              		.cfi_def_cfa_offset 8
 1736              		.cfi_offset 7, -8
 1737              		.cfi_offset 14, -4
 161:Core/Src/main.c **** 
 1738              		.loc 1 161 2 view .LVU472
 1739 0002 FFF7FEFF 		bl	HAL_Init
 1740              	.LVL56:
 168:Core/Src/main.c **** 
 1741              		.loc 1 168 2 view .LVU473
 1742 0006 FFF7FEFF 		bl	SystemClock_Config
 1743              	.LVL57:
 175:Core/Src/main.c **** 	MX_TIM4_Init();
 1744              		.loc 1 175 2 view .LVU474
 1745 000a FFF7FEFF 		bl	MX_GPIO_Init
 1746              	.LVL58:
 176:Core/Src/main.c **** 	MX_UART4_Init();
 1747              		.loc 1 176 2 view .LVU475
 1748 000e FFF7FEFF 		bl	MX_TIM4_Init
 1749              	.LVL59:
 177:Core/Src/main.c **** 	MX_UART5_Init();
 1750              		.loc 1 177 2 view .LVU476
 1751 0012 FFF7FEFF 		bl	MX_UART4_Init
 1752              	.LVL60:
 178:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
ARM GAS  /tmp/ccLnQTJ0.s 			page 52


 1753              		.loc 1 178 2 view .LVU477
 1754 0016 FFF7FEFF 		bl	MX_UART5_Init
 1755              	.LVL61:
 181:Core/Src/main.c **** 
 1756              		.loc 1 181 2 view .LVU478
 1757 001a 3748     		ldr	r0, .L130
 1758 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1759              	.LVL62:
 183:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 1760              		.loc 1 183 2 view .LVU479
 1761 0020 0022     		movs	r2, #0
 1762 0022 4FF48051 		mov	r1, #4096
 1763 0026 3548     		ldr	r0, .L130+4
 1764 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1765              	.LVL63:
 186:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1766              		.loc 1 186 2 view .LVU480
 1767 002c 0122     		movs	r2, #1
 1768 002e 3449     		ldr	r1, .L130+8
 1769 0030 3448     		ldr	r0, .L130+12
 1770 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1771              	.LVL64:
 189:Core/Src/main.c **** 	digit2 = 16;
 1772              		.loc 1 189 2 view .LVU481
 189:Core/Src/main.c **** 	digit2 = 16;
 1773              		.loc 1 189 9 is_stmt 0 view .LVU482
 1774 0036 344F     		ldr	r7, .L130+16
 1775 0038 1023     		movs	r3, #16
 1776 003a 3B70     		strb	r3, [r7]
 190:Core/Src/main.c **** 	num_slave=0;
 1777              		.loc 1 190 2 is_stmt 1 view .LVU483
 190:Core/Src/main.c **** 	num_slave=0;
 1778              		.loc 1 190 9 is_stmt 0 view .LVU484
 1779 003c DFF8F090 		ldr	r9, .L130+56
 1780 0040 89F80030 		strb	r3, [r9]
 191:Core/Src/main.c **** 	ID=0;
 1781              		.loc 1 191 2 is_stmt 1 view .LVU485
 191:Core/Src/main.c **** 	ID=0;
 1782              		.loc 1 191 11 is_stmt 0 view .LVU486
 1783 0044 314E     		ldr	r6, .L130+20
 1784 0046 0024     		movs	r4, #0
 1785 0048 3470     		strb	r4, [r6]
 192:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 1786              		.loc 1 192 2 is_stmt 1 view .LVU487
 192:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 1787              		.loc 1 192 4 is_stmt 0 view .LVU488
 1788 004a 314B     		ldr	r3, .L130+24
 1789 004c 1C70     		strb	r4, [r3]
 193:Core/Src/main.c **** 	ID_list[1]= 0;
 1790              		.loc 1 193 2 is_stmt 1 view .LVU489
 193:Core/Src/main.c **** 	ID_list[1]= 0;
 1791              		.loc 1 193 12 is_stmt 0 view .LVU490
 1792 004e 314B     		ldr	r3, .L130+28
 1793 0050 FF22     		movs	r2, #255
 1794 0052 1A70     		strb	r2, [r3]
 194:Core/Src/main.c **** 	ID_list[2]= 0;
 1795              		.loc 1 194 2 is_stmt 1 view .LVU491
ARM GAS  /tmp/ccLnQTJ0.s 			page 53


 194:Core/Src/main.c **** 	ID_list[2]= 0;
 1796              		.loc 1 194 12 is_stmt 0 view .LVU492
 1797 0054 5C70     		strb	r4, [r3, #1]
 195:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 1798              		.loc 1 195 2 is_stmt 1 view .LVU493
 195:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 1799              		.loc 1 195 12 is_stmt 0 view .LVU494
 1800 0056 9C70     		strb	r4, [r3, #2]
 197:Core/Src/main.c **** 	/*
 1801              		.loc 1 197 2 is_stmt 1 view .LVU495
 197:Core/Src/main.c **** 	/*
 1802              		.loc 1 197 8 is_stmt 0 view .LVU496
 1803 0058 0125     		movs	r5, #1
 1804 005a 2F4B     		ldr	r3, .L130+32
 1805 005c 1D70     		strb	r5, [r3]
 204:Core/Src/main.c **** 	lcd_init();
 1806              		.loc 1 204 2 is_stmt 1 view .LVU497
 1807 005e 4FF47A70 		mov	r0, #1000
 1808 0062 FFF7FEFF 		bl	HAL_Delay
 1809              	.LVL65:
 205:Core/Src/main.c **** 	lcd_clear();
 1810              		.loc 1 205 2 view .LVU498
 1811 0066 FFF7FEFF 		bl	lcd_init
 1812              	.LVL66:
 206:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 1813              		.loc 1 206 2 view .LVU499
 1814 006a FFF7FEFF 		bl	lcd_clear
 1815              	.LVL67:
 207:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 1816              		.loc 1 207 2 view .LVU500
 1817 006e 2146     		mov	r1, r4
 1818 0070 2046     		mov	r0, r4
 1819 0072 FFF7FEFF 		bl	lcd_set_pos
 1820              	.LVL68:
 208:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 1821              		.loc 1 208 2 view .LVU501
 1822 0076 2948     		ldr	r0, .L130+36
 1823 0078 FFF7FEFF 		bl	lcd_write_string
 1824              	.LVL69:
 209:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 1825              		.loc 1 209 2 view .LVU502
 1826 007c 0C21     		movs	r1, #12
 1827 007e 2046     		mov	r0, r4
 1828 0080 FFF7FEFF 		bl	lcd_set_pos
 1829              	.LVL70:
 210:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 1830              		.loc 1 210 2 view .LVU503
 1831 0084 DFF8AC80 		ldr	r8, .L130+60
 1832 0088 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1833 008a 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 1834 008e FFF7FEFF 		bl	lcd_data
 1835              	.LVL71:
 211:Core/Src/main.c **** 	lcd_write_string("S2:");
 1836              		.loc 1 211 2 view .LVU504
 1837 0092 2146     		mov	r1, r4
 1838 0094 2846     		mov	r0, r5
 1839 0096 FFF7FEFF 		bl	lcd_set_pos
ARM GAS  /tmp/ccLnQTJ0.s 			page 54


 1840              	.LVL72:
 212:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 1841              		.loc 1 212 2 view .LVU505
 1842 009a 2148     		ldr	r0, .L130+40
 1843 009c FFF7FEFF 		bl	lcd_write_string
 1844              	.LVL73:
 213:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 1845              		.loc 1 213 2 view .LVU506
 1846 00a0 0321     		movs	r1, #3
 1847 00a2 2846     		mov	r0, r5
 1848 00a4 FFF7FEFF 		bl	lcd_set_pos
 1849              	.LVL74:
 214:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 1850              		.loc 1 214 2 view .LVU507
 1851 00a8 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 1852 00ac 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 1853 00b0 FFF7FEFF 		bl	lcd_data
 1854              	.LVL75:
 215:Core/Src/main.c **** 	lcd_write_string("S1:");
 1855              		.loc 1 215 2 view .LVU508
 1856 00b4 0C21     		movs	r1, #12
 1857 00b6 2846     		mov	r0, r5
 1858 00b8 FFF7FEFF 		bl	lcd_set_pos
 1859              	.LVL76:
 216:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 1860              		.loc 1 216 2 view .LVU509
 1861 00bc 1948     		ldr	r0, .L130+44
 1862 00be FFF7FEFF 		bl	lcd_write_string
 1863              	.LVL77:
 217:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 1864              		.loc 1 217 2 view .LVU510
 1865 00c2 0F21     		movs	r1, #15
 1866 00c4 2846     		mov	r0, r5
 1867 00c6 FFF7FEFF 		bl	lcd_set_pos
 1868              	.LVL78:
 218:Core/Src/main.c **** 	old_digit1 = digit1;
 1869              		.loc 1 218 2 view .LVU511
 1870 00ca 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1871 00cc 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 1872 00d0 FFF7FEFF 		bl	lcd_data
 1873              	.LVL79:
 219:Core/Src/main.c **** 	old_digit2=old_digit2;
 1874              		.loc 1 219 2 view .LVU512
 219:Core/Src/main.c **** 	old_digit2=old_digit2;
 1875              		.loc 1 219 13 is_stmt 0 view .LVU513
 1876 00d4 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 1877 00d6 144B     		ldr	r3, .L130+48
 1878 00d8 1A70     		strb	r2, [r3]
 220:Core/Src/main.c **** 	old_num_slave= num_slave;
 1879              		.loc 1 220 2 is_stmt 1 view .LVU514
 221:Core/Src/main.c **** 	/* USER CODE END 2 */
 1880              		.loc 1 221 2 view .LVU515
 221:Core/Src/main.c **** 	/* USER CODE END 2 */
 1881              		.loc 1 221 15 is_stmt 0 view .LVU516
 1882 00da 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 1883 00dc 134B     		ldr	r3, .L130+52
 1884 00de 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccLnQTJ0.s 			page 55


 1885              	.L128:
 226:Core/Src/main.c **** 	{
 1886              		.loc 1 226 2 is_stmt 1 discriminator 1 view .LVU517
 232:Core/Src/main.c **** 		/// segment_display_task();
 1887              		.loc 1 232 3 discriminator 1 view .LVU518
 1888 00e0 FFF7FEFF 		bl	task_timer
 1889              	.LVL80:
 234:Core/Src/main.c **** 		key_read_task();
 1890              		.loc 1 234 3 discriminator 1 view .LVU519
 1891 00e4 FFF7FEFF 		bl	lcd_display_task
 1892              	.LVL81:
 235:Core/Src/main.c **** 		RS485_RX_Task();
 1893              		.loc 1 235 3 discriminator 1 view .LVU520
 1894 00e8 FFF7FEFF 		bl	key_read_task
 1895              	.LVL82:
 236:Core/Src/main.c **** 		main_task();
 1896              		.loc 1 236 3 discriminator 1 view .LVU521
 1897 00ec FFF7FEFF 		bl	RS485_RX_Task
 1898              	.LVL83:
 237:Core/Src/main.c **** 	}
 1899              		.loc 1 237 3 discriminator 1 view .LVU522
 1900 00f0 FFF7FEFF 		bl	main_task
 1901              	.LVL84:
 226:Core/Src/main.c **** 	{
 1902              		.loc 1 226 8 discriminator 1 view .LVU523
 1903 00f4 F4E7     		b	.L128
 1904              	.L131:
 1905 00f6 00BF     		.align	2
 1906              	.L130:
 1907 00f8 00000000 		.word	htim4
 1908 00fc 00000240 		.word	1073872896
 1909 0100 00000000 		.word	.LANCHOR33
 1910 0104 00000000 		.word	huart4
 1911 0108 00000000 		.word	.LANCHOR5
 1912 010c 00000000 		.word	.LANCHOR6
 1913 0110 00000000 		.word	.LANCHOR31
 1914 0114 00000000 		.word	.LANCHOR24
 1915 0118 00000000 		.word	.LANCHOR19
 1916 011c 00000000 		.word	.LC0
 1917 0120 0C000000 		.word	.LC1
 1918 0124 10000000 		.word	.LC2
 1919 0128 00000000 		.word	.LANCHOR17
 1920 012c 00000000 		.word	.LANCHOR34
 1921 0130 00000000 		.word	.LANCHOR1
 1922 0134 00000000 		.word	.LANCHOR3
 1923              		.cfi_endproc
 1924              	.LFE130:
 1926              		.global	temp
 1927              		.global	pTX_msg
 1928              		.global	pRX_msg
 1929              		.global	RX_msg
 1930              		.global	TX_msg
 1931              		.global	ID_list
 1932              		.global	ID
 1933              		.global	event_buffer
 1934              		.global	rx_buffer
 1935              		.global	digit2_buf
ARM GAS  /tmp/ccLnQTJ0.s 			page 56


 1936              		.global	digit1_buf
 1937              		.global	x
 1938              		.global	rx_temp
 1939              		.global	digit_table
 1940              		.global	lcd_process
 1941              		.global	data
 1942              		.global	cmd
 1943              		.global	digit2_update
 1944              		.global	digit1_update
 1945              		.global	is_EN
 1946              		.global	old_digit2
 1947              		.global	old_digit1
 1948              		.global	old_num_slave
 1949              		.global	digit2
 1950              		.global	digit1
 1951              		.global	key2_ID
 1952              		.global	key1_ID
 1953              		.global	num_slave
 1954              		.global	error
 1955              		.global	event
 1956              		.global	state
 1957              		.global	key2_data
 1958              		.global	key1_data
 1959              		.global	TX2_delay_val
 1960              		.global	d_timer_TX2
 1961              		.global	TX1_delay_val
 1962              		.global	d_timer_TX1
 1963              		.global	d_timer_20ms
 1964              		.global	d_timer_50ms
 1965              		.global	d_timer_30ms
 1966              		.global	tx1_buffer
 1967              		.global	tx2_buffer
 1968              		.global	flag_digit_1
 1969              		.global	n_querry
 1970              		.global	f_timer_50ms
 1971              		.global	f_timer_30ms
 1972              		.global	f_waiting_rx
 1973              		.global	f_timer_20ms
 1974              		.global	f_timer_10ms
 1975              		.global	f_seg_timer_500ms
 1976              		.global	f_timer_TX
 1977              		.global	tx_timeout
 1978              		.global	f_read_msg
 1979              		.global	f_querry
 1980              		.global	f_busy
 1981              		.global	f_lcd_item
 1982              		.section	.bss.ID,"aw",%nobits
 1983              		.set	.LANCHOR31,. + 0
 1986              	ID:
 1987 0000 00       		.space	1
 1988              		.section	.bss.ID_list,"aw",%nobits
 1989              		.align	2
 1990              		.set	.LANCHOR24,. + 0
 1993              	ID_list:
 1994 0000 00000000 		.space	10
 1994      00000000 
 1994      0000
ARM GAS  /tmp/ccLnQTJ0.s 			page 57


 1995              		.section	.bss.RX_msg,"aw",%nobits
 1996              		.align	2
 1997              		.set	.LANCHOR28,. + 0
 2000              	RX_msg:
 2001 0000 00000000 		.space	4
 2002              		.section	.bss.TX_msg,"aw",%nobits
 2003              		.align	2
 2004              		.set	.LANCHOR23,. + 0
 2007              	TX_msg:
 2008 0000 00000000 		.space	6
 2008      0000
 2009              		.section	.bss.cmd,"aw",%nobits
 2010              		.set	.LANCHOR2,. + 0
 2013              	cmd:
 2014 0000 00       		.space	1
 2015              		.section	.bss.d_timer_20ms,"aw",%nobits
 2016              		.set	.LANCHOR12,. + 0
 2019              	d_timer_20ms:
 2020 0000 00       		.space	1
 2021              		.section	.bss.d_timer_30ms,"aw",%nobits
 2022              		.set	.LANCHOR10,. + 0
 2025              	d_timer_30ms:
 2026 0000 00       		.space	1
 2027              		.section	.bss.d_timer_50ms,"aw",%nobits
 2028              		.set	.LANCHOR13,. + 0
 2031              	d_timer_50ms:
 2032 0000 00       		.space	1
 2033              		.section	.bss.d_timer_TX1,"aw",%nobits
 2036              	d_timer_TX1:
 2037 0000 00       		.space	1
 2038              		.section	.bss.d_timer_TX2,"aw",%nobits
 2041              	d_timer_TX2:
 2042 0000 00       		.space	1
 2043              		.section	.bss.data,"aw",%nobits
 2044              		.set	.LANCHOR4,. + 0
 2047              	data:
 2048 0000 00       		.space	1
 2049              		.section	.bss.digit1,"aw",%nobits
 2050              		.set	.LANCHOR5,. + 0
 2053              	digit1:
 2054 0000 00       		.space	1
 2055              		.section	.bss.digit1_buf,"aw",%nobits
 2056              		.align	2
 2057              		.set	.LANCHOR18,. + 0
 2060              	digit1_buf:
 2061 0000 00000000 		.space	66
 2061      00000000 
 2061      00000000 
 2061      00000000 
 2061      00000000 
 2062              		.section	.bss.digit1_update,"aw",%nobits
 2065              	digit1_update:
 2066 0000 00       		.space	1
 2067              		.section	.bss.digit2,"aw",%nobits
 2068              		.set	.LANCHOR1,. + 0
 2071              	digit2:
 2072 0000 00       		.space	1
ARM GAS  /tmp/ccLnQTJ0.s 			page 58


 2073              		.section	.bss.digit2_buf,"aw",%nobits
 2074              		.align	2
 2075              		.set	.LANCHOR22,. + 0
 2078              	digit2_buf:
 2079 0000 00000000 		.space	66
 2079      00000000 
 2079      00000000 
 2079      00000000 
 2079      00000000 
 2080              		.section	.bss.digit2_update,"aw",%nobits
 2083              	digit2_update:
 2084 0000 00       		.space	1
 2085              		.section	.bss.error,"aw",%nobits
 2088              	error:
 2089 0000 00       		.space	1
 2090              		.section	.bss.event,"aw",%nobits
 2091              		.set	.LANCHOR29,. + 0
 2094              	event:
 2095 0000 00       		.space	1
 2096              		.section	.bss.event_buffer,"aw",%nobits
 2097              		.align	2
 2098              		.set	.LANCHOR20,. + 0
 2101              	event_buffer:
 2102 0000 00000000 		.space	66
 2102      00000000 
 2102      00000000 
 2102      00000000 
 2102      00000000 
 2103              		.section	.bss.f_busy,"aw",%nobits
 2106              	f_busy:
 2107 0000 00       		.space	1
 2108              		.section	.bss.f_lcd_item,"aw",%nobits
 2111              	f_lcd_item:
 2112 0000 00       		.space	1
 2113              		.section	.bss.f_querry,"aw",%nobits
 2114              		.set	.LANCHOR14,. + 0
 2117              	f_querry:
 2118 0000 00       		.space	1
 2119              		.section	.bss.f_read_msg,"aw",%nobits
 2120              		.set	.LANCHOR26,. + 0
 2123              	f_read_msg:
 2124 0000 00       		.space	1
 2125              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 2128              	f_seg_timer_500ms:
 2129 0000 00       		.space	1
 2130              		.section	.bss.f_timer_10ms,"aw",%nobits
 2131              		.set	.LANCHOR9,. + 0
 2134              	f_timer_10ms:
 2135 0000 00       		.space	1
 2136              		.section	.bss.f_timer_20ms,"aw",%nobits
 2137              		.set	.LANCHOR7,. + 0
 2140              	f_timer_20ms:
 2141 0000 00       		.space	1
 2142              		.section	.bss.f_timer_30ms,"aw",%nobits
 2143              		.set	.LANCHOR11,. + 0
 2146              	f_timer_30ms:
 2147 0000 00       		.space	1
ARM GAS  /tmp/ccLnQTJ0.s 			page 59


 2148              		.section	.bss.f_timer_50ms,"aw",%nobits
 2151              	f_timer_50ms:
 2152 0000 00       		.space	1
 2153              		.section	.bss.f_timer_TX,"aw",%nobits
 2156              	f_timer_TX:
 2157 0000 00       		.space	1
 2158              		.section	.bss.f_waiting_rx,"aw",%nobits
 2161              	f_waiting_rx:
 2162 0000 00       		.space	1
 2163              		.section	.bss.is_EN,"aw",%nobits
 2164              		.set	.LANCHOR8,. + 0
 2167              	is_EN:
 2168 0000 00       		.space	1
 2169              		.section	.bss.key1_ID,"aw",%nobits
 2172              	key1_ID:
 2173 0000 00       		.space	1
 2174              		.section	.bss.key1_data,"aw",%nobits
 2175              		.set	.LANCHOR15,. + 0
 2178              	key1_data:
 2179 0000 00       		.space	1
 2180              		.section	.bss.key2_ID,"aw",%nobits
 2183              	key2_ID:
 2184 0000 00       		.space	1
 2185              		.section	.bss.key2_data,"aw",%nobits
 2186              		.set	.LANCHOR16,. + 0
 2189              	key2_data:
 2190 0000 00       		.space	1
 2191              		.section	.bss.n_querry,"aw",%nobits
 2194              	n_querry:
 2195 0000 00       		.space	1
 2196              		.section	.bss.num_slave,"aw",%nobits
 2197              		.set	.LANCHOR6,. + 0
 2200              	num_slave:
 2201 0000 00       		.space	1
 2202              		.section	.bss.old_digit1,"aw",%nobits
 2203              		.set	.LANCHOR17,. + 0
 2206              	old_digit1:
 2207 0000 00       		.space	1
 2208              		.section	.bss.old_digit2,"aw",%nobits
 2209              		.set	.LANCHOR21,. + 0
 2212              	old_digit2:
 2213 0000 00       		.space	1
 2214              		.section	.bss.old_num_slave,"aw",%nobits
 2215              		.set	.LANCHOR34,. + 0
 2218              	old_num_slave:
 2219 0000 00       		.space	1
 2220              		.section	.bss.pRX_msg,"aw",%nobits
 2221              		.align	2
 2222              		.set	.LANCHOR27,. + 0
 2225              	pRX_msg:
 2226 0000 00000000 		.space	4
 2227              		.section	.bss.pTX_msg,"aw",%nobits
 2228              		.align	2
 2229              		.set	.LANCHOR30,. + 0
 2232              	pTX_msg:
 2233 0000 00000000 		.space	4
 2234              		.section	.bss.rx_buffer,"aw",%nobits
ARM GAS  /tmp/ccLnQTJ0.s 			page 60


 2235              		.align	2
 2236              		.set	.LANCHOR25,. + 0
 2239              	rx_buffer:
 2240 0000 00000000 		.space	66
 2240      00000000 
 2240      00000000 
 2240      00000000 
 2240      00000000 
 2241              		.section	.bss.rx_temp,"aw",%nobits
 2242              		.set	.LANCHOR33,. + 0
 2245              	rx_temp:
 2246 0000 00       		.space	1
 2247              		.section	.bss.state,"aw",%nobits
 2248              		.set	.LANCHOR19,. + 0
 2251              	state:
 2252 0000 00       		.space	1
 2253              		.section	.bss.temp,"aw",%nobits
 2256              	temp:
 2257 0000 00       		.space	1
 2258              		.section	.bss.tx_timeout,"aw",%nobits
 2259              		.set	.LANCHOR32,. + 0
 2262              	tx_timeout:
 2263 0000 00       		.space	1
 2264              		.section	.data.TX1_delay_val,"aw"
 2267              	TX1_delay_val:
 2268 0000 FA       		.byte	-6
 2269              		.section	.data.TX2_delay_val,"aw"
 2272              	TX2_delay_val:
 2273 0000 FA       		.byte	-6
 2274              		.section	.data.digit_table,"aw"
 2275              		.align	2
 2276              		.set	.LANCHOR3,. + 0
 2279              	digit_table:
 2280 0000 30313233 		.ascii	"0123456789abcdef-"
 2280      34353637 
 2280      38396162 
 2280      63646566 
 2280      2D
 2281              		.section	.data.flag_digit_1,"aw"
 2284              	flag_digit_1:
 2285 0000 01       		.byte	1
 2286              		.section	.data.lcd_process,"aw"
 2287              		.set	.LANCHOR0,. + 0
 2290              	lcd_process:
 2291 0000 04       		.byte	4
 2292              		.section	.data.tx1_buffer,"aw"
 2293              		.align	2
 2296              	tx1_buffer:
 2297 0000 61626364 		.ascii	"abcdef"
 2297      6566
 2298              		.section	.data.tx2_buffer,"aw"
 2299              		.align	2
 2302              	tx2_buffer:
 2303 0000 31323334 		.ascii	"123456789\000"
 2303      35363738 
 2303      3900
 2304              		.section	.data.x,"aw"
ARM GAS  /tmp/ccLnQTJ0.s 			page 61


 2307              	x:
 2308 0000 01       		.byte	1
 2309              		.text
 2310              	.Letext0:
 2311              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 2312              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2313              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2314              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2315              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2316              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2317              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2318              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2319              		.file 11 "Core/Inc/tim.h"
 2320              		.file 12 "Core/Inc/usart.h"
 2321              		.file 13 "Core/Inc/buffer.h"
 2322              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2323              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2324              		.file 16 "Core/Inc/gpio.h"
 2325              		.file 17 "Core/Inc/lcd16x2.h"
 2326              		.file 18 "<built-in>"
ARM GAS  /tmp/ccLnQTJ0.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLnQTJ0.s:18     .text.update_lcd:0000000000000000 $t
     /tmp/ccLnQTJ0.s:26     .text.update_lcd:0000000000000000 update_lcd
     /tmp/ccLnQTJ0.s:126    .text.update_lcd:000000000000006c $d
     /tmp/ccLnQTJ0.s:137    .text.m_send_to_lcd:0000000000000000 $t
     /tmp/ccLnQTJ0.s:144    .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/ccLnQTJ0.s:221    .text.m_send_to_lcd:000000000000004c $d
     /tmp/ccLnQTJ0.s:229    .text.lcd_display_task:0000000000000000 $t
     /tmp/ccLnQTJ0.s:236    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/ccLnQTJ0.s:259    .text.lcd_display_task:0000000000000012 $d
     /tmp/ccLnQTJ0.s:263    .text.lcd_display_task:0000000000000016 $t
     /tmp/ccLnQTJ0.s:333    .text.lcd_display_task:0000000000000074 $d
     /tmp/ccLnQTJ0.s:341    .text.task_timer:0000000000000000 $t
     /tmp/ccLnQTJ0.s:348    .text.task_timer:0000000000000000 task_timer
     /tmp/ccLnQTJ0.s:443    .text.task_timer:0000000000000064 $d
     /tmp/ccLnQTJ0.s:454    .text.key_read_task:0000000000000000 $t
     /tmp/ccLnQTJ0.s:461    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccLnQTJ0.s:637    .text.key_read_task:00000000000000c0 $d
     /tmp/ccLnQTJ0.s:653    .text.check_slave:0000000000000000 $t
     /tmp/ccLnQTJ0.s:660    .text.check_slave:0000000000000000 check_slave
     /tmp/ccLnQTJ0.s:710    .text.check_slave:0000000000000024 $d
     /tmp/ccLnQTJ0.s:716    .text.RS485_RX_Task:0000000000000000 $t
     /tmp/ccLnQTJ0.s:723    .text.RS485_RX_Task:0000000000000000 RS485_RX_Task
     /tmp/ccLnQTJ0.s:814    .text.RS485_RX_Task:0000000000000060 $d
     /tmp/ccLnQTJ0.s:823    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccLnQTJ0.s:830    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccLnQTJ0.s:986    .text.RS485_Read_Message:00000000000000a0 $d
     /tmp/ccLnQTJ0.s:997    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccLnQTJ0.s:1004   .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccLnQTJ0.s:1062   .text.RS485_Send_Message:0000000000000040 $d
     /tmp/ccLnQTJ0.s:1069   .text.main_task:0000000000000000 $t
     /tmp/ccLnQTJ0.s:1076   .text.main_task:0000000000000000 main_task
     /tmp/ccLnQTJ0.s:1401   .text.main_task:0000000000000174 $d
     /tmp/ccLnQTJ0.s:1416   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccLnQTJ0.s:1423   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccLnQTJ0.s:1450   .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccLnQTJ0.s:1456   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccLnQTJ0.s:1463   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccLnQTJ0.s:1502   .text.HAL_UART_RxCpltCallback:0000000000000020 $d
     /tmp/ccLnQTJ0.s:1509   .text.Error_Handler:0000000000000000 $t
     /tmp/ccLnQTJ0.s:1516   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccLnQTJ0.s:1548   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLnQTJ0.s:1555   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLnQTJ0.s:1703   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccLnQTJ0.s:1709   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccLnQTJ0.s:1719   .text.main:0000000000000000 $t
     /tmp/ccLnQTJ0.s:1726   .text.main:0000000000000000 main
     /tmp/ccLnQTJ0.s:1907   .text.main:00000000000000f8 $d
     /tmp/ccLnQTJ0.s:2256   .bss.temp:0000000000000000 temp
     /tmp/ccLnQTJ0.s:2232   .bss.pTX_msg:0000000000000000 pTX_msg
     /tmp/ccLnQTJ0.s:2225   .bss.pRX_msg:0000000000000000 pRX_msg
     /tmp/ccLnQTJ0.s:2000   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccLnQTJ0.s:2007   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccLnQTJ0.s:1993   .bss.ID_list:0000000000000000 ID_list
     /tmp/ccLnQTJ0.s:1986   .bss.ID:0000000000000000 ID
     /tmp/ccLnQTJ0.s:2101   .bss.event_buffer:0000000000000000 event_buffer
ARM GAS  /tmp/ccLnQTJ0.s 			page 63


     /tmp/ccLnQTJ0.s:2239   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccLnQTJ0.s:2078   .bss.digit2_buf:0000000000000000 digit2_buf
     /tmp/ccLnQTJ0.s:2060   .bss.digit1_buf:0000000000000000 digit1_buf
     /tmp/ccLnQTJ0.s:2307   .data.x:0000000000000000 x
     /tmp/ccLnQTJ0.s:2245   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccLnQTJ0.s:2279   .data.digit_table:0000000000000000 digit_table
     /tmp/ccLnQTJ0.s:2290   .data.lcd_process:0000000000000000 lcd_process
     /tmp/ccLnQTJ0.s:2047   .bss.data:0000000000000000 data
     /tmp/ccLnQTJ0.s:2013   .bss.cmd:0000000000000000 cmd
     /tmp/ccLnQTJ0.s:2083   .bss.digit2_update:0000000000000000 digit2_update
     /tmp/ccLnQTJ0.s:2065   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/ccLnQTJ0.s:2167   .bss.is_EN:0000000000000000 is_EN
     /tmp/ccLnQTJ0.s:2212   .bss.old_digit2:0000000000000000 old_digit2
     /tmp/ccLnQTJ0.s:2206   .bss.old_digit1:0000000000000000 old_digit1
     /tmp/ccLnQTJ0.s:2218   .bss.old_num_slave:0000000000000000 old_num_slave
     /tmp/ccLnQTJ0.s:2071   .bss.digit2:0000000000000000 digit2
     /tmp/ccLnQTJ0.s:2053   .bss.digit1:0000000000000000 digit1
     /tmp/ccLnQTJ0.s:2183   .bss.key2_ID:0000000000000000 key2_ID
     /tmp/ccLnQTJ0.s:2172   .bss.key1_ID:0000000000000000 key1_ID
     /tmp/ccLnQTJ0.s:2200   .bss.num_slave:0000000000000000 num_slave
     /tmp/ccLnQTJ0.s:2088   .bss.error:0000000000000000 error
     /tmp/ccLnQTJ0.s:2094   .bss.event:0000000000000000 event
     /tmp/ccLnQTJ0.s:2251   .bss.state:0000000000000000 state
     /tmp/ccLnQTJ0.s:2189   .bss.key2_data:0000000000000000 key2_data
     /tmp/ccLnQTJ0.s:2178   .bss.key1_data:0000000000000000 key1_data
     /tmp/ccLnQTJ0.s:2272   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/ccLnQTJ0.s:2041   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/ccLnQTJ0.s:2267   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/ccLnQTJ0.s:2036   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/ccLnQTJ0.s:2019   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/ccLnQTJ0.s:2031   .bss.d_timer_50ms:0000000000000000 d_timer_50ms
     /tmp/ccLnQTJ0.s:2025   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccLnQTJ0.s:2296   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/ccLnQTJ0.s:2302   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/ccLnQTJ0.s:2284   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/ccLnQTJ0.s:2194   .bss.n_querry:0000000000000000 n_querry
     /tmp/ccLnQTJ0.s:2151   .bss.f_timer_50ms:0000000000000000 f_timer_50ms
     /tmp/ccLnQTJ0.s:2146   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccLnQTJ0.s:2161   .bss.f_waiting_rx:0000000000000000 f_waiting_rx
     /tmp/ccLnQTJ0.s:2140   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/ccLnQTJ0.s:2134   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccLnQTJ0.s:2128   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/ccLnQTJ0.s:2156   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/ccLnQTJ0.s:2262   .bss.tx_timeout:0000000000000000 tx_timeout
     /tmp/ccLnQTJ0.s:2123   .bss.f_read_msg:0000000000000000 f_read_msg
     /tmp/ccLnQTJ0.s:2117   .bss.f_querry:0000000000000000 f_querry
     /tmp/ccLnQTJ0.s:2106   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccLnQTJ0.s:2111   .bss.f_lcd_item:0000000000000000 f_lcd_item
     /tmp/ccLnQTJ0.s:1987   .bss.ID:0000000000000000 $d
     /tmp/ccLnQTJ0.s:1989   .bss.ID_list:0000000000000000 $d
     /tmp/ccLnQTJ0.s:1996   .bss.RX_msg:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2003   .bss.TX_msg:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2014   .bss.cmd:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2020   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2026   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2032   .bss.d_timer_50ms:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2037   .bss.d_timer_TX1:0000000000000000 $d
ARM GAS  /tmp/ccLnQTJ0.s 			page 64


     /tmp/ccLnQTJ0.s:2042   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2048   .bss.data:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2054   .bss.digit1:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2056   .bss.digit1_buf:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2066   .bss.digit1_update:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2072   .bss.digit2:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2074   .bss.digit2_buf:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2084   .bss.digit2_update:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2089   .bss.error:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2095   .bss.event:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2097   .bss.event_buffer:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2107   .bss.f_busy:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2112   .bss.f_lcd_item:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2118   .bss.f_querry:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2124   .bss.f_read_msg:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2129   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2135   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2141   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2147   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2152   .bss.f_timer_50ms:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2157   .bss.f_timer_TX:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2162   .bss.f_waiting_rx:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2168   .bss.is_EN:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2173   .bss.key1_ID:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2179   .bss.key1_data:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2184   .bss.key2_ID:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2190   .bss.key2_data:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2195   .bss.n_querry:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2201   .bss.num_slave:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2207   .bss.old_digit1:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2213   .bss.old_digit2:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2219   .bss.old_num_slave:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2221   .bss.pRX_msg:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2228   .bss.pTX_msg:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2235   .bss.rx_buffer:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2246   .bss.rx_temp:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2252   .bss.state:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2257   .bss.temp:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2263   .bss.tx_timeout:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2275   .data.digit_table:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2293   .data.tx1_buffer:0000000000000000 $d
     /tmp/ccLnQTJ0.s:2299   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
HAL_UART_Transmit
huart4
buffer_pop
htim4
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
ARM GAS  /tmp/ccLnQTJ0.s 			page 65


MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
HAL_Delay
lcd_init
lcd_clear
lcd_set_pos
lcd_write_string
lcd_data
