ARM GAS  /tmp/cclmtcKv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.m_send_to_lcd,"ax",%progbits
  18              		.align	1
  19              		.global	m_send_to_lcd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	m_send_to_lcd:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "message.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/cclmtcKv.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** unsigned char f_timer_TX=0;
  49:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  50:Core/Src/main.c **** unsigned char f_timer_100us =0;
  51:Core/Src/main.c **** unsigned char f_timer_10ms=0;
  52:Core/Src/main.c **** unsigned char f_timer_20ms=0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** unsigned char f_timer_30ms=0;
  55:Core/Src/main.c **** unsigned char i,p_tx1,p_tx2;
  56:Core/Src/main.c **** unsigned char flag_digit_1=1;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** unsigned char tx2_buffer[10]={"123456789"};
  59:Core/Src/main.c **** unsigned char tx1_buffer[6]={"abcdef"};
  60:Core/Src/main.c **** unsigned char d_timer_30ms;
  61:Core/Src/main.c **** unsigned char d_timer_20ms;
  62:Core/Src/main.c **** unsigned char d_timer_TX1;
  63:Core/Src/main.c **** unsigned char TX1_delay_val =250;
  64:Core/Src/main.c **** unsigned char d_timer_TX2;
  65:Core/Src/main.c **** unsigned char TX2_delay_val =250;
  66:Core/Src/main.c **** unsigned char key1_data, key2_data;
  67:Core/Src/main.c **** unsigned char state,event;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** unsigned char lcd_disp_lock=0;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** unsigned char uart_tx1_flag,uart_tx2_flag;
  72:Core/Src/main.c **** unsigned char flag_state_tx1, flag_state_tx;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** unsigned char digit1,digit2;
  75:Core/Src/main.c **** //flag for LCD
  76:Core/Src/main.c **** unsigned char is_EN=0;
  77:Core/Src/main.c **** unsigned char lcd_digit1_f=0;
  78:Core/Src/main.c **** unsigned char digit1_update = 0;
  79:Core/Src/main.c **** unsigned char digit2_update = 0;
  80:Core/Src/main.c **** unsigned char cmd, data;
  81:Core/Src/main.c **** unsigned char lcd_process=0;
  82:Core/Src/main.c **** uint8_t seven_segment_table[17] = {	0b1111110,	// '0'
  83:Core/Src/main.c **** 		    	0b0110000,	// '1'
  84:Core/Src/main.c **** 		   	0b1101101,	// '2'
  85:Core/Src/main.c **** 			0b1111001,	// '3'
  86:Core/Src/main.c **** 			0b0110011,	// '4'
ARM GAS  /tmp/cclmtcKv.s 			page 3


  87:Core/Src/main.c **** 			0b1011011,	// '5'
  88:Core/Src/main.c **** 			0b1011111,	// '6'
  89:Core/Src/main.c **** 			0b1110000,	// '7'
  90:Core/Src/main.c **** 			0b1111111,	// '8'
  91:Core/Src/main.c **** 			0b1111011,	// '9'
  92:Core/Src/main.c **** 			0b1111101,	// 'a'  --10
  93:Core/Src/main.c **** 			0b0011111,	// 'b'  --11
  94:Core/Src/main.c **** 			0b0001101,	// 'c'  --12
  95:Core/Src/main.c **** 			0b0111101,	// 'd'  --13
  96:Core/Src/main.c **** 			0b1101111,	// 'e'	--14
  97:Core/Src/main.c **** 			0b1000111,	// 'f'  --15
  98:Core/Src/main.c **** 			0b0000001 	// '-'  --16
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** };
 101:Core/Src/main.c **** unsigned char digit_table[17]={"0123456789abcdef-"};
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** uint8_t rx_temp;
 104:Core/Src/main.c **** uint8_t transmission_f;
 105:Core/Src/main.c **** uint8_t start_cmd=0x2;
 106:Core/Src/main.c **** uint8_t stop_cmd=0x3;
 107:Core/Src/main.c **** circular_buffer rx1_buffer;
 108:Core/Src/main.c **** circular_buffer rx2_buffer;
 109:Core/Src/main.c **** circular_buffer event_buffer;
 110:Core/Src/main.c **** uint8_t ID;
 111:Core/Src/main.c **** uint8_t TX_msg[4];
 112:Core/Src/main.c **** uint8_t RX_msg[4];
 113:Core/Src/main.c **** /* USER CODE END PV */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 116:Core/Src/main.c **** void SystemClock_Config(void);
 117:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 118:Core/Src/main.c **** void task_timer(void);
 119:Core/Src/main.c **** void counting_task(void);
 120:Core/Src/main.c **** void uart_TX2_task(void);
 121:Core/Src/main.c **** void uart_TX1_task(void);
 122:Core/Src/main.c **** void uart_RX1_task(void);
 123:Core/Src/main.c **** void uart_RX2_task(void);
 124:Core/Src/main.c **** void segment_display_task(void);
 125:Core/Src/main.c **** void lcd_display_task(void);
 126:Core/Src/main.c **** void key_read_task(void);
 127:Core/Src/main.c **** void main_task(void);
 128:Core/Src/main.c **** void setEvent(unsigned char event);
 129:Core/Src/main.c **** unsigned char getEvent(void);
 130:Core/Src/main.c **** void seven_segment_driver(char input,char select_digit);
 131:Core/Src/main.c **** void TX1_delay_update(void);
 132:Core/Src/main.c **** void TX2_delay_update(void);
 133:Core/Src/main.c **** void m_send_to_lcd(char data);
 134:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 135:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 136:Core/Src/main.c **** void Set_Receiver_Port1(void);
 137:Core/Src/main.c **** void Set_Receiver_Port2(void);
 138:Core/Src/main.c **** void RS485_Send_Message(void);
 139:Core/Src/main.c **** void RS485_Read_Message(void);
 140:Core/Src/main.c **** /*
 141:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 142:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 143:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
ARM GAS  /tmp/cclmtcKv.s 			page 4


 144:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
 145:Core/Src/main.c **** */
 146:Core/Src/main.c **** /* USER CODE END PFP */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 149:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /* USER CODE END 0 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** /**
 154:Core/Src/main.c ****   * @brief  The application entry point.
 155:Core/Src/main.c ****   * @retval int
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c **** int main(void)
 158:Core/Src/main.c **** {
 159:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE END 1 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 166:Core/Src/main.c ****   HAL_Init();
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END Init */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* Configure the system clock */
 173:Core/Src/main.c ****   SystemClock_Config();
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE END SysInit */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* Initialize all configured peripherals */
 180:Core/Src/main.c ****   MX_GPIO_Init();
 181:Core/Src/main.c ****   MX_TIM3_Init();
 182:Core/Src/main.c ****   MX_TIM4_Init();
 183:Core/Src/main.c ****   MX_UART4_Init();
 184:Core/Src/main.c ****   MX_UART5_Init();
 185:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 186:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3);
 187:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   	
 190:Core/Src/main.c ****   HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0);   // Enable Receiver 1
 191:Core/Src/main.c ****   HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart4, &rx1_buffer.data[rx1_buffer.head], 1);
 194:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   ID=1;
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   lcd_init();
 200:Core/Src/main.c ****   lcd_clear();
ARM GAS  /tmp/cclmtcKv.s 			page 5


 201:Core/Src/main.c ****   lcd_set_pos(0, 3);
 202:Core/Src/main.c ****   lcd_write_string("TETRADYNE");
 203:Core/Src/main.c ****   lcd_set_pos(1, 0);
 204:Core/Src/main.c ****   lcd_write_string("D2:");
 205:Core/Src/main.c ****   lcd_set_pos(1, 0xC);
 206:Core/Src/main.c ****   lcd_write_string("D1:");
 207:Core/Src/main.c ****   /* USER CODE END 2 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* Infinite loop */
 210:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 211:Core/Src/main.c ****   while (1)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     /* USER CODE END WHILE */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** 	  	  	 task_timer();
 218:Core/Src/main.c **** 	  	     segment_display_task();
 219:Core/Src/main.c **** 	  	     lcd_display_task();
 220:Core/Src/main.c **** 	  	     key_read_task();
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** 	  	     main_task();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c ****   /* USER CODE END 3 */
 225:Core/Src/main.c **** }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /**
 228:Core/Src/main.c ****   * @brief System Clock Configuration
 229:Core/Src/main.c ****   * @retval None
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c **** void SystemClock_Config(void)
 232:Core/Src/main.c **** {
 233:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 234:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 239:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 242:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 243:Core/Src/main.c ****   */
 244:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 249:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 252:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     Error_Handler();
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  /tmp/cclmtcKv.s 			page 6


 258:Core/Src/main.c ****   */
 259:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 260:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 261:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 262:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 263:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c **** }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** void segment_display_task(void)
 277:Core/Src/main.c **** {
 278:Core/Src/main.c ****    if(!f_timer_100us) return;
 279:Core/Src/main.c ****    f_timer_100us =0;
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****    flag_digit_1=(~flag_digit_1)&0x1;
 282:Core/Src/main.c ****    if (flag_digit_1){
 283:Core/Src/main.c **** 	   seven_segment_driver(seven_segment_table[digit1],flag_digit_1);
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****    }
 286:Core/Src/main.c ****    else{
 287:Core/Src/main.c **** 	   seven_segment_driver(seven_segment_table[digit2],flag_digit_1);
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****    }
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** void lcd_display_task(void){
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** 	if(!lcd_digit1_f){
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** 		 cmd = 0xC3;
 299:Core/Src/main.c **** 		 data = digit_table[digit2];
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** 	}else{
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** 		cmd = 0xCF;
 304:Core/Src/main.c ****         data = digit_table[digit1];
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** 	}
 307:Core/Src/main.c **** 	switch(lcd_process){
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** 			case 0:
 310:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 311:Core/Src/main.c **** 					m_send_to_lcd((cmd>>4)&0x0f);
 312:Core/Src/main.c **** 					break;
 313:Core/Src/main.c **** 			case 1:
 314:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
ARM GAS  /tmp/cclmtcKv.s 			page 7


 315:Core/Src/main.c **** 					m_send_to_lcd((cmd)&0x0f);
 316:Core/Src/main.c **** 					break;
 317:Core/Src/main.c **** 			case 2:
 318:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 319:Core/Src/main.c **** 					m_send_to_lcd((data>>4)&0x0f);
 320:Core/Src/main.c **** 					break;
 321:Core/Src/main.c **** 			case 3:
 322:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 323:Core/Src/main.c **** 					m_send_to_lcd(data&0x0f);
 324:Core/Src/main.c **** 					break;
 325:Core/Src/main.c **** 	}
 326:Core/Src/main.c **** }
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** void m_send_to_lcd(char data)
 330:Core/Src/main.c **** {
  30              		.loc 1 330 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 330 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** 	//writing data to pin PE0~PE3
 333:Core/Src/main.c **** 	GPIOE->ODR =  (GPIOE->ODR & 0xFFFFFFF0) | data;
  40              		.loc 1 333 2 is_stmt 1 view .LVU2
  41              		.loc 1 333 22 is_stmt 0 view .LVU3
  42 0002 194A     		ldr	r2, .L5
  43 0004 5369     		ldr	r3, [r2, #20]
  44              		.loc 1 333 28 view .LVU4
  45 0006 23F00F03 		bic	r3, r3, #15
  46              		.loc 1 333 42 view .LVU5
  47 000a 1843     		orrs	r0, r0, r3
  48              	.LVL1:
  49              		.loc 1 333 13 view .LVU6
  50 000c 5061     		str	r0, [r2, #20]
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** 	if(!f_timer_20ms) return ;
  51              		.loc 1 335 2 is_stmt 1 view .LVU7
  52              		.loc 1 335 5 is_stmt 0 view .LVU8
  53 000e 174B     		ldr	r3, .L5+4
  54 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  55              		.loc 1 335 4 view .LVU9
  56 0012 6BB1     		cbz	r3, .L1
 336:Core/Src/main.c **** 	f_timer_20ms =0;
  57              		.loc 1 336 2 is_stmt 1 view .LVU10
  58              		.loc 1 336 15 is_stmt 0 view .LVU11
  59 0014 154B     		ldr	r3, .L5+4
  60 0016 0022     		movs	r2, #0
  61 0018 1A70     		strb	r2, [r3]
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** 	if (!is_EN){
  62              		.loc 1 338 2 is_stmt 1 view .LVU12
ARM GAS  /tmp/cclmtcKv.s 			page 8


  63              		.loc 1 338 6 is_stmt 0 view .LVU13
  64 001a 154B     		ldr	r3, .L5+8
  65 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66              		.loc 1 338 5 view .LVU14
  67 001e 43B9     		cbnz	r3, .L3
 339:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
  68              		.loc 1 339 3 is_stmt 1 view .LVU15
  69 0020 0122     		movs	r2, #1
  70 0022 2021     		movs	r1, #32
  71 0024 1048     		ldr	r0, .L5
  72 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL2:
 340:Core/Src/main.c **** 		is_EN=1;
  74              		.loc 1 340 3 view .LVU16
  75              		.loc 1 340 8 is_stmt 0 view .LVU17
  76 002a 114B     		ldr	r3, .L5+8
  77 002c 0122     		movs	r2, #1
  78 002e 1A70     		strb	r2, [r3]
  79              	.L1:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** 	}else{
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 345:Core/Src/main.c **** 		is_EN=0;
 346:Core/Src/main.c **** 		lcd_process++;
 347:Core/Src/main.c **** 		if (lcd_process>3){
 348:Core/Src/main.c **** 			lcd_process=0;
 349:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 350:Core/Src/main.c **** 		}
 351:Core/Src/main.c **** 	}
 352:Core/Src/main.c **** }
  80              		.loc 1 352 1 view .LVU18
  81 0030 08BD     		pop	{r3, pc}
  82              	.L3:
 344:Core/Src/main.c **** 		is_EN=0;
  83              		.loc 1 344 3 is_stmt 1 view .LVU19
  84 0032 0022     		movs	r2, #0
  85 0034 2021     		movs	r1, #32
  86 0036 0C48     		ldr	r0, .L5
  87 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL3:
 345:Core/Src/main.c **** 		lcd_process++;
  89              		.loc 1 345 3 view .LVU20
 345:Core/Src/main.c **** 		lcd_process++;
  90              		.loc 1 345 8 is_stmt 0 view .LVU21
  91 003c 0C4B     		ldr	r3, .L5+8
  92 003e 0022     		movs	r2, #0
  93 0040 1A70     		strb	r2, [r3]
 346:Core/Src/main.c **** 		if (lcd_process>3){
  94              		.loc 1 346 3 is_stmt 1 view .LVU22
 346:Core/Src/main.c **** 		if (lcd_process>3){
  95              		.loc 1 346 14 is_stmt 0 view .LVU23
  96 0042 0C4A     		ldr	r2, .L5+12
  97 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  98 0046 0133     		adds	r3, r3, #1
  99 0048 DBB2     		uxtb	r3, r3
 100 004a 1370     		strb	r3, [r2]
ARM GAS  /tmp/cclmtcKv.s 			page 9


 347:Core/Src/main.c **** 			lcd_process=0;
 101              		.loc 1 347 3 is_stmt 1 view .LVU24
 347:Core/Src/main.c **** 			lcd_process=0;
 102              		.loc 1 347 6 is_stmt 0 view .LVU25
 103 004c 032B     		cmp	r3, #3
 104 004e EFD9     		bls	.L1
 348:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 105              		.loc 1 348 4 is_stmt 1 view .LVU26
 348:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 106              		.loc 1 348 15 is_stmt 0 view .LVU27
 107 0050 1346     		mov	r3, r2
 108 0052 0022     		movs	r2, #0
 109 0054 1A70     		strb	r2, [r3]
 349:Core/Src/main.c **** 		}
 110              		.loc 1 349 4 is_stmt 1 view .LVU28
 349:Core/Src/main.c **** 		}
 111              		.loc 1 349 33 is_stmt 0 view .LVU29
 112 0056 084A     		ldr	r2, .L5+16
 113 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 005a 83F00103 		eor	r3, r3, #1
 115 005e 03F00103 		and	r3, r3, #1
 349:Core/Src/main.c **** 		}
 116              		.loc 1 349 16 view .LVU30
 117 0062 1370     		strb	r3, [r2]
 118 0064 E4E7     		b	.L1
 119              	.L6:
 120 0066 00BF     		.align	2
 121              	.L5:
 122 0068 00100240 		.word	1073876992
 123 006c 00000000 		.word	.LANCHOR0
 124 0070 00000000 		.word	.LANCHOR1
 125 0074 00000000 		.word	.LANCHOR2
 126 0078 00000000 		.word	.LANCHOR3
 127              		.cfi_endproc
 128              	.LFE134:
 130              		.section	.text.lcd_display_task,"ax",%progbits
 131              		.align	1
 132              		.global	lcd_display_task
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	lcd_display_task:
 139              	.LFB133:
 293:Core/Src/main.c **** 
 140              		.loc 1 293 28 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 296:Core/Src/main.c **** 
 149              		.loc 1 296 2 view .LVU32
 296:Core/Src/main.c **** 
ARM GAS  /tmp/cclmtcKv.s 			page 10


 150              		.loc 1 296 5 is_stmt 0 view .LVU33
 151 0002 264B     		ldr	r3, .L17
 152 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 296:Core/Src/main.c **** 
 153              		.loc 1 296 4 view .LVU34
 154 0006 83B9     		cbnz	r3, .L8
 298:Core/Src/main.c **** 		 data = digit_table[digit2];
 155              		.loc 1 298 4 is_stmt 1 view .LVU35
 298:Core/Src/main.c **** 		 data = digit_table[digit2];
 156              		.loc 1 298 8 is_stmt 0 view .LVU36
 157 0008 254B     		ldr	r3, .L17+4
 158 000a C322     		movs	r2, #195
 159 000c 1A70     		strb	r2, [r3]
 299:Core/Src/main.c **** 
 160              		.loc 1 299 4 is_stmt 1 view .LVU37
 299:Core/Src/main.c **** 
 161              		.loc 1 299 22 is_stmt 0 view .LVU38
 162 000e 254B     		ldr	r3, .L17+8
 163 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 164 0012 254A     		ldr	r2, .L17+12
 165 0014 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 299:Core/Src/main.c **** 
 166              		.loc 1 299 9 view .LVU39
 167 0016 254B     		ldr	r3, .L17+16
 168 0018 1A70     		strb	r2, [r3]
 169              	.L9:
 307:Core/Src/main.c **** 
 170              		.loc 1 307 2 is_stmt 1 view .LVU40
 171 001a 254B     		ldr	r3, .L17+20
 172 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173 001e 032B     		cmp	r3, #3
 174 0020 17D8     		bhi	.L7
 175 0022 DFE803F0 		tbb	[pc, r3]
 176              	.L12:
 177 0026 0C       		.byte	(.L15-.L12)/2
 178 0027 17       		.byte	(.L14-.L12)/2
 179 0028 23       		.byte	(.L13-.L12)/2
 180 0029 2E       		.byte	(.L11-.L12)/2
 181              		.p2align 1
 182              	.L8:
 303:Core/Src/main.c ****         data = digit_table[digit1];
 183              		.loc 1 303 3 view .LVU41
 303:Core/Src/main.c ****         data = digit_table[digit1];
 184              		.loc 1 303 7 is_stmt 0 view .LVU42
 185 002a 1D4B     		ldr	r3, .L17+4
 186 002c CF22     		movs	r2, #207
 187 002e 1A70     		strb	r2, [r3]
 304:Core/Src/main.c **** 
 188              		.loc 1 304 9 is_stmt 1 view .LVU43
 304:Core/Src/main.c **** 
 189              		.loc 1 304 27 is_stmt 0 view .LVU44
 190 0030 204B     		ldr	r3, .L17+24
 191 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 192 0034 1C4A     		ldr	r2, .L17+12
 193 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 304:Core/Src/main.c **** 
 194              		.loc 1 304 14 view .LVU45
ARM GAS  /tmp/cclmtcKv.s 			page 11


 195 0038 1C4B     		ldr	r3, .L17+16
 196 003a 1A70     		strb	r2, [r3]
 197 003c EDE7     		b	.L9
 198              	.L15:
 310:Core/Src/main.c **** 					m_send_to_lcd((cmd>>4)&0x0f);
 199              		.loc 1 310 6 is_stmt 1 view .LVU46
 200 003e 0022     		movs	r2, #0
 201 0040 1021     		movs	r1, #16
 202 0042 1D48     		ldr	r0, .L17+28
 203 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL4:
 311:Core/Src/main.c **** 					break;
 205              		.loc 1 311 6 view .LVU47
 206 0048 154B     		ldr	r3, .L17+4
 207 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 208 004c 0009     		lsrs	r0, r0, #4
 209 004e FFF7FEFF 		bl	m_send_to_lcd
 210              	.LVL5:
 312:Core/Src/main.c **** 			case 1:
 211              		.loc 1 312 6 view .LVU48
 212              	.L7:
 326:Core/Src/main.c **** 
 213              		.loc 1 326 1 is_stmt 0 view .LVU49
 214 0052 08BD     		pop	{r3, pc}
 215              	.L14:
 314:Core/Src/main.c **** 					m_send_to_lcd((cmd)&0x0f);
 216              		.loc 1 314 6 is_stmt 1 view .LVU50
 217 0054 0022     		movs	r2, #0
 218 0056 1021     		movs	r1, #16
 219 0058 1748     		ldr	r0, .L17+28
 220 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 221              	.LVL6:
 315:Core/Src/main.c **** 					break;
 222              		.loc 1 315 6 view .LVU51
 315:Core/Src/main.c **** 					break;
 223              		.loc 1 315 25 is_stmt 0 view .LVU52
 224 005e 104B     		ldr	r3, .L17+4
 225 0060 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 315:Core/Src/main.c **** 					break;
 226              		.loc 1 315 6 view .LVU53
 227 0062 00F00F00 		and	r0, r0, #15
 228 0066 FFF7FEFF 		bl	m_send_to_lcd
 229              	.LVL7:
 316:Core/Src/main.c **** 			case 2:
 230              		.loc 1 316 6 is_stmt 1 view .LVU54
 231 006a F2E7     		b	.L7
 232              	.L13:
 318:Core/Src/main.c **** 					m_send_to_lcd((data>>4)&0x0f);
 233              		.loc 1 318 6 view .LVU55
 234 006c 0122     		movs	r2, #1
 235 006e 1021     		movs	r1, #16
 236 0070 1148     		ldr	r0, .L17+28
 237 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL8:
 319:Core/Src/main.c **** 					break;
 239              		.loc 1 319 6 view .LVU56
 240 0076 0D4B     		ldr	r3, .L17+16
ARM GAS  /tmp/cclmtcKv.s 			page 12


 241 0078 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242 007a 0009     		lsrs	r0, r0, #4
 243 007c FFF7FEFF 		bl	m_send_to_lcd
 244              	.LVL9:
 320:Core/Src/main.c **** 			case 3:
 245              		.loc 1 320 6 view .LVU57
 246 0080 E7E7     		b	.L7
 247              	.L11:
 322:Core/Src/main.c **** 					m_send_to_lcd(data&0x0f);
 248              		.loc 1 322 6 view .LVU58
 249 0082 0122     		movs	r2, #1
 250 0084 1021     		movs	r1, #16
 251 0086 0C48     		ldr	r0, .L17+28
 252 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL10:
 323:Core/Src/main.c **** 					break;
 254              		.loc 1 323 6 view .LVU59
 323:Core/Src/main.c **** 					break;
 255              		.loc 1 323 24 is_stmt 0 view .LVU60
 256 008c 074B     		ldr	r3, .L17+16
 257 008e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 323:Core/Src/main.c **** 					break;
 258              		.loc 1 323 6 view .LVU61
 259 0090 00F00F00 		and	r0, r0, #15
 260 0094 FFF7FEFF 		bl	m_send_to_lcd
 261              	.LVL11:
 324:Core/Src/main.c **** 	}
 262              		.loc 1 324 6 is_stmt 1 view .LVU62
 326:Core/Src/main.c **** 
 263              		.loc 1 326 1 is_stmt 0 view .LVU63
 264 0098 DBE7     		b	.L7
 265              	.L18:
 266 009a 00BF     		.align	2
 267              	.L17:
 268 009c 00000000 		.word	.LANCHOR3
 269 00a0 00000000 		.word	.LANCHOR4
 270 00a4 00000000 		.word	.LANCHOR6
 271 00a8 00000000 		.word	.LANCHOR5
 272 00ac 00000000 		.word	.LANCHOR7
 273 00b0 00000000 		.word	.LANCHOR2
 274 00b4 00000000 		.word	.LANCHOR8
 275 00b8 00100240 		.word	1073876992
 276              		.cfi_endproc
 277              	.LFE133:
 279              		.section	.text.task_timer,"ax",%progbits
 280              		.align	1
 281              		.global	task_timer
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	task_timer:
 288              	.LFB135:
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** void task_timer(void)
 356:Core/Src/main.c **** {
ARM GAS  /tmp/cclmtcKv.s 			page 13


 289              		.loc 1 356 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 357:Core/Src/main.c **** 	if(!f_timer_10ms) return;       // checking if 10 ms timer interrupt is set (10 ms), if set then d
 294              		.loc 1 357 2 view .LVU65
 295              		.loc 1 357 5 is_stmt 0 view .LVU66
 296 0000 114B     		ldr	r3, .L24
 297 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 298              		.loc 1 357 4 view .LVU67
 299 0004 83B1     		cbz	r3, .L19
 358:Core/Src/main.c **** 	f_timer_10ms =0;		// clear the flag to wait next interupt
 300              		.loc 1 358 2 is_stmt 1 view .LVU68
 301              		.loc 1 358 15 is_stmt 0 view .LVU69
 302 0006 104B     		ldr	r3, .L24
 303 0008 0022     		movs	r2, #0
 304 000a 1A70     		strb	r2, [r3]
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** 	d_timer_30ms++;			// count timer for 30 ms interval
 305              		.loc 1 360 2 is_stmt 1 view .LVU70
 306              		.loc 1 360 14 is_stmt 0 view .LVU71
 307 000c 0F4A     		ldr	r2, .L24+4
 308 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 309 0010 0133     		adds	r3, r3, #1
 310 0012 DBB2     		uxtb	r3, r3
 311 0014 1370     		strb	r3, [r2]
 361:Core/Src/main.c **** 				// count timer for LED interval
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** 	if(d_timer_30ms==3)		// checking if the count reached 30 ms
 312              		.loc 1 363 2 is_stmt 1 view .LVU72
 313              		.loc 1 363 4 is_stmt 0 view .LVU73
 314 0016 032B     		cmp	r3, #3
 315 0018 07D0     		beq	.L22
 316              	.L21:
 364:Core/Src/main.c **** 	{
 365:Core/Src/main.c **** 		d_timer_30ms =0;	// assign "0" to repeat counting
 366:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 367:Core/Src/main.c **** 	}
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** 	d_timer_20ms++;
 317              		.loc 1 369 2 is_stmt 1 view .LVU74
 318              		.loc 1 369 14 is_stmt 0 view .LVU75
 319 001a 0D4A     		ldr	r2, .L24+8
 320 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 321 001e 0133     		adds	r3, r3, #1
 322 0020 DBB2     		uxtb	r3, r3
 323 0022 1370     		strb	r3, [r2]
 370:Core/Src/main.c **** 	if (d_timer_20ms==2){
 324              		.loc 1 370 2 is_stmt 1 view .LVU76
 325              		.loc 1 370 5 is_stmt 0 view .LVU77
 326 0024 022B     		cmp	r3, #2
 327 0026 07D0     		beq	.L23
 328              	.L19:
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** 		d_timer_20ms =0;
 373:Core/Src/main.c **** 		f_timer_20ms=1;
ARM GAS  /tmp/cclmtcKv.s 			page 14


 374:Core/Src/main.c **** 	}
 375:Core/Src/main.c **** 	
 376:Core/Src/main.c **** /*
 377:Core/Src/main.c **** 	d_timer_TX1++;
 378:Core/Src/main.c **** 		if(d_timer_TX1>=TX1_delay_val)     // checking if the count reached LED interval
 379:Core/Src/main.c **** 		{
 380:Core/Src/main.c **** 			d_timer_TX1=0;		// assign "0" to repeat counting
 381:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX1_UPDATE);
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** 		}
 384:Core/Src/main.c **** 
 385:Core/Src/main.c **** 	d_timer_TX2++;
 386:Core/Src/main.c **** 		if(d_timer_TX2>=TX2_delay_val)     // checking if the count reached LED interval
 387:Core/Src/main.c **** 		{
 388:Core/Src/main.c **** 			d_timer_TX2=0;		// assign "0" to repeat counting
 389:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX2_UPDATE);
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** 		}
 392:Core/Src/main.c **** */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** }
 329              		.loc 1 394 1 view .LVU78
 330 0028 7047     		bx	lr
 331              	.L22:
 365:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 332              		.loc 1 365 3 is_stmt 1 view .LVU79
 365:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 333              		.loc 1 365 16 is_stmt 0 view .LVU80
 334 002a 1346     		mov	r3, r2
 335 002c 0022     		movs	r2, #0
 336 002e 1A70     		strb	r2, [r3]
 366:Core/Src/main.c **** 	}
 337              		.loc 1 366 3 is_stmt 1 view .LVU81
 366:Core/Src/main.c **** 	}
 338              		.loc 1 366 15 is_stmt 0 view .LVU82
 339 0030 084B     		ldr	r3, .L24+12
 340 0032 0122     		movs	r2, #1
 341 0034 1A70     		strb	r2, [r3]
 342 0036 F0E7     		b	.L21
 343              	.L23:
 372:Core/Src/main.c **** 		f_timer_20ms=1;
 344              		.loc 1 372 3 is_stmt 1 view .LVU83
 372:Core/Src/main.c **** 		f_timer_20ms=1;
 345              		.loc 1 372 16 is_stmt 0 view .LVU84
 346 0038 1346     		mov	r3, r2
 347 003a 0022     		movs	r2, #0
 348 003c 1A70     		strb	r2, [r3]
 373:Core/Src/main.c **** 	}
 349              		.loc 1 373 3 is_stmt 1 view .LVU85
 373:Core/Src/main.c **** 	}
 350              		.loc 1 373 15 is_stmt 0 view .LVU86
 351 003e 064B     		ldr	r3, .L24+16
 352 0040 0122     		movs	r2, #1
 353 0042 1A70     		strb	r2, [r3]
 354 0044 F0E7     		b	.L19
 355              	.L25:
 356 0046 00BF     		.align	2
ARM GAS  /tmp/cclmtcKv.s 			page 15


 357              	.L24:
 358 0048 00000000 		.word	.LANCHOR9
 359 004c 00000000 		.word	.LANCHOR10
 360 0050 00000000 		.word	.LANCHOR12
 361 0054 00000000 		.word	.LANCHOR11
 362 0058 00000000 		.word	.LANCHOR0
 363              		.cfi_endproc
 364              	.LFE135:
 366              		.section	.text.key_read_task,"ax",%progbits
 367              		.align	1
 368              		.global	key_read_task
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv4-sp-d16
 374              	key_read_task:
 375              	.LFB136:
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** void key_read_task(void)
 397:Core/Src/main.c **** {
 376              		.loc 1 397 1 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380 0000 08B5     		push	{r3, lr}
 381              	.LCFI2:
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 3, -8
 384              		.cfi_offset 14, -4
 398:Core/Src/main.c **** 	if(!f_timer_30ms) return;  		 // Checking if 30 ms counting is done
 385              		.loc 1 398 2 view .LVU88
 386              		.loc 1 398 5 is_stmt 0 view .LVU89
 387 0002 1F4B     		ldr	r3, .L36
 388 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 389              		.loc 1 398 4 view .LVU90
 390 0006 33B3     		cbz	r3, .L26
 399:Core/Src/main.c **** 	f_timer_30ms =0;          		 // clear the flag to wait next counting
 391              		.loc 1 399 2 is_stmt 1 view .LVU91
 392              		.loc 1 399 15 is_stmt 0 view .LVU92
 393 0008 1D4B     		ldr	r3, .L36
 394 000a 0022     		movs	r2, #0
 395 000c 1A70     		strb	r2, [r3]
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin|KEY2_Pin));
 396              		.loc 1 401 2 is_stmt 1 view .LVU93
 397              		.loc 1 401 39 is_stmt 0 view .LVU94
 398 000e 1D4B     		ldr	r3, .L36+4
 399 0010 1869     		ldr	r0, [r3, #16]
 400              	.LVL12:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** 	key1_data = key1_data<<1;      		 //Preparing to read KEY1 Input
 401              		.loc 1 403 2 is_stmt 1 view .LVU95
 402              		.loc 1 403 23 is_stmt 0 view .LVU96
 403 0012 1D4B     		ldr	r3, .L36+8
 404 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 405 0016 5200     		lsls	r2, r2, #1
 406 0018 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/cclmtcKv.s 			page 16


 407              		.loc 1 403 12 view .LVU97
 408 001a 1A70     		strb	r2, [r3]
 404:Core/Src/main.c **** 	key1_data &= 0b00001110;
 409              		.loc 1 404 2 is_stmt 1 view .LVU98
 410              		.loc 1 404 12 is_stmt 0 view .LVU99
 411 001c 02F00E02 		and	r2, r2, #14
 412 0020 1A70     		strb	r2, [r3]
 405:Core/Src/main.c **** 	key1_data |= ((key_pindata>>2) & 0x1);			 // Read KEY1 Input
 413              		.loc 1 405 2 is_stmt 1 view .LVU100
 414              		.loc 1 405 33 is_stmt 0 view .LVU101
 415 0022 C0F38001 		ubfx	r1, r0, #2, #1
 416              		.loc 1 405 12 view .LVU102
 417 0026 0A43     		orrs	r2, r2, r1
 418 0028 1A70     		strb	r2, [r3]
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** 	key2_data = key2_data<<1;		 //Preparing to read KEY2 Input
 419              		.loc 1 407 2 is_stmt 1 view .LVU103
 420              		.loc 1 407 23 is_stmt 0 view .LVU104
 421 002a 1849     		ldr	r1, .L36+12
 422 002c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 423 002e 5B00     		lsls	r3, r3, #1
 424 0030 DBB2     		uxtb	r3, r3
 425              		.loc 1 407 12 view .LVU105
 426 0032 0B70     		strb	r3, [r1]
 408:Core/Src/main.c **** 	key2_data &= 0b00001110;
 427              		.loc 1 408 2 is_stmt 1 view .LVU106
 428              		.loc 1 408 12 is_stmt 0 view .LVU107
 429 0034 03F00E03 		and	r3, r3, #14
 430 0038 0B70     		strb	r3, [r1]
 409:Core/Src/main.c **** 	key2_data |= (key_pindata>>3);    		 // Read KEY2 Input
 431              		.loc 1 409 2 is_stmt 1 view .LVU108
 432              		.loc 1 409 12 is_stmt 0 view .LVU109
 433 003a C0F3C000 		ubfx	r0, r0, #3, #1
 434              	.LVL13:
 435              		.loc 1 409 12 view .LVU110
 436 003e 0343     		orrs	r3, r3, r0
 437 0040 0B70     		strb	r3, [r1]
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** 	if(key1_data == KEY_PRESSED)    	 // Checking if KEY1 is pressed
 438              		.loc 1 411 2 is_stmt 1 view .LVU111
 439              		.loc 1 411 4 is_stmt 0 view .LVU112
 440 0042 0C2A     		cmp	r2, #12
 441 0044 08D0     		beq	.L32
 412:Core/Src/main.c **** 	{
 413:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY1_PRESSED) ; // Store the event in buffer
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** 	}else if(key1_data == KEY_RELEASED)		//  Checking if KEY1 is released
 442              		.loc 1 415 8 is_stmt 1 view .LVU113
 443              		.loc 1 415 10 is_stmt 0 view .LVU114
 444 0046 032A     		cmp	r2, #3
 445 0048 0BD0     		beq	.L33
 446              	.L29:
 416:Core/Src/main.c **** 	{
 417:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY1_RELEASED); // Store the event in buffer
 418:Core/Src/main.c **** 	}
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** 	if(key2_data == KEY_PRESSED)		// Checking if KEY2 is pressed
ARM GAS  /tmp/cclmtcKv.s 			page 17


 447              		.loc 1 420 2 is_stmt 1 view .LVU115
 448              		.loc 1 420 15 is_stmt 0 view .LVU116
 449 004a 104B     		ldr	r3, .L36+12
 450 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451              		.loc 1 420 4 view .LVU117
 452 004e 0C2B     		cmp	r3, #12
 453 0050 0CD0     		beq	.L34
 421:Core/Src/main.c **** 	{
 422:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY2_PRESSED); // Store the event in buffer
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** 	}else if(key2_data == KEY_RELEASED)		//  Checking if KEY2 is released
 454              		.loc 1 424 8 is_stmt 1 view .LVU118
 455              		.loc 1 424 10 is_stmt 0 view .LVU119
 456 0052 032B     		cmp	r3, #3
 457 0054 0FD0     		beq	.L35
 458              	.L26:
 425:Core/Src/main.c **** 	{
 426:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY2_RELEASED); // Store the event in buffer
 427:Core/Src/main.c **** 	}
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** }
 459              		.loc 1 429 1 view .LVU120
 460 0056 08BD     		pop	{r3, pc}
 461              	.L32:
 413:Core/Src/main.c **** 
 462              		.loc 1 413 3 is_stmt 1 view .LVU121
 463 0058 0121     		movs	r1, #1
 464 005a 0D48     		ldr	r0, .L36+16
 465 005c FFF7FEFF 		bl	buffer_push
 466              	.LVL14:
 467 0060 F3E7     		b	.L29
 468              	.L33:
 417:Core/Src/main.c **** 	}
 469              		.loc 1 417 3 view .LVU122
 470 0062 0321     		movs	r1, #3
 471 0064 0A48     		ldr	r0, .L36+16
 472 0066 FFF7FEFF 		bl	buffer_push
 473              	.LVL15:
 474 006a EEE7     		b	.L29
 475              	.L34:
 422:Core/Src/main.c **** 
 476              		.loc 1 422 3 view .LVU123
 477 006c 0221     		movs	r1, #2
 478 006e 0848     		ldr	r0, .L36+16
 479 0070 FFF7FEFF 		bl	buffer_push
 480              	.LVL16:
 481 0074 EFE7     		b	.L26
 482              	.L35:
 426:Core/Src/main.c **** 	}
 483              		.loc 1 426 3 view .LVU124
 484 0076 0421     		movs	r1, #4
 485 0078 0548     		ldr	r0, .L36+16
 486 007a FFF7FEFF 		bl	buffer_push
 487              	.LVL17:
 488 007e EAE7     		b	.L26
 489              	.L37:
 490              		.align	2
ARM GAS  /tmp/cclmtcKv.s 			page 18


 491              	.L36:
 492 0080 00000000 		.word	.LANCHOR11
 493 0084 00180240 		.word	1073879040
 494 0088 00000000 		.word	.LANCHOR13
 495 008c 00000000 		.word	.LANCHOR14
 496 0090 00000000 		.word	.LANCHOR15
 497              		.cfi_endproc
 498              	.LFE136:
 500              		.section	.text.RS485_Read_Message,"ax",%progbits
 501              		.align	1
 502              		.global	RS485_Read_Message
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 506              		.fpu fpv4-sp-d16
 508              	RS485_Read_Message:
 509              	.LFB138:
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** void main_task(void)
 433:Core/Src/main.c **** {
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** 	if (event_buffer.head!=event_buffer.tail){
 436:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 437:Core/Src/main.c **** 	}
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** 	switch(state)
 440:Core/Src/main.c **** 	{
 441:Core/Src/main.c **** 		case STATE_IDLE:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** 			switch(event)
 444:Core/Src/main.c **** 				{
 445:Core/Src/main.c **** 					case EVENT_KEY1_PRESSED:
 446:Core/Src/main.c **** 						
 447:Core/Src/main.c **** 						TX_msg[0] = 0x1; 
 448:Core/Src/main.c **** 						TX_msg[1] = FUNC_WRITE;
 449:Core/Src/main.c **** 						TX_msg[2] = tx2_buffer[p_tx2++];
 450:Core/Src/main.c **** 						if (p_tx2>8){
 451:Core/Src/main.c **** 							p_tx2=0;
 452:Core/Src/main.c **** 						}
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** 						RS485_Send_Message();	
 455:Core/Src/main.c **** 						//TX1_delay_val=250;
 456:Core/Src/main.c **** 						//d_timer_TX1=250;
 457:Core/Src/main.c **** 						//Set_Transmitter_Port1();
 458:Core/Src/main.c **** 						//state = STATE_TX1;
 459:Core/Src/main.c **** 												
 460:Core/Src/main.c **** 						break;
 461:Core/Src/main.c **** 					case EVENT_RX_COMPLETE:
 462:Core/Src/main.c **** 						RS485_Read_Message();
 463:Core/Src/main.c **** 												
 464:Core/Src/main.c **** 						break;
 465:Core/Src/main.c **** 						/*
 466:Core/Src/main.c **** 					case EVENT_KEY2_PRESSED:
 467:Core/Src/main.c **** 						TX2_delay_val=250;
 468:Core/Src/main.c **** 						d_timer_TX2=250;
 469:Core/Src/main.c **** 						Set_Transmitter_Port2();
ARM GAS  /tmp/cclmtcKv.s 			page 19


 470:Core/Src/main.c **** 						state = STATE_TX2;
 471:Core/Src/main.c **** 						
 472:Core/Src/main.c **** 						break;*/
 473:Core/Src/main.c **** 				}
 474:Core/Src/main.c **** 			break;
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** 		case STATE_TX1:
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** 			switch (event){
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** 				case EVENT_TX1_UPDATE:
 481:Core/Src/main.c **** 					//uart_TX1_task();
 482:Core/Src/main.c **** 					//TX1_delay_update();
 483:Core/Src/main.c **** 					event=0;
 484:Core/Src/main.c **** 					break;
 485:Core/Src/main.c **** 					/*
 486:Core/Src/main.c **** 				case EVENT_KEY2_PRESSED:
 487:Core/Src/main.c **** 					TX2_delay_val=250;
 488:Core/Src/main.c **** 					d_timer_TX2=250;
 489:Core/Src/main.c **** 
 490:Core/Src/main.c **** 					state = STATE_TX_ALL;
 491:Core/Src/main.c **** 					break;*/
 492:Core/Src/main.c **** 
 493:Core/Src/main.c **** 				case EVENT_KEY1_RELEASED:
 494:Core/Src/main.c **** 					//Set_Receiver_Port1();
 495:Core/Src/main.c **** 					state = STATE_IDLE;
 496:Core/Src/main.c **** 
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** 					break;
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** 			}
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** 			break;
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** 	
 505:Core/Src/main.c **** 	}
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** }
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** /*
 510:Core/Src/main.c **** void TX1_delay_update(void){
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** 	if (TX1_delay_val==50) return;
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** 	TX1_delay_val-=50;
 515:Core/Src/main.c **** }
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** void TX2_delay_update(void){
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** 	if (TX2_delay_val==50) return;
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** 	TX2_delay_val-=50;
 522:Core/Src/main.c **** }
 523:Core/Src/main.c **** */
 524:Core/Src/main.c **** 
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** void RS485_Read_Message(void){
ARM GAS  /tmp/cclmtcKv.s 			page 20


 510              		.loc 1 526 30 view -0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   if (transmission_f) return;
 514              		.loc 1 528 3 view .LVU126
 515              		.loc 1 528 7 is_stmt 0 view .LVU127
 516 0000 244B     		ldr	r3, .L57
 517 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518              		.loc 1 528 6 view .LVU128
 519 0004 03B1     		cbz	r3, .L55
 520 0006 7047     		bx	lr
 521              	.L55:
 526:Core/Src/main.c **** 
 522              		.loc 1 526 30 view .LVU129
 523 0008 10B5     		push	{r4, lr}
 524              	.LCFI3:
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 4, -8
 527              		.cfi_offset 14, -4
 529:Core/Src/main.c **** 
 530:Core/Src/main.c ****   buffer_to_message(&rx2_buffer, &RX_msg);
 528              		.loc 1 530 3 is_stmt 1 view .LVU130
 529 000a 234C     		ldr	r4, .L57+4
 530 000c 2146     		mov	r1, r4
 531 000e 2348     		ldr	r0, .L57+8
 532 0010 FFF7FEFF 		bl	buffer_to_message
 533              	.LVL18:
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   if (check_checksum(&RX_msg)==CHECKSUM_ERROR) return;
 534              		.loc 1 532 3 view .LVU131
 535              		.loc 1 532 7 is_stmt 0 view .LVU132
 536 0014 2046     		mov	r0, r4
 537 0016 FFF7FEFF 		bl	check_checksum
 538              	.LVL19:
 539              		.loc 1 532 6 view .LVU133
 540 001a 38B1     		cbz	r0, .L38
 533:Core/Src/main.c ****   if (RX_msg[0]!= ID) return;
 541              		.loc 1 533 3 is_stmt 1 view .LVU134
 542              		.loc 1 533 13 is_stmt 0 view .LVU135
 543 001c 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 544              		.loc 1 533 16 view .LVU136
 545 001e 204B     		ldr	r3, .L57+12
 546 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 547              		.loc 1 533 6 view .LVU137
 548 0022 9A42     		cmp	r2, r3
 549 0024 02D1     		bne	.L38
 534:Core/Src/main.c **** /*
 535:Core/Src/main.c ****   if (RX_msg.function_code == FUNC_READ)
 536:Core/Src/main.c ****   {
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   }
 539:Core/Src/main.c ****   */
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****    if (RX_msg[1] == FUNC_WRITE)
 550              		.loc 1 541 4 is_stmt 1 view .LVU138
ARM GAS  /tmp/cclmtcKv.s 			page 21


 551              		.loc 1 541 14 is_stmt 0 view .LVU139
 552 0026 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 553              		.loc 1 541 7 view .LVU140
 554 0028 012B     		cmp	r3, #1
 555 002a 00D0     		beq	.L56
 556              	.L38:
 542:Core/Src/main.c ****   { 
 543:Core/Src/main.c ****     
 544:Core/Src/main.c **** 	  switch(RX_msg[2])
 545:Core/Src/main.c **** 	{
 546:Core/Src/main.c **** 		case '0':
 547:Core/Src/main.c **** 			digit1=0;
 548:Core/Src/main.c **** 			break;
 549:Core/Src/main.c **** 		case '1':
 550:Core/Src/main.c **** 			digit1=1;
 551:Core/Src/main.c **** 			break;
 552:Core/Src/main.c **** 		case '2':
 553:Core/Src/main.c **** 			digit1=2;
 554:Core/Src/main.c **** 			break;
 555:Core/Src/main.c **** 		case '3':
 556:Core/Src/main.c **** 			digit1=3;
 557:Core/Src/main.c **** 			break;
 558:Core/Src/main.c **** 		case '4':
 559:Core/Src/main.c **** 			digit1=4;
 560:Core/Src/main.c **** 			break;
 561:Core/Src/main.c **** 		case '5':
 562:Core/Src/main.c **** 			digit1=5;
 563:Core/Src/main.c **** 			break;
 564:Core/Src/main.c **** 		case '6':
 565:Core/Src/main.c **** 			digit1=6;
 566:Core/Src/main.c **** 			break;
 567:Core/Src/main.c **** 		case '7':
 568:Core/Src/main.c **** 			digit1=7;
 569:Core/Src/main.c **** 			break;
 570:Core/Src/main.c **** 		case '8':
 571:Core/Src/main.c **** 			digit1=8;
 572:Core/Src/main.c **** 			break;
 573:Core/Src/main.c **** 		case '9':
 574:Core/Src/main.c **** 			digit1=9;
 575:Core/Src/main.c **** 			break;
 576:Core/Src/main.c **** 		default:
 577:Core/Src/main.c **** 			break;
 578:Core/Src/main.c **** 	}
 579:Core/Src/main.c ****   }
 580:Core/Src/main.c ****   
 581:Core/Src/main.c **** }
 557              		.loc 1 581 1 view .LVU141
 558 002c 10BD     		pop	{r4, pc}
 559              	.L56:
 544:Core/Src/main.c **** 	{
 560              		.loc 1 544 4 is_stmt 1 view .LVU142
 544:Core/Src/main.c **** 	{
 561              		.loc 1 544 17 is_stmt 0 view .LVU143
 562 002e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 544:Core/Src/main.c **** 	{
 563              		.loc 1 544 4 view .LVU144
 564 0030 303B     		subs	r3, r3, #48
ARM GAS  /tmp/cclmtcKv.s 			page 22


 565 0032 092B     		cmp	r3, #9
 566 0034 FAD8     		bhi	.L38
 567 0036 DFE803F0 		tbb	[pc, r3]
 568              	.L41:
 569 003a 05       		.byte	(.L50-.L41)/2
 570 003b 09       		.byte	(.L49-.L41)/2
 571 003c 0D       		.byte	(.L48-.L41)/2
 572 003d 11       		.byte	(.L47-.L41)/2
 573 003e 15       		.byte	(.L46-.L41)/2
 574 003f 19       		.byte	(.L45-.L41)/2
 575 0040 1D       		.byte	(.L44-.L41)/2
 576 0041 21       		.byte	(.L43-.L41)/2
 577 0042 25       		.byte	(.L42-.L41)/2
 578 0043 29       		.byte	(.L40-.L41)/2
 579              		.p2align 1
 580              	.L50:
 547:Core/Src/main.c **** 			break;
 581              		.loc 1 547 4 is_stmt 1 view .LVU145
 547:Core/Src/main.c **** 			break;
 582              		.loc 1 547 10 is_stmt 0 view .LVU146
 583 0044 174B     		ldr	r3, .L57+16
 584 0046 0022     		movs	r2, #0
 585 0048 1A70     		strb	r2, [r3]
 548:Core/Src/main.c **** 		case '1':
 586              		.loc 1 548 4 is_stmt 1 view .LVU147
 587 004a EFE7     		b	.L38
 588              	.L49:
 550:Core/Src/main.c **** 			break;
 589              		.loc 1 550 4 view .LVU148
 550:Core/Src/main.c **** 			break;
 590              		.loc 1 550 10 is_stmt 0 view .LVU149
 591 004c 154B     		ldr	r3, .L57+16
 592 004e 0122     		movs	r2, #1
 593 0050 1A70     		strb	r2, [r3]
 551:Core/Src/main.c **** 		case '2':
 594              		.loc 1 551 4 is_stmt 1 view .LVU150
 595 0052 EBE7     		b	.L38
 596              	.L48:
 553:Core/Src/main.c **** 			break;
 597              		.loc 1 553 4 view .LVU151
 553:Core/Src/main.c **** 			break;
 598              		.loc 1 553 10 is_stmt 0 view .LVU152
 599 0054 134B     		ldr	r3, .L57+16
 600 0056 0222     		movs	r2, #2
 601 0058 1A70     		strb	r2, [r3]
 554:Core/Src/main.c **** 		case '3':
 602              		.loc 1 554 4 is_stmt 1 view .LVU153
 603 005a E7E7     		b	.L38
 604              	.L47:
 556:Core/Src/main.c **** 			break;
 605              		.loc 1 556 4 view .LVU154
 556:Core/Src/main.c **** 			break;
 606              		.loc 1 556 10 is_stmt 0 view .LVU155
 607 005c 114B     		ldr	r3, .L57+16
 608 005e 0322     		movs	r2, #3
 609 0060 1A70     		strb	r2, [r3]
 557:Core/Src/main.c **** 		case '4':
ARM GAS  /tmp/cclmtcKv.s 			page 23


 610              		.loc 1 557 4 is_stmt 1 view .LVU156
 611 0062 E3E7     		b	.L38
 612              	.L46:
 559:Core/Src/main.c **** 			break;
 613              		.loc 1 559 4 view .LVU157
 559:Core/Src/main.c **** 			break;
 614              		.loc 1 559 10 is_stmt 0 view .LVU158
 615 0064 0F4B     		ldr	r3, .L57+16
 616 0066 0422     		movs	r2, #4
 617 0068 1A70     		strb	r2, [r3]
 560:Core/Src/main.c **** 		case '5':
 618              		.loc 1 560 4 is_stmt 1 view .LVU159
 619 006a DFE7     		b	.L38
 620              	.L45:
 562:Core/Src/main.c **** 			break;
 621              		.loc 1 562 4 view .LVU160
 562:Core/Src/main.c **** 			break;
 622              		.loc 1 562 10 is_stmt 0 view .LVU161
 623 006c 0D4B     		ldr	r3, .L57+16
 624 006e 0522     		movs	r2, #5
 625 0070 1A70     		strb	r2, [r3]
 563:Core/Src/main.c **** 		case '6':
 626              		.loc 1 563 4 is_stmt 1 view .LVU162
 627 0072 DBE7     		b	.L38
 628              	.L44:
 565:Core/Src/main.c **** 			break;
 629              		.loc 1 565 4 view .LVU163
 565:Core/Src/main.c **** 			break;
 630              		.loc 1 565 10 is_stmt 0 view .LVU164
 631 0074 0B4B     		ldr	r3, .L57+16
 632 0076 0622     		movs	r2, #6
 633 0078 1A70     		strb	r2, [r3]
 566:Core/Src/main.c **** 		case '7':
 634              		.loc 1 566 4 is_stmt 1 view .LVU165
 635 007a D7E7     		b	.L38
 636              	.L43:
 568:Core/Src/main.c **** 			break;
 637              		.loc 1 568 4 view .LVU166
 568:Core/Src/main.c **** 			break;
 638              		.loc 1 568 10 is_stmt 0 view .LVU167
 639 007c 094B     		ldr	r3, .L57+16
 640 007e 0722     		movs	r2, #7
 641 0080 1A70     		strb	r2, [r3]
 569:Core/Src/main.c **** 		case '8':
 642              		.loc 1 569 4 is_stmt 1 view .LVU168
 643 0082 D3E7     		b	.L38
 644              	.L42:
 571:Core/Src/main.c **** 			break;
 645              		.loc 1 571 4 view .LVU169
 571:Core/Src/main.c **** 			break;
 646              		.loc 1 571 10 is_stmt 0 view .LVU170
 647 0084 074B     		ldr	r3, .L57+16
 648 0086 0822     		movs	r2, #8
 649 0088 1A70     		strb	r2, [r3]
 572:Core/Src/main.c **** 		case '9':
 650              		.loc 1 572 4 is_stmt 1 view .LVU171
 651 008a CFE7     		b	.L38
ARM GAS  /tmp/cclmtcKv.s 			page 24


 652              	.L40:
 574:Core/Src/main.c **** 			break;
 653              		.loc 1 574 4 view .LVU172
 574:Core/Src/main.c **** 			break;
 654              		.loc 1 574 10 is_stmt 0 view .LVU173
 655 008c 054B     		ldr	r3, .L57+16
 656 008e 0922     		movs	r2, #9
 657 0090 1A70     		strb	r2, [r3]
 575:Core/Src/main.c **** 		default:
 658              		.loc 1 575 4 is_stmt 1 view .LVU174
 659 0092 CBE7     		b	.L38
 660              	.L58:
 661              		.align	2
 662              	.L57:
 663 0094 00000000 		.word	.LANCHOR16
 664 0098 00000000 		.word	.LANCHOR17
 665 009c 00000000 		.word	.LANCHOR18
 666 00a0 00000000 		.word	.LANCHOR19
 667 00a4 00000000 		.word	.LANCHOR8
 668              		.cfi_endproc
 669              	.LFE138:
 671              		.section	.text.RS485_Send_Message,"ax",%progbits
 672              		.align	1
 673              		.global	RS485_Send_Message
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv4-sp-d16
 679              	RS485_Send_Message:
 680              	.LFB139:
 582:Core/Src/main.c **** 
 583:Core/Src/main.c **** void RS485_Send_Message(void)
 584:Core/Src/main.c **** {
 681              		.loc 1 584 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685 0000 38B5     		push	{r3, r4, r5, lr}
 686              	.LCFI4:
 687              		.cfi_def_cfa_offset 16
 688              		.cfi_offset 3, -16
 689              		.cfi_offset 4, -12
 690              		.cfi_offset 5, -8
 691              		.cfi_offset 14, -4
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****    //uint8_t *pbuf_tx = (uint8_t *)&msg; 
 587:Core/Src/main.c ****    HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 692              		.loc 1 587 4 view .LVU176
 693 0002 104D     		ldr	r5, .L61
 694 0004 0122     		movs	r2, #1
 695 0006 4FF48051 		mov	r1, #4096
 696 000a 2846     		mov	r0, r5
 697 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 698              	.LVL20:
 588:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,&start_cmd,1,10);
 699              		.loc 1 588 4 view .LVU177
 700 0010 0D4C     		ldr	r4, .L61+4
ARM GAS  /tmp/cclmtcKv.s 			page 25


 701 0012 0A23     		movs	r3, #10
 702 0014 0122     		movs	r2, #1
 703 0016 0D49     		ldr	r1, .L61+8
 704 0018 2046     		mov	r0, r4
 705 001a FFF7FEFF 		bl	HAL_UART_Transmit
 706              	.LVL21:
 589:Core/Src/main.c ****   
 590:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,TX_msg,sizeof(TX_msg),10);
 707              		.loc 1 590 4 view .LVU178
 708 001e 0A23     		movs	r3, #10
 709 0020 0422     		movs	r2, #4
 710 0022 0B49     		ldr	r1, .L61+12
 711 0024 2046     		mov	r0, r4
 712 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 713              	.LVL22:
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,&stop_cmd,1,10);
 714              		.loc 1 592 4 view .LVU179
 715 002a 0A23     		movs	r3, #10
 716 002c 0122     		movs	r2, #1
 717 002e 0949     		ldr	r1, .L61+16
 718 0030 2046     		mov	r0, r4
 719 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 720              	.LVL23:
 593:Core/Src/main.c ****   
 594:Core/Src/main.c ****    HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 721              		.loc 1 594 4 view .LVU180
 722 0036 0022     		movs	r2, #0
 723 0038 4FF48051 		mov	r1, #4096
 724 003c 2846     		mov	r0, r5
 725 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 726              	.LVL24:
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** }
 727              		.loc 1 596 1 is_stmt 0 view .LVU181
 728 0042 38BD     		pop	{r3, r4, r5, pc}
 729              	.L62:
 730              		.align	2
 731              	.L61:
 732 0044 00000240 		.word	1073872896
 733 0048 00000000 		.word	huart4
 734 004c 00000000 		.word	.LANCHOR20
 735 0050 00000000 		.word	.LANCHOR21
 736 0054 00000000 		.word	.LANCHOR22
 737              		.cfi_endproc
 738              	.LFE139:
 740              		.section	.text.main_task,"ax",%progbits
 741              		.align	1
 742              		.global	main_task
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu fpv4-sp-d16
 748              	main_task:
 749              	.LFB137:
 433:Core/Src/main.c **** 
 750              		.loc 1 433 1 is_stmt 1 view -0
ARM GAS  /tmp/cclmtcKv.s 			page 26


 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754 0000 08B5     		push	{r3, lr}
 755              	.LCFI5:
 756              		.cfi_def_cfa_offset 8
 757              		.cfi_offset 3, -8
 758              		.cfi_offset 14, -4
 435:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 759              		.loc 1 435 2 view .LVU183
 435:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 760              		.loc 1 435 18 is_stmt 0 view .LVU184
 761 0002 1E4B     		ldr	r3, .L74
 762 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 435:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 763              		.loc 1 435 37 view .LVU185
 764 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 435:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 765              		.loc 1 435 5 view .LVU186
 766 0008 9A42     		cmp	r2, r3
 767 000a 05D1     		bne	.L73
 768              	.L64:
 439:Core/Src/main.c **** 	{
 769              		.loc 1 439 2 is_stmt 1 view .LVU187
 770 000c 1C4B     		ldr	r3, .L74+4
 771 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 772 0010 43B1     		cbz	r3, .L65
 773 0012 012B     		cmp	r3, #1
 774 0014 23D0     		beq	.L66
 775              	.L63:
 507:Core/Src/main.c **** 
 776              		.loc 1 507 1 is_stmt 0 view .LVU188
 777 0016 08BD     		pop	{r3, pc}
 778              	.L73:
 436:Core/Src/main.c **** 	}
 779              		.loc 1 436 3 is_stmt 1 view .LVU189
 436:Core/Src/main.c **** 	}
 780              		.loc 1 436 11 is_stmt 0 view .LVU190
 781 0018 1848     		ldr	r0, .L74
 782 001a FFF7FEFF 		bl	buffer_pop
 783              	.LVL25:
 436:Core/Src/main.c **** 	}
 784              		.loc 1 436 9 view .LVU191
 785 001e 194B     		ldr	r3, .L74+8
 786 0020 1870     		strb	r0, [r3]
 787 0022 F3E7     		b	.L64
 788              	.L65:
 443:Core/Src/main.c **** 				{
 789              		.loc 1 443 4 is_stmt 1 view .LVU192
 790 0024 174B     		ldr	r3, .L74+8
 791 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 792 0028 012B     		cmp	r3, #1
 793 002a 04D0     		beq	.L68
 794 002c 072B     		cmp	r3, #7
 795 002e F2D1     		bne	.L63
 462:Core/Src/main.c **** 												
 796              		.loc 1 462 7 view .LVU193
ARM GAS  /tmp/cclmtcKv.s 			page 27


 797 0030 FFF7FEFF 		bl	RS485_Read_Message
 798              	.LVL26:
 464:Core/Src/main.c **** 						/*
 799              		.loc 1 464 7 view .LVU194
 800 0034 EFE7     		b	.L63
 801              	.L68:
 447:Core/Src/main.c **** 						TX_msg[1] = FUNC_WRITE;
 802              		.loc 1 447 7 view .LVU195
 447:Core/Src/main.c **** 						TX_msg[1] = FUNC_WRITE;
 803              		.loc 1 447 17 is_stmt 0 view .LVU196
 804 0036 144A     		ldr	r2, .L74+12
 805 0038 0123     		movs	r3, #1
 806 003a 1370     		strb	r3, [r2]
 448:Core/Src/main.c **** 						TX_msg[2] = tx2_buffer[p_tx2++];
 807              		.loc 1 448 7 is_stmt 1 view .LVU197
 448:Core/Src/main.c **** 						TX_msg[2] = tx2_buffer[p_tx2++];
 808              		.loc 1 448 17 is_stmt 0 view .LVU198
 809 003c 5370     		strb	r3, [r2, #1]
 449:Core/Src/main.c **** 						if (p_tx2>8){
 810              		.loc 1 449 7 is_stmt 1 view .LVU199
 449:Core/Src/main.c **** 						if (p_tx2>8){
 811              		.loc 1 449 35 is_stmt 0 view .LVU200
 812 003e 1348     		ldr	r0, .L74+16
 813 0040 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 814 0042 CB18     		adds	r3, r1, r3
 815 0044 DBB2     		uxtb	r3, r3
 816 0046 0370     		strb	r3, [r0]
 449:Core/Src/main.c **** 						if (p_tx2>8){
 817              		.loc 1 449 29 view .LVU201
 818 0048 1148     		ldr	r0, .L74+20
 819 004a 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 449:Core/Src/main.c **** 						if (p_tx2>8){
 820              		.loc 1 449 17 view .LVU202
 821 004c 9170     		strb	r1, [r2, #2]
 450:Core/Src/main.c **** 							p_tx2=0;
 822              		.loc 1 450 7 is_stmt 1 view .LVU203
 450:Core/Src/main.c **** 							p_tx2=0;
 823              		.loc 1 450 10 is_stmt 0 view .LVU204
 824 004e 082B     		cmp	r3, #8
 825 0050 02D9     		bls	.L70
 451:Core/Src/main.c **** 						}
 826              		.loc 1 451 8 is_stmt 1 view .LVU205
 451:Core/Src/main.c **** 						}
 827              		.loc 1 451 13 is_stmt 0 view .LVU206
 828 0052 0E4B     		ldr	r3, .L74+16
 829 0054 0022     		movs	r2, #0
 830 0056 1A70     		strb	r2, [r3]
 831              	.L70:
 454:Core/Src/main.c **** 						//TX1_delay_val=250;
 832              		.loc 1 454 7 is_stmt 1 view .LVU207
 833 0058 FFF7FEFF 		bl	RS485_Send_Message
 834              	.LVL27:
 460:Core/Src/main.c **** 					case EVENT_RX_COMPLETE:
 835              		.loc 1 460 7 view .LVU208
 836 005c DBE7     		b	.L63
 837              	.L66:
 478:Core/Src/main.c **** 
ARM GAS  /tmp/cclmtcKv.s 			page 28


 838              		.loc 1 478 4 view .LVU209
 839 005e 094B     		ldr	r3, .L74+8
 840 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 841 0062 032B     		cmp	r3, #3
 842 0064 05D0     		beq	.L71
 843 0066 052B     		cmp	r3, #5
 844 0068 D5D1     		bne	.L63
 483:Core/Src/main.c **** 					break;
 845              		.loc 1 483 6 view .LVU210
 483:Core/Src/main.c **** 					break;
 846              		.loc 1 483 11 is_stmt 0 view .LVU211
 847 006a 064B     		ldr	r3, .L74+8
 848 006c 0022     		movs	r2, #0
 849 006e 1A70     		strb	r2, [r3]
 484:Core/Src/main.c **** 					/*
 850              		.loc 1 484 6 is_stmt 1 view .LVU212
 851 0070 D1E7     		b	.L63
 852              	.L71:
 495:Core/Src/main.c **** 
 853              		.loc 1 495 6 view .LVU213
 495:Core/Src/main.c **** 
 854              		.loc 1 495 12 is_stmt 0 view .LVU214
 855 0072 034B     		ldr	r3, .L74+4
 856 0074 0022     		movs	r2, #0
 857 0076 1A70     		strb	r2, [r3]
 498:Core/Src/main.c **** 
 858              		.loc 1 498 6 is_stmt 1 view .LVU215
 507:Core/Src/main.c **** 
 859              		.loc 1 507 1 is_stmt 0 view .LVU216
 860 0078 CDE7     		b	.L63
 861              	.L75:
 862 007a 00BF     		.align	2
 863              	.L74:
 864 007c 00000000 		.word	.LANCHOR15
 865 0080 00000000 		.word	.LANCHOR24
 866 0084 00000000 		.word	.LANCHOR23
 867 0088 00000000 		.word	.LANCHOR21
 868 008c 00000000 		.word	.LANCHOR25
 869 0090 00000000 		.word	.LANCHOR26
 870              		.cfi_endproc
 871              	.LFE137:
 873              		.section	.text.seven_segment_driver,"ax",%progbits
 874              		.align	1
 875              		.global	seven_segment_driver
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 879              		.fpu fpv4-sp-d16
 881              	seven_segment_driver:
 882              	.LVL28:
 883              	.LFB140:
 597:Core/Src/main.c **** 
 598:Core/Src/main.c **** 
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** void seven_segment_driver(char input, char select_digit)
 601:Core/Src/main.c **** {
 884              		.loc 1 601 1 is_stmt 1 view -0
ARM GAS  /tmp/cclmtcKv.s 			page 29


 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		@ link register save eliminated.
 602:Core/Src/main.c **** 	uint32_t mask = S1_Pin|S2_Pin|S3_Pin|S4_Pin|S5_Pin|S6_Pin|S7_Pin;
 889              		.loc 1 602 2 view .LVU218
 603:Core/Src/main.c **** 	uint32_t val = ((uint32_t) ~input)&mask;
 890              		.loc 1 603 2 view .LVU219
 891              		.loc 1 603 29 is_stmt 0 view .LVU220
 892 0000 C043     		mvns	r0, r0
 893              	.LVL29:
 894              		.loc 1 603 11 view .LVU221
 895 0002 00F07F00 		and	r0, r0, #127
 896              	.LVL30:
 604:Core/Src/main.c **** 	if (!select_digit)
 897              		.loc 1 604 2 is_stmt 1 view .LVU222
 898              		.loc 1 604 5 is_stmt 0 view .LVU223
 899 0006 21B9     		cbnz	r1, .L77
 605:Core/Src/main.c **** 	{
 606:Core/Src/main.c **** 		val |= (1)<<7; // pin 7
 900              		.loc 1 606 3 is_stmt 1 view .LVU224
 901              		.loc 1 606 7 is_stmt 0 view .LVU225
 902 0008 40F08000 		orr	r0, r0, #128
 903              	.LVL31:
 904              	.L78:
 607:Core/Src/main.c **** 	}else
 608:Core/Src/main.c **** 	{
 609:Core/Src/main.c **** 		val |= (1)<<8; //pin 8
 610:Core/Src/main.c **** 
 611:Core/Src/main.c **** 	}
 612:Core/Src/main.c **** 	GPIOF->ODR = val;
 905              		.loc 1 612 2 is_stmt 1 view .LVU226
 906              		.loc 1 612 13 is_stmt 0 view .LVU227
 907 000c 024B     		ldr	r3, .L79
 908 000e 5861     		str	r0, [r3, #20]
 613:Core/Src/main.c **** 
 614:Core/Src/main.c **** }
 909              		.loc 1 614 1 view .LVU228
 910 0010 7047     		bx	lr
 911              	.L77:
 609:Core/Src/main.c **** 
 912              		.loc 1 609 3 is_stmt 1 view .LVU229
 609:Core/Src/main.c **** 
 913              		.loc 1 609 7 is_stmt 0 view .LVU230
 914 0012 40F48070 		orr	r0, r0, #256
 915              	.LVL32:
 609:Core/Src/main.c **** 
 916              		.loc 1 609 7 view .LVU231
 917 0016 F9E7     		b	.L78
 918              	.L80:
 919              		.align	2
 920              	.L79:
 921 0018 00140240 		.word	1073878016
 922              		.cfi_endproc
 923              	.LFE140:
 925              		.section	.text.segment_display_task,"ax",%progbits
 926              		.align	1
ARM GAS  /tmp/cclmtcKv.s 			page 30


 927              		.global	segment_display_task
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 931              		.fpu fpv4-sp-d16
 933              	segment_display_task:
 934              	.LFB132:
 277:Core/Src/main.c ****    if(!f_timer_100us) return;
 935              		.loc 1 277 1 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939 0000 08B5     		push	{r3, lr}
 940              	.LCFI6:
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 3, -8
 943              		.cfi_offset 14, -4
 278:Core/Src/main.c ****    f_timer_100us =0;
 944              		.loc 1 278 4 view .LVU233
 278:Core/Src/main.c ****    f_timer_100us =0;
 945              		.loc 1 278 7 is_stmt 0 view .LVU234
 946 0002 0E4B     		ldr	r3, .L85
 947 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 278:Core/Src/main.c ****    f_timer_100us =0;
 948              		.loc 1 278 6 view .LVU235
 949 0006 83B1     		cbz	r3, .L81
 279:Core/Src/main.c **** 
 950              		.loc 1 279 4 is_stmt 1 view .LVU236
 279:Core/Src/main.c **** 
 951              		.loc 1 279 18 is_stmt 0 view .LVU237
 952 0008 0C4B     		ldr	r3, .L85
 953 000a 0022     		movs	r2, #0
 954 000c 1A70     		strb	r2, [r3]
 281:Core/Src/main.c ****    if (flag_digit_1){
 955              		.loc 1 281 4 is_stmt 1 view .LVU238
 281:Core/Src/main.c ****    if (flag_digit_1){
 956              		.loc 1 281 32 is_stmt 0 view .LVU239
 957 000e 0C4B     		ldr	r3, .L85+4
 958 0010 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 959 0012 81F00101 		eor	r1, r1, #1
 960 0016 01F00101 		and	r1, r1, #1
 281:Core/Src/main.c ****    if (flag_digit_1){
 961              		.loc 1 281 16 view .LVU240
 962 001a 1970     		strb	r1, [r3]
 282:Core/Src/main.c **** 	   seven_segment_driver(seven_segment_table[digit1],flag_digit_1);
 963              		.loc 1 282 4 is_stmt 1 view .LVU241
 282:Core/Src/main.c **** 	   seven_segment_driver(seven_segment_table[digit1],flag_digit_1);
 964              		.loc 1 282 7 is_stmt 0 view .LVU242
 965 001c 31B1     		cbz	r1, .L83
 283:Core/Src/main.c **** 
 966              		.loc 1 283 5 is_stmt 1 view .LVU243
 967 001e 094B     		ldr	r3, .L85+8
 968 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 969 0022 094A     		ldr	r2, .L85+12
 970 0024 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 971 0026 FFF7FEFF 		bl	seven_segment_driver
 972              	.LVL33:
ARM GAS  /tmp/cclmtcKv.s 			page 31


 973              	.L81:
 291:Core/Src/main.c **** 
 974              		.loc 1 291 1 is_stmt 0 view .LVU244
 975 002a 08BD     		pop	{r3, pc}
 976              	.L83:
 287:Core/Src/main.c **** 
 977              		.loc 1 287 5 is_stmt 1 view .LVU245
 978 002c 074B     		ldr	r3, .L85+16
 979 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0030 054A     		ldr	r2, .L85+12
 981 0032 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 982 0034 FFF7FEFF 		bl	seven_segment_driver
 983              	.LVL34:
 984 0038 F7E7     		b	.L81
 985              	.L86:
 986 003a 00BF     		.align	2
 987              	.L85:
 988 003c 00000000 		.word	.LANCHOR27
 989 0040 00000000 		.word	.LANCHOR28
 990 0044 00000000 		.word	.LANCHOR8
 991 0048 00000000 		.word	.LANCHOR29
 992 004c 00000000 		.word	.LANCHOR6
 993              		.cfi_endproc
 994              	.LFE132:
 996              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 997              		.align	1
 998              		.global	HAL_TIM_PeriodElapsedCallback
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv4-sp-d16
 1004              	HAL_TIM_PeriodElapsedCallback:
 1005              	.LVL35:
 1006              	.LFB141:
 615:Core/Src/main.c **** 
 616:Core/Src/main.c **** 
 617:Core/Src/main.c **** 
 618:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 619:Core/Src/main.c **** {
 1007              		.loc 1 619 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011              		@ link register save eliminated.
 620:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 621:Core/Src/main.c ****   if (htim == &htim3)
 1012              		.loc 1 621 3 view .LVU247
 1013              		.loc 1 621 6 is_stmt 0 view .LVU248
 1014 0000 074B     		ldr	r3, .L92
 1015 0002 9842     		cmp	r0, r3
 1016 0004 03D0     		beq	.L90
 622:Core/Src/main.c ****   {
 623:Core/Src/main.c **** 	  f_timer_100us=1;
 624:Core/Src/main.c ****   }
 625:Core/Src/main.c ****   else if(htim == &htim4)
 1017              		.loc 1 625 8 is_stmt 1 view .LVU249
 1018              		.loc 1 625 10 is_stmt 0 view .LVU250
ARM GAS  /tmp/cclmtcKv.s 			page 32


 1019 0006 074B     		ldr	r3, .L92+4
 1020 0008 9842     		cmp	r0, r3
 1021 000a 04D0     		beq	.L91
 1022              	.L87:
 626:Core/Src/main.c ****   {
 627:Core/Src/main.c **** 	  f_timer_10ms=1;
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   }
 630:Core/Src/main.c **** }
 1023              		.loc 1 630 1 view .LVU251
 1024 000c 7047     		bx	lr
 1025              	.L90:
 623:Core/Src/main.c ****   }
 1026              		.loc 1 623 4 is_stmt 1 view .LVU252
 623:Core/Src/main.c ****   }
 1027              		.loc 1 623 17 is_stmt 0 view .LVU253
 1028 000e 064B     		ldr	r3, .L92+8
 1029 0010 0122     		movs	r2, #1
 1030 0012 1A70     		strb	r2, [r3]
 1031 0014 7047     		bx	lr
 1032              	.L91:
 627:Core/Src/main.c **** 
 1033              		.loc 1 627 4 is_stmt 1 view .LVU254
 627:Core/Src/main.c **** 
 1034              		.loc 1 627 16 is_stmt 0 view .LVU255
 1035 0016 054B     		ldr	r3, .L92+12
 1036 0018 0122     		movs	r2, #1
 1037 001a 1A70     		strb	r2, [r3]
 1038              		.loc 1 630 1 view .LVU256
 1039 001c F6E7     		b	.L87
 1040              	.L93:
 1041 001e 00BF     		.align	2
 1042              	.L92:
 1043 0020 00000000 		.word	htim3
 1044 0024 00000000 		.word	htim4
 1045 0028 00000000 		.word	.LANCHOR27
 1046 002c 00000000 		.word	.LANCHOR9
 1047              		.cfi_endproc
 1048              	.LFE141:
 1050              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1051              		.align	1
 1052              		.global	HAL_UART_RxCpltCallback
 1053              		.syntax unified
 1054              		.thumb
 1055              		.thumb_func
 1056              		.fpu fpv4-sp-d16
 1058              	HAL_UART_RxCpltCallback:
 1059              	.LVL36:
 1060              	.LFB142:
 631:Core/Src/main.c **** 
 632:Core/Src/main.c **** 
 633:Core/Src/main.c **** 
 634:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 635:Core/Src/main.c **** {
 1061              		.loc 1 635 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cclmtcKv.s 			page 33


 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065              		.loc 1 635 1 is_stmt 0 view .LVU258
 1066 0000 08B5     		push	{r3, lr}
 1067              	.LCFI7:
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 3, -8
 1070              		.cfi_offset 14, -4
 636:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 637:Core/Src/main.c **** 
 638:Core/Src/main.c **** 	 if(huart == &huart5)
 1071              		.loc 1 638 3 is_stmt 1 view .LVU259
 1072              		.loc 1 638 5 is_stmt 0 view .LVU260
 1073 0002 114B     		ldr	r3, .L104
 1074 0004 8342     		cmp	r3, r0
 1075 0006 00D0     		beq	.L100
 1076              	.LVL37:
 1077              	.L94:
 639:Core/Src/main.c **** 	{
 640:Core/Src/main.c **** 		if (rx_temp==0x2)
 641:Core/Src/main.c **** 		{
 642:Core/Src/main.c **** 				transmission_f=1;
 643:Core/Src/main.c **** 		}
 644:Core/Src/main.c **** 		else if (rx_temp==0x3)
 645:Core/Src/main.c **** 		{
 646:Core/Src/main.c **** 				transmission_f=0;
 647:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 648:Core/Src/main.c **** 		}
 649:Core/Src/main.c **** 		else{
 650:Core/Src/main.c **** 
 651:Core/Src/main.c **** 			if (transmission_f)
 652:Core/Src/main.c **** 			{
 653:Core/Src/main.c **** 				 buffer_push(&rx2_buffer,rx_temp);
 654:Core/Src/main.c **** 			}
 655:Core/Src/main.c **** 		}
 656:Core/Src/main.c **** 
 657:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart5, &rx_temp, 1);
 658:Core/Src/main.c ****     }
 659:Core/Src/main.c ****   
 660:Core/Src/main.c **** 
 661:Core/Src/main.c **** }
 1078              		.loc 1 661 1 view .LVU261
 1079 0008 08BD     		pop	{r3, pc}
 1080              	.LVL38:
 1081              	.L100:
 640:Core/Src/main.c **** 		{
 1082              		.loc 1 640 3 is_stmt 1 view .LVU262
 640:Core/Src/main.c **** 		{
 1083              		.loc 1 640 14 is_stmt 0 view .LVU263
 1084 000a 104B     		ldr	r3, .L104+4
 1085 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 640:Core/Src/main.c **** 		{
 1086              		.loc 1 640 6 view .LVU264
 1087 000e 0229     		cmp	r1, #2
 1088 0010 0AD0     		beq	.L101
 644:Core/Src/main.c **** 		{
 1089              		.loc 1 644 8 is_stmt 1 view .LVU265
 644:Core/Src/main.c **** 		{
ARM GAS  /tmp/cclmtcKv.s 			page 34


 1090              		.loc 1 644 11 is_stmt 0 view .LVU266
 1091 0012 0329     		cmp	r1, #3
 1092 0014 0CD0     		beq	.L102
 651:Core/Src/main.c **** 			{
 1093              		.loc 1 651 4 is_stmt 1 view .LVU267
 651:Core/Src/main.c **** 			{
 1094              		.loc 1 651 8 is_stmt 0 view .LVU268
 1095 0016 0E4B     		ldr	r3, .L104+8
 1096 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 651:Core/Src/main.c **** 			{
 1097              		.loc 1 651 7 view .LVU269
 1098 001a 8BB9     		cbnz	r3, .L103
 1099              	.LVL39:
 1100              	.L97:
 657:Core/Src/main.c ****     }
 1101              		.loc 1 657 3 is_stmt 1 view .LVU270
 1102 001c 0122     		movs	r2, #1
 1103 001e 0B49     		ldr	r1, .L104+4
 1104 0020 0948     		ldr	r0, .L104
 1105 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1106              	.LVL40:
 1107              		.loc 1 661 1 is_stmt 0 view .LVU271
 1108 0026 EFE7     		b	.L94
 1109              	.LVL41:
 1110              	.L101:
 642:Core/Src/main.c **** 		}
 1111              		.loc 1 642 5 is_stmt 1 view .LVU272
 642:Core/Src/main.c **** 		}
 1112              		.loc 1 642 19 is_stmt 0 view .LVU273
 1113 0028 094B     		ldr	r3, .L104+8
 1114 002a 0122     		movs	r2, #1
 1115 002c 1A70     		strb	r2, [r3]
 1116 002e F5E7     		b	.L97
 1117              	.L102:
 646:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 1118              		.loc 1 646 5 is_stmt 1 view .LVU274
 646:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 1119              		.loc 1 646 19 is_stmt 0 view .LVU275
 1120 0030 074B     		ldr	r3, .L104+8
 1121 0032 0022     		movs	r2, #0
 1122 0034 1A70     		strb	r2, [r3]
 647:Core/Src/main.c **** 		}
 1123              		.loc 1 647 5 is_stmt 1 view .LVU276
 1124 0036 0721     		movs	r1, #7
 1125 0038 0648     		ldr	r0, .L104+12
 1126              	.LVL42:
 647:Core/Src/main.c **** 		}
 1127              		.loc 1 647 5 is_stmt 0 view .LVU277
 1128 003a FFF7FEFF 		bl	buffer_push
 1129              	.LVL43:
 1130 003e EDE7     		b	.L97
 1131              	.LVL44:
 1132              	.L103:
 653:Core/Src/main.c **** 			}
 1133              		.loc 1 653 6 is_stmt 1 view .LVU278
 1134 0040 0548     		ldr	r0, .L104+16
 1135              	.LVL45:
ARM GAS  /tmp/cclmtcKv.s 			page 35


 653:Core/Src/main.c **** 			}
 1136              		.loc 1 653 6 is_stmt 0 view .LVU279
 1137 0042 FFF7FEFF 		bl	buffer_push
 1138              	.LVL46:
 1139 0046 E9E7     		b	.L97
 1140              	.L105:
 1141              		.align	2
 1142              	.L104:
 1143 0048 00000000 		.word	huart5
 1144 004c 00000000 		.word	.LANCHOR30
 1145 0050 00000000 		.word	.LANCHOR16
 1146 0054 00000000 		.word	.LANCHOR15
 1147 0058 00000000 		.word	.LANCHOR18
 1148              		.cfi_endproc
 1149              	.LFE142:
 1151              		.section	.text.Error_Handler,"ax",%progbits
 1152              		.align	1
 1153              		.global	Error_Handler
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1157              		.fpu fpv4-sp-d16
 1159              	Error_Handler:
 1160              	.LFB143:
 662:Core/Src/main.c **** /* USER CODE END 4 */
 663:Core/Src/main.c **** 
 664:Core/Src/main.c **** /**
 665:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 666:Core/Src/main.c ****   * @retval None
 667:Core/Src/main.c ****   */
 668:Core/Src/main.c **** void Error_Handler(void)
 669:Core/Src/main.c **** {
 1161              		.loc 1 669 1 is_stmt 1 view -0
 1162              		.cfi_startproc
 1163              		@ Volatile: function does not return.
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              		@ link register save eliminated.
 670:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 671:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 672:Core/Src/main.c ****   __disable_irq();
 1167              		.loc 1 672 3 view .LVU281
 1168              	.LBB4:
 1169              	.LBI4:
 1170              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  /tmp/cclmtcKv.s 			page 36


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cclmtcKv.s 			page 37


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /tmp/cclmtcKv.s 			page 38


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1171              		.loc 2 140 27 view .LVU282
 1172              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1173              		.loc 2 142 3 view .LVU283
 1174              		.syntax unified
 1175              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1176 0000 72B6     		cpsid i
 1177              	@ 0 "" 2
 1178              		.thumb
 1179              		.syntax unified
 1180              	.L107:
 1181              	.LBE5:
 1182              	.LBE4:
 673:Core/Src/main.c ****   while (1)
 1183              		.loc 1 673 3 discriminator 1 view .LVU284
 674:Core/Src/main.c ****   {
 675:Core/Src/main.c ****   }
 1184              		.loc 1 675 3 discriminator 1 view .LVU285
 673:Core/Src/main.c ****   while (1)
 1185              		.loc 1 673 9 discriminator 1 view .LVU286
 1186 0002 FEE7     		b	.L107
 1187              		.cfi_endproc
 1188              	.LFE143:
 1190              		.section	.text.SystemClock_Config,"ax",%progbits
 1191              		.align	1
 1192              		.global	SystemClock_Config
 1193              		.syntax unified
 1194              		.thumb
 1195              		.thumb_func
 1196              		.fpu fpv4-sp-d16
 1198              	SystemClock_Config:
 1199              	.LFB131:
 232:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1200              		.loc 1 232 1 view -0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 80
 1203              		@ frame_needed = 0, uses_anonymous_args = 0
 1204 0000 00B5     		push	{lr}
 1205              	.LCFI8:
 1206              		.cfi_def_cfa_offset 4
 1207              		.cfi_offset 14, -4
 1208 0002 95B0     		sub	sp, sp, #84
ARM GAS  /tmp/cclmtcKv.s 			page 39


 1209              	.LCFI9:
 1210              		.cfi_def_cfa_offset 88
 233:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1211              		.loc 1 233 3 view .LVU288
 233:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1212              		.loc 1 233 22 is_stmt 0 view .LVU289
 1213 0004 3022     		movs	r2, #48
 1214 0006 0021     		movs	r1, #0
 1215 0008 08A8     		add	r0, sp, #32
 1216 000a FFF7FEFF 		bl	memset
 1217              	.LVL47:
 234:Core/Src/main.c **** 
 1218              		.loc 1 234 3 is_stmt 1 view .LVU290
 234:Core/Src/main.c **** 
 1219              		.loc 1 234 22 is_stmt 0 view .LVU291
 1220 000e 0023     		movs	r3, #0
 1221 0010 0393     		str	r3, [sp, #12]
 1222 0012 0493     		str	r3, [sp, #16]
 1223 0014 0593     		str	r3, [sp, #20]
 1224 0016 0693     		str	r3, [sp, #24]
 1225 0018 0793     		str	r3, [sp, #28]
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1226              		.loc 1 238 3 is_stmt 1 view .LVU292
 1227              	.LBB6:
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1228              		.loc 1 238 3 view .LVU293
 1229 001a 0193     		str	r3, [sp, #4]
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1230              		.loc 1 238 3 view .LVU294
 1231 001c 204A     		ldr	r2, .L114
 1232 001e 116C     		ldr	r1, [r2, #64]
 1233 0020 41F08051 		orr	r1, r1, #268435456
 1234 0024 1164     		str	r1, [r2, #64]
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1235              		.loc 1 238 3 view .LVU295
 1236 0026 126C     		ldr	r2, [r2, #64]
 1237 0028 02F08052 		and	r2, r2, #268435456
 1238 002c 0192     		str	r2, [sp, #4]
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1239              		.loc 1 238 3 view .LVU296
 1240 002e 019A     		ldr	r2, [sp, #4]
 1241              	.LBE6:
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1242              		.loc 1 238 3 view .LVU297
 239:Core/Src/main.c **** 
 1243              		.loc 1 239 3 view .LVU298
 1244              	.LBB7:
 239:Core/Src/main.c **** 
 1245              		.loc 1 239 3 view .LVU299
 1246 0030 0293     		str	r3, [sp, #8]
 239:Core/Src/main.c **** 
 1247              		.loc 1 239 3 view .LVU300
 1248 0032 1C4A     		ldr	r2, .L114+4
 1249 0034 1368     		ldr	r3, [r2]
 1250 0036 23F44043 		bic	r3, r3, #49152
 1251 003a 43F48043 		orr	r3, r3, #16384
 1252 003e 1360     		str	r3, [r2]
ARM GAS  /tmp/cclmtcKv.s 			page 40


 239:Core/Src/main.c **** 
 1253              		.loc 1 239 3 view .LVU301
 1254 0040 1368     		ldr	r3, [r2]
 1255 0042 03F44043 		and	r3, r3, #49152
 1256 0046 0293     		str	r3, [sp, #8]
 239:Core/Src/main.c **** 
 1257              		.loc 1 239 3 view .LVU302
 1258 0048 029B     		ldr	r3, [sp, #8]
 1259              	.LBE7:
 239:Core/Src/main.c **** 
 1260              		.loc 1 239 3 view .LVU303
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1261              		.loc 1 244 3 view .LVU304
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1262              		.loc 1 244 36 is_stmt 0 view .LVU305
 1263 004a 0123     		movs	r3, #1
 1264 004c 0893     		str	r3, [sp, #32]
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1265              		.loc 1 245 3 is_stmt 1 view .LVU306
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1266              		.loc 1 245 30 is_stmt 0 view .LVU307
 1267 004e 4FF48033 		mov	r3, #65536
 1268 0052 0993     		str	r3, [sp, #36]
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1269              		.loc 1 246 3 is_stmt 1 view .LVU308
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1270              		.loc 1 246 34 is_stmt 0 view .LVU309
 1271 0054 0223     		movs	r3, #2
 1272 0056 0E93     		str	r3, [sp, #56]
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1273              		.loc 1 247 3 is_stmt 1 view .LVU310
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1274              		.loc 1 247 35 is_stmt 0 view .LVU311
 1275 0058 4FF48002 		mov	r2, #4194304
 1276 005c 0F92     		str	r2, [sp, #60]
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1277              		.loc 1 248 3 is_stmt 1 view .LVU312
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1278              		.loc 1 248 30 is_stmt 0 view .LVU313
 1279 005e 0422     		movs	r2, #4
 1280 0060 1092     		str	r2, [sp, #64]
 249:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1281              		.loc 1 249 3 is_stmt 1 view .LVU314
 249:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1282              		.loc 1 249 30 is_stmt 0 view .LVU315
 1283 0062 6022     		movs	r2, #96
 1284 0064 1192     		str	r2, [sp, #68]
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1285              		.loc 1 250 3 is_stmt 1 view .LVU316
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1286              		.loc 1 250 30 is_stmt 0 view .LVU317
 1287 0066 1293     		str	r3, [sp, #72]
 251:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1288              		.loc 1 251 3 is_stmt 1 view .LVU318
 251:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1289              		.loc 1 251 30 is_stmt 0 view .LVU319
 1290 0068 0323     		movs	r3, #3
ARM GAS  /tmp/cclmtcKv.s 			page 41


 1291 006a 1393     		str	r3, [sp, #76]
 252:Core/Src/main.c ****   {
 1292              		.loc 1 252 3 is_stmt 1 view .LVU320
 252:Core/Src/main.c ****   {
 1293              		.loc 1 252 7 is_stmt 0 view .LVU321
 1294 006c 08A8     		add	r0, sp, #32
 1295 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1296              	.LVL48:
 252:Core/Src/main.c ****   {
 1297              		.loc 1 252 6 view .LVU322
 1298 0072 88B9     		cbnz	r0, .L112
 259:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1299              		.loc 1 259 3 is_stmt 1 view .LVU323
 259:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1300              		.loc 1 259 31 is_stmt 0 view .LVU324
 1301 0074 0F23     		movs	r3, #15
 1302 0076 0393     		str	r3, [sp, #12]
 261:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1303              		.loc 1 261 3 is_stmt 1 view .LVU325
 261:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1304              		.loc 1 261 34 is_stmt 0 view .LVU326
 1305 0078 0223     		movs	r3, #2
 1306 007a 0493     		str	r3, [sp, #16]
 262:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1307              		.loc 1 262 3 is_stmt 1 view .LVU327
 262:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1308              		.loc 1 262 35 is_stmt 0 view .LVU328
 1309 007c 8023     		movs	r3, #128
 1310 007e 0593     		str	r3, [sp, #20]
 263:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1311              		.loc 1 263 3 is_stmt 1 view .LVU329
 263:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1312              		.loc 1 263 36 is_stmt 0 view .LVU330
 1313 0080 4FF48053 		mov	r3, #4096
 1314 0084 0693     		str	r3, [sp, #24]
 264:Core/Src/main.c **** 
 1315              		.loc 1 264 3 is_stmt 1 view .LVU331
 264:Core/Src/main.c **** 
 1316              		.loc 1 264 36 is_stmt 0 view .LVU332
 1317 0086 0793     		str	r3, [sp, #28]
 266:Core/Src/main.c ****   {
 1318              		.loc 1 266 3 is_stmt 1 view .LVU333
 266:Core/Src/main.c ****   {
 1319              		.loc 1 266 7 is_stmt 0 view .LVU334
 1320 0088 0121     		movs	r1, #1
 1321 008a 03A8     		add	r0, sp, #12
 1322 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1323              	.LVL49:
 266:Core/Src/main.c ****   {
 1324              		.loc 1 266 6 view .LVU335
 1325 0090 20B9     		cbnz	r0, .L113
 270:Core/Src/main.c **** 
 1326              		.loc 1 270 1 view .LVU336
 1327 0092 15B0     		add	sp, sp, #84
 1328              	.LCFI10:
 1329              		.cfi_remember_state
 1330              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cclmtcKv.s 			page 42


 1331              		@ sp needed
 1332 0094 5DF804FB 		ldr	pc, [sp], #4
 1333              	.L112:
 1334              	.LCFI11:
 1335              		.cfi_restore_state
 254:Core/Src/main.c ****   }
 1336              		.loc 1 254 5 is_stmt 1 view .LVU337
 1337 0098 FFF7FEFF 		bl	Error_Handler
 1338              	.LVL50:
 1339              	.L113:
 268:Core/Src/main.c ****   }
 1340              		.loc 1 268 5 view .LVU338
 1341 009c FFF7FEFF 		bl	Error_Handler
 1342              	.LVL51:
 1343              	.L115:
 1344              		.align	2
 1345              	.L114:
 1346 00a0 00380240 		.word	1073887232
 1347 00a4 00700040 		.word	1073770496
 1348              		.cfi_endproc
 1349              	.LFE131:
 1351              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1352              		.align	2
 1353              	.LC0:
 1354 0000 54455452 		.ascii	"TETRADYNE\000"
 1354      4144594E 
 1354      4500
 1355 000a 0000     		.align	2
 1356              	.LC1:
 1357 000c 44323A00 		.ascii	"D2:\000"
 1358              		.align	2
 1359              	.LC2:
 1360 0010 44313A00 		.ascii	"D1:\000"
 1361              		.section	.text.main,"ax",%progbits
 1362              		.align	1
 1363              		.global	main
 1364              		.syntax unified
 1365              		.thumb
 1366              		.thumb_func
 1367              		.fpu fpv4-sp-d16
 1369              	main:
 1370              	.LFB130:
 158:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1371              		.loc 1 158 1 view -0
 1372              		.cfi_startproc
 1373              		@ Volatile: function does not return.
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376 0000 08B5     		push	{r3, lr}
 1377              	.LCFI12:
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 3, -8
 1380              		.cfi_offset 14, -4
 166:Core/Src/main.c **** 
 1381              		.loc 1 166 3 view .LVU340
 1382 0002 FFF7FEFF 		bl	HAL_Init
 1383              	.LVL52:
ARM GAS  /tmp/cclmtcKv.s 			page 43


 173:Core/Src/main.c **** 
 1384              		.loc 1 173 3 view .LVU341
 1385 0006 FFF7FEFF 		bl	SystemClock_Config
 1386              	.LVL53:
 180:Core/Src/main.c ****   MX_TIM3_Init();
 1387              		.loc 1 180 3 view .LVU342
 1388 000a FFF7FEFF 		bl	MX_GPIO_Init
 1389              	.LVL54:
 181:Core/Src/main.c ****   MX_TIM4_Init();
 1390              		.loc 1 181 3 view .LVU343
 1391 000e FFF7FEFF 		bl	MX_TIM3_Init
 1392              	.LVL55:
 182:Core/Src/main.c ****   MX_UART4_Init();
 1393              		.loc 1 182 3 view .LVU344
 1394 0012 FFF7FEFF 		bl	MX_TIM4_Init
 1395              	.LVL56:
 183:Core/Src/main.c ****   MX_UART5_Init();
 1396              		.loc 1 183 3 view .LVU345
 1397 0016 FFF7FEFF 		bl	MX_UART4_Init
 1398              	.LVL57:
 184:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1399              		.loc 1 184 3 view .LVU346
 1400 001a FFF7FEFF 		bl	MX_UART5_Init
 1401              	.LVL58:
 186:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 1402              		.loc 1 186 3 view .LVU347
 1403 001e 2448     		ldr	r0, .L119
 1404 0020 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1405              	.LVL59:
 187:Core/Src/main.c **** 
 1406              		.loc 1 187 3 view .LVU348
 1407 0024 2348     		ldr	r0, .L119+4
 1408 0026 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1409              	.LVL60:
 190:Core/Src/main.c ****   HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 1410              		.loc 1 190 3 view .LVU349
 1411 002a 0022     		movs	r2, #0
 1412 002c 4FF48051 		mov	r1, #4096
 1413 0030 2148     		ldr	r0, .L119+8
 1414 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1415              	.LVL61:
 191:Core/Src/main.c **** 
 1416              		.loc 1 191 3 view .LVU350
 1417 0036 0022     		movs	r2, #0
 1418 0038 0221     		movs	r1, #2
 1419 003a 2048     		ldr	r0, .L119+12
 1420 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1421              	.LVL62:
 193:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1422              		.loc 1 193 3 view .LVU351
 193:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1423              		.loc 1 193 59 is_stmt 0 view .LVU352
 1424 0040 1F4B     		ldr	r3, .L119+16
 1425 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 193:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1426              		.loc 1 193 3 view .LVU353
 1427 0044 1344     		add	r3, r3, r2
ARM GAS  /tmp/cclmtcKv.s 			page 44


 1428 0046 0122     		movs	r2, #1
 1429 0048 991C     		adds	r1, r3, #2
 1430 004a 1E48     		ldr	r0, .L119+20
 1431 004c FFF7FEFF 		bl	HAL_UART_Receive_IT
 1432              	.LVL63:
 194:Core/Src/main.c **** 
 1433              		.loc 1 194 3 is_stmt 1 view .LVU354
 194:Core/Src/main.c **** 
 1434              		.loc 1 194 59 is_stmt 0 view .LVU355
 1435 0050 1D4B     		ldr	r3, .L119+24
 1436 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 194:Core/Src/main.c **** 
 1437              		.loc 1 194 3 view .LVU356
 1438 0054 1344     		add	r3, r3, r2
 1439 0056 0122     		movs	r2, #1
 1440 0058 991C     		adds	r1, r3, #2
 1441 005a 1C48     		ldr	r0, .L119+28
 1442 005c FFF7FEFF 		bl	HAL_UART_Receive_IT
 1443              	.LVL64:
 196:Core/Src/main.c **** 
 1444              		.loc 1 196 3 is_stmt 1 view .LVU357
 196:Core/Src/main.c **** 
 1445              		.loc 1 196 5 is_stmt 0 view .LVU358
 1446 0060 0124     		movs	r4, #1
 1447 0062 1B4B     		ldr	r3, .L119+32
 1448 0064 1C70     		strb	r4, [r3]
 199:Core/Src/main.c ****   lcd_clear();
 1449              		.loc 1 199 3 is_stmt 1 view .LVU359
 1450 0066 FFF7FEFF 		bl	lcd_init
 1451              	.LVL65:
 200:Core/Src/main.c ****   lcd_set_pos(0, 3);
 1452              		.loc 1 200 3 view .LVU360
 1453 006a FFF7FEFF 		bl	lcd_clear
 1454              	.LVL66:
 201:Core/Src/main.c ****   lcd_write_string("TETRADYNE");
 1455              		.loc 1 201 3 view .LVU361
 1456 006e 0321     		movs	r1, #3
 1457 0070 0020     		movs	r0, #0
 1458 0072 FFF7FEFF 		bl	lcd_set_pos
 1459              	.LVL67:
 202:Core/Src/main.c ****   lcd_set_pos(1, 0);
 1460              		.loc 1 202 3 view .LVU362
 1461 0076 1748     		ldr	r0, .L119+36
 1462 0078 FFF7FEFF 		bl	lcd_write_string
 1463              	.LVL68:
 203:Core/Src/main.c ****   lcd_write_string("D2:");
 1464              		.loc 1 203 3 view .LVU363
 1465 007c 0021     		movs	r1, #0
 1466 007e 2046     		mov	r0, r4
 1467 0080 FFF7FEFF 		bl	lcd_set_pos
 1468              	.LVL69:
 204:Core/Src/main.c ****   lcd_set_pos(1, 0xC);
 1469              		.loc 1 204 3 view .LVU364
 1470 0084 1448     		ldr	r0, .L119+40
 1471 0086 FFF7FEFF 		bl	lcd_write_string
 1472              	.LVL70:
 205:Core/Src/main.c ****   lcd_write_string("D1:");
ARM GAS  /tmp/cclmtcKv.s 			page 45


 1473              		.loc 1 205 3 view .LVU365
 1474 008a 0C21     		movs	r1, #12
 1475 008c 2046     		mov	r0, r4
 1476 008e FFF7FEFF 		bl	lcd_set_pos
 1477              	.LVL71:
 206:Core/Src/main.c ****   /* USER CODE END 2 */
 1478              		.loc 1 206 3 view .LVU366
 1479 0092 1248     		ldr	r0, .L119+44
 1480 0094 FFF7FEFF 		bl	lcd_write_string
 1481              	.LVL72:
 1482              	.L117:
 211:Core/Src/main.c ****   {
 1483              		.loc 1 211 3 discriminator 1 view .LVU367
 217:Core/Src/main.c **** 	  	     segment_display_task();
 1484              		.loc 1 217 9 discriminator 1 view .LVU368
 1485 0098 FFF7FEFF 		bl	task_timer
 1486              	.LVL73:
 218:Core/Src/main.c **** 	  	     lcd_display_task();
 1487              		.loc 1 218 10 discriminator 1 view .LVU369
 1488 009c FFF7FEFF 		bl	segment_display_task
 1489              	.LVL74:
 219:Core/Src/main.c **** 	  	     key_read_task();
 1490              		.loc 1 219 10 discriminator 1 view .LVU370
 1491 00a0 FFF7FEFF 		bl	lcd_display_task
 1492              	.LVL75:
 220:Core/Src/main.c **** 
 1493              		.loc 1 220 10 discriminator 1 view .LVU371
 1494 00a4 FFF7FEFF 		bl	key_read_task
 1495              	.LVL76:
 222:Core/Src/main.c ****   }
 1496              		.loc 1 222 10 discriminator 1 view .LVU372
 1497 00a8 FFF7FEFF 		bl	main_task
 1498              	.LVL77:
 211:Core/Src/main.c ****   {
 1499              		.loc 1 211 9 discriminator 1 view .LVU373
 1500 00ac F4E7     		b	.L117
 1501              	.L120:
 1502 00ae 00BF     		.align	2
 1503              	.L119:
 1504 00b0 00000000 		.word	htim3
 1505 00b4 00000000 		.word	htim4
 1506 00b8 00000240 		.word	1073872896
 1507 00bc 000C0240 		.word	1073875968
 1508 00c0 00000000 		.word	.LANCHOR31
 1509 00c4 00000000 		.word	huart4
 1510 00c8 00000000 		.word	.LANCHOR18
 1511 00cc 00000000 		.word	huart5
 1512 00d0 00000000 		.word	.LANCHOR19
 1513 00d4 00000000 		.word	.LC0
 1514 00d8 0C000000 		.word	.LC1
 1515 00dc 10000000 		.word	.LC2
 1516              		.cfi_endproc
 1517              	.LFE130:
 1519              		.global	RX_msg
 1520              		.global	TX_msg
 1521              		.global	ID
 1522              		.global	event_buffer
ARM GAS  /tmp/cclmtcKv.s 			page 46


 1523              		.global	rx2_buffer
 1524              		.global	rx1_buffer
 1525              		.global	stop_cmd
 1526              		.global	start_cmd
 1527              		.global	transmission_f
 1528              		.global	rx_temp
 1529              		.global	digit_table
 1530              		.global	seven_segment_table
 1531              		.global	lcd_process
 1532              		.global	data
 1533              		.global	cmd
 1534              		.global	digit2_update
 1535              		.global	digit1_update
 1536              		.global	lcd_digit1_f
 1537              		.global	is_EN
 1538              		.global	digit2
 1539              		.global	digit1
 1540              		.global	flag_state_tx
 1541              		.global	flag_state_tx1
 1542              		.global	uart_tx2_flag
 1543              		.global	uart_tx1_flag
 1544              		.global	lcd_disp_lock
 1545              		.global	event
 1546              		.global	state
 1547              		.global	key2_data
 1548              		.global	key1_data
 1549              		.global	TX2_delay_val
 1550              		.global	d_timer_TX2
 1551              		.global	TX1_delay_val
 1552              		.global	d_timer_TX1
 1553              		.global	d_timer_20ms
 1554              		.global	d_timer_30ms
 1555              		.global	tx1_buffer
 1556              		.global	tx2_buffer
 1557              		.global	flag_digit_1
 1558              		.global	p_tx2
 1559              		.global	p_tx1
 1560              		.global	i
 1561              		.global	f_timer_30ms
 1562              		.global	f_timer_20ms
 1563              		.global	f_timer_10ms
 1564              		.global	f_timer_100us
 1565              		.global	f_seg_timer_500ms
 1566              		.global	f_timer_TX
 1567              		.section	.bss.ID,"aw",%nobits
 1568              		.set	.LANCHOR19,. + 0
 1571              	ID:
 1572 0000 00       		.space	1
 1573              		.section	.bss.RX_msg,"aw",%nobits
 1574              		.align	2
 1575              		.set	.LANCHOR17,. + 0
 1578              	RX_msg:
 1579 0000 00000000 		.space	4
 1580              		.section	.bss.TX_msg,"aw",%nobits
 1581              		.align	2
 1582              		.set	.LANCHOR21,. + 0
 1585              	TX_msg:
ARM GAS  /tmp/cclmtcKv.s 			page 47


 1586 0000 00000000 		.space	4
 1587              		.section	.bss.cmd,"aw",%nobits
 1588              		.set	.LANCHOR4,. + 0
 1591              	cmd:
 1592 0000 00       		.space	1
 1593              		.section	.bss.d_timer_20ms,"aw",%nobits
 1594              		.set	.LANCHOR12,. + 0
 1597              	d_timer_20ms:
 1598 0000 00       		.space	1
 1599              		.section	.bss.d_timer_30ms,"aw",%nobits
 1600              		.set	.LANCHOR10,. + 0
 1603              	d_timer_30ms:
 1604 0000 00       		.space	1
 1605              		.section	.bss.d_timer_TX1,"aw",%nobits
 1608              	d_timer_TX1:
 1609 0000 00       		.space	1
 1610              		.section	.bss.d_timer_TX2,"aw",%nobits
 1613              	d_timer_TX2:
 1614 0000 00       		.space	1
 1615              		.section	.bss.data,"aw",%nobits
 1616              		.set	.LANCHOR7,. + 0
 1619              	data:
 1620 0000 00       		.space	1
 1621              		.section	.bss.digit1,"aw",%nobits
 1622              		.set	.LANCHOR8,. + 0
 1625              	digit1:
 1626 0000 00       		.space	1
 1627              		.section	.bss.digit1_update,"aw",%nobits
 1630              	digit1_update:
 1631 0000 00       		.space	1
 1632              		.section	.bss.digit2,"aw",%nobits
 1633              		.set	.LANCHOR6,. + 0
 1636              	digit2:
 1637 0000 00       		.space	1
 1638              		.section	.bss.digit2_update,"aw",%nobits
 1641              	digit2_update:
 1642 0000 00       		.space	1
 1643              		.section	.bss.event,"aw",%nobits
 1644              		.set	.LANCHOR23,. + 0
 1647              	event:
 1648 0000 00       		.space	1
 1649              		.section	.bss.event_buffer,"aw",%nobits
 1650              		.align	2
 1651              		.set	.LANCHOR15,. + 0
 1654              	event_buffer:
 1655 0000 00000000 		.space	66
 1655      00000000 
 1655      00000000 
 1655      00000000 
 1655      00000000 
 1656              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 1659              	f_seg_timer_500ms:
 1660 0000 00       		.space	1
 1661              		.section	.bss.f_timer_100us,"aw",%nobits
 1662              		.set	.LANCHOR27,. + 0
 1665              	f_timer_100us:
 1666 0000 00       		.space	1
ARM GAS  /tmp/cclmtcKv.s 			page 48


 1667              		.section	.bss.f_timer_10ms,"aw",%nobits
 1668              		.set	.LANCHOR9,. + 0
 1671              	f_timer_10ms:
 1672 0000 00       		.space	1
 1673              		.section	.bss.f_timer_20ms,"aw",%nobits
 1674              		.set	.LANCHOR0,. + 0
 1677              	f_timer_20ms:
 1678 0000 00       		.space	1
 1679              		.section	.bss.f_timer_30ms,"aw",%nobits
 1680              		.set	.LANCHOR11,. + 0
 1683              	f_timer_30ms:
 1684 0000 00       		.space	1
 1685              		.section	.bss.f_timer_TX,"aw",%nobits
 1688              	f_timer_TX:
 1689 0000 00       		.space	1
 1690              		.section	.bss.flag_state_tx,"aw",%nobits
 1693              	flag_state_tx:
 1694 0000 00       		.space	1
 1695              		.section	.bss.flag_state_tx1,"aw",%nobits
 1698              	flag_state_tx1:
 1699 0000 00       		.space	1
 1700              		.section	.bss.i,"aw",%nobits
 1703              	i:
 1704 0000 00       		.space	1
 1705              		.section	.bss.is_EN,"aw",%nobits
 1706              		.set	.LANCHOR1,. + 0
 1709              	is_EN:
 1710 0000 00       		.space	1
 1711              		.section	.bss.key1_data,"aw",%nobits
 1712              		.set	.LANCHOR13,. + 0
 1715              	key1_data:
 1716 0000 00       		.space	1
 1717              		.section	.bss.key2_data,"aw",%nobits
 1718              		.set	.LANCHOR14,. + 0
 1721              	key2_data:
 1722 0000 00       		.space	1
 1723              		.section	.bss.lcd_digit1_f,"aw",%nobits
 1724              		.set	.LANCHOR3,. + 0
 1727              	lcd_digit1_f:
 1728 0000 00       		.space	1
 1729              		.section	.bss.lcd_disp_lock,"aw",%nobits
 1732              	lcd_disp_lock:
 1733 0000 00       		.space	1
 1734              		.section	.bss.lcd_process,"aw",%nobits
 1735              		.set	.LANCHOR2,. + 0
 1738              	lcd_process:
 1739 0000 00       		.space	1
 1740              		.section	.bss.p_tx1,"aw",%nobits
 1743              	p_tx1:
 1744 0000 00       		.space	1
 1745              		.section	.bss.p_tx2,"aw",%nobits
 1746              		.set	.LANCHOR25,. + 0
 1749              	p_tx2:
 1750 0000 00       		.space	1
 1751              		.section	.bss.rx1_buffer,"aw",%nobits
 1752              		.align	2
 1753              		.set	.LANCHOR31,. + 0
ARM GAS  /tmp/cclmtcKv.s 			page 49


 1756              	rx1_buffer:
 1757 0000 00000000 		.space	66
 1757      00000000 
 1757      00000000 
 1757      00000000 
 1757      00000000 
 1758              		.section	.bss.rx2_buffer,"aw",%nobits
 1759              		.align	2
 1760              		.set	.LANCHOR18,. + 0
 1763              	rx2_buffer:
 1764 0000 00000000 		.space	66
 1764      00000000 
 1764      00000000 
 1764      00000000 
 1764      00000000 
 1765              		.section	.bss.rx_temp,"aw",%nobits
 1766              		.set	.LANCHOR30,. + 0
 1769              	rx_temp:
 1770 0000 00       		.space	1
 1771              		.section	.bss.state,"aw",%nobits
 1772              		.set	.LANCHOR24,. + 0
 1775              	state:
 1776 0000 00       		.space	1
 1777              		.section	.bss.transmission_f,"aw",%nobits
 1778              		.set	.LANCHOR16,. + 0
 1781              	transmission_f:
 1782 0000 00       		.space	1
 1783              		.section	.bss.uart_tx1_flag,"aw",%nobits
 1786              	uart_tx1_flag:
 1787 0000 00       		.space	1
 1788              		.section	.bss.uart_tx2_flag,"aw",%nobits
 1791              	uart_tx2_flag:
 1792 0000 00       		.space	1
 1793              		.section	.data.TX1_delay_val,"aw"
 1796              	TX1_delay_val:
 1797 0000 FA       		.byte	-6
 1798              		.section	.data.TX2_delay_val,"aw"
 1801              	TX2_delay_val:
 1802 0000 FA       		.byte	-6
 1803              		.section	.data.digit_table,"aw"
 1804              		.align	2
 1805              		.set	.LANCHOR5,. + 0
 1808              	digit_table:
 1809 0000 30313233 		.ascii	"0123456789abcdef-"
 1809      34353637 
 1809      38396162 
 1809      63646566 
 1809      2D
 1810              		.section	.data.flag_digit_1,"aw"
 1811              		.set	.LANCHOR28,. + 0
 1814              	flag_digit_1:
 1815 0000 01       		.byte	1
 1816              		.section	.data.seven_segment_table,"aw"
 1817              		.align	2
 1818              		.set	.LANCHOR29,. + 0
 1821              	seven_segment_table:
 1822 0000 7E306D79 		.ascii	"~0my3[_p\177{}\037\015=oG\001"
ARM GAS  /tmp/cclmtcKv.s 			page 50


 1822      335B5F70 
 1822      7F7B7D1F 
 1822      0D3D6F47 
 1822      01
 1823              		.section	.data.start_cmd,"aw"
 1824              		.set	.LANCHOR20,. + 0
 1827              	start_cmd:
 1828 0000 02       		.byte	2
 1829              		.section	.data.stop_cmd,"aw"
 1830              		.set	.LANCHOR22,. + 0
 1833              	stop_cmd:
 1834 0000 03       		.byte	3
 1835              		.section	.data.tx1_buffer,"aw"
 1836              		.align	2
 1839              	tx1_buffer:
 1840 0000 61626364 		.ascii	"abcdef"
 1840      6566
 1841              		.section	.data.tx2_buffer,"aw"
 1842              		.align	2
 1843              		.set	.LANCHOR26,. + 0
 1846              	tx2_buffer:
 1847 0000 31323334 		.ascii	"123456789\000"
 1847      35363738 
 1847      3900
 1848              		.text
 1849              	.Letext0:
 1850              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1851              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1852              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1853              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1854              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1855              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1856              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1857              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1858              		.file 11 "Core/Inc/tim.h"
 1859              		.file 12 "Core/Inc/usart.h"
 1860              		.file 13 "Core/Inc/buffer.h"
 1861              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1862              		.file 15 "Core/Inc/message.h"
 1863              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1864              		.file 17 "Core/Inc/gpio.h"
 1865              		.file 18 "Core/Inc/lcd16x2.h"
 1866              		.file 19 "<built-in>"
ARM GAS  /tmp/cclmtcKv.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cclmtcKv.s:18     .text.m_send_to_lcd:0000000000000000 $t
     /tmp/cclmtcKv.s:26     .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/cclmtcKv.s:122    .text.m_send_to_lcd:0000000000000068 $d
     /tmp/cclmtcKv.s:131    .text.lcd_display_task:0000000000000000 $t
     /tmp/cclmtcKv.s:138    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/cclmtcKv.s:177    .text.lcd_display_task:0000000000000026 $d
     /tmp/cclmtcKv.s:181    .text.lcd_display_task:000000000000002a $t
     /tmp/cclmtcKv.s:268    .text.lcd_display_task:000000000000009c $d
     /tmp/cclmtcKv.s:280    .text.task_timer:0000000000000000 $t
     /tmp/cclmtcKv.s:287    .text.task_timer:0000000000000000 task_timer
     /tmp/cclmtcKv.s:358    .text.task_timer:0000000000000048 $d
     /tmp/cclmtcKv.s:367    .text.key_read_task:0000000000000000 $t
     /tmp/cclmtcKv.s:374    .text.key_read_task:0000000000000000 key_read_task
     /tmp/cclmtcKv.s:492    .text.key_read_task:0000000000000080 $d
     /tmp/cclmtcKv.s:501    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/cclmtcKv.s:508    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/cclmtcKv.s:569    .text.RS485_Read_Message:000000000000003a $d
     /tmp/cclmtcKv.s:579    .text.RS485_Read_Message:0000000000000044 $t
     /tmp/cclmtcKv.s:663    .text.RS485_Read_Message:0000000000000094 $d
     /tmp/cclmtcKv.s:672    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/cclmtcKv.s:679    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/cclmtcKv.s:732    .text.RS485_Send_Message:0000000000000044 $d
     /tmp/cclmtcKv.s:741    .text.main_task:0000000000000000 $t
     /tmp/cclmtcKv.s:748    .text.main_task:0000000000000000 main_task
     /tmp/cclmtcKv.s:864    .text.main_task:000000000000007c $d
     /tmp/cclmtcKv.s:874    .text.seven_segment_driver:0000000000000000 $t
     /tmp/cclmtcKv.s:881    .text.seven_segment_driver:0000000000000000 seven_segment_driver
     /tmp/cclmtcKv.s:921    .text.seven_segment_driver:0000000000000018 $d
     /tmp/cclmtcKv.s:926    .text.segment_display_task:0000000000000000 $t
     /tmp/cclmtcKv.s:933    .text.segment_display_task:0000000000000000 segment_display_task
     /tmp/cclmtcKv.s:988    .text.segment_display_task:000000000000003c $d
     /tmp/cclmtcKv.s:997    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cclmtcKv.s:1004   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cclmtcKv.s:1043   .text.HAL_TIM_PeriodElapsedCallback:0000000000000020 $d
     /tmp/cclmtcKv.s:1051   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cclmtcKv.s:1058   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cclmtcKv.s:1143   .text.HAL_UART_RxCpltCallback:0000000000000048 $d
     /tmp/cclmtcKv.s:1152   .text.Error_Handler:0000000000000000 $t
     /tmp/cclmtcKv.s:1159   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cclmtcKv.s:1191   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cclmtcKv.s:1198   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cclmtcKv.s:1346   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/cclmtcKv.s:1352   .rodata.main.str1.4:0000000000000000 $d
     /tmp/cclmtcKv.s:1362   .text.main:0000000000000000 $t
     /tmp/cclmtcKv.s:1369   .text.main:0000000000000000 main
     /tmp/cclmtcKv.s:1504   .text.main:00000000000000b0 $d
     /tmp/cclmtcKv.s:1578   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/cclmtcKv.s:1585   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/cclmtcKv.s:1571   .bss.ID:0000000000000000 ID
     /tmp/cclmtcKv.s:1654   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/cclmtcKv.s:1763   .bss.rx2_buffer:0000000000000000 rx2_buffer
     /tmp/cclmtcKv.s:1756   .bss.rx1_buffer:0000000000000000 rx1_buffer
     /tmp/cclmtcKv.s:1833   .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/cclmtcKv.s:1827   .data.start_cmd:0000000000000000 start_cmd
     /tmp/cclmtcKv.s:1781   .bss.transmission_f:0000000000000000 transmission_f
ARM GAS  /tmp/cclmtcKv.s 			page 52


     /tmp/cclmtcKv.s:1769   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/cclmtcKv.s:1808   .data.digit_table:0000000000000000 digit_table
     /tmp/cclmtcKv.s:1821   .data.seven_segment_table:0000000000000000 seven_segment_table
     /tmp/cclmtcKv.s:1738   .bss.lcd_process:0000000000000000 lcd_process
     /tmp/cclmtcKv.s:1619   .bss.data:0000000000000000 data
     /tmp/cclmtcKv.s:1591   .bss.cmd:0000000000000000 cmd
     /tmp/cclmtcKv.s:1641   .bss.digit2_update:0000000000000000 digit2_update
     /tmp/cclmtcKv.s:1630   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/cclmtcKv.s:1727   .bss.lcd_digit1_f:0000000000000000 lcd_digit1_f
     /tmp/cclmtcKv.s:1709   .bss.is_EN:0000000000000000 is_EN
     /tmp/cclmtcKv.s:1636   .bss.digit2:0000000000000000 digit2
     /tmp/cclmtcKv.s:1625   .bss.digit1:0000000000000000 digit1
     /tmp/cclmtcKv.s:1693   .bss.flag_state_tx:0000000000000000 flag_state_tx
     /tmp/cclmtcKv.s:1698   .bss.flag_state_tx1:0000000000000000 flag_state_tx1
     /tmp/cclmtcKv.s:1791   .bss.uart_tx2_flag:0000000000000000 uart_tx2_flag
     /tmp/cclmtcKv.s:1786   .bss.uart_tx1_flag:0000000000000000 uart_tx1_flag
     /tmp/cclmtcKv.s:1732   .bss.lcd_disp_lock:0000000000000000 lcd_disp_lock
     /tmp/cclmtcKv.s:1647   .bss.event:0000000000000000 event
     /tmp/cclmtcKv.s:1775   .bss.state:0000000000000000 state
     /tmp/cclmtcKv.s:1721   .bss.key2_data:0000000000000000 key2_data
     /tmp/cclmtcKv.s:1715   .bss.key1_data:0000000000000000 key1_data
     /tmp/cclmtcKv.s:1801   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/cclmtcKv.s:1613   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/cclmtcKv.s:1796   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/cclmtcKv.s:1608   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/cclmtcKv.s:1597   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/cclmtcKv.s:1603   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/cclmtcKv.s:1839   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/cclmtcKv.s:1846   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/cclmtcKv.s:1814   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/cclmtcKv.s:1749   .bss.p_tx2:0000000000000000 p_tx2
     /tmp/cclmtcKv.s:1743   .bss.p_tx1:0000000000000000 p_tx1
     /tmp/cclmtcKv.s:1703   .bss.i:0000000000000000 i
     /tmp/cclmtcKv.s:1683   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/cclmtcKv.s:1677   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/cclmtcKv.s:1671   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/cclmtcKv.s:1665   .bss.f_timer_100us:0000000000000000 f_timer_100us
     /tmp/cclmtcKv.s:1659   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/cclmtcKv.s:1688   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/cclmtcKv.s:1572   .bss.ID:0000000000000000 $d
     /tmp/cclmtcKv.s:1574   .bss.RX_msg:0000000000000000 $d
     /tmp/cclmtcKv.s:1581   .bss.TX_msg:0000000000000000 $d
     /tmp/cclmtcKv.s:1592   .bss.cmd:0000000000000000 $d
     /tmp/cclmtcKv.s:1598   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/cclmtcKv.s:1604   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/cclmtcKv.s:1609   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/cclmtcKv.s:1614   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/cclmtcKv.s:1620   .bss.data:0000000000000000 $d
     /tmp/cclmtcKv.s:1626   .bss.digit1:0000000000000000 $d
     /tmp/cclmtcKv.s:1631   .bss.digit1_update:0000000000000000 $d
     /tmp/cclmtcKv.s:1637   .bss.digit2:0000000000000000 $d
     /tmp/cclmtcKv.s:1642   .bss.digit2_update:0000000000000000 $d
     /tmp/cclmtcKv.s:1648   .bss.event:0000000000000000 $d
     /tmp/cclmtcKv.s:1650   .bss.event_buffer:0000000000000000 $d
     /tmp/cclmtcKv.s:1660   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/cclmtcKv.s:1666   .bss.f_timer_100us:0000000000000000 $d
     /tmp/cclmtcKv.s:1672   .bss.f_timer_10ms:0000000000000000 $d
ARM GAS  /tmp/cclmtcKv.s 			page 53


     /tmp/cclmtcKv.s:1678   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/cclmtcKv.s:1684   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/cclmtcKv.s:1689   .bss.f_timer_TX:0000000000000000 $d
     /tmp/cclmtcKv.s:1694   .bss.flag_state_tx:0000000000000000 $d
     /tmp/cclmtcKv.s:1699   .bss.flag_state_tx1:0000000000000000 $d
     /tmp/cclmtcKv.s:1704   .bss.i:0000000000000000 $d
     /tmp/cclmtcKv.s:1710   .bss.is_EN:0000000000000000 $d
     /tmp/cclmtcKv.s:1716   .bss.key1_data:0000000000000000 $d
     /tmp/cclmtcKv.s:1722   .bss.key2_data:0000000000000000 $d
     /tmp/cclmtcKv.s:1728   .bss.lcd_digit1_f:0000000000000000 $d
     /tmp/cclmtcKv.s:1733   .bss.lcd_disp_lock:0000000000000000 $d
     /tmp/cclmtcKv.s:1739   .bss.lcd_process:0000000000000000 $d
     /tmp/cclmtcKv.s:1744   .bss.p_tx1:0000000000000000 $d
     /tmp/cclmtcKv.s:1750   .bss.p_tx2:0000000000000000 $d
     /tmp/cclmtcKv.s:1752   .bss.rx1_buffer:0000000000000000 $d
     /tmp/cclmtcKv.s:1759   .bss.rx2_buffer:0000000000000000 $d
     /tmp/cclmtcKv.s:1770   .bss.rx_temp:0000000000000000 $d
     /tmp/cclmtcKv.s:1776   .bss.state:0000000000000000 $d
     /tmp/cclmtcKv.s:1782   .bss.transmission_f:0000000000000000 $d
     /tmp/cclmtcKv.s:1787   .bss.uart_tx1_flag:0000000000000000 $d
     /tmp/cclmtcKv.s:1792   .bss.uart_tx2_flag:0000000000000000 $d
     /tmp/cclmtcKv.s:1804   .data.digit_table:0000000000000000 $d
     /tmp/cclmtcKv.s:1817   .data.seven_segment_table:0000000000000000 $d
     /tmp/cclmtcKv.s:1836   .data.tx1_buffer:0000000000000000 $d
     /tmp/cclmtcKv.s:1842   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
buffer_to_message
check_checksum
HAL_UART_Transmit
huart4
buffer_pop
htim3
htim4
HAL_UART_Receive_IT
huart5
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM3_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
lcd_clear
lcd_set_pos
lcd_write_string
