ARM GAS  /tmp/ccjwca7l.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.m_send_to_lcd,"ax",%progbits
  18              		.align	1
  19              		.global	m_send_to_lcd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	m_send_to_lcd:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "message.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccjwca7l.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** unsigned char f_timer_TX=0;
  49:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  50:Core/Src/main.c **** unsigned char f_timer_10ms=0;
  51:Core/Src/main.c **** unsigned char f_timer_20ms=0;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** unsigned char f_timer_30ms=0;
  54:Core/Src/main.c **** unsigned char i,p_tx1,p_tx2;
  55:Core/Src/main.c **** unsigned char flag_digit_1=1;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** unsigned char tx2_buffer[10]={"123456789"};
  58:Core/Src/main.c **** unsigned char tx1_buffer[6]={"abcdef"};
  59:Core/Src/main.c **** unsigned char d_timer_30ms;
  60:Core/Src/main.c **** unsigned char d_timer_20ms;
  61:Core/Src/main.c **** unsigned char d_timer_TX1;
  62:Core/Src/main.c **** unsigned char TX1_delay_val =250;
  63:Core/Src/main.c **** unsigned char d_timer_TX2;
  64:Core/Src/main.c **** unsigned char TX2_delay_val =250;
  65:Core/Src/main.c **** unsigned char key1_data, key2_data;
  66:Core/Src/main.c **** unsigned char state,event;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** unsigned char lcd_disp_lock=0;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** unsigned char uart_tx1_flag,uart_tx2_flag;
  71:Core/Src/main.c **** unsigned char flag_state_tx1, flag_state_tx;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** unsigned char digit1,digit2;
  74:Core/Src/main.c **** //flag for LCD
  75:Core/Src/main.c **** unsigned char is_EN=0;
  76:Core/Src/main.c **** unsigned char lcd_digit1_f=0;
  77:Core/Src/main.c **** unsigned char digit1_update = 0;
  78:Core/Src/main.c **** unsigned char digit2_update = 0;
  79:Core/Src/main.c **** unsigned char cmd, data;
  80:Core/Src/main.c **** unsigned char lcd_process=0;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** unsigned char digit_table[17]={"0123456789abcdef-"};
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** uint8_t rx_temp;
  85:Core/Src/main.c **** uint8_t transmission_f;
  86:Core/Src/main.c **** uint8_t start_cmd=0x2;
ARM GAS  /tmp/ccjwca7l.s 			page 3


  87:Core/Src/main.c **** uint8_t stop_cmd=0x3;
  88:Core/Src/main.c **** circular_buffer rx1_buffer;
  89:Core/Src/main.c **** circular_buffer rx2_buffer;
  90:Core/Src/main.c **** circular_buffer event_buffer;
  91:Core/Src/main.c **** uint8_t ID;
  92:Core/Src/main.c **** uint8_t TX_msg[4];
  93:Core/Src/main.c **** uint8_t RX_msg[4];
  94:Core/Src/main.c **** /* USER CODE END PV */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  97:Core/Src/main.c **** void SystemClock_Config(void);
  98:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  99:Core/Src/main.c **** void task_timer(void);
 100:Core/Src/main.c **** void counting_task(void);
 101:Core/Src/main.c **** void uart_TX2_task(void);
 102:Core/Src/main.c **** void uart_TX1_task(void);
 103:Core/Src/main.c **** void uart_RX1_task(void);
 104:Core/Src/main.c **** void uart_RX2_task(void);
 105:Core/Src/main.c **** void segment_display_task(void);
 106:Core/Src/main.c **** void lcd_display_task(void);
 107:Core/Src/main.c **** void key_read_task(void);
 108:Core/Src/main.c **** void main_task(void);
 109:Core/Src/main.c **** void setEvent(unsigned char event);
 110:Core/Src/main.c **** unsigned char getEvent(void);
 111:Core/Src/main.c **** void seven_segment_driver(char input,char select_digit);
 112:Core/Src/main.c **** void TX1_delay_update(void);
 113:Core/Src/main.c **** void TX2_delay_update(void);
 114:Core/Src/main.c **** void m_send_to_lcd(char data);
 115:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 116:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 117:Core/Src/main.c **** void Set_Receiver_Port1(void);
 118:Core/Src/main.c **** void Set_Receiver_Port2(void);
 119:Core/Src/main.c **** void RS485_Send_Message(void);
 120:Core/Src/main.c **** void RS485_Read_Message(void);
 121:Core/Src/main.c **** /*
 122:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 123:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 124:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 125:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
 126:Core/Src/main.c **** */
 127:Core/Src/main.c **** /* USER CODE END PFP */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 130:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /* USER CODE END 0 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****   * @brief  The application entry point.
 136:Core/Src/main.c ****   * @retval int
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c **** int main(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE END 1 */
 143:Core/Src/main.c **** 
ARM GAS  /tmp/ccjwca7l.s 			page 4


 144:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 147:Core/Src/main.c ****   HAL_Init();
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* USER CODE END Init */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* Configure the system clock */
 154:Core/Src/main.c ****   SystemClock_Config();
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE END SysInit */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* Initialize all configured peripherals */
 161:Core/Src/main.c ****   MX_GPIO_Init();
 162:Core/Src/main.c ****   MX_TIM4_Init();
 163:Core/Src/main.c ****   MX_UART4_Init();
 164:Core/Src/main.c ****   MX_UART5_Init();
 165:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   	
 170:Core/Src/main.c ****   HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0);   // Enable Receiver 1
 171:Core/Src/main.c ****   HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart4, &rx1_buffer.data[rx1_buffer.head], 1);
 174:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   ID=1;
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   lcd_init();
 180:Core/Src/main.c ****   lcd_clear();
 181:Core/Src/main.c ****   lcd_set_pos(0, 3);
 182:Core/Src/main.c ****   lcd_write_string("TETRADYNE");
 183:Core/Src/main.c ****   lcd_set_pos(1, 0);
 184:Core/Src/main.c ****   lcd_write_string("D2:");
 185:Core/Src/main.c ****   lcd_set_pos(1, 0xC);
 186:Core/Src/main.c ****   lcd_write_string("D1:");
 187:Core/Src/main.c ****   /* USER CODE END 2 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* Infinite loop */
 190:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 191:Core/Src/main.c ****   while (1)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     /* USER CODE END WHILE */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** 	  	  	 task_timer();
 198:Core/Src/main.c **** 	  	     ///segment_display_task();
 199:Core/Src/main.c **** 	  	     lcd_display_task();
 200:Core/Src/main.c **** 	  	     key_read_task();
ARM GAS  /tmp/ccjwca7l.s 			page 5


 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** 	  	     main_task();
 203:Core/Src/main.c ****   }
 204:Core/Src/main.c ****   /* USER CODE END 3 */
 205:Core/Src/main.c **** }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****   * @brief System Clock Configuration
 209:Core/Src/main.c ****   * @retval None
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c **** void SystemClock_Config(void)
 212:Core/Src/main.c **** {
 213:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 214:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 219:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 222:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 225:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 232:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 240:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 241:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 242:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 244:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** void lcd_display_task(void){
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** 	if(!lcd_digit1_f){
ARM GAS  /tmp/ccjwca7l.s 			page 6


 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** 		 cmd = 0xC3;
 260:Core/Src/main.c **** 		 data = digit_table[digit2];
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** 	}else{
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** 		cmd = 0xCF;
 265:Core/Src/main.c ****         data = digit_table[digit1];
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** 	}
 268:Core/Src/main.c **** 	switch(lcd_process){
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** 			case 0:
 271:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 272:Core/Src/main.c **** 					m_send_to_lcd((cmd>>4)&0x0f);
 273:Core/Src/main.c **** 					break;
 274:Core/Src/main.c **** 			case 1:
 275:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 276:Core/Src/main.c **** 					m_send_to_lcd((cmd)&0x0f);
 277:Core/Src/main.c **** 					break;
 278:Core/Src/main.c **** 			case 2:
 279:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 280:Core/Src/main.c **** 					m_send_to_lcd((data>>4)&0x0f);
 281:Core/Src/main.c **** 					break;
 282:Core/Src/main.c **** 			case 3:
 283:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 284:Core/Src/main.c **** 					m_send_to_lcd(data&0x0f);
 285:Core/Src/main.c **** 					break;
 286:Core/Src/main.c **** 	}
 287:Core/Src/main.c **** }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** void m_send_to_lcd(char data)
 291:Core/Src/main.c **** {
  30              		.loc 1 291 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 291 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** 	//writing data to pin PE0~PE3
 294:Core/Src/main.c **** 	GPIOE->ODR =  (GPIOE->ODR & 0xFFFFFFF0) | data;
  40              		.loc 1 294 2 is_stmt 1 view .LVU2
  41              		.loc 1 294 22 is_stmt 0 view .LVU3
  42 0002 194A     		ldr	r2, .L5
  43 0004 5369     		ldr	r3, [r2, #20]
  44              		.loc 1 294 28 view .LVU4
  45 0006 23F00F03 		bic	r3, r3, #15
  46              		.loc 1 294 42 view .LVU5
  47 000a 1843     		orrs	r0, r0, r3
  48              	.LVL1:
  49              		.loc 1 294 13 view .LVU6
ARM GAS  /tmp/ccjwca7l.s 			page 7


  50 000c 5061     		str	r0, [r2, #20]
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** 	if(!f_timer_20ms) return ;
  51              		.loc 1 296 2 is_stmt 1 view .LVU7
  52              		.loc 1 296 5 is_stmt 0 view .LVU8
  53 000e 174B     		ldr	r3, .L5+4
  54 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  55              		.loc 1 296 4 view .LVU9
  56 0012 6BB1     		cbz	r3, .L1
 297:Core/Src/main.c **** 	f_timer_20ms =0;
  57              		.loc 1 297 2 is_stmt 1 view .LVU10
  58              		.loc 1 297 15 is_stmt 0 view .LVU11
  59 0014 154B     		ldr	r3, .L5+4
  60 0016 0022     		movs	r2, #0
  61 0018 1A70     		strb	r2, [r3]
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** 	if (!is_EN){
  62              		.loc 1 299 2 is_stmt 1 view .LVU12
  63              		.loc 1 299 6 is_stmt 0 view .LVU13
  64 001a 154B     		ldr	r3, .L5+8
  65 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66              		.loc 1 299 5 view .LVU14
  67 001e 43B9     		cbnz	r3, .L3
 300:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
  68              		.loc 1 300 3 is_stmt 1 view .LVU15
  69 0020 0122     		movs	r2, #1
  70 0022 2021     		movs	r1, #32
  71 0024 1048     		ldr	r0, .L5
  72 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL2:
 301:Core/Src/main.c **** 		is_EN=1;
  74              		.loc 1 301 3 view .LVU16
  75              		.loc 1 301 8 is_stmt 0 view .LVU17
  76 002a 114B     		ldr	r3, .L5+8
  77 002c 0122     		movs	r2, #1
  78 002e 1A70     		strb	r2, [r3]
  79              	.L1:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** 	}else{
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 306:Core/Src/main.c **** 		is_EN=0;
 307:Core/Src/main.c **** 		lcd_process++;
 308:Core/Src/main.c **** 		if (lcd_process>3){
 309:Core/Src/main.c **** 			lcd_process=0;
 310:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 311:Core/Src/main.c **** 		}
 312:Core/Src/main.c **** 	}
 313:Core/Src/main.c **** }
  80              		.loc 1 313 1 view .LVU18
  81 0030 08BD     		pop	{r3, pc}
  82              	.L3:
 305:Core/Src/main.c **** 		is_EN=0;
  83              		.loc 1 305 3 is_stmt 1 view .LVU19
  84 0032 0022     		movs	r2, #0
  85 0034 2021     		movs	r1, #32
  86 0036 0C48     		ldr	r0, .L5
ARM GAS  /tmp/ccjwca7l.s 			page 8


  87 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL3:
 306:Core/Src/main.c **** 		lcd_process++;
  89              		.loc 1 306 3 view .LVU20
 306:Core/Src/main.c **** 		lcd_process++;
  90              		.loc 1 306 8 is_stmt 0 view .LVU21
  91 003c 0C4B     		ldr	r3, .L5+8
  92 003e 0022     		movs	r2, #0
  93 0040 1A70     		strb	r2, [r3]
 307:Core/Src/main.c **** 		if (lcd_process>3){
  94              		.loc 1 307 3 is_stmt 1 view .LVU22
 307:Core/Src/main.c **** 		if (lcd_process>3){
  95              		.loc 1 307 14 is_stmt 0 view .LVU23
  96 0042 0C4A     		ldr	r2, .L5+12
  97 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  98 0046 0133     		adds	r3, r3, #1
  99 0048 DBB2     		uxtb	r3, r3
 100 004a 1370     		strb	r3, [r2]
 308:Core/Src/main.c **** 			lcd_process=0;
 101              		.loc 1 308 3 is_stmt 1 view .LVU24
 308:Core/Src/main.c **** 			lcd_process=0;
 102              		.loc 1 308 6 is_stmt 0 view .LVU25
 103 004c 032B     		cmp	r3, #3
 104 004e EFD9     		bls	.L1
 309:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 105              		.loc 1 309 4 is_stmt 1 view .LVU26
 309:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 106              		.loc 1 309 15 is_stmt 0 view .LVU27
 107 0050 1346     		mov	r3, r2
 108 0052 0022     		movs	r2, #0
 109 0054 1A70     		strb	r2, [r3]
 310:Core/Src/main.c **** 		}
 110              		.loc 1 310 4 is_stmt 1 view .LVU28
 310:Core/Src/main.c **** 		}
 111              		.loc 1 310 33 is_stmt 0 view .LVU29
 112 0056 084A     		ldr	r2, .L5+16
 113 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 005a 83F00103 		eor	r3, r3, #1
 115 005e 03F00103 		and	r3, r3, #1
 310:Core/Src/main.c **** 		}
 116              		.loc 1 310 16 view .LVU30
 117 0062 1370     		strb	r3, [r2]
 118 0064 E4E7     		b	.L1
 119              	.L6:
 120 0066 00BF     		.align	2
 121              	.L5:
 122 0068 00100240 		.word	1073876992
 123 006c 00000000 		.word	.LANCHOR0
 124 0070 00000000 		.word	.LANCHOR1
 125 0074 00000000 		.word	.LANCHOR2
 126 0078 00000000 		.word	.LANCHOR3
 127              		.cfi_endproc
 128              	.LFE133:
 130              		.section	.text.lcd_display_task,"ax",%progbits
 131              		.align	1
 132              		.global	lcd_display_task
 133              		.syntax unified
ARM GAS  /tmp/ccjwca7l.s 			page 9


 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	lcd_display_task:
 139              	.LFB132:
 254:Core/Src/main.c **** 
 140              		.loc 1 254 28 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 257:Core/Src/main.c **** 
 149              		.loc 1 257 2 view .LVU32
 257:Core/Src/main.c **** 
 150              		.loc 1 257 5 is_stmt 0 view .LVU33
 151 0002 264B     		ldr	r3, .L17
 152 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 257:Core/Src/main.c **** 
 153              		.loc 1 257 4 view .LVU34
 154 0006 83B9     		cbnz	r3, .L8
 259:Core/Src/main.c **** 		 data = digit_table[digit2];
 155              		.loc 1 259 4 is_stmt 1 view .LVU35
 259:Core/Src/main.c **** 		 data = digit_table[digit2];
 156              		.loc 1 259 8 is_stmt 0 view .LVU36
 157 0008 254B     		ldr	r3, .L17+4
 158 000a C322     		movs	r2, #195
 159 000c 1A70     		strb	r2, [r3]
 260:Core/Src/main.c **** 
 160              		.loc 1 260 4 is_stmt 1 view .LVU37
 260:Core/Src/main.c **** 
 161              		.loc 1 260 22 is_stmt 0 view .LVU38
 162 000e 254B     		ldr	r3, .L17+8
 163 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 164 0012 254A     		ldr	r2, .L17+12
 165 0014 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 260:Core/Src/main.c **** 
 166              		.loc 1 260 9 view .LVU39
 167 0016 254B     		ldr	r3, .L17+16
 168 0018 1A70     		strb	r2, [r3]
 169              	.L9:
 268:Core/Src/main.c **** 
 170              		.loc 1 268 2 is_stmt 1 view .LVU40
 171 001a 254B     		ldr	r3, .L17+20
 172 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173 001e 032B     		cmp	r3, #3
 174 0020 17D8     		bhi	.L7
 175 0022 DFE803F0 		tbb	[pc, r3]
 176              	.L12:
 177 0026 0C       		.byte	(.L15-.L12)/2
 178 0027 17       		.byte	(.L14-.L12)/2
 179 0028 23       		.byte	(.L13-.L12)/2
 180 0029 2E       		.byte	(.L11-.L12)/2
 181              		.p2align 1
ARM GAS  /tmp/ccjwca7l.s 			page 10


 182              	.L8:
 264:Core/Src/main.c ****         data = digit_table[digit1];
 183              		.loc 1 264 3 view .LVU41
 264:Core/Src/main.c ****         data = digit_table[digit1];
 184              		.loc 1 264 7 is_stmt 0 view .LVU42
 185 002a 1D4B     		ldr	r3, .L17+4
 186 002c CF22     		movs	r2, #207
 187 002e 1A70     		strb	r2, [r3]
 265:Core/Src/main.c **** 
 188              		.loc 1 265 9 is_stmt 1 view .LVU43
 265:Core/Src/main.c **** 
 189              		.loc 1 265 27 is_stmt 0 view .LVU44
 190 0030 204B     		ldr	r3, .L17+24
 191 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 192 0034 1C4A     		ldr	r2, .L17+12
 193 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 265:Core/Src/main.c **** 
 194              		.loc 1 265 14 view .LVU45
 195 0038 1C4B     		ldr	r3, .L17+16
 196 003a 1A70     		strb	r2, [r3]
 197 003c EDE7     		b	.L9
 198              	.L15:
 271:Core/Src/main.c **** 					m_send_to_lcd((cmd>>4)&0x0f);
 199              		.loc 1 271 6 is_stmt 1 view .LVU46
 200 003e 0022     		movs	r2, #0
 201 0040 1021     		movs	r1, #16
 202 0042 1D48     		ldr	r0, .L17+28
 203 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL4:
 272:Core/Src/main.c **** 					break;
 205              		.loc 1 272 6 view .LVU47
 206 0048 154B     		ldr	r3, .L17+4
 207 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 208 004c 0009     		lsrs	r0, r0, #4
 209 004e FFF7FEFF 		bl	m_send_to_lcd
 210              	.LVL5:
 273:Core/Src/main.c **** 			case 1:
 211              		.loc 1 273 6 view .LVU48
 212              	.L7:
 287:Core/Src/main.c **** 
 213              		.loc 1 287 1 is_stmt 0 view .LVU49
 214 0052 08BD     		pop	{r3, pc}
 215              	.L14:
 275:Core/Src/main.c **** 					m_send_to_lcd((cmd)&0x0f);
 216              		.loc 1 275 6 is_stmt 1 view .LVU50
 217 0054 0022     		movs	r2, #0
 218 0056 1021     		movs	r1, #16
 219 0058 1748     		ldr	r0, .L17+28
 220 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 221              	.LVL6:
 276:Core/Src/main.c **** 					break;
 222              		.loc 1 276 6 view .LVU51
 276:Core/Src/main.c **** 					break;
 223              		.loc 1 276 25 is_stmt 0 view .LVU52
 224 005e 104B     		ldr	r3, .L17+4
 225 0060 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 276:Core/Src/main.c **** 					break;
ARM GAS  /tmp/ccjwca7l.s 			page 11


 226              		.loc 1 276 6 view .LVU53
 227 0062 00F00F00 		and	r0, r0, #15
 228 0066 FFF7FEFF 		bl	m_send_to_lcd
 229              	.LVL7:
 277:Core/Src/main.c **** 			case 2:
 230              		.loc 1 277 6 is_stmt 1 view .LVU54
 231 006a F2E7     		b	.L7
 232              	.L13:
 279:Core/Src/main.c **** 					m_send_to_lcd((data>>4)&0x0f);
 233              		.loc 1 279 6 view .LVU55
 234 006c 0122     		movs	r2, #1
 235 006e 1021     		movs	r1, #16
 236 0070 1148     		ldr	r0, .L17+28
 237 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL8:
 280:Core/Src/main.c **** 					break;
 239              		.loc 1 280 6 view .LVU56
 240 0076 0D4B     		ldr	r3, .L17+16
 241 0078 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242 007a 0009     		lsrs	r0, r0, #4
 243 007c FFF7FEFF 		bl	m_send_to_lcd
 244              	.LVL9:
 281:Core/Src/main.c **** 			case 3:
 245              		.loc 1 281 6 view .LVU57
 246 0080 E7E7     		b	.L7
 247              	.L11:
 283:Core/Src/main.c **** 					m_send_to_lcd(data&0x0f);
 248              		.loc 1 283 6 view .LVU58
 249 0082 0122     		movs	r2, #1
 250 0084 1021     		movs	r1, #16
 251 0086 0C48     		ldr	r0, .L17+28
 252 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL10:
 284:Core/Src/main.c **** 					break;
 254              		.loc 1 284 6 view .LVU59
 284:Core/Src/main.c **** 					break;
 255              		.loc 1 284 24 is_stmt 0 view .LVU60
 256 008c 074B     		ldr	r3, .L17+16
 257 008e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 284:Core/Src/main.c **** 					break;
 258              		.loc 1 284 6 view .LVU61
 259 0090 00F00F00 		and	r0, r0, #15
 260 0094 FFF7FEFF 		bl	m_send_to_lcd
 261              	.LVL11:
 285:Core/Src/main.c **** 	}
 262              		.loc 1 285 6 is_stmt 1 view .LVU62
 287:Core/Src/main.c **** 
 263              		.loc 1 287 1 is_stmt 0 view .LVU63
 264 0098 DBE7     		b	.L7
 265              	.L18:
 266 009a 00BF     		.align	2
 267              	.L17:
 268 009c 00000000 		.word	.LANCHOR3
 269 00a0 00000000 		.word	.LANCHOR4
 270 00a4 00000000 		.word	.LANCHOR6
 271 00a8 00000000 		.word	.LANCHOR5
 272 00ac 00000000 		.word	.LANCHOR7
ARM GAS  /tmp/ccjwca7l.s 			page 12


 273 00b0 00000000 		.word	.LANCHOR2
 274 00b4 00000000 		.word	.LANCHOR8
 275 00b8 00100240 		.word	1073876992
 276              		.cfi_endproc
 277              	.LFE132:
 279              		.section	.text.task_timer,"ax",%progbits
 280              		.align	1
 281              		.global	task_timer
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	task_timer:
 288              	.LFB134:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** void task_timer(void)
 317:Core/Src/main.c **** {
 289              		.loc 1 317 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI2:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 318:Core/Src/main.c **** 	if(!f_timer_10ms) return;       // checking if 10 ms timer interrupt is set (10 ms), if set then d
 298              		.loc 1 318 2 view .LVU65
 299              		.loc 1 318 5 is_stmt 0 view .LVU66
 300 0002 1A4B     		ldr	r3, .L27
 301 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302              		.loc 1 318 4 view .LVU67
 303 0006 CBB1     		cbz	r3, .L19
 319:Core/Src/main.c **** 	f_timer_10ms =0;		// clear the flag to wait next interupt
 304              		.loc 1 319 2 is_stmt 1 view .LVU68
 305              		.loc 1 319 15 is_stmt 0 view .LVU69
 306 0008 184B     		ldr	r3, .L27
 307 000a 0022     		movs	r2, #0
 308 000c 1A70     		strb	r2, [r3]
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** 	d_timer_30ms++;			// count timer for 30 ms interval
 309              		.loc 1 321 2 is_stmt 1 view .LVU70
 310              		.loc 1 321 14 is_stmt 0 view .LVU71
 311 000e 184A     		ldr	r2, .L27+4
 312 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 313 0012 0133     		adds	r3, r3, #1
 314 0014 DBB2     		uxtb	r3, r3
 315 0016 1370     		strb	r3, [r2]
 322:Core/Src/main.c **** 			
 323:Core/Src/main.c **** 	if(d_timer_30ms==3)		// checking if the count reached 30 ms
 316              		.loc 1 323 2 is_stmt 1 view .LVU72
 317              		.loc 1 323 4 is_stmt 0 view .LVU73
 318 0018 032B     		cmp	r3, #3
 319 001a 10D0     		beq	.L24
 320              	.L21:
 324:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccjwca7l.s 			page 13


 325:Core/Src/main.c **** 		d_timer_30ms =0;	// assign "0" to repeat counting
 326:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 327:Core/Src/main.c **** 	}
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** 	d_timer_20ms++;
 321              		.loc 1 329 2 is_stmt 1 view .LVU74
 322              		.loc 1 329 14 is_stmt 0 view .LVU75
 323 001c 154A     		ldr	r2, .L27+8
 324 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 325 0020 0133     		adds	r3, r3, #1
 326 0022 DBB2     		uxtb	r3, r3
 327 0024 1370     		strb	r3, [r2]
 330:Core/Src/main.c **** 	if (d_timer_20ms==2){
 328              		.loc 1 330 2 is_stmt 1 view .LVU76
 329              		.loc 1 330 5 is_stmt 0 view .LVU77
 330 0026 022B     		cmp	r3, #2
 331 0028 10D0     		beq	.L25
 332              	.L22:
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** 		d_timer_20ms =0;
 333:Core/Src/main.c **** 		f_timer_20ms=1;
 334:Core/Src/main.c **** 	}
 335:Core/Src/main.c **** 	
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** 	d_timer_TX1++;
 333              		.loc 1 337 2 is_stmt 1 view .LVU78
 334              		.loc 1 337 13 is_stmt 0 view .LVU79
 335 002a 134A     		ldr	r2, .L27+12
 336 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 337 002e 0133     		adds	r3, r3, #1
 338 0030 DBB2     		uxtb	r3, r3
 339 0032 1370     		strb	r3, [r2]
 338:Core/Src/main.c **** 		if(d_timer_TX1>=TX1_delay_val)     // checking if the count reached LED interval
 340              		.loc 1 338 3 is_stmt 1 view .LVU80
 341              		.loc 1 338 17 is_stmt 0 view .LVU81
 342 0034 114A     		ldr	r2, .L27+16
 343 0036 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 344              		.loc 1 338 5 view .LVU82
 345 0038 9342     		cmp	r3, r2
 346 003a 0ED2     		bcs	.L26
 347              	.L19:
 339:Core/Src/main.c **** 		{
 340:Core/Src/main.c **** 			d_timer_TX1=0;		// assign "0" to repeat counting
 341:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX1_UPDATE);
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** 		}
 344:Core/Src/main.c **** /*
 345:Core/Src/main.c **** 	d_timer_TX2++;
 346:Core/Src/main.c **** 		if(d_timer_TX2>=TX2_delay_val)     // checking if the count reached LED interval
 347:Core/Src/main.c **** 		{
 348:Core/Src/main.c **** 			d_timer_TX2=0;		// assign "0" to repeat counting
 349:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX2_UPDATE);
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** 		}
 352:Core/Src/main.c **** */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** }
ARM GAS  /tmp/ccjwca7l.s 			page 14


 348              		.loc 1 354 1 view .LVU83
 349 003c 08BD     		pop	{r3, pc}
 350              	.L24:
 325:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 351              		.loc 1 325 3 is_stmt 1 view .LVU84
 325:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 352              		.loc 1 325 16 is_stmt 0 view .LVU85
 353 003e 1346     		mov	r3, r2
 354 0040 0022     		movs	r2, #0
 355 0042 1A70     		strb	r2, [r3]
 326:Core/Src/main.c **** 	}
 356              		.loc 1 326 3 is_stmt 1 view .LVU86
 326:Core/Src/main.c **** 	}
 357              		.loc 1 326 15 is_stmt 0 view .LVU87
 358 0044 0E4B     		ldr	r3, .L27+20
 359 0046 0122     		movs	r2, #1
 360 0048 1A70     		strb	r2, [r3]
 361 004a E7E7     		b	.L21
 362              	.L25:
 332:Core/Src/main.c **** 		f_timer_20ms=1;
 363              		.loc 1 332 3 is_stmt 1 view .LVU88
 332:Core/Src/main.c **** 		f_timer_20ms=1;
 364              		.loc 1 332 16 is_stmt 0 view .LVU89
 365 004c 1346     		mov	r3, r2
 366 004e 0022     		movs	r2, #0
 367 0050 1A70     		strb	r2, [r3]
 333:Core/Src/main.c **** 	}
 368              		.loc 1 333 3 is_stmt 1 view .LVU90
 333:Core/Src/main.c **** 	}
 369              		.loc 1 333 15 is_stmt 0 view .LVU91
 370 0052 0C4B     		ldr	r3, .L27+24
 371 0054 0122     		movs	r2, #1
 372 0056 1A70     		strb	r2, [r3]
 373 0058 E7E7     		b	.L22
 374              	.L26:
 340:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX1_UPDATE);
 375              		.loc 1 340 4 is_stmt 1 view .LVU92
 340:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX1_UPDATE);
 376              		.loc 1 340 15 is_stmt 0 view .LVU93
 377 005a 074B     		ldr	r3, .L27+12
 378 005c 0022     		movs	r2, #0
 379 005e 1A70     		strb	r2, [r3]
 341:Core/Src/main.c **** 
 380              		.loc 1 341 4 is_stmt 1 view .LVU94
 381 0060 0521     		movs	r1, #5
 382 0062 0948     		ldr	r0, .L27+28
 383 0064 FFF7FEFF 		bl	buffer_push
 384              	.LVL12:
 385 0068 E8E7     		b	.L19
 386              	.L28:
 387 006a 00BF     		.align	2
 388              	.L27:
 389 006c 00000000 		.word	.LANCHOR9
 390 0070 00000000 		.word	.LANCHOR10
 391 0074 00000000 		.word	.LANCHOR12
 392 0078 00000000 		.word	.LANCHOR13
 393 007c 00000000 		.word	.LANCHOR14
ARM GAS  /tmp/ccjwca7l.s 			page 15


 394 0080 00000000 		.word	.LANCHOR11
 395 0084 00000000 		.word	.LANCHOR0
 396 0088 00000000 		.word	.LANCHOR15
 397              		.cfi_endproc
 398              	.LFE134:
 400              		.section	.text.key_read_task,"ax",%progbits
 401              		.align	1
 402              		.global	key_read_task
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu fpv4-sp-d16
 408              	key_read_task:
 409              	.LFB135:
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** void key_read_task(void)
 357:Core/Src/main.c **** {
 410              		.loc 1 357 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414 0000 08B5     		push	{r3, lr}
 415              	.LCFI3:
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 3, -8
 418              		.cfi_offset 14, -4
 358:Core/Src/main.c **** 	if(!f_timer_30ms) return;  		 // Checking if 30 ms counting is done
 419              		.loc 1 358 2 view .LVU96
 420              		.loc 1 358 5 is_stmt 0 view .LVU97
 421 0002 1F4B     		ldr	r3, .L39
 422 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 423              		.loc 1 358 4 view .LVU98
 424 0006 33B3     		cbz	r3, .L29
 359:Core/Src/main.c **** 	f_timer_30ms =0;          		 // clear the flag to wait next counting
 425              		.loc 1 359 2 is_stmt 1 view .LVU99
 426              		.loc 1 359 15 is_stmt 0 view .LVU100
 427 0008 1D4B     		ldr	r3, .L39
 428 000a 0022     		movs	r2, #0
 429 000c 1A70     		strb	r2, [r3]
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin|KEY2_Pin));
 430              		.loc 1 361 2 is_stmt 1 view .LVU101
 431              		.loc 1 361 39 is_stmt 0 view .LVU102
 432 000e 1D4B     		ldr	r3, .L39+4
 433 0010 1869     		ldr	r0, [r3, #16]
 434              	.LVL13:
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** 	key1_data = key1_data<<1;      		 //Preparing to read KEY1 Input
 435              		.loc 1 363 2 is_stmt 1 view .LVU103
 436              		.loc 1 363 23 is_stmt 0 view .LVU104
 437 0012 1D4B     		ldr	r3, .L39+8
 438 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 439 0016 5200     		lsls	r2, r2, #1
 440 0018 D2B2     		uxtb	r2, r2
 441              		.loc 1 363 12 view .LVU105
 442 001a 1A70     		strb	r2, [r3]
 364:Core/Src/main.c **** 	key1_data &= 0b00001110;
ARM GAS  /tmp/ccjwca7l.s 			page 16


 443              		.loc 1 364 2 is_stmt 1 view .LVU106
 444              		.loc 1 364 12 is_stmt 0 view .LVU107
 445 001c 02F00E02 		and	r2, r2, #14
 446 0020 1A70     		strb	r2, [r3]
 365:Core/Src/main.c **** 	key1_data |= ((key_pindata>>2) & 0x1);			 // Read KEY1 Input
 447              		.loc 1 365 2 is_stmt 1 view .LVU108
 448              		.loc 1 365 33 is_stmt 0 view .LVU109
 449 0022 C0F38001 		ubfx	r1, r0, #2, #1
 450              		.loc 1 365 12 view .LVU110
 451 0026 0A43     		orrs	r2, r2, r1
 452 0028 1A70     		strb	r2, [r3]
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** 	key2_data = key2_data<<1;		 //Preparing to read KEY2 Input
 453              		.loc 1 367 2 is_stmt 1 view .LVU111
 454              		.loc 1 367 23 is_stmt 0 view .LVU112
 455 002a 1849     		ldr	r1, .L39+12
 456 002c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 457 002e 5B00     		lsls	r3, r3, #1
 458 0030 DBB2     		uxtb	r3, r3
 459              		.loc 1 367 12 view .LVU113
 460 0032 0B70     		strb	r3, [r1]
 368:Core/Src/main.c **** 	key2_data &= 0b00001110;
 461              		.loc 1 368 2 is_stmt 1 view .LVU114
 462              		.loc 1 368 12 is_stmt 0 view .LVU115
 463 0034 03F00E03 		and	r3, r3, #14
 464 0038 0B70     		strb	r3, [r1]
 369:Core/Src/main.c **** 	key2_data |= (key_pindata>>3);    		 // Read KEY2 Input
 465              		.loc 1 369 2 is_stmt 1 view .LVU116
 466              		.loc 1 369 12 is_stmt 0 view .LVU117
 467 003a C0F3C000 		ubfx	r0, r0, #3, #1
 468              	.LVL14:
 469              		.loc 1 369 12 view .LVU118
 470 003e 0343     		orrs	r3, r3, r0
 471 0040 0B70     		strb	r3, [r1]
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** 	if(key1_data == KEY_PRESSED)    	 // Checking if KEY1 is pressed
 472              		.loc 1 371 2 is_stmt 1 view .LVU119
 473              		.loc 1 371 4 is_stmt 0 view .LVU120
 474 0042 0C2A     		cmp	r2, #12
 475 0044 08D0     		beq	.L35
 372:Core/Src/main.c **** 	{
 373:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY1_PRESSED) ; // Store the event in buffer
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** 	}else if(key1_data == KEY_RELEASED)		//  Checking if KEY1 is released
 476              		.loc 1 375 8 is_stmt 1 view .LVU121
 477              		.loc 1 375 10 is_stmt 0 view .LVU122
 478 0046 032A     		cmp	r2, #3
 479 0048 0BD0     		beq	.L36
 480              	.L32:
 376:Core/Src/main.c **** 	{
 377:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY1_RELEASED); // Store the event in buffer
 378:Core/Src/main.c **** 	}
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** 	if(key2_data == KEY_PRESSED)		// Checking if KEY2 is pressed
 481              		.loc 1 380 2 is_stmt 1 view .LVU123
 482              		.loc 1 380 15 is_stmt 0 view .LVU124
 483 004a 104B     		ldr	r3, .L39+12
ARM GAS  /tmp/ccjwca7l.s 			page 17


 484 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485              		.loc 1 380 4 view .LVU125
 486 004e 0C2B     		cmp	r3, #12
 487 0050 0CD0     		beq	.L37
 381:Core/Src/main.c **** 	{
 382:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY2_PRESSED); // Store the event in buffer
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** 	}else if(key2_data == KEY_RELEASED)		//  Checking if KEY2 is released
 488              		.loc 1 384 8 is_stmt 1 view .LVU126
 489              		.loc 1 384 10 is_stmt 0 view .LVU127
 490 0052 032B     		cmp	r3, #3
 491 0054 0FD0     		beq	.L38
 492              	.L29:
 385:Core/Src/main.c **** 	{
 386:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY2_RELEASED); // Store the event in buffer
 387:Core/Src/main.c **** 	}
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** }
 493              		.loc 1 389 1 view .LVU128
 494 0056 08BD     		pop	{r3, pc}
 495              	.L35:
 373:Core/Src/main.c **** 
 496              		.loc 1 373 3 is_stmt 1 view .LVU129
 497 0058 0121     		movs	r1, #1
 498 005a 0D48     		ldr	r0, .L39+16
 499 005c FFF7FEFF 		bl	buffer_push
 500              	.LVL15:
 501 0060 F3E7     		b	.L32
 502              	.L36:
 377:Core/Src/main.c **** 	}
 503              		.loc 1 377 3 view .LVU130
 504 0062 0321     		movs	r1, #3
 505 0064 0A48     		ldr	r0, .L39+16
 506 0066 FFF7FEFF 		bl	buffer_push
 507              	.LVL16:
 508 006a EEE7     		b	.L32
 509              	.L37:
 382:Core/Src/main.c **** 
 510              		.loc 1 382 3 view .LVU131
 511 006c 0221     		movs	r1, #2
 512 006e 0848     		ldr	r0, .L39+16
 513 0070 FFF7FEFF 		bl	buffer_push
 514              	.LVL17:
 515 0074 EFE7     		b	.L29
 516              	.L38:
 386:Core/Src/main.c **** 	}
 517              		.loc 1 386 3 view .LVU132
 518 0076 0421     		movs	r1, #4
 519 0078 0548     		ldr	r0, .L39+16
 520 007a FFF7FEFF 		bl	buffer_push
 521              	.LVL18:
 522 007e EAE7     		b	.L29
 523              	.L40:
 524              		.align	2
 525              	.L39:
 526 0080 00000000 		.word	.LANCHOR11
 527 0084 00180240 		.word	1073879040
ARM GAS  /tmp/ccjwca7l.s 			page 18


 528 0088 00000000 		.word	.LANCHOR16
 529 008c 00000000 		.word	.LANCHOR17
 530 0090 00000000 		.word	.LANCHOR15
 531              		.cfi_endproc
 532              	.LFE135:
 534              		.section	.text.TX1_delay_update,"ax",%progbits
 535              		.align	1
 536              		.global	TX1_delay_update
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 540              		.fpu fpv4-sp-d16
 542              	TX1_delay_update:
 543              	.LFB137:
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** void main_task(void)
 393:Core/Src/main.c **** {
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** 	if (event_buffer.head!=event_buffer.tail){
 396:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 397:Core/Src/main.c **** 	}
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** 	switch(state)
 400:Core/Src/main.c **** 	{
 401:Core/Src/main.c **** 		case STATE_IDLE:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** 			switch(event)
 404:Core/Src/main.c **** 				{
 405:Core/Src/main.c **** 					case EVENT_KEY1_PRESSED:
 406:Core/Src/main.c **** 						
 407:Core/Src/main.c **** 							
 408:Core/Src/main.c **** 						TX1_delay_val=250;
 409:Core/Src/main.c **** 						d_timer_TX1=250;
 410:Core/Src/main.c **** 						///Set_Transmitter_Port1();
 411:Core/Src/main.c **** 						state = STATE_TX1;
 412:Core/Src/main.c **** 												
 413:Core/Src/main.c **** 						break;
 414:Core/Src/main.c **** 					case EVENT_RX_COMPLETE:
 415:Core/Src/main.c **** 						RS485_Read_Message();
 416:Core/Src/main.c **** 												
 417:Core/Src/main.c **** 						break;
 418:Core/Src/main.c **** 						/*
 419:Core/Src/main.c **** 					case EVENT_KEY2_PRESSED:
 420:Core/Src/main.c **** 						TX2_delay_val=250;
 421:Core/Src/main.c **** 						d_timer_TX2=250;
 422:Core/Src/main.c **** 						Set_Transmitter_Port2();
 423:Core/Src/main.c **** 						state = STATE_TX2;
 424:Core/Src/main.c **** 						
 425:Core/Src/main.c **** 						break;*/
 426:Core/Src/main.c **** 				}
 427:Core/Src/main.c **** 			break;
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** 		case STATE_TX1:
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** 			switch (event){
 432:Core/Src/main.c **** 
ARM GAS  /tmp/ccjwca7l.s 			page 19


 433:Core/Src/main.c **** 				case EVENT_TX1_UPDATE:
 434:Core/Src/main.c **** 						TX_msg[0] = 0x2; 
 435:Core/Src/main.c **** 						TX_msg[1] = FUNC_WRITE;
 436:Core/Src/main.c **** 						TX_msg[2] = tx2_buffer[p_tx2++];
 437:Core/Src/main.c **** 						if (p_tx2>8){
 438:Core/Src/main.c **** 							p_tx2=0;
 439:Core/Src/main.c **** 						}
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** 						RS485_Send_Message();
 442:Core/Src/main.c **** 					
 443:Core/Src/main.c **** 						TX1_delay_update();
 444:Core/Src/main.c **** 						event=0;
 445:Core/Src/main.c **** 						break;
 446:Core/Src/main.c **** 				case EVENT_RX_COMPLETE:
 447:Core/Src/main.c **** 						RS485_Read_Message();
 448:Core/Src/main.c **** 												
 449:Core/Src/main.c **** 						break;
 450:Core/Src/main.c **** 					/*
 451:Core/Src/main.c **** 				case EVENT_KEY2_PRESSED:
 452:Core/Src/main.c **** 					TX2_delay_val=250;
 453:Core/Src/main.c **** 					d_timer_TX2=250;
 454:Core/Src/main.c **** 
 455:Core/Src/main.c **** 					state = STATE_TX_ALL;
 456:Core/Src/main.c **** 					break;*/
 457:Core/Src/main.c **** 
 458:Core/Src/main.c **** 				case EVENT_KEY1_RELEASED:
 459:Core/Src/main.c **** 					//Set_Receiver_Port1();
 460:Core/Src/main.c **** 					state = STATE_IDLE;
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** 					break;
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** 			}
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** 			break;
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** 	
 470:Core/Src/main.c **** 	}
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** }
 473:Core/Src/main.c **** 
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** void TX1_delay_update(void){
 544              		.loc 1 475 28 view -0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** 	if (TX1_delay_val==50) return;
 549              		.loc 1 477 2 view .LVU134
 550              		.loc 1 477 19 is_stmt 0 view .LVU135
 551 0000 034B     		ldr	r3, .L43
 552 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 553              		.loc 1 477 5 view .LVU136
 554 0004 322B     		cmp	r3, #50
 555 0006 02D0     		beq	.L41
ARM GAS  /tmp/ccjwca7l.s 			page 20


 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** 	TX1_delay_val-=50;
 556              		.loc 1 479 2 is_stmt 1 view .LVU137
 557              		.loc 1 479 15 is_stmt 0 view .LVU138
 558 0008 323B     		subs	r3, r3, #50
 559 000a 014A     		ldr	r2, .L43
 560 000c 1370     		strb	r3, [r2]
 561              	.L41:
 480:Core/Src/main.c **** }
 562              		.loc 1 480 1 view .LVU139
 563 000e 7047     		bx	lr
 564              	.L44:
 565              		.align	2
 566              	.L43:
 567 0010 00000000 		.word	.LANCHOR14
 568              		.cfi_endproc
 569              	.LFE137:
 571              		.section	.text.TX2_delay_update,"ax",%progbits
 572              		.align	1
 573              		.global	TX2_delay_update
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 577              		.fpu fpv4-sp-d16
 579              	TX2_delay_update:
 580              	.LFB138:
 481:Core/Src/main.c **** 
 482:Core/Src/main.c **** void TX2_delay_update(void){
 581              		.loc 1 482 28 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** 	if (TX2_delay_val==50) return;
 586              		.loc 1 484 2 view .LVU141
 587              		.loc 1 484 19 is_stmt 0 view .LVU142
 588 0000 034B     		ldr	r3, .L47
 589 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 590              		.loc 1 484 5 view .LVU143
 591 0004 322B     		cmp	r3, #50
 592 0006 02D0     		beq	.L45
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** 	TX2_delay_val-=50;
 593              		.loc 1 486 2 is_stmt 1 view .LVU144
 594              		.loc 1 486 15 is_stmt 0 view .LVU145
 595 0008 323B     		subs	r3, r3, #50
 596 000a 014A     		ldr	r2, .L47
 597 000c 1370     		strb	r3, [r2]
 598              	.L45:
 487:Core/Src/main.c **** }
 599              		.loc 1 487 1 view .LVU146
 600 000e 7047     		bx	lr
 601              	.L48:
 602              		.align	2
 603              	.L47:
 604 0010 00000000 		.word	.LANCHOR18
ARM GAS  /tmp/ccjwca7l.s 			page 21


 605              		.cfi_endproc
 606              	.LFE138:
 608              		.section	.text.RS485_Read_Message,"ax",%progbits
 609              		.align	1
 610              		.global	RS485_Read_Message
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv4-sp-d16
 616              	RS485_Read_Message:
 617              	.LFB139:
 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** 
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** void RS485_Read_Message(void){
 618              		.loc 1 491 30 is_stmt 1 view -0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   //if (transmission_f) return;
 494:Core/Src/main.c ****   if(rx2_buffer.tail==rx2_buffer.head) return;
 622              		.loc 1 494 3 view .LVU148
 623              		.loc 1 494 16 is_stmt 0 view .LVU149
 624 0000 234B     		ldr	r3, .L67
 625 0002 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 626              		.loc 1 494 33 view .LVU150
 627 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 628              		.loc 1 494 5 view .LVU151
 629 0006 9A42     		cmp	r2, r3
 630 0008 41D0     		beq	.L63
 491:Core/Src/main.c **** 
 631              		.loc 1 491 30 view .LVU152
 632 000a 10B5     		push	{r4, lr}
 633              	.LCFI4:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 4, -8
 636              		.cfi_offset 14, -4
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   buffer_to_message(&rx2_buffer, RX_msg);
 637              		.loc 1 496 3 is_stmt 1 view .LVU153
 638 000c 214C     		ldr	r4, .L67+4
 639 000e 2146     		mov	r1, r4
 640 0010 1F48     		ldr	r0, .L67
 641 0012 FFF7FEFF 		bl	buffer_to_message
 642              	.LVL19:
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****  // if (check_checksum(&RX_msg)==CHECKSUM_ERROR) return;
 499:Core/Src/main.c ****   if (RX_msg[0]!= ID) return;
 643              		.loc 1 499 3 view .LVU154
 644              		.loc 1 499 13 is_stmt 0 view .LVU155
 645 0016 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 646              		.loc 1 499 16 view .LVU156
 647 0018 1F4B     		ldr	r3, .L67+8
 648 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 649              		.loc 1 499 6 view .LVU157
 650 001c 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccjwca7l.s 			page 22


 651 001e 02D1     		bne	.L49
 500:Core/Src/main.c **** /*
 501:Core/Src/main.c ****   if (RX_msg.function_code == FUNC_READ)
 502:Core/Src/main.c ****   {
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   }
 505:Core/Src/main.c ****   */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****    if (RX_msg[1] == FUNC_WRITE)
 652              		.loc 1 507 4 is_stmt 1 view .LVU158
 653              		.loc 1 507 14 is_stmt 0 view .LVU159
 654 0020 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 655              		.loc 1 507 7 view .LVU160
 656 0022 012B     		cmp	r3, #1
 657 0024 00D0     		beq	.L66
 658              	.L49:
 508:Core/Src/main.c ****   { 
 509:Core/Src/main.c ****     
 510:Core/Src/main.c **** 	  switch(RX_msg[2])
 511:Core/Src/main.c **** 	{
 512:Core/Src/main.c **** 		case '0':
 513:Core/Src/main.c **** 			digit1=0;
 514:Core/Src/main.c **** 			break;
 515:Core/Src/main.c **** 		case '1':
 516:Core/Src/main.c **** 			digit1=1;
 517:Core/Src/main.c **** 			break;
 518:Core/Src/main.c **** 		case '2':
 519:Core/Src/main.c **** 			digit1=2;
 520:Core/Src/main.c **** 			break;
 521:Core/Src/main.c **** 		case '3':
 522:Core/Src/main.c **** 			digit1=3;
 523:Core/Src/main.c **** 			break;
 524:Core/Src/main.c **** 		case '4':
 525:Core/Src/main.c **** 			digit1=4;
 526:Core/Src/main.c **** 			break;
 527:Core/Src/main.c **** 		case '5':
 528:Core/Src/main.c **** 			digit1=5;
 529:Core/Src/main.c **** 			break;
 530:Core/Src/main.c **** 		case '6':
 531:Core/Src/main.c **** 			digit1=6;
 532:Core/Src/main.c **** 			break;
 533:Core/Src/main.c **** 		case '7':
 534:Core/Src/main.c **** 			digit1=7;
 535:Core/Src/main.c **** 			break;
 536:Core/Src/main.c **** 		case '8':
 537:Core/Src/main.c **** 			digit1=8;
 538:Core/Src/main.c **** 			break;
 539:Core/Src/main.c **** 		case '9':
 540:Core/Src/main.c **** 			digit1=9;
 541:Core/Src/main.c **** 			break;
 542:Core/Src/main.c **** 		default:
 543:Core/Src/main.c **** 			break;
 544:Core/Src/main.c **** 	}
 545:Core/Src/main.c ****   }
 546:Core/Src/main.c ****   
 547:Core/Src/main.c **** }
 659              		.loc 1 547 1 view .LVU161
ARM GAS  /tmp/ccjwca7l.s 			page 23


 660 0026 10BD     		pop	{r4, pc}
 661              	.L66:
 510:Core/Src/main.c **** 	{
 662              		.loc 1 510 4 is_stmt 1 view .LVU162
 510:Core/Src/main.c **** 	{
 663              		.loc 1 510 17 is_stmt 0 view .LVU163
 664 0028 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 510:Core/Src/main.c **** 	{
 665              		.loc 1 510 4 view .LVU164
 666 002a 303B     		subs	r3, r3, #48
 667 002c 092B     		cmp	r3, #9
 668 002e FAD8     		bhi	.L49
 669 0030 DFE803F0 		tbb	[pc, r3]
 670              	.L52:
 671 0034 05       		.byte	(.L61-.L52)/2
 672 0035 09       		.byte	(.L60-.L52)/2
 673 0036 0D       		.byte	(.L59-.L52)/2
 674 0037 11       		.byte	(.L58-.L52)/2
 675 0038 15       		.byte	(.L57-.L52)/2
 676 0039 19       		.byte	(.L56-.L52)/2
 677 003a 1D       		.byte	(.L55-.L52)/2
 678 003b 21       		.byte	(.L54-.L52)/2
 679 003c 25       		.byte	(.L53-.L52)/2
 680 003d 29       		.byte	(.L51-.L52)/2
 681              		.p2align 1
 682              	.L61:
 513:Core/Src/main.c **** 			break;
 683              		.loc 1 513 4 is_stmt 1 view .LVU165
 513:Core/Src/main.c **** 			break;
 684              		.loc 1 513 10 is_stmt 0 view .LVU166
 685 003e 174B     		ldr	r3, .L67+12
 686 0040 0022     		movs	r2, #0
 687 0042 1A70     		strb	r2, [r3]
 514:Core/Src/main.c **** 		case '1':
 688              		.loc 1 514 4 is_stmt 1 view .LVU167
 689 0044 EFE7     		b	.L49
 690              	.L60:
 516:Core/Src/main.c **** 			break;
 691              		.loc 1 516 4 view .LVU168
 516:Core/Src/main.c **** 			break;
 692              		.loc 1 516 10 is_stmt 0 view .LVU169
 693 0046 154B     		ldr	r3, .L67+12
 694 0048 0122     		movs	r2, #1
 695 004a 1A70     		strb	r2, [r3]
 517:Core/Src/main.c **** 		case '2':
 696              		.loc 1 517 4 is_stmt 1 view .LVU170
 697 004c EBE7     		b	.L49
 698              	.L59:
 519:Core/Src/main.c **** 			break;
 699              		.loc 1 519 4 view .LVU171
 519:Core/Src/main.c **** 			break;
 700              		.loc 1 519 10 is_stmt 0 view .LVU172
 701 004e 134B     		ldr	r3, .L67+12
 702 0050 0222     		movs	r2, #2
 703 0052 1A70     		strb	r2, [r3]
 520:Core/Src/main.c **** 		case '3':
 704              		.loc 1 520 4 is_stmt 1 view .LVU173
ARM GAS  /tmp/ccjwca7l.s 			page 24


 705 0054 E7E7     		b	.L49
 706              	.L58:
 522:Core/Src/main.c **** 			break;
 707              		.loc 1 522 4 view .LVU174
 522:Core/Src/main.c **** 			break;
 708              		.loc 1 522 10 is_stmt 0 view .LVU175
 709 0056 114B     		ldr	r3, .L67+12
 710 0058 0322     		movs	r2, #3
 711 005a 1A70     		strb	r2, [r3]
 523:Core/Src/main.c **** 		case '4':
 712              		.loc 1 523 4 is_stmt 1 view .LVU176
 713 005c E3E7     		b	.L49
 714              	.L57:
 525:Core/Src/main.c **** 			break;
 715              		.loc 1 525 4 view .LVU177
 525:Core/Src/main.c **** 			break;
 716              		.loc 1 525 10 is_stmt 0 view .LVU178
 717 005e 0F4B     		ldr	r3, .L67+12
 718 0060 0422     		movs	r2, #4
 719 0062 1A70     		strb	r2, [r3]
 526:Core/Src/main.c **** 		case '5':
 720              		.loc 1 526 4 is_stmt 1 view .LVU179
 721 0064 DFE7     		b	.L49
 722              	.L56:
 528:Core/Src/main.c **** 			break;
 723              		.loc 1 528 4 view .LVU180
 528:Core/Src/main.c **** 			break;
 724              		.loc 1 528 10 is_stmt 0 view .LVU181
 725 0066 0D4B     		ldr	r3, .L67+12
 726 0068 0522     		movs	r2, #5
 727 006a 1A70     		strb	r2, [r3]
 529:Core/Src/main.c **** 		case '6':
 728              		.loc 1 529 4 is_stmt 1 view .LVU182
 729 006c DBE7     		b	.L49
 730              	.L55:
 531:Core/Src/main.c **** 			break;
 731              		.loc 1 531 4 view .LVU183
 531:Core/Src/main.c **** 			break;
 732              		.loc 1 531 10 is_stmt 0 view .LVU184
 733 006e 0B4B     		ldr	r3, .L67+12
 734 0070 0622     		movs	r2, #6
 735 0072 1A70     		strb	r2, [r3]
 532:Core/Src/main.c **** 		case '7':
 736              		.loc 1 532 4 is_stmt 1 view .LVU185
 737 0074 D7E7     		b	.L49
 738              	.L54:
 534:Core/Src/main.c **** 			break;
 739              		.loc 1 534 4 view .LVU186
 534:Core/Src/main.c **** 			break;
 740              		.loc 1 534 10 is_stmt 0 view .LVU187
 741 0076 094B     		ldr	r3, .L67+12
 742 0078 0722     		movs	r2, #7
 743 007a 1A70     		strb	r2, [r3]
 535:Core/Src/main.c **** 		case '8':
 744              		.loc 1 535 4 is_stmt 1 view .LVU188
 745 007c D3E7     		b	.L49
 746              	.L53:
ARM GAS  /tmp/ccjwca7l.s 			page 25


 537:Core/Src/main.c **** 			break;
 747              		.loc 1 537 4 view .LVU189
 537:Core/Src/main.c **** 			break;
 748              		.loc 1 537 10 is_stmt 0 view .LVU190
 749 007e 074B     		ldr	r3, .L67+12
 750 0080 0822     		movs	r2, #8
 751 0082 1A70     		strb	r2, [r3]
 538:Core/Src/main.c **** 		case '9':
 752              		.loc 1 538 4 is_stmt 1 view .LVU191
 753 0084 CFE7     		b	.L49
 754              	.L51:
 540:Core/Src/main.c **** 			break;
 755              		.loc 1 540 4 view .LVU192
 540:Core/Src/main.c **** 			break;
 756              		.loc 1 540 10 is_stmt 0 view .LVU193
 757 0086 054B     		ldr	r3, .L67+12
 758 0088 0922     		movs	r2, #9
 759 008a 1A70     		strb	r2, [r3]
 541:Core/Src/main.c **** 		default:
 760              		.loc 1 541 4 is_stmt 1 view .LVU194
 761 008c CBE7     		b	.L49
 762              	.L63:
 763              	.LCFI5:
 764              		.cfi_def_cfa_offset 0
 765              		.cfi_restore 4
 766              		.cfi_restore 14
 767 008e 7047     		bx	lr
 768              	.L68:
 769              		.align	2
 770              	.L67:
 771 0090 00000000 		.word	.LANCHOR19
 772 0094 00000000 		.word	.LANCHOR20
 773 0098 00000000 		.word	.LANCHOR21
 774 009c 00000000 		.word	.LANCHOR8
 775              		.cfi_endproc
 776              	.LFE139:
 778              		.section	.text.RS485_Send_Message,"ax",%progbits
 779              		.align	1
 780              		.global	RS485_Send_Message
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv4-sp-d16
 786              	RS485_Send_Message:
 787              	.LFB140:
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** void RS485_Send_Message(void)
 550:Core/Src/main.c **** {
 788              		.loc 1 550 1 view -0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792 0000 38B5     		push	{r3, r4, r5, lr}
 793              	.LCFI6:
 794              		.cfi_def_cfa_offset 16
 795              		.cfi_offset 3, -16
 796              		.cfi_offset 4, -12
ARM GAS  /tmp/ccjwca7l.s 			page 26


 797              		.cfi_offset 5, -8
 798              		.cfi_offset 14, -4
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****    //uint8_t *pbuf_tx = (uint8_t *)&msg; 
 553:Core/Src/main.c ****    HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 799              		.loc 1 553 4 view .LVU196
 800 0002 104D     		ldr	r5, .L71
 801 0004 0122     		movs	r2, #1
 802 0006 4FF48051 		mov	r1, #4096
 803 000a 2846     		mov	r0, r5
 804 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 805              	.LVL20:
 554:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,&start_cmd,1,10);
 806              		.loc 1 554 4 view .LVU197
 807 0010 0D4C     		ldr	r4, .L71+4
 808 0012 0A23     		movs	r3, #10
 809 0014 0122     		movs	r2, #1
 810 0016 0D49     		ldr	r1, .L71+8
 811 0018 2046     		mov	r0, r4
 812 001a FFF7FEFF 		bl	HAL_UART_Transmit
 813              	.LVL21:
 555:Core/Src/main.c ****   
 556:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,TX_msg,sizeof(TX_msg),10);
 814              		.loc 1 556 4 view .LVU198
 815 001e 0A23     		movs	r3, #10
 816 0020 0422     		movs	r2, #4
 817 0022 0B49     		ldr	r1, .L71+12
 818 0024 2046     		mov	r0, r4
 819 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 820              	.LVL22:
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,&stop_cmd,1,10);
 821              		.loc 1 558 4 view .LVU199
 822 002a 0A23     		movs	r3, #10
 823 002c 0122     		movs	r2, #1
 824 002e 0949     		ldr	r1, .L71+16
 825 0030 2046     		mov	r0, r4
 826 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 827              	.LVL23:
 559:Core/Src/main.c ****   
 560:Core/Src/main.c ****    HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 828              		.loc 1 560 4 view .LVU200
 829 0036 0022     		movs	r2, #0
 830 0038 4FF48051 		mov	r1, #4096
 831 003c 2846     		mov	r0, r5
 832 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 833              	.LVL24:
 561:Core/Src/main.c **** 
 562:Core/Src/main.c **** }
 834              		.loc 1 562 1 is_stmt 0 view .LVU201
 835 0042 38BD     		pop	{r3, r4, r5, pc}
 836              	.L72:
 837              		.align	2
 838              	.L71:
 839 0044 00000240 		.word	1073872896
 840 0048 00000000 		.word	huart4
 841 004c 00000000 		.word	.LANCHOR22
ARM GAS  /tmp/ccjwca7l.s 			page 27


 842 0050 00000000 		.word	.LANCHOR23
 843 0054 00000000 		.word	.LANCHOR24
 844              		.cfi_endproc
 845              	.LFE140:
 847              		.section	.text.main_task,"ax",%progbits
 848              		.align	1
 849              		.global	main_task
 850              		.syntax unified
 851              		.thumb
 852              		.thumb_func
 853              		.fpu fpv4-sp-d16
 855              	main_task:
 856              	.LFB136:
 393:Core/Src/main.c **** 
 857              		.loc 1 393 1 is_stmt 1 view -0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861 0000 08B5     		push	{r3, lr}
 862              	.LCFI7:
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 3, -8
 865              		.cfi_offset 14, -4
 395:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 866              		.loc 1 395 2 view .LVU203
 395:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 867              		.loc 1 395 18 is_stmt 0 view .LVU204
 868 0002 264B     		ldr	r3, .L86
 869 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 395:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 870              		.loc 1 395 37 view .LVU205
 871 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 395:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 872              		.loc 1 395 5 view .LVU206
 873 0008 9A42     		cmp	r2, r3
 874 000a 05D1     		bne	.L85
 875              	.L74:
 399:Core/Src/main.c **** 	{
 876              		.loc 1 399 2 is_stmt 1 view .LVU207
 877 000c 244B     		ldr	r3, .L86+4
 878 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 879 0010 43B1     		cbz	r3, .L75
 880 0012 012B     		cmp	r3, #1
 881 0014 18D0     		beq	.L76
 882              	.L73:
 472:Core/Src/main.c **** 
 883              		.loc 1 472 1 is_stmt 0 view .LVU208
 884 0016 08BD     		pop	{r3, pc}
 885              	.L85:
 396:Core/Src/main.c **** 	}
 886              		.loc 1 396 3 is_stmt 1 view .LVU209
 396:Core/Src/main.c **** 	}
 887              		.loc 1 396 11 is_stmt 0 view .LVU210
 888 0018 2048     		ldr	r0, .L86
 889 001a FFF7FEFF 		bl	buffer_pop
 890              	.LVL25:
 396:Core/Src/main.c **** 	}
ARM GAS  /tmp/ccjwca7l.s 			page 28


 891              		.loc 1 396 9 view .LVU211
 892 001e 214B     		ldr	r3, .L86+8
 893 0020 1870     		strb	r0, [r3]
 894 0022 F3E7     		b	.L74
 895              	.L75:
 403:Core/Src/main.c **** 				{
 896              		.loc 1 403 4 is_stmt 1 view .LVU212
 897 0024 1F4B     		ldr	r3, .L86+8
 898 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 899 0028 012B     		cmp	r3, #1
 900 002a 04D0     		beq	.L78
 901 002c 072B     		cmp	r3, #7
 902 002e F2D1     		bne	.L73
 415:Core/Src/main.c **** 												
 903              		.loc 1 415 7 view .LVU213
 904 0030 FFF7FEFF 		bl	RS485_Read_Message
 905              	.LVL26:
 417:Core/Src/main.c **** 						/*
 906              		.loc 1 417 7 view .LVU214
 907 0034 EFE7     		b	.L73
 908              	.L78:
 408:Core/Src/main.c **** 						d_timer_TX1=250;
 909              		.loc 1 408 7 view .LVU215
 408:Core/Src/main.c **** 						d_timer_TX1=250;
 910              		.loc 1 408 20 is_stmt 0 view .LVU216
 911 0036 FA23     		movs	r3, #250
 912 0038 1B4A     		ldr	r2, .L86+12
 913 003a 1370     		strb	r3, [r2]
 409:Core/Src/main.c **** 						///Set_Transmitter_Port1();
 914              		.loc 1 409 7 is_stmt 1 view .LVU217
 409:Core/Src/main.c **** 						///Set_Transmitter_Port1();
 915              		.loc 1 409 18 is_stmt 0 view .LVU218
 916 003c 1B4A     		ldr	r2, .L86+16
 917 003e 1370     		strb	r3, [r2]
 411:Core/Src/main.c **** 												
 918              		.loc 1 411 7 is_stmt 1 view .LVU219
 411:Core/Src/main.c **** 												
 919              		.loc 1 411 13 is_stmt 0 view .LVU220
 920 0040 174B     		ldr	r3, .L86+4
 921 0042 0122     		movs	r2, #1
 922 0044 1A70     		strb	r2, [r3]
 413:Core/Src/main.c **** 					case EVENT_RX_COMPLETE:
 923              		.loc 1 413 7 is_stmt 1 view .LVU221
 924 0046 E6E7     		b	.L73
 925              	.L76:
 431:Core/Src/main.c **** 
 926              		.loc 1 431 4 view .LVU222
 927 0048 164B     		ldr	r3, .L86+8
 928 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 929 004c 052B     		cmp	r3, #5
 930 004e 07D0     		beq	.L80
 931 0050 072B     		cmp	r3, #7
 932 0052 1FD0     		beq	.L81
 933 0054 032B     		cmp	r3, #3
 934 0056 DED1     		bne	.L73
 460:Core/Src/main.c **** 
 935              		.loc 1 460 6 view .LVU223
ARM GAS  /tmp/ccjwca7l.s 			page 29


 460:Core/Src/main.c **** 
 936              		.loc 1 460 12 is_stmt 0 view .LVU224
 937 0058 114B     		ldr	r3, .L86+4
 938 005a 0022     		movs	r2, #0
 939 005c 1A70     		strb	r2, [r3]
 463:Core/Src/main.c **** 
 940              		.loc 1 463 6 is_stmt 1 view .LVU225
 472:Core/Src/main.c **** 
 941              		.loc 1 472 1 is_stmt 0 view .LVU226
 942 005e DAE7     		b	.L73
 943              	.L80:
 434:Core/Src/main.c **** 						TX_msg[1] = FUNC_WRITE;
 944              		.loc 1 434 7 is_stmt 1 view .LVU227
 434:Core/Src/main.c **** 						TX_msg[1] = FUNC_WRITE;
 945              		.loc 1 434 17 is_stmt 0 view .LVU228
 946 0060 134A     		ldr	r2, .L86+20
 947 0062 0223     		movs	r3, #2
 948 0064 1370     		strb	r3, [r2]
 435:Core/Src/main.c **** 						TX_msg[2] = tx2_buffer[p_tx2++];
 949              		.loc 1 435 7 is_stmt 1 view .LVU229
 435:Core/Src/main.c **** 						TX_msg[2] = tx2_buffer[p_tx2++];
 950              		.loc 1 435 17 is_stmt 0 view .LVU230
 951 0066 0123     		movs	r3, #1
 952 0068 5370     		strb	r3, [r2, #1]
 436:Core/Src/main.c **** 						if (p_tx2>8){
 953              		.loc 1 436 7 is_stmt 1 view .LVU231
 436:Core/Src/main.c **** 						if (p_tx2>8){
 954              		.loc 1 436 35 is_stmt 0 view .LVU232
 955 006a 1248     		ldr	r0, .L86+24
 956 006c 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 957 006e CB18     		adds	r3, r1, r3
 958 0070 DBB2     		uxtb	r3, r3
 959 0072 0370     		strb	r3, [r0]
 436:Core/Src/main.c **** 						if (p_tx2>8){
 960              		.loc 1 436 29 view .LVU233
 961 0074 1048     		ldr	r0, .L86+28
 962 0076 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 436:Core/Src/main.c **** 						if (p_tx2>8){
 963              		.loc 1 436 17 view .LVU234
 964 0078 9170     		strb	r1, [r2, #2]
 437:Core/Src/main.c **** 							p_tx2=0;
 965              		.loc 1 437 7 is_stmt 1 view .LVU235
 437:Core/Src/main.c **** 							p_tx2=0;
 966              		.loc 1 437 10 is_stmt 0 view .LVU236
 967 007a 082B     		cmp	r3, #8
 968 007c 02D9     		bls	.L83
 438:Core/Src/main.c **** 						}
 969              		.loc 1 438 8 is_stmt 1 view .LVU237
 438:Core/Src/main.c **** 						}
 970              		.loc 1 438 13 is_stmt 0 view .LVU238
 971 007e 0D4B     		ldr	r3, .L86+24
 972 0080 0022     		movs	r2, #0
 973 0082 1A70     		strb	r2, [r3]
 974              	.L83:
 441:Core/Src/main.c **** 					
 975              		.loc 1 441 7 is_stmt 1 view .LVU239
 976 0084 FFF7FEFF 		bl	RS485_Send_Message
ARM GAS  /tmp/ccjwca7l.s 			page 30


 977              	.LVL27:
 443:Core/Src/main.c **** 						event=0;
 978              		.loc 1 443 7 view .LVU240
 979 0088 FFF7FEFF 		bl	TX1_delay_update
 980              	.LVL28:
 444:Core/Src/main.c **** 						break;
 981              		.loc 1 444 7 view .LVU241
 444:Core/Src/main.c **** 						break;
 982              		.loc 1 444 12 is_stmt 0 view .LVU242
 983 008c 054B     		ldr	r3, .L86+8
 984 008e 0022     		movs	r2, #0
 985 0090 1A70     		strb	r2, [r3]
 445:Core/Src/main.c **** 				case EVENT_RX_COMPLETE:
 986              		.loc 1 445 7 is_stmt 1 view .LVU243
 987 0092 C0E7     		b	.L73
 988              	.L81:
 447:Core/Src/main.c **** 												
 989              		.loc 1 447 7 view .LVU244
 990 0094 FFF7FEFF 		bl	RS485_Read_Message
 991              	.LVL29:
 449:Core/Src/main.c **** 					/*
 992              		.loc 1 449 7 view .LVU245
 993 0098 BDE7     		b	.L73
 994              	.L87:
 995 009a 00BF     		.align	2
 996              	.L86:
 997 009c 00000000 		.word	.LANCHOR15
 998 00a0 00000000 		.word	.LANCHOR26
 999 00a4 00000000 		.word	.LANCHOR25
 1000 00a8 00000000 		.word	.LANCHOR14
 1001 00ac 00000000 		.word	.LANCHOR13
 1002 00b0 00000000 		.word	.LANCHOR23
 1003 00b4 00000000 		.word	.LANCHOR27
 1004 00b8 00000000 		.word	.LANCHOR28
 1005              		.cfi_endproc
 1006              	.LFE136:
 1008              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1009              		.align	1
 1010              		.global	HAL_TIM_PeriodElapsedCallback
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu fpv4-sp-d16
 1016              	HAL_TIM_PeriodElapsedCallback:
 1017              	.LVL30:
 1018              	.LFB141:
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 567:Core/Src/main.c **** {
 1019              		.loc 1 567 1 view -0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 568:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
ARM GAS  /tmp/ccjwca7l.s 			page 31


 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****    if(htim == &htim4)
 1024              		.loc 1 570 4 view .LVU247
 1025              		.loc 1 570 6 is_stmt 0 view .LVU248
 1026 0000 034B     		ldr	r3, .L91
 1027 0002 8342     		cmp	r3, r0
 1028 0004 00D0     		beq	.L90
 1029              	.L88:
 571:Core/Src/main.c ****   {
 572:Core/Src/main.c **** 	  f_timer_10ms=1;
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   }
 575:Core/Src/main.c **** }
 1030              		.loc 1 575 1 view .LVU249
 1031 0006 7047     		bx	lr
 1032              	.L90:
 572:Core/Src/main.c **** 
 1033              		.loc 1 572 4 is_stmt 1 view .LVU250
 572:Core/Src/main.c **** 
 1034              		.loc 1 572 16 is_stmt 0 view .LVU251
 1035 0008 024B     		ldr	r3, .L91+4
 1036 000a 0122     		movs	r2, #1
 1037 000c 1A70     		strb	r2, [r3]
 1038              		.loc 1 575 1 view .LVU252
 1039 000e FAE7     		b	.L88
 1040              	.L92:
 1041              		.align	2
 1042              	.L91:
 1043 0010 00000000 		.word	htim4
 1044 0014 00000000 		.word	.LANCHOR9
 1045              		.cfi_endproc
 1046              	.LFE141:
 1048              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1049              		.align	1
 1050              		.global	HAL_UART_RxCpltCallback
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1054              		.fpu fpv4-sp-d16
 1056              	HAL_UART_RxCpltCallback:
 1057              	.LVL31:
 1058              	.LFB142:
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** 
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 580:Core/Src/main.c **** {
 1059              		.loc 1 580 1 is_stmt 1 view -0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		.loc 1 580 1 is_stmt 0 view .LVU254
 1064 0000 08B5     		push	{r3, lr}
 1065              	.LCFI8:
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 3, -8
 1068              		.cfi_offset 14, -4
ARM GAS  /tmp/ccjwca7l.s 			page 32


 581:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 582:Core/Src/main.c **** 
 583:Core/Src/main.c **** 	 if(huart == &huart5)
 1069              		.loc 1 583 3 is_stmt 1 view .LVU255
 1070              		.loc 1 583 5 is_stmt 0 view .LVU256
 1071 0002 114B     		ldr	r3, .L103
 1072 0004 8342     		cmp	r3, r0
 1073 0006 00D0     		beq	.L99
 1074              	.LVL32:
 1075              	.L93:
 584:Core/Src/main.c **** 	{
 585:Core/Src/main.c **** 		if (rx_temp==0x2)
 586:Core/Src/main.c **** 		{
 587:Core/Src/main.c **** 				transmission_f=1;
 588:Core/Src/main.c **** 		}
 589:Core/Src/main.c **** 		else if (rx_temp==0x3)
 590:Core/Src/main.c **** 		{
 591:Core/Src/main.c **** 				transmission_f=0;
 592:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 593:Core/Src/main.c **** 		}
 594:Core/Src/main.c **** 		else{
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** 			if (transmission_f)
 597:Core/Src/main.c **** 			{
 598:Core/Src/main.c **** 				 buffer_push(&rx2_buffer,rx_temp);
 599:Core/Src/main.c **** 			}
 600:Core/Src/main.c **** 		}
 601:Core/Src/main.c **** 
 602:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart5, &rx_temp, 1);
 603:Core/Src/main.c ****     }
 604:Core/Src/main.c ****   
 605:Core/Src/main.c **** 
 606:Core/Src/main.c **** }
 1076              		.loc 1 606 1 view .LVU257
 1077 0008 08BD     		pop	{r3, pc}
 1078              	.LVL33:
 1079              	.L99:
 585:Core/Src/main.c **** 		{
 1080              		.loc 1 585 3 is_stmt 1 view .LVU258
 585:Core/Src/main.c **** 		{
 1081              		.loc 1 585 14 is_stmt 0 view .LVU259
 1082 000a 104B     		ldr	r3, .L103+4
 1083 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 585:Core/Src/main.c **** 		{
 1084              		.loc 1 585 6 view .LVU260
 1085 000e 0229     		cmp	r1, #2
 1086 0010 0AD0     		beq	.L100
 589:Core/Src/main.c **** 		{
 1087              		.loc 1 589 8 is_stmt 1 view .LVU261
 589:Core/Src/main.c **** 		{
 1088              		.loc 1 589 11 is_stmt 0 view .LVU262
 1089 0012 0329     		cmp	r1, #3
 1090 0014 0CD0     		beq	.L101
 596:Core/Src/main.c **** 			{
 1091              		.loc 1 596 4 is_stmt 1 view .LVU263
 596:Core/Src/main.c **** 			{
 1092              		.loc 1 596 8 is_stmt 0 view .LVU264
ARM GAS  /tmp/ccjwca7l.s 			page 33


 1093 0016 0E4B     		ldr	r3, .L103+8
 1094 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 596:Core/Src/main.c **** 			{
 1095              		.loc 1 596 7 view .LVU265
 1096 001a 8BB9     		cbnz	r3, .L102
 1097              	.LVL34:
 1098              	.L96:
 602:Core/Src/main.c ****     }
 1099              		.loc 1 602 3 is_stmt 1 view .LVU266
 1100 001c 0122     		movs	r2, #1
 1101 001e 0B49     		ldr	r1, .L103+4
 1102 0020 0948     		ldr	r0, .L103
 1103 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1104              	.LVL35:
 1105              		.loc 1 606 1 is_stmt 0 view .LVU267
 1106 0026 EFE7     		b	.L93
 1107              	.LVL36:
 1108              	.L100:
 587:Core/Src/main.c **** 		}
 1109              		.loc 1 587 5 is_stmt 1 view .LVU268
 587:Core/Src/main.c **** 		}
 1110              		.loc 1 587 19 is_stmt 0 view .LVU269
 1111 0028 094B     		ldr	r3, .L103+8
 1112 002a 0122     		movs	r2, #1
 1113 002c 1A70     		strb	r2, [r3]
 1114 002e F5E7     		b	.L96
 1115              	.L101:
 591:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 1116              		.loc 1 591 5 is_stmt 1 view .LVU270
 591:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 1117              		.loc 1 591 19 is_stmt 0 view .LVU271
 1118 0030 074B     		ldr	r3, .L103+8
 1119 0032 0022     		movs	r2, #0
 1120 0034 1A70     		strb	r2, [r3]
 592:Core/Src/main.c **** 		}
 1121              		.loc 1 592 5 is_stmt 1 view .LVU272
 1122 0036 0721     		movs	r1, #7
 1123 0038 0648     		ldr	r0, .L103+12
 1124              	.LVL37:
 592:Core/Src/main.c **** 		}
 1125              		.loc 1 592 5 is_stmt 0 view .LVU273
 1126 003a FFF7FEFF 		bl	buffer_push
 1127              	.LVL38:
 1128 003e EDE7     		b	.L96
 1129              	.LVL39:
 1130              	.L102:
 598:Core/Src/main.c **** 			}
 1131              		.loc 1 598 6 is_stmt 1 view .LVU274
 1132 0040 0548     		ldr	r0, .L103+16
 1133              	.LVL40:
 598:Core/Src/main.c **** 			}
 1134              		.loc 1 598 6 is_stmt 0 view .LVU275
 1135 0042 FFF7FEFF 		bl	buffer_push
 1136              	.LVL41:
 1137 0046 E9E7     		b	.L96
 1138              	.L104:
 1139              		.align	2
ARM GAS  /tmp/ccjwca7l.s 			page 34


 1140              	.L103:
 1141 0048 00000000 		.word	huart5
 1142 004c 00000000 		.word	.LANCHOR29
 1143 0050 00000000 		.word	.LANCHOR30
 1144 0054 00000000 		.word	.LANCHOR15
 1145 0058 00000000 		.word	.LANCHOR19
 1146              		.cfi_endproc
 1147              	.LFE142:
 1149              		.section	.text.Error_Handler,"ax",%progbits
 1150              		.align	1
 1151              		.global	Error_Handler
 1152              		.syntax unified
 1153              		.thumb
 1154              		.thumb_func
 1155              		.fpu fpv4-sp-d16
 1157              	Error_Handler:
 1158              	.LFB143:
 607:Core/Src/main.c **** /* USER CODE END 4 */
 608:Core/Src/main.c **** 
 609:Core/Src/main.c **** /**
 610:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 611:Core/Src/main.c ****   * @retval None
 612:Core/Src/main.c ****   */
 613:Core/Src/main.c **** void Error_Handler(void)
 614:Core/Src/main.c **** {
 1159              		.loc 1 614 1 is_stmt 1 view -0
 1160              		.cfi_startproc
 1161              		@ Volatile: function does not return.
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 1164              		@ link register save eliminated.
 615:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 616:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 617:Core/Src/main.c ****   __disable_irq();
 1165              		.loc 1 617 3 view .LVU277
 1166              	.LBB4:
 1167              	.LBI4:
 1168              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/ccjwca7l.s 			page 35


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /tmp/ccjwca7l.s 			page 36


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjwca7l.s 			page 37


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1169              		.loc 2 140 27 view .LVU278
 1170              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1171              		.loc 2 142 3 view .LVU279
 1172              		.syntax unified
 1173              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1174 0000 72B6     		cpsid i
 1175              	@ 0 "" 2
 1176              		.thumb
 1177              		.syntax unified
 1178              	.L106:
 1179              	.LBE5:
 1180              	.LBE4:
 618:Core/Src/main.c ****   while (1)
 1181              		.loc 1 618 3 discriminator 1 view .LVU280
 619:Core/Src/main.c ****   {
 620:Core/Src/main.c ****   }
 1182              		.loc 1 620 3 discriminator 1 view .LVU281
 618:Core/Src/main.c ****   while (1)
 1183              		.loc 1 618 9 discriminator 1 view .LVU282
 1184 0002 FEE7     		b	.L106
 1185              		.cfi_endproc
 1186              	.LFE143:
 1188              		.section	.text.SystemClock_Config,"ax",%progbits
 1189              		.align	1
 1190              		.global	SystemClock_Config
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv4-sp-d16
 1196              	SystemClock_Config:
 1197              	.LFB131:
 212:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1198              		.loc 1 212 1 view -0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 80
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202 0000 00B5     		push	{lr}
 1203              	.LCFI9:
 1204              		.cfi_def_cfa_offset 4
 1205              		.cfi_offset 14, -4
 1206 0002 95B0     		sub	sp, sp, #84
 1207              	.LCFI10:
 1208              		.cfi_def_cfa_offset 88
 213:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1209              		.loc 1 213 3 view .LVU284
 213:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1210              		.loc 1 213 22 is_stmt 0 view .LVU285
 1211 0004 3022     		movs	r2, #48
ARM GAS  /tmp/ccjwca7l.s 			page 38


 1212 0006 0021     		movs	r1, #0
 1213 0008 08A8     		add	r0, sp, #32
 1214 000a FFF7FEFF 		bl	memset
 1215              	.LVL42:
 214:Core/Src/main.c **** 
 1216              		.loc 1 214 3 is_stmt 1 view .LVU286
 214:Core/Src/main.c **** 
 1217              		.loc 1 214 22 is_stmt 0 view .LVU287
 1218 000e 0023     		movs	r3, #0
 1219 0010 0393     		str	r3, [sp, #12]
 1220 0012 0493     		str	r3, [sp, #16]
 1221 0014 0593     		str	r3, [sp, #20]
 1222 0016 0693     		str	r3, [sp, #24]
 1223 0018 0793     		str	r3, [sp, #28]
 218:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1224              		.loc 1 218 3 is_stmt 1 view .LVU288
 1225              	.LBB6:
 218:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1226              		.loc 1 218 3 view .LVU289
 1227 001a 0193     		str	r3, [sp, #4]
 218:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1228              		.loc 1 218 3 view .LVU290
 1229 001c 204A     		ldr	r2, .L113
 1230 001e 116C     		ldr	r1, [r2, #64]
 1231 0020 41F08051 		orr	r1, r1, #268435456
 1232 0024 1164     		str	r1, [r2, #64]
 218:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1233              		.loc 1 218 3 view .LVU291
 1234 0026 126C     		ldr	r2, [r2, #64]
 1235 0028 02F08052 		and	r2, r2, #268435456
 1236 002c 0192     		str	r2, [sp, #4]
 218:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1237              		.loc 1 218 3 view .LVU292
 1238 002e 019A     		ldr	r2, [sp, #4]
 1239              	.LBE6:
 218:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1240              		.loc 1 218 3 view .LVU293
 219:Core/Src/main.c **** 
 1241              		.loc 1 219 3 view .LVU294
 1242              	.LBB7:
 219:Core/Src/main.c **** 
 1243              		.loc 1 219 3 view .LVU295
 1244 0030 0293     		str	r3, [sp, #8]
 219:Core/Src/main.c **** 
 1245              		.loc 1 219 3 view .LVU296
 1246 0032 1C4A     		ldr	r2, .L113+4
 1247 0034 1368     		ldr	r3, [r2]
 1248 0036 23F44043 		bic	r3, r3, #49152
 1249 003a 43F48043 		orr	r3, r3, #16384
 1250 003e 1360     		str	r3, [r2]
 219:Core/Src/main.c **** 
 1251              		.loc 1 219 3 view .LVU297
 1252 0040 1368     		ldr	r3, [r2]
 1253 0042 03F44043 		and	r3, r3, #49152
 1254 0046 0293     		str	r3, [sp, #8]
 219:Core/Src/main.c **** 
 1255              		.loc 1 219 3 view .LVU298
ARM GAS  /tmp/ccjwca7l.s 			page 39


 1256 0048 029B     		ldr	r3, [sp, #8]
 1257              	.LBE7:
 219:Core/Src/main.c **** 
 1258              		.loc 1 219 3 view .LVU299
 224:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1259              		.loc 1 224 3 view .LVU300
 224:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1260              		.loc 1 224 36 is_stmt 0 view .LVU301
 1261 004a 0123     		movs	r3, #1
 1262 004c 0893     		str	r3, [sp, #32]
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1263              		.loc 1 225 3 is_stmt 1 view .LVU302
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1264              		.loc 1 225 30 is_stmt 0 view .LVU303
 1265 004e 4FF48033 		mov	r3, #65536
 1266 0052 0993     		str	r3, [sp, #36]
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1267              		.loc 1 226 3 is_stmt 1 view .LVU304
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1268              		.loc 1 226 34 is_stmt 0 view .LVU305
 1269 0054 0223     		movs	r3, #2
 1270 0056 0E93     		str	r3, [sp, #56]
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1271              		.loc 1 227 3 is_stmt 1 view .LVU306
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1272              		.loc 1 227 35 is_stmt 0 view .LVU307
 1273 0058 4FF48002 		mov	r2, #4194304
 1274 005c 0F92     		str	r2, [sp, #60]
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1275              		.loc 1 228 3 is_stmt 1 view .LVU308
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1276              		.loc 1 228 30 is_stmt 0 view .LVU309
 1277 005e 0422     		movs	r2, #4
 1278 0060 1092     		str	r2, [sp, #64]
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1279              		.loc 1 229 3 is_stmt 1 view .LVU310
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1280              		.loc 1 229 30 is_stmt 0 view .LVU311
 1281 0062 6022     		movs	r2, #96
 1282 0064 1192     		str	r2, [sp, #68]
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1283              		.loc 1 230 3 is_stmt 1 view .LVU312
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1284              		.loc 1 230 30 is_stmt 0 view .LVU313
 1285 0066 1293     		str	r3, [sp, #72]
 231:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1286              		.loc 1 231 3 is_stmt 1 view .LVU314
 231:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1287              		.loc 1 231 30 is_stmt 0 view .LVU315
 1288 0068 0323     		movs	r3, #3
 1289 006a 1393     		str	r3, [sp, #76]
 232:Core/Src/main.c ****   {
 1290              		.loc 1 232 3 is_stmt 1 view .LVU316
 232:Core/Src/main.c ****   {
 1291              		.loc 1 232 7 is_stmt 0 view .LVU317
 1292 006c 08A8     		add	r0, sp, #32
 1293 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  /tmp/ccjwca7l.s 			page 40


 1294              	.LVL43:
 232:Core/Src/main.c ****   {
 1295              		.loc 1 232 6 view .LVU318
 1296 0072 88B9     		cbnz	r0, .L111
 239:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1297              		.loc 1 239 3 is_stmt 1 view .LVU319
 239:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1298              		.loc 1 239 31 is_stmt 0 view .LVU320
 1299 0074 0F23     		movs	r3, #15
 1300 0076 0393     		str	r3, [sp, #12]
 241:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1301              		.loc 1 241 3 is_stmt 1 view .LVU321
 241:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1302              		.loc 1 241 34 is_stmt 0 view .LVU322
 1303 0078 0223     		movs	r3, #2
 1304 007a 0493     		str	r3, [sp, #16]
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1305              		.loc 1 242 3 is_stmt 1 view .LVU323
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1306              		.loc 1 242 35 is_stmt 0 view .LVU324
 1307 007c 8023     		movs	r3, #128
 1308 007e 0593     		str	r3, [sp, #20]
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1309              		.loc 1 243 3 is_stmt 1 view .LVU325
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1310              		.loc 1 243 36 is_stmt 0 view .LVU326
 1311 0080 4FF48053 		mov	r3, #4096
 1312 0084 0693     		str	r3, [sp, #24]
 244:Core/Src/main.c **** 
 1313              		.loc 1 244 3 is_stmt 1 view .LVU327
 244:Core/Src/main.c **** 
 1314              		.loc 1 244 36 is_stmt 0 view .LVU328
 1315 0086 0793     		str	r3, [sp, #28]
 246:Core/Src/main.c ****   {
 1316              		.loc 1 246 3 is_stmt 1 view .LVU329
 246:Core/Src/main.c ****   {
 1317              		.loc 1 246 7 is_stmt 0 view .LVU330
 1318 0088 0121     		movs	r1, #1
 1319 008a 03A8     		add	r0, sp, #12
 1320 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1321              	.LVL44:
 246:Core/Src/main.c ****   {
 1322              		.loc 1 246 6 view .LVU331
 1323 0090 20B9     		cbnz	r0, .L112
 250:Core/Src/main.c **** 
 1324              		.loc 1 250 1 view .LVU332
 1325 0092 15B0     		add	sp, sp, #84
 1326              	.LCFI11:
 1327              		.cfi_remember_state
 1328              		.cfi_def_cfa_offset 4
 1329              		@ sp needed
 1330 0094 5DF804FB 		ldr	pc, [sp], #4
 1331              	.L111:
 1332              	.LCFI12:
 1333              		.cfi_restore_state
 234:Core/Src/main.c ****   }
 1334              		.loc 1 234 5 is_stmt 1 view .LVU333
ARM GAS  /tmp/ccjwca7l.s 			page 41


 1335 0098 FFF7FEFF 		bl	Error_Handler
 1336              	.LVL45:
 1337              	.L112:
 248:Core/Src/main.c ****   }
 1338              		.loc 1 248 5 view .LVU334
 1339 009c FFF7FEFF 		bl	Error_Handler
 1340              	.LVL46:
 1341              	.L114:
 1342              		.align	2
 1343              	.L113:
 1344 00a0 00380240 		.word	1073887232
 1345 00a4 00700040 		.word	1073770496
 1346              		.cfi_endproc
 1347              	.LFE131:
 1349              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1350              		.align	2
 1351              	.LC0:
 1352 0000 54455452 		.ascii	"TETRADYNE\000"
 1352      4144594E 
 1352      4500
 1353 000a 0000     		.align	2
 1354              	.LC1:
 1355 000c 44323A00 		.ascii	"D2:\000"
 1356              		.align	2
 1357              	.LC2:
 1358 0010 44313A00 		.ascii	"D1:\000"
 1359              		.section	.text.main,"ax",%progbits
 1360              		.align	1
 1361              		.global	main
 1362              		.syntax unified
 1363              		.thumb
 1364              		.thumb_func
 1365              		.fpu fpv4-sp-d16
 1367              	main:
 1368              	.LFB130:
 139:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1369              		.loc 1 139 1 view -0
 1370              		.cfi_startproc
 1371              		@ Volatile: function does not return.
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374 0000 08B5     		push	{r3, lr}
 1375              	.LCFI13:
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 3, -8
 1378              		.cfi_offset 14, -4
 147:Core/Src/main.c **** 
 1379              		.loc 1 147 3 view .LVU336
 1380 0002 FFF7FEFF 		bl	HAL_Init
 1381              	.LVL47:
 154:Core/Src/main.c **** 
 1382              		.loc 1 154 3 view .LVU337
 1383 0006 FFF7FEFF 		bl	SystemClock_Config
 1384              	.LVL48:
 161:Core/Src/main.c ****   MX_TIM4_Init();
 1385              		.loc 1 161 3 view .LVU338
 1386 000a FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /tmp/ccjwca7l.s 			page 42


 1387              	.LVL49:
 162:Core/Src/main.c ****   MX_UART4_Init();
 1388              		.loc 1 162 3 view .LVU339
 1389 000e FFF7FEFF 		bl	MX_TIM4_Init
 1390              	.LVL50:
 163:Core/Src/main.c ****   MX_UART5_Init();
 1391              		.loc 1 163 3 view .LVU340
 1392 0012 FFF7FEFF 		bl	MX_UART4_Init
 1393              	.LVL51:
 164:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1394              		.loc 1 164 3 view .LVU341
 1395 0016 FFF7FEFF 		bl	MX_UART5_Init
 1396              	.LVL52:
 167:Core/Src/main.c **** 
 1397              		.loc 1 167 3 view .LVU342
 1398 001a 2148     		ldr	r0, .L118
 1399 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1400              	.LVL53:
 170:Core/Src/main.c ****   HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 1401              		.loc 1 170 3 view .LVU343
 1402 0020 0022     		movs	r2, #0
 1403 0022 4FF48051 		mov	r1, #4096
 1404 0026 1F48     		ldr	r0, .L118+4
 1405 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1406              	.LVL54:
 171:Core/Src/main.c **** 
 1407              		.loc 1 171 3 view .LVU344
 1408 002c 0022     		movs	r2, #0
 1409 002e 0221     		movs	r1, #2
 1410 0030 1D48     		ldr	r0, .L118+8
 1411 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1412              	.LVL55:
 173:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1413              		.loc 1 173 3 view .LVU345
 173:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1414              		.loc 1 173 59 is_stmt 0 view .LVU346
 1415 0036 1D4B     		ldr	r3, .L118+12
 1416 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 173:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1417              		.loc 1 173 3 view .LVU347
 1418 003a 1344     		add	r3, r3, r2
 1419 003c 0122     		movs	r2, #1
 1420 003e 991C     		adds	r1, r3, #2
 1421 0040 1B48     		ldr	r0, .L118+16
 1422 0042 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1423              	.LVL56:
 174:Core/Src/main.c **** 
 1424              		.loc 1 174 3 is_stmt 1 view .LVU348
 174:Core/Src/main.c **** 
 1425              		.loc 1 174 59 is_stmt 0 view .LVU349
 1426 0046 1B4B     		ldr	r3, .L118+20
 1427 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 174:Core/Src/main.c **** 
 1428              		.loc 1 174 3 view .LVU350
 1429 004a 1344     		add	r3, r3, r2
 1430 004c 0122     		movs	r2, #1
 1431 004e 991C     		adds	r1, r3, #2
ARM GAS  /tmp/ccjwca7l.s 			page 43


 1432 0050 1948     		ldr	r0, .L118+24
 1433 0052 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1434              	.LVL57:
 176:Core/Src/main.c **** 
 1435              		.loc 1 176 3 is_stmt 1 view .LVU351
 176:Core/Src/main.c **** 
 1436              		.loc 1 176 5 is_stmt 0 view .LVU352
 1437 0056 0124     		movs	r4, #1
 1438 0058 184B     		ldr	r3, .L118+28
 1439 005a 1C70     		strb	r4, [r3]
 179:Core/Src/main.c ****   lcd_clear();
 1440              		.loc 1 179 3 is_stmt 1 view .LVU353
 1441 005c FFF7FEFF 		bl	lcd_init
 1442              	.LVL58:
 180:Core/Src/main.c ****   lcd_set_pos(0, 3);
 1443              		.loc 1 180 3 view .LVU354
 1444 0060 FFF7FEFF 		bl	lcd_clear
 1445              	.LVL59:
 181:Core/Src/main.c ****   lcd_write_string("TETRADYNE");
 1446              		.loc 1 181 3 view .LVU355
 1447 0064 0321     		movs	r1, #3
 1448 0066 0020     		movs	r0, #0
 1449 0068 FFF7FEFF 		bl	lcd_set_pos
 1450              	.LVL60:
 182:Core/Src/main.c ****   lcd_set_pos(1, 0);
 1451              		.loc 1 182 3 view .LVU356
 1452 006c 1448     		ldr	r0, .L118+32
 1453 006e FFF7FEFF 		bl	lcd_write_string
 1454              	.LVL61:
 183:Core/Src/main.c ****   lcd_write_string("D2:");
 1455              		.loc 1 183 3 view .LVU357
 1456 0072 0021     		movs	r1, #0
 1457 0074 2046     		mov	r0, r4
 1458 0076 FFF7FEFF 		bl	lcd_set_pos
 1459              	.LVL62:
 184:Core/Src/main.c ****   lcd_set_pos(1, 0xC);
 1460              		.loc 1 184 3 view .LVU358
 1461 007a 1248     		ldr	r0, .L118+36
 1462 007c FFF7FEFF 		bl	lcd_write_string
 1463              	.LVL63:
 185:Core/Src/main.c ****   lcd_write_string("D1:");
 1464              		.loc 1 185 3 view .LVU359
 1465 0080 0C21     		movs	r1, #12
 1466 0082 2046     		mov	r0, r4
 1467 0084 FFF7FEFF 		bl	lcd_set_pos
 1468              	.LVL64:
 186:Core/Src/main.c ****   /* USER CODE END 2 */
 1469              		.loc 1 186 3 view .LVU360
 1470 0088 0F48     		ldr	r0, .L118+40
 1471 008a FFF7FEFF 		bl	lcd_write_string
 1472              	.LVL65:
 1473              	.L116:
 191:Core/Src/main.c ****   {
 1474              		.loc 1 191 3 discriminator 1 view .LVU361
 197:Core/Src/main.c **** 	  	     ///segment_display_task();
 1475              		.loc 1 197 9 discriminator 1 view .LVU362
 1476 008e FFF7FEFF 		bl	task_timer
ARM GAS  /tmp/ccjwca7l.s 			page 44


 1477              	.LVL66:
 199:Core/Src/main.c **** 	  	     key_read_task();
 1478              		.loc 1 199 10 discriminator 1 view .LVU363
 1479 0092 FFF7FEFF 		bl	lcd_display_task
 1480              	.LVL67:
 200:Core/Src/main.c **** 
 1481              		.loc 1 200 10 discriminator 1 view .LVU364
 1482 0096 FFF7FEFF 		bl	key_read_task
 1483              	.LVL68:
 202:Core/Src/main.c ****   }
 1484              		.loc 1 202 10 discriminator 1 view .LVU365
 1485 009a FFF7FEFF 		bl	main_task
 1486              	.LVL69:
 191:Core/Src/main.c ****   {
 1487              		.loc 1 191 9 discriminator 1 view .LVU366
 1488 009e F6E7     		b	.L116
 1489              	.L119:
 1490              		.align	2
 1491              	.L118:
 1492 00a0 00000000 		.word	htim4
 1493 00a4 00000240 		.word	1073872896
 1494 00a8 000C0240 		.word	1073875968
 1495 00ac 00000000 		.word	.LANCHOR31
 1496 00b0 00000000 		.word	huart4
 1497 00b4 00000000 		.word	.LANCHOR19
 1498 00b8 00000000 		.word	huart5
 1499 00bc 00000000 		.word	.LANCHOR21
 1500 00c0 00000000 		.word	.LC0
 1501 00c4 0C000000 		.word	.LC1
 1502 00c8 10000000 		.word	.LC2
 1503              		.cfi_endproc
 1504              	.LFE130:
 1506              		.global	RX_msg
 1507              		.global	TX_msg
 1508              		.global	ID
 1509              		.global	event_buffer
 1510              		.global	rx2_buffer
 1511              		.global	rx1_buffer
 1512              		.global	stop_cmd
 1513              		.global	start_cmd
 1514              		.global	transmission_f
 1515              		.global	rx_temp
 1516              		.global	digit_table
 1517              		.global	lcd_process
 1518              		.global	data
 1519              		.global	cmd
 1520              		.global	digit2_update
 1521              		.global	digit1_update
 1522              		.global	lcd_digit1_f
 1523              		.global	is_EN
 1524              		.global	digit2
 1525              		.global	digit1
 1526              		.global	flag_state_tx
 1527              		.global	flag_state_tx1
 1528              		.global	uart_tx2_flag
 1529              		.global	uart_tx1_flag
 1530              		.global	lcd_disp_lock
ARM GAS  /tmp/ccjwca7l.s 			page 45


 1531              		.global	event
 1532              		.global	state
 1533              		.global	key2_data
 1534              		.global	key1_data
 1535              		.global	TX2_delay_val
 1536              		.global	d_timer_TX2
 1537              		.global	TX1_delay_val
 1538              		.global	d_timer_TX1
 1539              		.global	d_timer_20ms
 1540              		.global	d_timer_30ms
 1541              		.global	tx1_buffer
 1542              		.global	tx2_buffer
 1543              		.global	flag_digit_1
 1544              		.global	p_tx2
 1545              		.global	p_tx1
 1546              		.global	i
 1547              		.global	f_timer_30ms
 1548              		.global	f_timer_20ms
 1549              		.global	f_timer_10ms
 1550              		.global	f_seg_timer_500ms
 1551              		.global	f_timer_TX
 1552              		.section	.bss.ID,"aw",%nobits
 1553              		.set	.LANCHOR21,. + 0
 1556              	ID:
 1557 0000 00       		.space	1
 1558              		.section	.bss.RX_msg,"aw",%nobits
 1559              		.align	2
 1560              		.set	.LANCHOR20,. + 0
 1563              	RX_msg:
 1564 0000 00000000 		.space	4
 1565              		.section	.bss.TX_msg,"aw",%nobits
 1566              		.align	2
 1567              		.set	.LANCHOR23,. + 0
 1570              	TX_msg:
 1571 0000 00000000 		.space	4
 1572              		.section	.bss.cmd,"aw",%nobits
 1573              		.set	.LANCHOR4,. + 0
 1576              	cmd:
 1577 0000 00       		.space	1
 1578              		.section	.bss.d_timer_20ms,"aw",%nobits
 1579              		.set	.LANCHOR12,. + 0
 1582              	d_timer_20ms:
 1583 0000 00       		.space	1
 1584              		.section	.bss.d_timer_30ms,"aw",%nobits
 1585              		.set	.LANCHOR10,. + 0
 1588              	d_timer_30ms:
 1589 0000 00       		.space	1
 1590              		.section	.bss.d_timer_TX1,"aw",%nobits
 1591              		.set	.LANCHOR13,. + 0
 1594              	d_timer_TX1:
 1595 0000 00       		.space	1
 1596              		.section	.bss.d_timer_TX2,"aw",%nobits
 1599              	d_timer_TX2:
 1600 0000 00       		.space	1
 1601              		.section	.bss.data,"aw",%nobits
 1602              		.set	.LANCHOR7,. + 0
 1605              	data:
ARM GAS  /tmp/ccjwca7l.s 			page 46


 1606 0000 00       		.space	1
 1607              		.section	.bss.digit1,"aw",%nobits
 1608              		.set	.LANCHOR8,. + 0
 1611              	digit1:
 1612 0000 00       		.space	1
 1613              		.section	.bss.digit1_update,"aw",%nobits
 1616              	digit1_update:
 1617 0000 00       		.space	1
 1618              		.section	.bss.digit2,"aw",%nobits
 1619              		.set	.LANCHOR6,. + 0
 1622              	digit2:
 1623 0000 00       		.space	1
 1624              		.section	.bss.digit2_update,"aw",%nobits
 1627              	digit2_update:
 1628 0000 00       		.space	1
 1629              		.section	.bss.event,"aw",%nobits
 1630              		.set	.LANCHOR25,. + 0
 1633              	event:
 1634 0000 00       		.space	1
 1635              		.section	.bss.event_buffer,"aw",%nobits
 1636              		.align	2
 1637              		.set	.LANCHOR15,. + 0
 1640              	event_buffer:
 1641 0000 00000000 		.space	66
 1641      00000000 
 1641      00000000 
 1641      00000000 
 1641      00000000 
 1642              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 1645              	f_seg_timer_500ms:
 1646 0000 00       		.space	1
 1647              		.section	.bss.f_timer_10ms,"aw",%nobits
 1648              		.set	.LANCHOR9,. + 0
 1651              	f_timer_10ms:
 1652 0000 00       		.space	1
 1653              		.section	.bss.f_timer_20ms,"aw",%nobits
 1654              		.set	.LANCHOR0,. + 0
 1657              	f_timer_20ms:
 1658 0000 00       		.space	1
 1659              		.section	.bss.f_timer_30ms,"aw",%nobits
 1660              		.set	.LANCHOR11,. + 0
 1663              	f_timer_30ms:
 1664 0000 00       		.space	1
 1665              		.section	.bss.f_timer_TX,"aw",%nobits
 1668              	f_timer_TX:
 1669 0000 00       		.space	1
 1670              		.section	.bss.flag_state_tx,"aw",%nobits
 1673              	flag_state_tx:
 1674 0000 00       		.space	1
 1675              		.section	.bss.flag_state_tx1,"aw",%nobits
 1678              	flag_state_tx1:
 1679 0000 00       		.space	1
 1680              		.section	.bss.i,"aw",%nobits
 1683              	i:
 1684 0000 00       		.space	1
 1685              		.section	.bss.is_EN,"aw",%nobits
 1686              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/ccjwca7l.s 			page 47


 1689              	is_EN:
 1690 0000 00       		.space	1
 1691              		.section	.bss.key1_data,"aw",%nobits
 1692              		.set	.LANCHOR16,. + 0
 1695              	key1_data:
 1696 0000 00       		.space	1
 1697              		.section	.bss.key2_data,"aw",%nobits
 1698              		.set	.LANCHOR17,. + 0
 1701              	key2_data:
 1702 0000 00       		.space	1
 1703              		.section	.bss.lcd_digit1_f,"aw",%nobits
 1704              		.set	.LANCHOR3,. + 0
 1707              	lcd_digit1_f:
 1708 0000 00       		.space	1
 1709              		.section	.bss.lcd_disp_lock,"aw",%nobits
 1712              	lcd_disp_lock:
 1713 0000 00       		.space	1
 1714              		.section	.bss.lcd_process,"aw",%nobits
 1715              		.set	.LANCHOR2,. + 0
 1718              	lcd_process:
 1719 0000 00       		.space	1
 1720              		.section	.bss.p_tx1,"aw",%nobits
 1723              	p_tx1:
 1724 0000 00       		.space	1
 1725              		.section	.bss.p_tx2,"aw",%nobits
 1726              		.set	.LANCHOR27,. + 0
 1729              	p_tx2:
 1730 0000 00       		.space	1
 1731              		.section	.bss.rx1_buffer,"aw",%nobits
 1732              		.align	2
 1733              		.set	.LANCHOR31,. + 0
 1736              	rx1_buffer:
 1737 0000 00000000 		.space	66
 1737      00000000 
 1737      00000000 
 1737      00000000 
 1737      00000000 
 1738              		.section	.bss.rx2_buffer,"aw",%nobits
 1739              		.align	2
 1740              		.set	.LANCHOR19,. + 0
 1743              	rx2_buffer:
 1744 0000 00000000 		.space	66
 1744      00000000 
 1744      00000000 
 1744      00000000 
 1744      00000000 
 1745              		.section	.bss.rx_temp,"aw",%nobits
 1746              		.set	.LANCHOR29,. + 0
 1749              	rx_temp:
 1750 0000 00       		.space	1
 1751              		.section	.bss.state,"aw",%nobits
 1752              		.set	.LANCHOR26,. + 0
 1755              	state:
 1756 0000 00       		.space	1
 1757              		.section	.bss.transmission_f,"aw",%nobits
 1758              		.set	.LANCHOR30,. + 0
 1761              	transmission_f:
ARM GAS  /tmp/ccjwca7l.s 			page 48


 1762 0000 00       		.space	1
 1763              		.section	.bss.uart_tx1_flag,"aw",%nobits
 1766              	uart_tx1_flag:
 1767 0000 00       		.space	1
 1768              		.section	.bss.uart_tx2_flag,"aw",%nobits
 1771              	uart_tx2_flag:
 1772 0000 00       		.space	1
 1773              		.section	.data.TX1_delay_val,"aw"
 1774              		.set	.LANCHOR14,. + 0
 1777              	TX1_delay_val:
 1778 0000 FA       		.byte	-6
 1779              		.section	.data.TX2_delay_val,"aw"
 1780              		.set	.LANCHOR18,. + 0
 1783              	TX2_delay_val:
 1784 0000 FA       		.byte	-6
 1785              		.section	.data.digit_table,"aw"
 1786              		.align	2
 1787              		.set	.LANCHOR5,. + 0
 1790              	digit_table:
 1791 0000 30313233 		.ascii	"0123456789abcdef-"
 1791      34353637 
 1791      38396162 
 1791      63646566 
 1791      2D
 1792              		.section	.data.flag_digit_1,"aw"
 1795              	flag_digit_1:
 1796 0000 01       		.byte	1
 1797              		.section	.data.start_cmd,"aw"
 1798              		.set	.LANCHOR22,. + 0
 1801              	start_cmd:
 1802 0000 02       		.byte	2
 1803              		.section	.data.stop_cmd,"aw"
 1804              		.set	.LANCHOR24,. + 0
 1807              	stop_cmd:
 1808 0000 03       		.byte	3
 1809              		.section	.data.tx1_buffer,"aw"
 1810              		.align	2
 1813              	tx1_buffer:
 1814 0000 61626364 		.ascii	"abcdef"
 1814      6566
 1815              		.section	.data.tx2_buffer,"aw"
 1816              		.align	2
 1817              		.set	.LANCHOR28,. + 0
 1820              	tx2_buffer:
 1821 0000 31323334 		.ascii	"123456789\000"
 1821      35363738 
 1821      3900
 1822              		.text
 1823              	.Letext0:
 1824              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1825              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1826              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1827              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1828              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1829              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1830              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1831              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/ccjwca7l.s 			page 49


 1832              		.file 11 "Core/Inc/tim.h"
 1833              		.file 12 "Core/Inc/usart.h"
 1834              		.file 13 "Core/Inc/buffer.h"
 1835              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1836              		.file 15 "Core/Inc/message.h"
 1837              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1838              		.file 17 "Core/Inc/gpio.h"
 1839              		.file 18 "Core/Inc/lcd16x2.h"
 1840              		.file 19 "<built-in>"
ARM GAS  /tmp/ccjwca7l.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccjwca7l.s:18     .text.m_send_to_lcd:0000000000000000 $t
     /tmp/ccjwca7l.s:26     .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/ccjwca7l.s:122    .text.m_send_to_lcd:0000000000000068 $d
     /tmp/ccjwca7l.s:131    .text.lcd_display_task:0000000000000000 $t
     /tmp/ccjwca7l.s:138    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/ccjwca7l.s:177    .text.lcd_display_task:0000000000000026 $d
     /tmp/ccjwca7l.s:181    .text.lcd_display_task:000000000000002a $t
     /tmp/ccjwca7l.s:268    .text.lcd_display_task:000000000000009c $d
     /tmp/ccjwca7l.s:280    .text.task_timer:0000000000000000 $t
     /tmp/ccjwca7l.s:287    .text.task_timer:0000000000000000 task_timer
     /tmp/ccjwca7l.s:389    .text.task_timer:000000000000006c $d
     /tmp/ccjwca7l.s:401    .text.key_read_task:0000000000000000 $t
     /tmp/ccjwca7l.s:408    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccjwca7l.s:526    .text.key_read_task:0000000000000080 $d
     /tmp/ccjwca7l.s:535    .text.TX1_delay_update:0000000000000000 $t
     /tmp/ccjwca7l.s:542    .text.TX1_delay_update:0000000000000000 TX1_delay_update
     /tmp/ccjwca7l.s:567    .text.TX1_delay_update:0000000000000010 $d
     /tmp/ccjwca7l.s:572    .text.TX2_delay_update:0000000000000000 $t
     /tmp/ccjwca7l.s:579    .text.TX2_delay_update:0000000000000000 TX2_delay_update
     /tmp/ccjwca7l.s:604    .text.TX2_delay_update:0000000000000010 $d
     /tmp/ccjwca7l.s:609    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccjwca7l.s:616    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccjwca7l.s:671    .text.RS485_Read_Message:0000000000000034 $d
     /tmp/ccjwca7l.s:681    .text.RS485_Read_Message:000000000000003e $t
     /tmp/ccjwca7l.s:771    .text.RS485_Read_Message:0000000000000090 $d
     /tmp/ccjwca7l.s:779    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccjwca7l.s:786    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccjwca7l.s:839    .text.RS485_Send_Message:0000000000000044 $d
     /tmp/ccjwca7l.s:848    .text.main_task:0000000000000000 $t
     /tmp/ccjwca7l.s:855    .text.main_task:0000000000000000 main_task
     /tmp/ccjwca7l.s:997    .text.main_task:000000000000009c $d
     /tmp/ccjwca7l.s:1009   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccjwca7l.s:1016   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccjwca7l.s:1043   .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccjwca7l.s:1049   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccjwca7l.s:1056   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccjwca7l.s:1141   .text.HAL_UART_RxCpltCallback:0000000000000048 $d
     /tmp/ccjwca7l.s:1150   .text.Error_Handler:0000000000000000 $t
     /tmp/ccjwca7l.s:1157   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccjwca7l.s:1189   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccjwca7l.s:1196   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccjwca7l.s:1344   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccjwca7l.s:1350   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccjwca7l.s:1360   .text.main:0000000000000000 $t
     /tmp/ccjwca7l.s:1367   .text.main:0000000000000000 main
     /tmp/ccjwca7l.s:1492   .text.main:00000000000000a0 $d
     /tmp/ccjwca7l.s:1563   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccjwca7l.s:1570   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccjwca7l.s:1556   .bss.ID:0000000000000000 ID
     /tmp/ccjwca7l.s:1640   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccjwca7l.s:1743   .bss.rx2_buffer:0000000000000000 rx2_buffer
     /tmp/ccjwca7l.s:1736   .bss.rx1_buffer:0000000000000000 rx1_buffer
     /tmp/ccjwca7l.s:1807   .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/ccjwca7l.s:1801   .data.start_cmd:0000000000000000 start_cmd
     /tmp/ccjwca7l.s:1761   .bss.transmission_f:0000000000000000 transmission_f
ARM GAS  /tmp/ccjwca7l.s 			page 51


     /tmp/ccjwca7l.s:1749   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccjwca7l.s:1790   .data.digit_table:0000000000000000 digit_table
     /tmp/ccjwca7l.s:1718   .bss.lcd_process:0000000000000000 lcd_process
     /tmp/ccjwca7l.s:1605   .bss.data:0000000000000000 data
     /tmp/ccjwca7l.s:1576   .bss.cmd:0000000000000000 cmd
     /tmp/ccjwca7l.s:1627   .bss.digit2_update:0000000000000000 digit2_update
     /tmp/ccjwca7l.s:1616   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/ccjwca7l.s:1707   .bss.lcd_digit1_f:0000000000000000 lcd_digit1_f
     /tmp/ccjwca7l.s:1689   .bss.is_EN:0000000000000000 is_EN
     /tmp/ccjwca7l.s:1622   .bss.digit2:0000000000000000 digit2
     /tmp/ccjwca7l.s:1611   .bss.digit1:0000000000000000 digit1
     /tmp/ccjwca7l.s:1673   .bss.flag_state_tx:0000000000000000 flag_state_tx
     /tmp/ccjwca7l.s:1678   .bss.flag_state_tx1:0000000000000000 flag_state_tx1
     /tmp/ccjwca7l.s:1771   .bss.uart_tx2_flag:0000000000000000 uart_tx2_flag
     /tmp/ccjwca7l.s:1766   .bss.uart_tx1_flag:0000000000000000 uart_tx1_flag
     /tmp/ccjwca7l.s:1712   .bss.lcd_disp_lock:0000000000000000 lcd_disp_lock
     /tmp/ccjwca7l.s:1633   .bss.event:0000000000000000 event
     /tmp/ccjwca7l.s:1755   .bss.state:0000000000000000 state
     /tmp/ccjwca7l.s:1701   .bss.key2_data:0000000000000000 key2_data
     /tmp/ccjwca7l.s:1695   .bss.key1_data:0000000000000000 key1_data
     /tmp/ccjwca7l.s:1783   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/ccjwca7l.s:1599   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/ccjwca7l.s:1777   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/ccjwca7l.s:1594   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/ccjwca7l.s:1582   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/ccjwca7l.s:1588   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccjwca7l.s:1813   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/ccjwca7l.s:1820   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/ccjwca7l.s:1795   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/ccjwca7l.s:1729   .bss.p_tx2:0000000000000000 p_tx2
     /tmp/ccjwca7l.s:1723   .bss.p_tx1:0000000000000000 p_tx1
     /tmp/ccjwca7l.s:1683   .bss.i:0000000000000000 i
     /tmp/ccjwca7l.s:1663   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccjwca7l.s:1657   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/ccjwca7l.s:1651   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccjwca7l.s:1645   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/ccjwca7l.s:1668   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/ccjwca7l.s:1557   .bss.ID:0000000000000000 $d
     /tmp/ccjwca7l.s:1559   .bss.RX_msg:0000000000000000 $d
     /tmp/ccjwca7l.s:1566   .bss.TX_msg:0000000000000000 $d
     /tmp/ccjwca7l.s:1577   .bss.cmd:0000000000000000 $d
     /tmp/ccjwca7l.s:1583   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/ccjwca7l.s:1589   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccjwca7l.s:1595   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/ccjwca7l.s:1600   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/ccjwca7l.s:1606   .bss.data:0000000000000000 $d
     /tmp/ccjwca7l.s:1612   .bss.digit1:0000000000000000 $d
     /tmp/ccjwca7l.s:1617   .bss.digit1_update:0000000000000000 $d
     /tmp/ccjwca7l.s:1623   .bss.digit2:0000000000000000 $d
     /tmp/ccjwca7l.s:1628   .bss.digit2_update:0000000000000000 $d
     /tmp/ccjwca7l.s:1634   .bss.event:0000000000000000 $d
     /tmp/ccjwca7l.s:1636   .bss.event_buffer:0000000000000000 $d
     /tmp/ccjwca7l.s:1646   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/ccjwca7l.s:1652   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccjwca7l.s:1658   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/ccjwca7l.s:1664   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccjwca7l.s:1669   .bss.f_timer_TX:0000000000000000 $d
ARM GAS  /tmp/ccjwca7l.s 			page 52


     /tmp/ccjwca7l.s:1674   .bss.flag_state_tx:0000000000000000 $d
     /tmp/ccjwca7l.s:1679   .bss.flag_state_tx1:0000000000000000 $d
     /tmp/ccjwca7l.s:1684   .bss.i:0000000000000000 $d
     /tmp/ccjwca7l.s:1690   .bss.is_EN:0000000000000000 $d
     /tmp/ccjwca7l.s:1696   .bss.key1_data:0000000000000000 $d
     /tmp/ccjwca7l.s:1702   .bss.key2_data:0000000000000000 $d
     /tmp/ccjwca7l.s:1708   .bss.lcd_digit1_f:0000000000000000 $d
     /tmp/ccjwca7l.s:1713   .bss.lcd_disp_lock:0000000000000000 $d
     /tmp/ccjwca7l.s:1719   .bss.lcd_process:0000000000000000 $d
     /tmp/ccjwca7l.s:1724   .bss.p_tx1:0000000000000000 $d
     /tmp/ccjwca7l.s:1730   .bss.p_tx2:0000000000000000 $d
     /tmp/ccjwca7l.s:1732   .bss.rx1_buffer:0000000000000000 $d
     /tmp/ccjwca7l.s:1739   .bss.rx2_buffer:0000000000000000 $d
     /tmp/ccjwca7l.s:1750   .bss.rx_temp:0000000000000000 $d
     /tmp/ccjwca7l.s:1756   .bss.state:0000000000000000 $d
     /tmp/ccjwca7l.s:1762   .bss.transmission_f:0000000000000000 $d
     /tmp/ccjwca7l.s:1767   .bss.uart_tx1_flag:0000000000000000 $d
     /tmp/ccjwca7l.s:1772   .bss.uart_tx2_flag:0000000000000000 $d
     /tmp/ccjwca7l.s:1786   .data.digit_table:0000000000000000 $d
     /tmp/ccjwca7l.s:1810   .data.tx1_buffer:0000000000000000 $d
     /tmp/ccjwca7l.s:1816   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
buffer_to_message
HAL_UART_Transmit
huart4
buffer_pop
htim4
HAL_UART_Receive_IT
huart5
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
lcd_clear
lcd_set_pos
lcd_write_string
