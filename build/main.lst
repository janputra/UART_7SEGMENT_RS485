ARM GAS  /tmp/ccLn1Ezy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.m_send_to_lcd,"ax",%progbits
  18              		.align	1
  19              		.global	m_send_to_lcd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	m_send_to_lcd:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "buffer.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccLn1Ezy.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** uint8_t f_lcd_item =0;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** uint8_t f_busy;
  51:Core/Src/main.c **** uint8_t f_querry=0;
  52:Core/Src/main.c **** uint8_t f_read_msg;
  53:Core/Src/main.c **** uint8_t tx_timeout = 0;
  54:Core/Src/main.c **** unsigned char f_timer_TX = 0;
  55:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  56:Core/Src/main.c **** unsigned char f_timer_10ms = 0;
  57:Core/Src/main.c **** unsigned char f_timer_20ms = 0;
  58:Core/Src/main.c **** unsigned char f_waiting_rx = 0;
  59:Core/Src/main.c **** unsigned char f_timer_30ms = 0;
  60:Core/Src/main.c **** unsigned char f_timer_50ms = 0;
  61:Core/Src/main.c **** unsigned char n_querry = 0;
  62:Core/Src/main.c **** unsigned char flag_digit_1 = 1;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** unsigned char tx2_buffer[10] = {"123456789"};
  65:Core/Src/main.c **** unsigned char tx1_buffer[6] = {"abcdef"};
  66:Core/Src/main.c **** unsigned char d_timer_30ms;
  67:Core/Src/main.c **** unsigned char d_timer_50ms;
  68:Core/Src/main.c **** unsigned char d_timer_20ms;
  69:Core/Src/main.c **** unsigned char d_timer_TX1;
  70:Core/Src/main.c **** unsigned char TX1_delay_val = 250;
  71:Core/Src/main.c **** unsigned char d_timer_TX2;
  72:Core/Src/main.c **** unsigned char TX2_delay_val = 250;
  73:Core/Src/main.c **** unsigned char key1_data, key2_data;
  74:Core/Src/main.c **** unsigned char state, event, error;
  75:Core/Src/main.c **** unsigned char num_slave=0;
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** unsigned char digit1, digit2;
  78:Core/Src/main.c **** // flag for LCD
  79:Core/Src/main.c **** unsigned char is_EN = 0;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** unsigned char digit1_update = 0;
  82:Core/Src/main.c **** unsigned char digit2_update = 0;
  83:Core/Src/main.c **** unsigned char cmd, data;
  84:Core/Src/main.c **** unsigned char lcd_process = 0;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** char digit_table[17] = {"0123456789abcdef-"};
ARM GAS  /tmp/ccLn1Ezy.s 			page 3


  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** uint8_t rx_temp;
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** circular_buffer digit1_buf;
  91:Core/Src/main.c **** circular_buffer digit2_buf;
  92:Core/Src/main.c **** circular_buffer rx_buffer;
  93:Core/Src/main.c **** circular_buffer event_buffer;
  94:Core/Src/main.c **** uint8_t ID;
  95:Core/Src/main.c **** uint8_t ID_list[10];
  96:Core/Src/main.c **** uint8_t TX_msg[6];
  97:Core/Src/main.c **** uint8_t RX_msg[4];
  98:Core/Src/main.c **** uint8_t *pRX_msg;
  99:Core/Src/main.c **** uint8_t *pTX_msg;
 100:Core/Src/main.c **** /* USER CODE END PV */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 103:Core/Src/main.c **** void SystemClock_Config(void);
 104:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 105:Core/Src/main.c **** void RS485_RX_Task(void);
 106:Core/Src/main.c **** void RS485_TX_Task(void);
 107:Core/Src/main.c **** void task_timer(void);
 108:Core/Src/main.c **** void counting_task(void);
 109:Core/Src/main.c **** void uart_TX2_task(void);
 110:Core/Src/main.c **** void uart_TX1_task(void);
 111:Core/Src/main.c **** void uart_RX1_task(void);
 112:Core/Src/main.c **** void uart_RX2_task(void);
 113:Core/Src/main.c **** void segment_display_task(void);
 114:Core/Src/main.c **** void lcd_display_task(void);
 115:Core/Src/main.c **** void key_read_task(void);
 116:Core/Src/main.c **** void main_task(void);
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** void seven_segment_driver(char input, char select_digit);
 119:Core/Src/main.c **** void TX1_delay_update(void);
 120:Core/Src/main.c **** void TX2_delay_update(void);
 121:Core/Src/main.c **** void m_send_to_lcd(char data);
 122:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 123:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 124:Core/Src/main.c **** void Set_Receiver_Port1(void);
 125:Core/Src/main.c **** void Set_Receiver_Port2(void);
 126:Core/Src/main.c **** void RS485_Send_Message(void);
 127:Core/Src/main.c **** void RS485_Read_Message(void);
 128:Core/Src/main.c **** /*
 129:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 130:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 131:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 132:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
 133:Core/Src/main.c **** */
 134:Core/Src/main.c **** /* USER CODE END PFP */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 137:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /* USER CODE END 0 */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** /**
 142:Core/Src/main.c ****  * @brief  The application entry point.
 143:Core/Src/main.c ****  * @retval int
ARM GAS  /tmp/ccLn1Ezy.s 			page 4


 144:Core/Src/main.c ****  */
 145:Core/Src/main.c **** int main(void)
 146:Core/Src/main.c **** {
 147:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 	/* USER CODE END 1 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** 	/* MCU Configuration--------------------------------------------------------*/
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 154:Core/Src/main.c **** 	HAL_Init();
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** 	/* USER CODE BEGIN Init */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 	/* USER CODE END Init */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 	/* Configure the system clock */
 161:Core/Src/main.c **** 	SystemClock_Config();
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 	/* USER CODE BEGIN SysInit */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** 	/* USER CODE END SysInit */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 	/* Initialize all configured peripherals */
 168:Core/Src/main.c **** 	MX_GPIO_Init();
 169:Core/Src/main.c **** 	MX_TIM4_Init();
 170:Core/Src/main.c **** 	MX_UART4_Init();
 171:Core/Src/main.c **** 	MX_UART5_Init();
 172:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim4);
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); // Enable Receiver 1
 177:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** 	HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 180:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** 	digit1 = 16;
 183:Core/Src/main.c **** 	digit2 = 16;
 184:Core/Src/main.c **** 	num_slave=2;
 185:Core/Src/main.c **** 	ID=0;
 186:Core/Src/main.c **** 	ID_list[0]= 0x10;
 187:Core/Src/main.c **** 	ID_list[1]= 0x12;
 188:Core/Src/main.c **** 	state = STATE_TX;
 189:Core/Src/main.c **** 	/*
 190:Core/Src/main.c **** 	if (num_slave>0){
 191:Core/Src/main.c **** 		state = STATE_OPERATION;
 192:Core/Src/main.c **** 	}else{
 193:Core/Src/main.c **** 		state=STATE_ASSIGNED_ADDR;
 194:Core/Src/main.c **** 	}*/
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** 	lcd_init();
 197:Core/Src/main.c **** 	lcd_clear();
 198:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 199:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 200:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
ARM GAS  /tmp/ccLn1Ezy.s 			page 5


 201:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 202:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 203:Core/Src/main.c **** 	lcd_write_string("S2:");
 204:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 205:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 206:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 207:Core/Src/main.c **** 	lcd_write_string("S1:");
 208:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 209:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 210:Core/Src/main.c **** 	/* USER CODE END 2 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** 	/* Infinite loop */
 213:Core/Src/main.c **** 	/* USER CODE BEGIN WHILE */
 214:Core/Src/main.c **** 	while (1)
 215:Core/Src/main.c **** 	{
 216:Core/Src/main.c **** 		/* USER CODE END WHILE */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** 		/* USER CODE BEGIN 3 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** 		task_timer();
 221:Core/Src/main.c **** 		/// segment_display_task();
 222:Core/Src/main.c **** 		lcd_display_task();
 223:Core/Src/main.c **** 		key_read_task();
 224:Core/Src/main.c **** 		RS485_RX_Task();
 225:Core/Src/main.c **** 		main_task();
 226:Core/Src/main.c **** 	}
 227:Core/Src/main.c **** 	/* USER CODE END 3 */
 228:Core/Src/main.c **** }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** /**
 231:Core/Src/main.c ****  * @brief System Clock Configuration
 232:Core/Src/main.c ****  * @retval None
 233:Core/Src/main.c ****  */
 234:Core/Src/main.c **** void SystemClock_Config(void)
 235:Core/Src/main.c **** {
 236:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 237:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** 	/** Configure the main internal regulator output voltage
 240:Core/Src/main.c **** 	 */
 241:Core/Src/main.c **** 	__HAL_RCC_PWR_CLK_ENABLE();
 242:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** 	/** Initializes the RCC Oscillators according to the specified parameters
 245:Core/Src/main.c **** 	 * in the RCC_OscInitTypeDef structure.
 246:Core/Src/main.c **** 	 */
 247:Core/Src/main.c **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 248:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 249:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 250:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 251:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 252:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 253:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 254:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 255:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 256:Core/Src/main.c **** 	{
 257:Core/Src/main.c **** 		Error_Handler();
ARM GAS  /tmp/ccLn1Ezy.s 			page 6


 258:Core/Src/main.c **** 	}
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** 	/** Initializes the CPU, AHB and APB buses clocks
 261:Core/Src/main.c **** 	 */
 262:Core/Src/main.c **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RC
 263:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 264:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 265:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 266:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 269:Core/Src/main.c **** 	{
 270:Core/Src/main.c **** 		Error_Handler();
 271:Core/Src/main.c **** 	}
 272:Core/Src/main.c **** }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** void lcd_display_task(void)
 277:Core/Src/main.c **** {
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** 	if (f_lcd_item==0){
 280:Core/Src/main.c **** 		cmd = 0xC3;
 281:Core/Src/main.c **** 		data = digit_table[digit2];
 282:Core/Src/main.c **** 	}else if(f_lcd_item==1){
 283:Core/Src/main.c **** 		cmd = 0xCF;
 284:Core/Src/main.c **** 		data = digit_table[digit1];
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** 	}else if(f_lcd_item==2){
 287:Core/Src/main.c **** 		cmd =0x8C;
 288:Core/Src/main.c **** 		data = digit_table[num_slave];
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** 	}
 291:Core/Src/main.c **** 	
 292:Core/Src/main.c **** 	switch (lcd_process)
 293:Core/Src/main.c **** 	{
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** 	case 0:
 296:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 297:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 298:Core/Src/main.c **** 		break;
 299:Core/Src/main.c **** 	case 1:
 300:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 301:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 302:Core/Src/main.c **** 		break;
 303:Core/Src/main.c **** 	case 2:
 304:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 305:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 306:Core/Src/main.c **** 		break;
 307:Core/Src/main.c **** 	case 3:
 308:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 309:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 310:Core/Src/main.c **** 		break;
 311:Core/Src/main.c **** 	}
 312:Core/Src/main.c **** }
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** void m_send_to_lcd(char data)
ARM GAS  /tmp/ccLn1Ezy.s 			page 7


 315:Core/Src/main.c **** {
  30              		.loc 1 315 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 315 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** 	// writing data to pin PE0~PE3
 318:Core/Src/main.c **** 	GPIOE->ODR = (GPIOE->ODR & 0xFFFFFFF0) | data;
  40              		.loc 1 318 2 is_stmt 1 view .LVU2
  41              		.loc 1 318 21 is_stmt 0 view .LVU3
  42 0002 1A4A     		ldr	r2, .L7
  43 0004 5369     		ldr	r3, [r2, #20]
  44              		.loc 1 318 27 view .LVU4
  45 0006 23F00F03 		bic	r3, r3, #15
  46              		.loc 1 318 41 view .LVU5
  47 000a 1843     		orrs	r0, r0, r3
  48              	.LVL1:
  49              		.loc 1 318 13 view .LVU6
  50 000c 5061     		str	r0, [r2, #20]
 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** 	if (!f_timer_20ms)
  51              		.loc 1 320 2 is_stmt 1 view .LVU7
  52              		.loc 1 320 6 is_stmt 0 view .LVU8
  53 000e 184B     		ldr	r3, .L7+4
  54 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  55              		.loc 1 320 5 view .LVU9
  56 0012 6BB1     		cbz	r3, .L1
 321:Core/Src/main.c **** 		return;
 322:Core/Src/main.c **** 	f_timer_20ms = 0;
  57              		.loc 1 322 2 is_stmt 1 view .LVU10
  58              		.loc 1 322 15 is_stmt 0 view .LVU11
  59 0014 164B     		ldr	r3, .L7+4
  60 0016 0022     		movs	r2, #0
  61 0018 1A70     		strb	r2, [r3]
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** 	if (!is_EN)
  62              		.loc 1 324 2 is_stmt 1 view .LVU12
  63              		.loc 1 324 6 is_stmt 0 view .LVU13
  64 001a 164B     		ldr	r3, .L7+8
  65 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66              		.loc 1 324 5 view .LVU14
  67 001e 43B9     		cbnz	r3, .L3
 325:Core/Src/main.c **** 	{
 326:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
  68              		.loc 1 326 3 is_stmt 1 view .LVU15
  69 0020 0122     		movs	r2, #1
  70 0022 2021     		movs	r1, #32
  71 0024 1148     		ldr	r0, .L7
  72 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL2:
 327:Core/Src/main.c **** 		is_EN = 1;
ARM GAS  /tmp/ccLn1Ezy.s 			page 8


  74              		.loc 1 327 3 view .LVU16
  75              		.loc 1 327 9 is_stmt 0 view .LVU17
  76 002a 124B     		ldr	r3, .L7+8
  77 002c 0122     		movs	r2, #1
  78 002e 1A70     		strb	r2, [r3]
  79              	.L1:
 328:Core/Src/main.c **** 	}
 329:Core/Src/main.c **** 	else
 330:Core/Src/main.c **** 	{
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 333:Core/Src/main.c **** 		is_EN = 0;
 334:Core/Src/main.c **** 		lcd_process++;
 335:Core/Src/main.c **** 		if (lcd_process > 3)
 336:Core/Src/main.c **** 		{
 337:Core/Src/main.c **** 			lcd_process = 0;
 338:Core/Src/main.c **** 			//lcd_digit1_f = (~lcd_digit1_f) & 0x1;
 339:Core/Src/main.c **** 			f_lcd_item = (f_lcd_item+1) == 3? 0:f_lcd_item+1;
 340:Core/Src/main.c **** 		}
 341:Core/Src/main.c **** 	}
 342:Core/Src/main.c **** }
  80              		.loc 1 342 1 view .LVU18
  81 0030 08BD     		pop	{r3, pc}
  82              	.L3:
 332:Core/Src/main.c **** 		is_EN = 0;
  83              		.loc 1 332 3 is_stmt 1 view .LVU19
  84 0032 0022     		movs	r2, #0
  85 0034 2021     		movs	r1, #32
  86 0036 0D48     		ldr	r0, .L7
  87 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL3:
 333:Core/Src/main.c **** 		lcd_process++;
  89              		.loc 1 333 3 view .LVU20
 333:Core/Src/main.c **** 		lcd_process++;
  90              		.loc 1 333 9 is_stmt 0 view .LVU21
  91 003c 0D4B     		ldr	r3, .L7+8
  92 003e 0022     		movs	r2, #0
  93 0040 1A70     		strb	r2, [r3]
 334:Core/Src/main.c **** 		if (lcd_process > 3)
  94              		.loc 1 334 3 is_stmt 1 view .LVU22
 334:Core/Src/main.c **** 		if (lcd_process > 3)
  95              		.loc 1 334 14 is_stmt 0 view .LVU23
  96 0042 0D4A     		ldr	r2, .L7+12
  97 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  98 0046 0133     		adds	r3, r3, #1
  99 0048 DBB2     		uxtb	r3, r3
 100 004a 1370     		strb	r3, [r2]
 335:Core/Src/main.c **** 		{
 101              		.loc 1 335 3 is_stmt 1 view .LVU24
 335:Core/Src/main.c **** 		{
 102              		.loc 1 335 6 is_stmt 0 view .LVU25
 103 004c 032B     		cmp	r3, #3
 104 004e EFD9     		bls	.L1
 337:Core/Src/main.c **** 			//lcd_digit1_f = (~lcd_digit1_f) & 0x1;
 105              		.loc 1 337 4 is_stmt 1 view .LVU26
 337:Core/Src/main.c **** 			//lcd_digit1_f = (~lcd_digit1_f) & 0x1;
 106              		.loc 1 337 16 is_stmt 0 view .LVU27
ARM GAS  /tmp/ccLn1Ezy.s 			page 9


 107 0050 1346     		mov	r3, r2
 108 0052 0022     		movs	r2, #0
 109 0054 1A70     		strb	r2, [r3]
 339:Core/Src/main.c **** 		}
 110              		.loc 1 339 4 is_stmt 1 view .LVU28
 339:Core/Src/main.c **** 		}
 111              		.loc 1 339 32 is_stmt 0 view .LVU29
 112 0056 094B     		ldr	r3, .L7+16
 113 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 339:Core/Src/main.c **** 		}
 114              		.loc 1 339 15 view .LVU30
 115 005a 022B     		cmp	r3, #2
 116 005c 04D0     		beq	.L5
 339:Core/Src/main.c **** 		}
 117              		.loc 1 339 15 discriminator 1 view .LVU31
 118 005e 0133     		adds	r3, r3, #1
 119 0060 DBB2     		uxtb	r3, r3
 120              	.L4:
 339:Core/Src/main.c **** 		}
 121              		.loc 1 339 15 discriminator 4 view .LVU32
 122 0062 064A     		ldr	r2, .L7+16
 123 0064 1370     		strb	r3, [r2]
 124 0066 E3E7     		b	.L1
 125              	.L5:
 339:Core/Src/main.c **** 		}
 126              		.loc 1 339 15 view .LVU33
 127 0068 0023     		movs	r3, #0
 128 006a FAE7     		b	.L4
 129              	.L8:
 130              		.align	2
 131              	.L7:
 132 006c 00100240 		.word	1073876992
 133 0070 00000000 		.word	.LANCHOR0
 134 0074 00000000 		.word	.LANCHOR1
 135 0078 00000000 		.word	.LANCHOR2
 136 007c 00000000 		.word	.LANCHOR3
 137              		.cfi_endproc
 138              	.LFE133:
 140              		.section	.text.lcd_display_task,"ax",%progbits
 141              		.align	1
 142              		.global	lcd_display_task
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	lcd_display_task:
 149              	.LFB132:
 277:Core/Src/main.c **** 
 150              		.loc 1 277 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154 0000 08B5     		push	{r3, lr}
 155              	.LCFI1:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 3, -8
 158              		.cfi_offset 14, -4
ARM GAS  /tmp/ccLn1Ezy.s 			page 10


 279:Core/Src/main.c **** 		cmd = 0xC3;
 159              		.loc 1 279 2 view .LVU35
 279:Core/Src/main.c **** 		cmd = 0xC3;
 160              		.loc 1 279 16 is_stmt 0 view .LVU36
 161 0002 2D4B     		ldr	r3, .L21
 162 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 279:Core/Src/main.c **** 		cmd = 0xC3;
 163              		.loc 1 279 5 view .LVU37
 164 0006 83B9     		cbnz	r3, .L10
 280:Core/Src/main.c **** 		data = digit_table[digit2];
 165              		.loc 1 280 3 is_stmt 1 view .LVU38
 280:Core/Src/main.c **** 		data = digit_table[digit2];
 166              		.loc 1 280 7 is_stmt 0 view .LVU39
 167 0008 2C4B     		ldr	r3, .L21+4
 168 000a C322     		movs	r2, #195
 169 000c 1A70     		strb	r2, [r3]
 281:Core/Src/main.c **** 	}else if(f_lcd_item==1){
 170              		.loc 1 281 3 is_stmt 1 view .LVU40
 281:Core/Src/main.c **** 	}else if(f_lcd_item==1){
 171              		.loc 1 281 21 is_stmt 0 view .LVU41
 172 000e 2C4B     		ldr	r3, .L21+8
 173 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 174 0012 2C4A     		ldr	r2, .L21+12
 175 0014 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 281:Core/Src/main.c **** 	}else if(f_lcd_item==1){
 176              		.loc 1 281 8 view .LVU42
 177 0016 2C4B     		ldr	r3, .L21+16
 178 0018 1A70     		strb	r2, [r3]
 179              	.L11:
 292:Core/Src/main.c **** 	{
 180              		.loc 1 292 2 is_stmt 1 view .LVU43
 181 001a 2C4B     		ldr	r3, .L21+20
 182 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 183 001e 032B     		cmp	r3, #3
 184 0020 25D8     		bhi	.L9
 185 0022 DFE803F0 		tbb	[pc, r3]
 186              	.L15:
 187 0026 1A       		.byte	(.L18-.L15)/2
 188 0027 25       		.byte	(.L17-.L15)/2
 189 0028 31       		.byte	(.L16-.L15)/2
 190 0029 3C       		.byte	(.L14-.L15)/2
 191              		.p2align 1
 192              	.L10:
 282:Core/Src/main.c **** 		cmd = 0xCF;
 193              		.loc 1 282 8 view .LVU44
 282:Core/Src/main.c **** 		cmd = 0xCF;
 194              		.loc 1 282 10 is_stmt 0 view .LVU45
 195 002a 012B     		cmp	r3, #1
 196 002c 0BD0     		beq	.L20
 286:Core/Src/main.c **** 		cmd =0x8C;
 197              		.loc 1 286 8 is_stmt 1 view .LVU46
 286:Core/Src/main.c **** 		cmd =0x8C;
 198              		.loc 1 286 10 is_stmt 0 view .LVU47
 199 002e 022B     		cmp	r3, #2
 200 0030 F3D1     		bne	.L11
 287:Core/Src/main.c **** 		data = digit_table[num_slave];
 201              		.loc 1 287 3 is_stmt 1 view .LVU48
ARM GAS  /tmp/ccLn1Ezy.s 			page 11


 287:Core/Src/main.c **** 		data = digit_table[num_slave];
 202              		.loc 1 287 7 is_stmt 0 view .LVU49
 203 0032 224B     		ldr	r3, .L21+4
 204 0034 8C22     		movs	r2, #140
 205 0036 1A70     		strb	r2, [r3]
 288:Core/Src/main.c **** 
 206              		.loc 1 288 3 is_stmt 1 view .LVU50
 288:Core/Src/main.c **** 
 207              		.loc 1 288 21 is_stmt 0 view .LVU51
 208 0038 254B     		ldr	r3, .L21+24
 209 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 210 003c 214A     		ldr	r2, .L21+12
 211 003e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 288:Core/Src/main.c **** 
 212              		.loc 1 288 8 view .LVU52
 213 0040 214B     		ldr	r3, .L21+16
 214 0042 1A70     		strb	r2, [r3]
 215 0044 E9E7     		b	.L11
 216              	.L20:
 283:Core/Src/main.c **** 		data = digit_table[digit1];
 217              		.loc 1 283 3 is_stmt 1 view .LVU53
 283:Core/Src/main.c **** 		data = digit_table[digit1];
 218              		.loc 1 283 7 is_stmt 0 view .LVU54
 219 0046 1D4B     		ldr	r3, .L21+4
 220 0048 CF22     		movs	r2, #207
 221 004a 1A70     		strb	r2, [r3]
 284:Core/Src/main.c **** 
 222              		.loc 1 284 3 is_stmt 1 view .LVU55
 284:Core/Src/main.c **** 
 223              		.loc 1 284 21 is_stmt 0 view .LVU56
 224 004c 214B     		ldr	r3, .L21+28
 225 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 226 0050 1C4A     		ldr	r2, .L21+12
 227 0052 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 284:Core/Src/main.c **** 
 228              		.loc 1 284 8 view .LVU57
 229 0054 1C4B     		ldr	r3, .L21+16
 230 0056 1A70     		strb	r2, [r3]
 231 0058 DFE7     		b	.L11
 232              	.L18:
 296:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 233              		.loc 1 296 3 is_stmt 1 view .LVU58
 234 005a 0022     		movs	r2, #0
 235 005c 1021     		movs	r1, #16
 236 005e 1E48     		ldr	r0, .L21+32
 237 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL4:
 297:Core/Src/main.c **** 		break;
 239              		.loc 1 297 3 view .LVU59
 240 0064 154B     		ldr	r3, .L21+4
 241 0066 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242 0068 0009     		lsrs	r0, r0, #4
 243 006a FFF7FEFF 		bl	m_send_to_lcd
 244              	.LVL5:
 298:Core/Src/main.c **** 	case 1:
 245              		.loc 1 298 3 view .LVU60
 246              	.L9:
ARM GAS  /tmp/ccLn1Ezy.s 			page 12


 312:Core/Src/main.c **** 
 247              		.loc 1 312 1 is_stmt 0 view .LVU61
 248 006e 08BD     		pop	{r3, pc}
 249              	.L17:
 300:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 250              		.loc 1 300 3 is_stmt 1 view .LVU62
 251 0070 0022     		movs	r2, #0
 252 0072 1021     		movs	r1, #16
 253 0074 1848     		ldr	r0, .L21+32
 254 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 255              	.LVL6:
 301:Core/Src/main.c **** 		break;
 256              		.loc 1 301 3 view .LVU63
 301:Core/Src/main.c **** 		break;
 257              		.loc 1 301 22 is_stmt 0 view .LVU64
 258 007a 104B     		ldr	r3, .L21+4
 259 007c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 301:Core/Src/main.c **** 		break;
 260              		.loc 1 301 3 view .LVU65
 261 007e 00F00F00 		and	r0, r0, #15
 262 0082 FFF7FEFF 		bl	m_send_to_lcd
 263              	.LVL7:
 302:Core/Src/main.c **** 	case 2:
 264              		.loc 1 302 3 is_stmt 1 view .LVU66
 265 0086 F2E7     		b	.L9
 266              	.L16:
 304:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 267              		.loc 1 304 3 view .LVU67
 268 0088 0122     		movs	r2, #1
 269 008a 1021     		movs	r1, #16
 270 008c 1248     		ldr	r0, .L21+32
 271 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 272              	.LVL8:
 305:Core/Src/main.c **** 		break;
 273              		.loc 1 305 3 view .LVU68
 274 0092 0D4B     		ldr	r3, .L21+16
 275 0094 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 276 0096 0009     		lsrs	r0, r0, #4
 277 0098 FFF7FEFF 		bl	m_send_to_lcd
 278              	.LVL9:
 306:Core/Src/main.c **** 	case 3:
 279              		.loc 1 306 3 view .LVU69
 280 009c E7E7     		b	.L9
 281              	.L14:
 308:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 282              		.loc 1 308 3 view .LVU70
 283 009e 0122     		movs	r2, #1
 284 00a0 1021     		movs	r1, #16
 285 00a2 0D48     		ldr	r0, .L21+32
 286 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 287              	.LVL10:
 309:Core/Src/main.c **** 		break;
 288              		.loc 1 309 3 view .LVU71
 309:Core/Src/main.c **** 		break;
 289              		.loc 1 309 22 is_stmt 0 view .LVU72
 290 00a8 074B     		ldr	r3, .L21+16
 291 00aa 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccLn1Ezy.s 			page 13


 309:Core/Src/main.c **** 		break;
 292              		.loc 1 309 3 view .LVU73
 293 00ac 00F00F00 		and	r0, r0, #15
 294 00b0 FFF7FEFF 		bl	m_send_to_lcd
 295              	.LVL11:
 310:Core/Src/main.c **** 	}
 296              		.loc 1 310 3 is_stmt 1 view .LVU74
 312:Core/Src/main.c **** 
 297              		.loc 1 312 1 is_stmt 0 view .LVU75
 298 00b4 DBE7     		b	.L9
 299              	.L22:
 300 00b6 00BF     		.align	2
 301              	.L21:
 302 00b8 00000000 		.word	.LANCHOR3
 303 00bc 00000000 		.word	.LANCHOR4
 304 00c0 00000000 		.word	.LANCHOR6
 305 00c4 00000000 		.word	.LANCHOR5
 306 00c8 00000000 		.word	.LANCHOR7
 307 00cc 00000000 		.word	.LANCHOR2
 308 00d0 00000000 		.word	.LANCHOR9
 309 00d4 00000000 		.word	.LANCHOR8
 310 00d8 00100240 		.word	1073876992
 311              		.cfi_endproc
 312              	.LFE132:
 314              		.section	.text.task_timer,"ax",%progbits
 315              		.align	1
 316              		.global	task_timer
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	task_timer:
 323              	.LFB134:
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** void task_timer(void)
 345:Core/Src/main.c **** {
 324              		.loc 1 345 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 346:Core/Src/main.c **** 	if (!f_timer_10ms)
 329              		.loc 1 346 2 view .LVU77
 330              		.loc 1 346 6 is_stmt 0 view .LVU78
 331 0000 184B     		ldr	r3, .L30
 332 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 333              		.loc 1 346 5 view .LVU79
 334 0004 BBB1     		cbz	r3, .L23
 347:Core/Src/main.c **** 		return;		  // checking if 10 ms timer interrupt is set (10 ms), if set then do timer task
 348:Core/Src/main.c **** 	f_timer_10ms = 0; // clear the flag to wait next interupt
 335              		.loc 1 348 2 is_stmt 1 view .LVU80
 336              		.loc 1 348 15 is_stmt 0 view .LVU81
 337 0006 174B     		ldr	r3, .L30
 338 0008 0022     		movs	r2, #0
 339 000a 1A70     		strb	r2, [r3]
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** 	d_timer_30ms++; // count timer for 30 ms interval
ARM GAS  /tmp/ccLn1Ezy.s 			page 14


 340              		.loc 1 350 2 is_stmt 1 view .LVU82
 341              		.loc 1 350 14 is_stmt 0 view .LVU83
 342 000c 164A     		ldr	r2, .L30+4
 343 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 344 0010 0133     		adds	r3, r3, #1
 345 0012 DBB2     		uxtb	r3, r3
 346 0014 1370     		strb	r3, [r2]
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** 	if (d_timer_30ms == 3) // checking if the count reached 30 ms
 347              		.loc 1 352 2 is_stmt 1 view .LVU84
 348              		.loc 1 352 5 is_stmt 0 view .LVU85
 349 0016 032B     		cmp	r3, #3
 350 0018 0ED0     		beq	.L27
 351              	.L25:
 353:Core/Src/main.c **** 	{
 354:Core/Src/main.c **** 		d_timer_30ms = 0; // assign "0" to repeat counting
 355:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 356:Core/Src/main.c **** 	}
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** 	d_timer_20ms++;
 352              		.loc 1 358 2 is_stmt 1 view .LVU86
 353              		.loc 1 358 14 is_stmt 0 view .LVU87
 354 001a 144A     		ldr	r2, .L30+8
 355 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 356 001e 0133     		adds	r3, r3, #1
 357 0020 DBB2     		uxtb	r3, r3
 358 0022 1370     		strb	r3, [r2]
 359:Core/Src/main.c **** 	if (d_timer_20ms == 2)
 359              		.loc 1 359 2 is_stmt 1 view .LVU88
 360              		.loc 1 359 5 is_stmt 0 view .LVU89
 361 0024 022B     		cmp	r3, #2
 362 0026 0ED0     		beq	.L28
 363              	.L26:
 360:Core/Src/main.c **** 	{
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** 		d_timer_20ms = 0;
 363:Core/Src/main.c **** 		f_timer_20ms = 1;
 364:Core/Src/main.c **** 	}
 365:Core/Src/main.c **** 	d_timer_50ms++;
 364              		.loc 1 365 2 is_stmt 1 view .LVU90
 365              		.loc 1 365 14 is_stmt 0 view .LVU91
 366 0028 114A     		ldr	r2, .L30+12
 367 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 368 002c 0133     		adds	r3, r3, #1
 369 002e DBB2     		uxtb	r3, r3
 370 0030 1370     		strb	r3, [r2]
 366:Core/Src/main.c **** 	if (d_timer_50ms == 20)
 371              		.loc 1 366 2 is_stmt 1 view .LVU92
 372              		.loc 1 366 5 is_stmt 0 view .LVU93
 373 0032 142B     		cmp	r3, #20
 374 0034 0ED0     		beq	.L29
 375              	.L23:
 367:Core/Src/main.c **** 	{
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** 		d_timer_50ms = 0;
 370:Core/Src/main.c **** 		// f_timer_50ms=1;
 371:Core/Src/main.c **** 		//buffer_push(&event_buffer, EVENT_QUERRY);
ARM GAS  /tmp/ccLn1Ezy.s 			page 15


 372:Core/Src/main.c **** 		f_querry=1;
 373:Core/Src/main.c **** 	}
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** }
 376              		.loc 1 375 1 view .LVU94
 377 0036 7047     		bx	lr
 378              	.L27:
 354:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 379              		.loc 1 354 3 is_stmt 1 view .LVU95
 354:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 380              		.loc 1 354 16 is_stmt 0 view .LVU96
 381 0038 1346     		mov	r3, r2
 382 003a 0022     		movs	r2, #0
 383 003c 1A70     		strb	r2, [r3]
 355:Core/Src/main.c **** 	}
 384              		.loc 1 355 3 is_stmt 1 view .LVU97
 355:Core/Src/main.c **** 	}
 385              		.loc 1 355 16 is_stmt 0 view .LVU98
 386 003e 0D4B     		ldr	r3, .L30+16
 387 0040 0122     		movs	r2, #1
 388 0042 1A70     		strb	r2, [r3]
 389 0044 E9E7     		b	.L25
 390              	.L28:
 362:Core/Src/main.c **** 		f_timer_20ms = 1;
 391              		.loc 1 362 3 is_stmt 1 view .LVU99
 362:Core/Src/main.c **** 		f_timer_20ms = 1;
 392              		.loc 1 362 16 is_stmt 0 view .LVU100
 393 0046 1346     		mov	r3, r2
 394 0048 0022     		movs	r2, #0
 395 004a 1A70     		strb	r2, [r3]
 363:Core/Src/main.c **** 	}
 396              		.loc 1 363 3 is_stmt 1 view .LVU101
 363:Core/Src/main.c **** 	}
 397              		.loc 1 363 16 is_stmt 0 view .LVU102
 398 004c 0A4B     		ldr	r3, .L30+20
 399 004e 0122     		movs	r2, #1
 400 0050 1A70     		strb	r2, [r3]
 401 0052 E9E7     		b	.L26
 402              	.L29:
 369:Core/Src/main.c **** 		// f_timer_50ms=1;
 403              		.loc 1 369 3 is_stmt 1 view .LVU103
 369:Core/Src/main.c **** 		// f_timer_50ms=1;
 404              		.loc 1 369 16 is_stmt 0 view .LVU104
 405 0054 1346     		mov	r3, r2
 406 0056 0022     		movs	r2, #0
 407 0058 1A70     		strb	r2, [r3]
 372:Core/Src/main.c **** 	}
 408              		.loc 1 372 3 is_stmt 1 view .LVU105
 372:Core/Src/main.c **** 	}
 409              		.loc 1 372 11 is_stmt 0 view .LVU106
 410 005a 084B     		ldr	r3, .L30+24
 411 005c 0122     		movs	r2, #1
 412 005e 1A70     		strb	r2, [r3]
 413 0060 E9E7     		b	.L23
 414              	.L31:
 415 0062 00BF     		.align	2
 416              	.L30:
ARM GAS  /tmp/ccLn1Ezy.s 			page 16


 417 0064 00000000 		.word	.LANCHOR10
 418 0068 00000000 		.word	.LANCHOR11
 419 006c 00000000 		.word	.LANCHOR13
 420 0070 00000000 		.word	.LANCHOR14
 421 0074 00000000 		.word	.LANCHOR12
 422 0078 00000000 		.word	.LANCHOR0
 423 007c 00000000 		.word	.LANCHOR15
 424              		.cfi_endproc
 425              	.LFE134:
 427              		.section	.text.key_read_task,"ax",%progbits
 428              		.align	1
 429              		.global	key_read_task
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv4-sp-d16
 435              	key_read_task:
 436              	.LFB135:
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** void key_read_task(void)
 378:Core/Src/main.c **** {
 437              		.loc 1 378 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441 0000 08B5     		push	{r3, lr}
 442              	.LCFI2:
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 3, -8
 445              		.cfi_offset 14, -4
 379:Core/Src/main.c **** 	if (!f_timer_30ms) return;		  // Checking if 30 ms counting is done
 446              		.loc 1 379 2 view .LVU108
 447              		.loc 1 379 6 is_stmt 0 view .LVU109
 448 0002 254B     		ldr	r3, .L42
 449 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 450              		.loc 1 379 5 view .LVU110
 451 0006 13B3     		cbz	r3, .L32
 380:Core/Src/main.c **** 	f_timer_30ms = 0; // clear the flag to wait next counting
 452              		.loc 1 380 2 is_stmt 1 view .LVU111
 453              		.loc 1 380 15 is_stmt 0 view .LVU112
 454 0008 234B     		ldr	r3, .L42
 455 000a 0022     		movs	r2, #0
 456 000c 1A70     		strb	r2, [r3]
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin | KEY2_Pin));
 457              		.loc 1 382 2 is_stmt 1 view .LVU113
 458              		.loc 1 382 39 is_stmt 0 view .LVU114
 459 000e 234B     		ldr	r3, .L42+4
 460 0010 1869     		ldr	r0, [r3, #16]
 461              	.LVL12:
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** 	key1_data = key1_data << 1; // Preparing to read KEY1 Input
 462              		.loc 1 384 2 is_stmt 1 view .LVU115
 463              		.loc 1 384 24 is_stmt 0 view .LVU116
 464 0012 234B     		ldr	r3, .L42+8
 465 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 466 0016 5200     		lsls	r2, r2, #1
ARM GAS  /tmp/ccLn1Ezy.s 			page 17


 467 0018 D2B2     		uxtb	r2, r2
 468              		.loc 1 384 12 view .LVU117
 469 001a 1A70     		strb	r2, [r3]
 385:Core/Src/main.c **** 	key1_data &= 0b00001110;
 470              		.loc 1 385 2 is_stmt 1 view .LVU118
 471              		.loc 1 385 12 is_stmt 0 view .LVU119
 472 001c 02F00E02 		and	r2, r2, #14
 473 0020 1A70     		strb	r2, [r3]
 386:Core/Src/main.c **** 	key1_data |= ((key_pindata >> 2) & 0x1); // Read KEY1 Input
 474              		.loc 1 386 2 is_stmt 1 view .LVU120
 475              		.loc 1 386 35 is_stmt 0 view .LVU121
 476 0022 C0F38001 		ubfx	r1, r0, #2, #1
 477              		.loc 1 386 12 view .LVU122
 478 0026 0A43     		orrs	r2, r2, r1
 479 0028 1A70     		strb	r2, [r3]
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** 	key2_data = key2_data << 1; // Preparing to read KEY2 Input
 480              		.loc 1 388 2 is_stmt 1 view .LVU123
 481              		.loc 1 388 24 is_stmt 0 view .LVU124
 482 002a 1E49     		ldr	r1, .L42+12
 483 002c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 484 002e 5B00     		lsls	r3, r3, #1
 485 0030 DBB2     		uxtb	r3, r3
 486              		.loc 1 388 12 view .LVU125
 487 0032 0B70     		strb	r3, [r1]
 389:Core/Src/main.c **** 	key2_data &= 0b00001110;
 488              		.loc 1 389 2 is_stmt 1 view .LVU126
 489              		.loc 1 389 12 is_stmt 0 view .LVU127
 490 0034 03F00E03 		and	r3, r3, #14
 491 0038 0B70     		strb	r3, [r1]
 390:Core/Src/main.c **** 	key2_data |= (key_pindata >> 3); // Read KEY2 Input
 492              		.loc 1 390 2 is_stmt 1 view .LVU128
 493              		.loc 1 390 12 is_stmt 0 view .LVU129
 494 003a C0F3C000 		ubfx	r0, r0, #3, #1
 495              	.LVL13:
 496              		.loc 1 390 12 view .LVU130
 497 003e 0343     		orrs	r3, r3, r0
 498 0040 0B70     		strb	r3, [r1]
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** 	if (key1_data == KEY_PRESSED) // Checking if KEY1 is pressed
 499              		.loc 1 392 2 is_stmt 1 view .LVU131
 500              		.loc 1 392 5 is_stmt 0 view .LVU132
 501 0042 0C2A     		cmp	r2, #12
 502 0044 04D0     		beq	.L40
 503              	.L34:
 393:Core/Src/main.c **** 	{
 394:Core/Src/main.c **** 		digit1=(digit1+1)>9? 0 :digit1+1;
 395:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 396:Core/Src/main.c **** 		
 397:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 398:Core/Src/main.c **** 	}
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** 	if (key2_data == KEY_PRESSED) // Checking if KEY2 is pressed
 504              		.loc 1 400 2 is_stmt 1 view .LVU133
 505              		.loc 1 400 16 is_stmt 0 view .LVU134
 506 0046 174B     		ldr	r3, .L42+12
 507 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccLn1Ezy.s 			page 18


 508              		.loc 1 400 5 view .LVU135
 509 004a 0C2B     		cmp	r3, #12
 510 004c 12D0     		beq	.L41
 511              	.L32:
 401:Core/Src/main.c **** 	{
 402:Core/Src/main.c **** 		digit2=(digit2+1)>15? 0 :digit2+1;
 403:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 404:Core/Src/main.c **** 		
 405:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 406:Core/Src/main.c **** 	}
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** }
 512              		.loc 1 408 1 view .LVU136
 513 004e 08BD     		pop	{r3, pc}
 514              	.L40:
 394:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 515              		.loc 1 394 3 is_stmt 1 view .LVU137
 394:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 516              		.loc 1 394 20 is_stmt 0 view .LVU138
 517 0050 154B     		ldr	r3, .L42+16
 518 0052 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 394:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 519              		.loc 1 394 9 view .LVU139
 520 0054 0829     		cmp	r1, #8
 521 0056 0BD8     		bhi	.L37
 394:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 522              		.loc 1 394 9 discriminator 1 view .LVU140
 523 0058 0131     		adds	r1, r1, #1
 524 005a C9B2     		uxtb	r1, r1
 525              	.L35:
 394:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 526              		.loc 1 394 9 discriminator 4 view .LVU141
 527 005c 124B     		ldr	r3, .L42+16
 528 005e 1970     		strb	r1, [r3]
 395:Core/Src/main.c **** 		
 529              		.loc 1 395 3 is_stmt 1 discriminator 4 view .LVU142
 530 0060 1248     		ldr	r0, .L42+20
 531 0062 FFF7FEFF 		bl	buffer_push
 532              	.LVL14:
 397:Core/Src/main.c **** 	}
 533              		.loc 1 397 3 discriminator 4 view .LVU143
 534 0066 0121     		movs	r1, #1
 535 0068 1148     		ldr	r0, .L42+24
 536 006a FFF7FEFF 		bl	buffer_push
 537              	.LVL15:
 538 006e EAE7     		b	.L34
 539              	.L37:
 394:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 540              		.loc 1 394 9 is_stmt 0 view .LVU144
 541 0070 0021     		movs	r1, #0
 542 0072 F3E7     		b	.L35
 543              	.L41:
 402:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 544              		.loc 1 402 3 is_stmt 1 view .LVU145
 402:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 545              		.loc 1 402 20 is_stmt 0 view .LVU146
 546 0074 0F4B     		ldr	r3, .L42+28
ARM GAS  /tmp/ccLn1Ezy.s 			page 19


 547 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 402:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 548              		.loc 1 402 9 view .LVU147
 549 0078 0E29     		cmp	r1, #14
 550 007a 0BD8     		bhi	.L38
 402:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 551              		.loc 1 402 9 discriminator 1 view .LVU148
 552 007c 0131     		adds	r1, r1, #1
 553 007e C9B2     		uxtb	r1, r1
 554              	.L36:
 402:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 555              		.loc 1 402 9 discriminator 4 view .LVU149
 556 0080 0C4B     		ldr	r3, .L42+28
 557 0082 1970     		strb	r1, [r3]
 403:Core/Src/main.c **** 		
 558              		.loc 1 403 3 is_stmt 1 discriminator 4 view .LVU150
 559 0084 0C48     		ldr	r0, .L42+32
 560 0086 FFF7FEFF 		bl	buffer_push
 561              	.LVL16:
 405:Core/Src/main.c **** 	}
 562              		.loc 1 405 3 discriminator 4 view .LVU151
 563 008a 0221     		movs	r1, #2
 564 008c 0848     		ldr	r0, .L42+24
 565 008e FFF7FEFF 		bl	buffer_push
 566              	.LVL17:
 567 0092 DCE7     		b	.L32
 568              	.L38:
 402:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 569              		.loc 1 402 9 is_stmt 0 view .LVU152
 570 0094 0021     		movs	r1, #0
 571 0096 F3E7     		b	.L36
 572              	.L43:
 573              		.align	2
 574              	.L42:
 575 0098 00000000 		.word	.LANCHOR12
 576 009c 00180240 		.word	1073879040
 577 00a0 00000000 		.word	.LANCHOR16
 578 00a4 00000000 		.word	.LANCHOR17
 579 00a8 00000000 		.word	.LANCHOR8
 580 00ac 00000000 		.word	.LANCHOR18
 581 00b0 00000000 		.word	.LANCHOR19
 582 00b4 00000000 		.word	.LANCHOR6
 583 00b8 00000000 		.word	.LANCHOR20
 584              		.cfi_endproc
 585              	.LFE135:
 587              		.section	.text.RS485_RX_Task,"ax",%progbits
 588              		.align	1
 589              		.global	RS485_RX_Task
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv4-sp-d16
 595              	RS485_RX_Task:
 596              	.LFB137:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** void main_task(void)
 411:Core/Src/main.c **** {
ARM GAS  /tmp/ccLn1Ezy.s 			page 20


 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** 	if (event_buffer.head != event_buffer.tail)
 414:Core/Src/main.c **** 	{
 415:Core/Src/main.c **** 		
 416:Core/Src/main.c **** 		event = buffer_pop(&event_buffer); // if there is event then get the event from buffer
 417:Core/Src/main.c **** 
 418:Core/Src/main.c **** 	}
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** 	switch (state)
 421:Core/Src/main.c **** 	{
 422:Core/Src/main.c **** 	case STATE_TX:
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** 		if (num_slave==0) break;
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** 		switch (event)
 427:Core/Src/main.c **** 		{
 428:Core/Src/main.c **** 		case EVENT_KEY1_PRESSED:
 429:Core/Src/main.c **** 			
 430:Core/Src/main.c **** 			pTX_msg = &TX_msg[1];
 431:Core/Src/main.c **** 			
 432:Core/Src/main.c **** 			*pTX_msg++ = ID_list[0];
 433:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 434:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit1_buf)+'0';
 435:Core/Src/main.c **** 			 			
 436:Core/Src/main.c **** 			RS485_Send_Message();
 437:Core/Src/main.c **** 			event = EVENT_RESET;
 438:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 439:Core/Src/main.c **** 			f_querry =0;
 440:Core/Src/main.c **** 			break;
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** 		case EVENT_KEY2_PRESSED:
 443:Core/Src/main.c **** 			
 444:Core/Src/main.c **** 			
 445:Core/Src/main.c **** 			pTX_msg = &TX_msg[1];
 446:Core/Src/main.c **** 			
 447:Core/Src/main.c **** 			*pTX_msg++ = ID_list[1];
 448:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 449:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit2_buf)+'0';
 450:Core/Src/main.c **** 					
 451:Core/Src/main.c **** 			RS485_Send_Message();
 452:Core/Src/main.c **** 			event = EVENT_RESET;
 453:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 454:Core/Src/main.c **** 			f_querry =0;
 455:Core/Src/main.c **** 			break;
 456:Core/Src/main.c **** 		
 457:Core/Src/main.c **** 		
 458:Core/Src/main.c **** 		default:
 459:Core/Src/main.c **** 			if (!f_querry) break;
 460:Core/Src/main.c **** 			f_querry =0;
 461:Core/Src/main.c **** 			
 462:Core/Src/main.c **** 			pTX_msg = &TX_msg[1];
 463:Core/Src/main.c **** 			
 464:Core/Src/main.c **** 			*pTX_msg++ = ID_list[ID];
 465:Core/Src/main.c **** 			ID = (ID+1) == num_slave? 0:ID+1;
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** 			//digit2=(digit2+1)>15? 0 :digit2+1;
 468:Core/Src/main.c **** 			*pTX_msg++ = FUNC_READ;
ARM GAS  /tmp/ccLn1Ezy.s 			page 21


 469:Core/Src/main.c **** 			*pTX_msg++ = '0';
 470:Core/Src/main.c **** 			
 471:Core/Src/main.c **** 			RS485_Send_Message();
 472:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 473:Core/Src/main.c **** 			break;
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** 		}
 476:Core/Src/main.c **** 		break;
 477:Core/Src/main.c **** 		
 478:Core/Src/main.c **** 	case STATE_WAITING_RX:
 479:Core/Src/main.c **** 		
 480:Core/Src/main.c **** 		if (event==EVENT_RX_COMPLETE){
 481:Core/Src/main.c **** 			RS485_Read_Message();
 482:Core/Src/main.c **** 
 483:Core/Src/main.c **** 			state=STATE_TX;
 484:Core/Src/main.c **** 			event = EVENT_RESET;
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** 		}else{
 487:Core/Src/main.c **** 			
 488:Core/Src/main.c **** 			if (!f_querry) break;
 489:Core/Src/main.c **** 			f_querry =0;
 490:Core/Src/main.c **** 			tx_timeout++;
 491:Core/Src/main.c **** 			
 492:Core/Src/main.c **** 			if (tx_timeout==2){
 493:Core/Src/main.c **** 				state = STATE_TX;
 494:Core/Src/main.c **** 				tx_timeout=0;
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** 				num_slave--;
 497:Core/Src/main.c **** 				
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** 			}
 500:Core/Src/main.c **** 			RS485_Send_Message();
 501:Core/Src/main.c **** 		}
 502:Core/Src/main.c **** 		
 503:Core/Src/main.c **** 		break;
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** 	}
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** }
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** void RS485_RX_Task(void)
 511:Core/Src/main.c **** {
 597              		.loc 1 511 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601 0000 08B5     		push	{r3, lr}
 602              	.LCFI3:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 3, -8
 605              		.cfi_offset 14, -4
 512:Core/Src/main.c **** 	
 513:Core/Src/main.c **** 	if (rx_buffer.tail==rx_buffer.head) return;
 606              		.loc 1 513 2 view .LVU154
 607              		.loc 1 513 15 is_stmt 0 view .LVU155
 608 0002 174A     		ldr	r2, .L52
ARM GAS  /tmp/ccLn1Ezy.s 			page 22


 609 0004 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 610              		.loc 1 513 31 view .LVU156
 611 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 612              		.loc 1 513 5 view .LVU157
 613 0008 9942     		cmp	r1, r3
 614 000a 20D0     		beq	.L44
 514:Core/Src/main.c **** 	
 515:Core/Src/main.c **** 	
 516:Core/Src/main.c **** 	if (rx_buffer.data[rx_buffer.tail]==SOF)
 615              		.loc 1 516 2 is_stmt 1 view .LVU158
 616              		.loc 1 516 20 is_stmt 0 view .LVU159
 617 000c 1346     		mov	r3, r2
 618 000e 0B44     		add	r3, r3, r1
 619 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 620              		.loc 1 516 5 view .LVU160
 621 0012 022B     		cmp	r3, #2
 622 0014 0AD0     		beq	.L50
 517:Core/Src/main.c **** 	{
 518:Core/Src/main.c **** 		f_read_msg =1;
 519:Core/Src/main.c **** 		pRX_msg = RX_msg;
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** 	}else if(rx_buffer.data[rx_buffer.tail]==EOF)
 623              		.loc 1 521 8 is_stmt 1 view .LVU161
 624              		.loc 1 521 10 is_stmt 0 view .LVU162
 625 0016 032B     		cmp	r3, #3
 626 0018 1AD0     		beq	.L51
 522:Core/Src/main.c **** 	{
 523:Core/Src/main.c **** 		f_read_msg =0;
 524:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 525:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 526:Core/Src/main.c **** 	}else{
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** 		if (f_read_msg){
 627              		.loc 1 528 3 is_stmt 1 view .LVU163
 628              		.loc 1 528 7 is_stmt 0 view .LVU164
 629 001a 124A     		ldr	r2, .L52+4
 630 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 631              		.loc 1 528 6 view .LVU165
 632 001e 5AB1     		cbz	r2, .L47
 529:Core/Src/main.c **** 			*pRX_msg++=rx_buffer.data[rx_buffer.tail];
 633              		.loc 1 529 4 is_stmt 1 view .LVU166
 634              		.loc 1 529 12 is_stmt 0 view .LVU167
 635 0020 1149     		ldr	r1, .L52+8
 636 0022 0A68     		ldr	r2, [r1]
 637 0024 501C     		adds	r0, r2, #1
 638 0026 0860     		str	r0, [r1]
 639              		.loc 1 529 14 view .LVU168
 640 0028 1370     		strb	r3, [r2]
 641 002a 05E0     		b	.L47
 642              	.L50:
 518:Core/Src/main.c **** 		pRX_msg = RX_msg;
 643              		.loc 1 518 3 is_stmt 1 view .LVU169
 518:Core/Src/main.c **** 		pRX_msg = RX_msg;
 644              		.loc 1 518 14 is_stmt 0 view .LVU170
 645 002c 0D4B     		ldr	r3, .L52+4
 646 002e 0122     		movs	r2, #1
 647 0030 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccLn1Ezy.s 			page 23


 519:Core/Src/main.c **** 
 648              		.loc 1 519 3 is_stmt 1 view .LVU171
 519:Core/Src/main.c **** 
 649              		.loc 1 519 11 is_stmt 0 view .LVU172
 650 0032 0D4B     		ldr	r3, .L52+8
 651 0034 0D4A     		ldr	r2, .L52+12
 652 0036 1A60     		str	r2, [r3]
 653              	.L47:
 530:Core/Src/main.c **** 		}	
 531:Core/Src/main.c **** 	}
 532:Core/Src/main.c **** 	rx_buffer.tail = (rx_buffer.tail+1)%BUFFER_SIZE;
 654              		.loc 1 532 2 is_stmt 1 view .LVU173
 655              		.loc 1 532 29 is_stmt 0 view .LVU174
 656 0038 0949     		ldr	r1, .L52
 657 003a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 658              		.loc 1 532 34 view .LVU175
 659 003c 0133     		adds	r3, r3, #1
 660              		.loc 1 532 37 view .LVU176
 661 003e 5A42     		rsbs	r2, r3, #0
 662 0040 03F03F03 		and	r3, r3, #63
 663 0044 02F03F02 		and	r2, r2, #63
 664 0048 58BF     		it	pl
 665 004a 5342     		rsbpl	r3, r2, #0
 666              		.loc 1 532 17 view .LVU177
 667 004c 4B70     		strb	r3, [r1, #1]
 668              	.L44:
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** }
 669              		.loc 1 534 1 view .LVU178
 670 004e 08BD     		pop	{r3, pc}
 671              	.L51:
 523:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 672              		.loc 1 523 3 is_stmt 1 view .LVU179
 523:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 673              		.loc 1 523 14 is_stmt 0 view .LVU180
 674 0050 044B     		ldr	r3, .L52+4
 675 0052 0022     		movs	r2, #0
 676 0054 1A70     		strb	r2, [r3]
 524:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 677              		.loc 1 524 6 is_stmt 1 view .LVU181
 678 0056 0521     		movs	r1, #5
 679 0058 0548     		ldr	r0, .L52+16
 680 005a FFF7FEFF 		bl	buffer_push
 681              	.LVL18:
 682 005e EBE7     		b	.L47
 683              	.L53:
 684              		.align	2
 685              	.L52:
 686 0060 00000000 		.word	.LANCHOR21
 687 0064 00000000 		.word	.LANCHOR22
 688 0068 00000000 		.word	.LANCHOR23
 689 006c 00000000 		.word	.LANCHOR24
 690 0070 00000000 		.word	.LANCHOR19
 691              		.cfi_endproc
 692              	.LFE137:
 694              		.section	.text.RS485_Read_Message,"ax",%progbits
 695              		.align	1
ARM GAS  /tmp/ccLn1Ezy.s 			page 24


 696              		.global	RS485_Read_Message
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 700              		.fpu fpv4-sp-d16
 702              	RS485_Read_Message:
 703              	.LFB138:
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** void RS485_Read_Message(void)
 539:Core/Src/main.c **** {
 704              		.loc 1 539 1 view -0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 540:Core/Src/main.c **** 	//digit2 = 10;
 541:Core/Src/main.c **** 	uint8_t * digit;
 709              		.loc 1 541 2 view .LVU183
 542:Core/Src/main.c **** 	uint8_t checksum = 0;
 710              		.loc 1 542 2 view .LVU184
 711              	.LVL19:
 543:Core/Src/main.c **** 
 544:Core/Src/main.c **** 	checksum = checksum^RX_msg[0]^RX_msg[1]^RX_msg[2];
 712              		.loc 1 544 2 view .LVU185
 713              		.loc 1 544 28 is_stmt 0 view .LVU186
 714 0000 0C4B     		ldr	r3, .L59
 715 0002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 716              		.loc 1 544 38 view .LVU187
 717 0004 93F801C0 		ldrb	ip, [r3, #1]	@ zero_extendqisi2
 718              		.loc 1 544 48 view .LVU188
 719 0008 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 720              		.loc 1 544 11 view .LVU189
 721 000a 81EA0C02 		eor	r2, r1, ip
 722 000e 4240     		eors	r2, r2, r0
 723              	.LVL20:
 545:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 724              		.loc 1 545 2 is_stmt 1 view .LVU190
 725              		.loc 1 545 25 is_stmt 0 view .LVU191
 726 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 727              		.loc 1 545 5 view .LVU192
 728 0012 9342     		cmp	r3, r2
 729 0014 09D1     		bne	.L54
 546:Core/Src/main.c **** 	{
 547:Core/Src/main.c **** 		return;
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** 	}
 550:Core/Src/main.c **** 	
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** 	if ((RX_msg[0] == 0x10))
 730              		.loc 1 552 2 is_stmt 1 view .LVU193
 731              		.loc 1 552 5 is_stmt 0 view .LVU194
 732 0016 1029     		cmp	r1, #16
 733 0018 03D0     		beq	.L57
 553:Core/Src/main.c **** 	{
 554:Core/Src/main.c **** 		digit =&digit1;
ARM GAS  /tmp/ccLn1Ezy.s 			page 25


 555:Core/Src/main.c **** 
 556:Core/Src/main.c **** 	}else if ((RX_msg[0] == 0x12))
 734              		.loc 1 556 8 is_stmt 1 view .LVU195
 735              		.loc 1 556 11 is_stmt 0 view .LVU196
 736 001a 1229     		cmp	r1, #18
 737 001c 05D1     		bne	.L54
 557:Core/Src/main.c **** 	{
 558:Core/Src/main.c **** 		digit =&digit2;
 738              		.loc 1 558 9 view .LVU197
 739 001e 064B     		ldr	r3, .L59+4
 740 0020 00E0     		b	.L56
 741              	.L57:
 554:Core/Src/main.c **** 
 742              		.loc 1 554 9 view .LVU198
 743 0022 064B     		ldr	r3, .L59+8
 744              	.L56:
 745              	.LVL21:
 559:Core/Src/main.c **** 	}else{
 560:Core/Src/main.c **** 		return;
 561:Core/Src/main.c **** 	}
 562:Core/Src/main.c **** 	
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** 	if (RX_msg[1] == FUNC_READ)
 746              		.loc 1 564 2 is_stmt 1 view .LVU199
 747              		.loc 1 564 5 is_stmt 0 view .LVU200
 748 0024 BCF1F20F 		cmp	ip, #242
 749 0028 00D0     		beq	.L58
 750              	.LVL22:
 751              	.L54:
 565:Core/Src/main.c **** 	{	
 566:Core/Src/main.c **** 		*digit = (RX_msg[2] - '0');
 567:Core/Src/main.c **** 		
 568:Core/Src/main.c **** 	}
 569:Core/Src/main.c **** 	else if (RX_msg[1] == FUNC_WRITE)
 570:Core/Src/main.c **** 	{
 571:Core/Src/main.c **** 		
 572:Core/Src/main.c **** 	}
 573:Core/Src/main.c **** }
 752              		.loc 1 573 1 view .LVU201
 753 002a 7047     		bx	lr
 754              	.LVL23:
 755              	.L58:
 566:Core/Src/main.c **** 		
 756              		.loc 1 566 3 is_stmt 1 view .LVU202
 566:Core/Src/main.c **** 		
 757              		.loc 1 566 23 is_stmt 0 view .LVU203
 758 002c 3038     		subs	r0, r0, #48
 566:Core/Src/main.c **** 		
 759              		.loc 1 566 10 view .LVU204
 760 002e 1870     		strb	r0, [r3]
 572:Core/Src/main.c **** }
 761              		.loc 1 572 2 is_stmt 1 view .LVU205
 762 0030 FBE7     		b	.L54
 763              	.L60:
 764 0032 00BF     		.align	2
 765              	.L59:
 766 0034 00000000 		.word	.LANCHOR24
ARM GAS  /tmp/ccLn1Ezy.s 			page 26


 767 0038 00000000 		.word	.LANCHOR6
 768 003c 00000000 		.word	.LANCHOR8
 769              		.cfi_endproc
 770              	.LFE138:
 772              		.section	.text.RS485_Send_Message,"ax",%progbits
 773              		.align	1
 774              		.global	RS485_Send_Message
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	RS485_Send_Message:
 781              	.LFB139:
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** void RS485_Send_Message(void)
 578:Core/Src/main.c **** {
 782              		.loc 1 578 1 view -0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786 0000 38B5     		push	{r3, r4, r5, lr}
 787              	.LCFI4:
 788              		.cfi_def_cfa_offset 16
 789              		.cfi_offset 3, -16
 790              		.cfi_offset 4, -12
 791              		.cfi_offset 5, -8
 792              		.cfi_offset 14, -4
 579:Core/Src/main.c **** 	
 580:Core/Src/main.c **** 	TX_msg[0] = SOF;
 793              		.loc 1 580 2 view .LVU207
 794              		.loc 1 580 12 is_stmt 0 view .LVU208
 795 0002 0F4C     		ldr	r4, .L63
 796 0004 0223     		movs	r3, #2
 797 0006 2370     		strb	r3, [r4]
 581:Core/Src/main.c **** 	TX_msg[4] = (((0x00^TX_msg[1])^TX_msg[2])^TX_msg[3]);    // checksum
 798              		.loc 1 581 2 is_stmt 1 view .LVU209
 799              		.loc 1 581 28 is_stmt 0 view .LVU210
 800 0008 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 801              		.loc 1 581 39 view .LVU211
 802 000a A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 803              		.loc 1 581 50 view .LVU212
 804 000c E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 805              		.loc 1 581 12 view .LVU213
 806 000e 4A40     		eors	r2, r2, r1
 807 0010 5340     		eors	r3, r3, r2
 808 0012 2371     		strb	r3, [r4, #4]
 582:Core/Src/main.c **** 	TX_msg[5] = EOF;
 809              		.loc 1 582 2 is_stmt 1 view .LVU214
 810              		.loc 1 582 12 is_stmt 0 view .LVU215
 811 0014 0323     		movs	r3, #3
 812 0016 6371     		strb	r3, [r4, #5]
 583:Core/Src/main.c **** 
 584:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
 585:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 813              		.loc 1 585 2 is_stmt 1 view .LVU216
ARM GAS  /tmp/ccLn1Ezy.s 			page 27


 814 0018 0A4D     		ldr	r5, .L63+4
 815 001a 0122     		movs	r2, #1
 816 001c 4FF48051 		mov	r1, #4096
 817 0020 2846     		mov	r0, r5
 818 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 819              	.LVL24:
 586:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, TX_msg, sizeof(TX_msg), 10);
 820              		.loc 1 586 2 view .LVU217
 821 0026 0A23     		movs	r3, #10
 822 0028 0622     		movs	r2, #6
 823 002a 2146     		mov	r1, r4
 824 002c 0648     		ldr	r0, .L63+8
 825 002e FFF7FEFF 		bl	HAL_UART_Transmit
 826              	.LVL25:
 587:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 827              		.loc 1 587 2 view .LVU218
 828 0032 0022     		movs	r2, #0
 829 0034 4FF48051 		mov	r1, #4096
 830 0038 2846     		mov	r0, r5
 831 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 832              	.LVL26:
 588:Core/Src/main.c **** }
 833              		.loc 1 588 1 is_stmt 0 view .LVU219
 834 003e 38BD     		pop	{r3, r4, r5, pc}
 835              	.L64:
 836              		.align	2
 837              	.L63:
 838 0040 00000000 		.word	.LANCHOR25
 839 0044 00000240 		.word	1073872896
 840 0048 00000000 		.word	huart4
 841              		.cfi_endproc
 842              	.LFE139:
 844              		.section	.text.main_task,"ax",%progbits
 845              		.align	1
 846              		.global	main_task
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu fpv4-sp-d16
 852              	main_task:
 853              	.LFB136:
 411:Core/Src/main.c **** 
 854              		.loc 1 411 1 is_stmt 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858 0000 10B5     		push	{r4, lr}
 859              	.LCFI5:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 4, -8
 862              		.cfi_offset 14, -4
 413:Core/Src/main.c **** 	{
 863              		.loc 1 413 2 view .LVU221
 413:Core/Src/main.c **** 	{
 864              		.loc 1 413 18 is_stmt 0 view .LVU222
 865 0002 584B     		ldr	r3, .L82
 866 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccLn1Ezy.s 			page 28


 413:Core/Src/main.c **** 	{
 867              		.loc 1 413 39 view .LVU223
 868 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 413:Core/Src/main.c **** 	{
 869              		.loc 1 413 5 view .LVU224
 870 0008 9A42     		cmp	r2, r3
 871 000a 06D1     		bne	.L79
 872              	.L66:
 420:Core/Src/main.c **** 	{
 873              		.loc 1 420 2 is_stmt 1 view .LVU225
 874 000c 564B     		ldr	r3, .L82+4
 875 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 876 0010 012B     		cmp	r3, #1
 877 0012 08D0     		beq	.L67
 878 0014 022B     		cmp	r3, #2
 879 0016 7AD0     		beq	.L68
 880              	.L65:
 508:Core/Src/main.c **** 
 881              		.loc 1 508 1 is_stmt 0 view .LVU226
 882 0018 10BD     		pop	{r4, pc}
 883              	.L79:
 416:Core/Src/main.c **** 
 884              		.loc 1 416 3 is_stmt 1 view .LVU227
 416:Core/Src/main.c **** 
 885              		.loc 1 416 11 is_stmt 0 view .LVU228
 886 001a 5248     		ldr	r0, .L82
 887 001c FFF7FEFF 		bl	buffer_pop
 888              	.LVL27:
 416:Core/Src/main.c **** 
 889              		.loc 1 416 9 view .LVU229
 890 0020 524B     		ldr	r3, .L82+8
 891 0022 1870     		strb	r0, [r3]
 892 0024 F2E7     		b	.L66
 893              	.L67:
 424:Core/Src/main.c **** 
 894              		.loc 1 424 3 is_stmt 1 view .LVU230
 424:Core/Src/main.c **** 
 895              		.loc 1 424 16 is_stmt 0 view .LVU231
 896 0026 524B     		ldr	r3, .L82+12
 897 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 424:Core/Src/main.c **** 
 898              		.loc 1 424 6 view .LVU232
 899 002a 002B     		cmp	r3, #0
 900 002c F4D0     		beq	.L65
 426:Core/Src/main.c **** 		{
 901              		.loc 1 426 3 is_stmt 1 view .LVU233
 902 002e 4F4A     		ldr	r2, .L82+8
 903 0030 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 904 0032 012A     		cmp	r2, #1
 905 0034 29D0     		beq	.L70
 906 0036 022A     		cmp	r2, #2
 907 0038 47D0     		beq	.L71
 459:Core/Src/main.c **** 			f_querry =0;
 908              		.loc 1 459 4 view .LVU234
 459:Core/Src/main.c **** 			f_querry =0;
 909              		.loc 1 459 8 is_stmt 0 view .LVU235
 910 003a 4E4A     		ldr	r2, .L82+16
ARM GAS  /tmp/ccLn1Ezy.s 			page 29


 911 003c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 459:Core/Src/main.c **** 			f_querry =0;
 912              		.loc 1 459 7 view .LVU236
 913 003e 002A     		cmp	r2, #0
 914 0040 EAD0     		beq	.L65
 460:Core/Src/main.c **** 			
 915              		.loc 1 460 4 is_stmt 1 view .LVU237
 460:Core/Src/main.c **** 			
 916              		.loc 1 460 13 is_stmt 0 view .LVU238
 917 0042 4C4A     		ldr	r2, .L82+16
 918 0044 0021     		movs	r1, #0
 919 0046 1170     		strb	r1, [r2]
 462:Core/Src/main.c **** 			
 920              		.loc 1 462 4 is_stmt 1 view .LVU239
 462:Core/Src/main.c **** 			
 921              		.loc 1 462 12 is_stmt 0 view .LVU240
 922 0048 4B48     		ldr	r0, .L82+20
 923 004a 4C49     		ldr	r1, .L82+24
 924 004c 4A1C     		adds	r2, r1, #1
 925 004e 0260     		str	r2, [r0]
 464:Core/Src/main.c **** 			ID = (ID+1) == num_slave? 0:ID+1;
 926              		.loc 1 464 4 is_stmt 1 view .LVU241
 464:Core/Src/main.c **** 			ID = (ID+1) == num_slave? 0:ID+1;
 927              		.loc 1 464 24 is_stmt 0 view .LVU242
 928 0050 4B4A     		ldr	r2, .L82+28
 929 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 464:Core/Src/main.c **** 			ID = (ID+1) == num_slave? 0:ID+1;
 930              		.loc 1 464 12 view .LVU243
 931 0054 8C1C     		adds	r4, r1, #2
 932 0056 0460     		str	r4, [r0]
 464:Core/Src/main.c **** 			ID = (ID+1) == num_slave? 0:ID+1;
 933              		.loc 1 464 24 view .LVU244
 934 0058 4A48     		ldr	r0, .L82+32
 935 005a 805C     		ldrb	r0, [r0, r2]	@ zero_extendqisi2
 464:Core/Src/main.c **** 			ID = (ID+1) == num_slave? 0:ID+1;
 936              		.loc 1 464 15 view .LVU245
 937 005c 4870     		strb	r0, [r1, #1]
 465:Core/Src/main.c **** 
 938              		.loc 1 465 4 is_stmt 1 view .LVU246
 465:Core/Src/main.c **** 
 939              		.loc 1 465 12 is_stmt 0 view .LVU247
 940 005e 511C     		adds	r1, r2, #1
 465:Core/Src/main.c **** 
 941              		.loc 1 465 7 view .LVU248
 942 0060 9942     		cmp	r1, r3
 943 0062 52D0     		beq	.L76
 465:Core/Src/main.c **** 
 944              		.loc 1 465 7 discriminator 1 view .LVU249
 945 0064 CAB2     		uxtb	r2, r1
 946              	.L73:
 465:Core/Src/main.c **** 
 947              		.loc 1 465 7 discriminator 4 view .LVU250
 948 0066 464B     		ldr	r3, .L82+28
 949 0068 1A70     		strb	r2, [r3]
 468:Core/Src/main.c **** 			*pTX_msg++ = '0';
 950              		.loc 1 468 4 is_stmt 1 discriminator 4 view .LVU251
 468:Core/Src/main.c **** 			*pTX_msg++ = '0';
ARM GAS  /tmp/ccLn1Ezy.s 			page 30


 951              		.loc 1 468 12 is_stmt 0 discriminator 4 view .LVU252
 952 006a 434A     		ldr	r2, .L82+20
 953 006c 434B     		ldr	r3, .L82+24
 954 006e D91C     		adds	r1, r3, #3
 955 0070 1160     		str	r1, [r2]
 468:Core/Src/main.c **** 			*pTX_msg++ = '0';
 956              		.loc 1 468 15 discriminator 4 view .LVU253
 957 0072 F221     		movs	r1, #242
 958 0074 9970     		strb	r1, [r3, #2]
 469:Core/Src/main.c **** 			
 959              		.loc 1 469 4 is_stmt 1 discriminator 4 view .LVU254
 469:Core/Src/main.c **** 			
 960              		.loc 1 469 12 is_stmt 0 discriminator 4 view .LVU255
 961 0076 191D     		adds	r1, r3, #4
 962 0078 1160     		str	r1, [r2]
 469:Core/Src/main.c **** 			
 963              		.loc 1 469 15 discriminator 4 view .LVU256
 964 007a 3022     		movs	r2, #48
 965 007c DA70     		strb	r2, [r3, #3]
 471:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 966              		.loc 1 471 4 is_stmt 1 discriminator 4 view .LVU257
 967 007e FFF7FEFF 		bl	RS485_Send_Message
 968              	.LVL28:
 472:Core/Src/main.c **** 			break;
 969              		.loc 1 472 4 discriminator 4 view .LVU258
 472:Core/Src/main.c **** 			break;
 970              		.loc 1 472 10 is_stmt 0 discriminator 4 view .LVU259
 971 0082 394B     		ldr	r3, .L82+4
 972 0084 0222     		movs	r2, #2
 973 0086 1A70     		strb	r2, [r3]
 473:Core/Src/main.c **** 
 974              		.loc 1 473 4 is_stmt 1 discriminator 4 view .LVU260
 975 0088 C6E7     		b	.L65
 976              	.L70:
 430:Core/Src/main.c **** 			
 977              		.loc 1 430 4 view .LVU261
 430:Core/Src/main.c **** 			
 978              		.loc 1 430 12 is_stmt 0 view .LVU262
 979 008a 3B4C     		ldr	r4, .L82+20
 980 008c 3B4B     		ldr	r3, .L82+24
 981 008e 5A1C     		adds	r2, r3, #1
 982 0090 2260     		str	r2, [r4]
 432:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 983              		.loc 1 432 4 is_stmt 1 view .LVU263
 432:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 984              		.loc 1 432 12 is_stmt 0 view .LVU264
 985 0092 9A1C     		adds	r2, r3, #2
 986 0094 2260     		str	r2, [r4]
 432:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 987              		.loc 1 432 24 view .LVU265
 988 0096 3B4A     		ldr	r2, .L82+32
 989 0098 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 432:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 990              		.loc 1 432 15 view .LVU266
 991 009a 5A70     		strb	r2, [r3, #1]
 433:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit1_buf)+'0';
 992              		.loc 1 433 4 is_stmt 1 view .LVU267
ARM GAS  /tmp/ccLn1Ezy.s 			page 31


 433:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit1_buf)+'0';
 993              		.loc 1 433 12 is_stmt 0 view .LVU268
 994 009c DA1C     		adds	r2, r3, #3
 995 009e 2260     		str	r2, [r4]
 433:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit1_buf)+'0';
 996              		.loc 1 433 15 view .LVU269
 997 00a0 F122     		movs	r2, #241
 998 00a2 9A70     		strb	r2, [r3, #2]
 434:Core/Src/main.c **** 			 			
 999              		.loc 1 434 4 is_stmt 1 view .LVU270
 434:Core/Src/main.c **** 			 			
 1000              		.loc 1 434 17 is_stmt 0 view .LVU271
 1001 00a4 3848     		ldr	r0, .L82+36
 1002 00a6 FFF7FEFF 		bl	buffer_pop
 1003              	.LVL29:
 434:Core/Src/main.c **** 			 			
 1004              		.loc 1 434 12 view .LVU272
 1005 00aa 2368     		ldr	r3, [r4]
 1006 00ac 5A1C     		adds	r2, r3, #1
 1007 00ae 2260     		str	r2, [r4]
 434:Core/Src/main.c **** 			 			
 1008              		.loc 1 434 40 view .LVU273
 1009 00b0 3030     		adds	r0, r0, #48
 434:Core/Src/main.c **** 			 			
 1010              		.loc 1 434 15 view .LVU274
 1011 00b2 1870     		strb	r0, [r3]
 436:Core/Src/main.c **** 			event = EVENT_RESET;
 1012              		.loc 1 436 4 is_stmt 1 view .LVU275
 1013 00b4 FFF7FEFF 		bl	RS485_Send_Message
 1014              	.LVL30:
 437:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1015              		.loc 1 437 4 view .LVU276
 437:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1016              		.loc 1 437 10 is_stmt 0 view .LVU277
 1017 00b8 0023     		movs	r3, #0
 1018 00ba 2C4A     		ldr	r2, .L82+8
 1019 00bc 1370     		strb	r3, [r2]
 438:Core/Src/main.c **** 			f_querry =0;
 1020              		.loc 1 438 4 is_stmt 1 view .LVU278
 438:Core/Src/main.c **** 			f_querry =0;
 1021              		.loc 1 438 10 is_stmt 0 view .LVU279
 1022 00be 2A4A     		ldr	r2, .L82+4
 1023 00c0 0221     		movs	r1, #2
 1024 00c2 1170     		strb	r1, [r2]
 439:Core/Src/main.c **** 			break;
 1025              		.loc 1 439 4 is_stmt 1 view .LVU280
 439:Core/Src/main.c **** 			break;
 1026              		.loc 1 439 13 is_stmt 0 view .LVU281
 1027 00c4 2B4A     		ldr	r2, .L82+16
 1028 00c6 1370     		strb	r3, [r2]
 440:Core/Src/main.c **** 
 1029              		.loc 1 440 4 is_stmt 1 view .LVU282
 1030 00c8 A6E7     		b	.L65
 1031              	.L71:
 445:Core/Src/main.c **** 			
 1032              		.loc 1 445 4 view .LVU283
 445:Core/Src/main.c **** 			
ARM GAS  /tmp/ccLn1Ezy.s 			page 32


 1033              		.loc 1 445 12 is_stmt 0 view .LVU284
 1034 00ca 2B4C     		ldr	r4, .L82+20
 1035 00cc 2B4B     		ldr	r3, .L82+24
 1036 00ce 5A1C     		adds	r2, r3, #1
 1037 00d0 2260     		str	r2, [r4]
 447:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1038              		.loc 1 447 4 is_stmt 1 view .LVU285
 447:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1039              		.loc 1 447 12 is_stmt 0 view .LVU286
 1040 00d2 9A1C     		adds	r2, r3, #2
 1041 00d4 2260     		str	r2, [r4]
 447:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1042              		.loc 1 447 24 view .LVU287
 1043 00d6 2B4A     		ldr	r2, .L82+32
 1044 00d8 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 447:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 1045              		.loc 1 447 15 view .LVU288
 1046 00da 5A70     		strb	r2, [r3, #1]
 448:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit2_buf)+'0';
 1047              		.loc 1 448 4 is_stmt 1 view .LVU289
 448:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit2_buf)+'0';
 1048              		.loc 1 448 12 is_stmt 0 view .LVU290
 1049 00dc DA1C     		adds	r2, r3, #3
 1050 00de 2260     		str	r2, [r4]
 448:Core/Src/main.c **** 			*pTX_msg++ = buffer_pop(&digit2_buf)+'0';
 1051              		.loc 1 448 15 view .LVU291
 1052 00e0 F122     		movs	r2, #241
 1053 00e2 9A70     		strb	r2, [r3, #2]
 449:Core/Src/main.c **** 					
 1054              		.loc 1 449 4 is_stmt 1 view .LVU292
 449:Core/Src/main.c **** 					
 1055              		.loc 1 449 17 is_stmt 0 view .LVU293
 1056 00e4 2948     		ldr	r0, .L82+40
 1057 00e6 FFF7FEFF 		bl	buffer_pop
 1058              	.LVL31:
 449:Core/Src/main.c **** 					
 1059              		.loc 1 449 12 view .LVU294
 1060 00ea 2368     		ldr	r3, [r4]
 1061 00ec 5A1C     		adds	r2, r3, #1
 1062 00ee 2260     		str	r2, [r4]
 449:Core/Src/main.c **** 					
 1063              		.loc 1 449 40 view .LVU295
 1064 00f0 3030     		adds	r0, r0, #48
 449:Core/Src/main.c **** 					
 1065              		.loc 1 449 15 view .LVU296
 1066 00f2 1870     		strb	r0, [r3]
 451:Core/Src/main.c **** 			event = EVENT_RESET;
 1067              		.loc 1 451 4 is_stmt 1 view .LVU297
 1068 00f4 FFF7FEFF 		bl	RS485_Send_Message
 1069              	.LVL32:
 452:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1070              		.loc 1 452 4 view .LVU298
 452:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1071              		.loc 1 452 10 is_stmt 0 view .LVU299
 1072 00f8 0023     		movs	r3, #0
 1073 00fa 1C4A     		ldr	r2, .L82+8
 1074 00fc 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccLn1Ezy.s 			page 33


 453:Core/Src/main.c **** 			f_querry =0;
 1075              		.loc 1 453 4 is_stmt 1 view .LVU300
 453:Core/Src/main.c **** 			f_querry =0;
 1076              		.loc 1 453 10 is_stmt 0 view .LVU301
 1077 00fe 1A4A     		ldr	r2, .L82+4
 1078 0100 0221     		movs	r1, #2
 1079 0102 1170     		strb	r1, [r2]
 454:Core/Src/main.c **** 			break;
 1080              		.loc 1 454 4 is_stmt 1 view .LVU302
 454:Core/Src/main.c **** 			break;
 1081              		.loc 1 454 13 is_stmt 0 view .LVU303
 1082 0104 1B4A     		ldr	r2, .L82+16
 1083 0106 1370     		strb	r3, [r2]
 455:Core/Src/main.c **** 		
 1084              		.loc 1 455 4 is_stmt 1 view .LVU304
 1085 0108 86E7     		b	.L65
 1086              	.L76:
 465:Core/Src/main.c **** 
 1087              		.loc 1 465 7 is_stmt 0 view .LVU305
 1088 010a 0022     		movs	r2, #0
 1089 010c ABE7     		b	.L73
 1090              	.L68:
 480:Core/Src/main.c **** 			RS485_Read_Message();
 1091              		.loc 1 480 3 is_stmt 1 view .LVU306
 480:Core/Src/main.c **** 			RS485_Read_Message();
 1092              		.loc 1 480 12 is_stmt 0 view .LVU307
 1093 010e 174B     		ldr	r3, .L82+8
 1094 0110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 480:Core/Src/main.c **** 			RS485_Read_Message();
 1095              		.loc 1 480 6 view .LVU308
 1096 0112 052B     		cmp	r3, #5
 1097 0114 11D0     		beq	.L80
 488:Core/Src/main.c **** 			f_querry =0;
 1098              		.loc 1 488 4 is_stmt 1 view .LVU309
 488:Core/Src/main.c **** 			f_querry =0;
 1099              		.loc 1 488 8 is_stmt 0 view .LVU310
 1100 0116 174B     		ldr	r3, .L82+16
 1101 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 488:Core/Src/main.c **** 			f_querry =0;
 1102              		.loc 1 488 7 view .LVU311
 1103 011a 002B     		cmp	r3, #0
 1104 011c 3FF47CAF 		beq	.L65
 489:Core/Src/main.c **** 			tx_timeout++;
 1105              		.loc 1 489 4 is_stmt 1 view .LVU312
 489:Core/Src/main.c **** 			tx_timeout++;
 1106              		.loc 1 489 13 is_stmt 0 view .LVU313
 1107 0120 144B     		ldr	r3, .L82+16
 1108 0122 0022     		movs	r2, #0
 1109 0124 1A70     		strb	r2, [r3]
 490:Core/Src/main.c **** 			
 1110              		.loc 1 490 4 is_stmt 1 view .LVU314
 490:Core/Src/main.c **** 			
 1111              		.loc 1 490 14 is_stmt 0 view .LVU315
 1112 0126 1A4A     		ldr	r2, .L82+44
 1113 0128 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1114 012a 0133     		adds	r3, r3, #1
 1115 012c DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccLn1Ezy.s 			page 34


 1116 012e 1370     		strb	r3, [r2]
 492:Core/Src/main.c **** 				state = STATE_TX;
 1117              		.loc 1 492 4 is_stmt 1 view .LVU316
 492:Core/Src/main.c **** 				state = STATE_TX;
 1118              		.loc 1 492 7 is_stmt 0 view .LVU317
 1119 0130 022B     		cmp	r3, #2
 1120 0132 0BD0     		beq	.L81
 1121              	.L75:
 500:Core/Src/main.c **** 		}
 1122              		.loc 1 500 4 is_stmt 1 view .LVU318
 1123 0134 FFF7FEFF 		bl	RS485_Send_Message
 1124              	.LVL33:
 508:Core/Src/main.c **** 
 1125              		.loc 1 508 1 is_stmt 0 view .LVU319
 1126 0138 6EE7     		b	.L65
 1127              	.L80:
 481:Core/Src/main.c **** 
 1128              		.loc 1 481 4 is_stmt 1 view .LVU320
 1129 013a FFF7FEFF 		bl	RS485_Read_Message
 1130              	.LVL34:
 483:Core/Src/main.c **** 			event = EVENT_RESET;
 1131              		.loc 1 483 4 view .LVU321
 483:Core/Src/main.c **** 			event = EVENT_RESET;
 1132              		.loc 1 483 9 is_stmt 0 view .LVU322
 1133 013e 0A4B     		ldr	r3, .L82+4
 1134 0140 0122     		movs	r2, #1
 1135 0142 1A70     		strb	r2, [r3]
 484:Core/Src/main.c **** 
 1136              		.loc 1 484 4 is_stmt 1 view .LVU323
 484:Core/Src/main.c **** 
 1137              		.loc 1 484 10 is_stmt 0 view .LVU324
 1138 0144 094B     		ldr	r3, .L82+8
 1139 0146 0022     		movs	r2, #0
 1140 0148 1A70     		strb	r2, [r3]
 1141 014a 65E7     		b	.L65
 1142              	.L81:
 493:Core/Src/main.c **** 				tx_timeout=0;
 1143              		.loc 1 493 5 is_stmt 1 view .LVU325
 493:Core/Src/main.c **** 				tx_timeout=0;
 1144              		.loc 1 493 11 is_stmt 0 view .LVU326
 1145 014c 064B     		ldr	r3, .L82+4
 1146 014e 0122     		movs	r2, #1
 1147 0150 1A70     		strb	r2, [r3]
 494:Core/Src/main.c **** 
 1148              		.loc 1 494 5 is_stmt 1 view .LVU327
 494:Core/Src/main.c **** 
 1149              		.loc 1 494 15 is_stmt 0 view .LVU328
 1150 0152 0F4B     		ldr	r3, .L82+44
 1151 0154 0022     		movs	r2, #0
 1152 0156 1A70     		strb	r2, [r3]
 496:Core/Src/main.c **** 				
 1153              		.loc 1 496 5 is_stmt 1 view .LVU329
 496:Core/Src/main.c **** 				
 1154              		.loc 1 496 14 is_stmt 0 view .LVU330
 1155 0158 054A     		ldr	r2, .L82+12
 1156 015a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1157 015c 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccLn1Ezy.s 			page 35


 1158 015e 1370     		strb	r3, [r2]
 1159 0160 E8E7     		b	.L75
 1160              	.L83:
 1161 0162 00BF     		.align	2
 1162              	.L82:
 1163 0164 00000000 		.word	.LANCHOR19
 1164 0168 00000000 		.word	.LANCHOR27
 1165 016c 00000000 		.word	.LANCHOR26
 1166 0170 00000000 		.word	.LANCHOR9
 1167 0174 00000000 		.word	.LANCHOR15
 1168 0178 00000000 		.word	.LANCHOR28
 1169 017c 00000000 		.word	.LANCHOR25
 1170 0180 00000000 		.word	.LANCHOR30
 1171 0184 00000000 		.word	.LANCHOR29
 1172 0188 00000000 		.word	.LANCHOR18
 1173 018c 00000000 		.word	.LANCHOR20
 1174 0190 00000000 		.word	.LANCHOR31
 1175              		.cfi_endproc
 1176              	.LFE136:
 1178              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1179              		.align	1
 1180              		.global	HAL_TIM_PeriodElapsedCallback
 1181              		.syntax unified
 1182              		.thumb
 1183              		.thumb_func
 1184              		.fpu fpv4-sp-d16
 1186              	HAL_TIM_PeriodElapsedCallback:
 1187              	.LVL35:
 1188              	.LFB140:
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 591:Core/Src/main.c **** {
 1189              		.loc 1 591 1 is_stmt 1 view -0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 592:Core/Src/main.c **** 	// Check which version of the timer triggered this callback and toggle LED
 593:Core/Src/main.c **** 
 594:Core/Src/main.c **** 	if (htim == &htim4)
 1194              		.loc 1 594 2 view .LVU332
 1195              		.loc 1 594 5 is_stmt 0 view .LVU333
 1196 0000 034B     		ldr	r3, .L87
 1197 0002 8342     		cmp	r3, r0
 1198 0004 00D0     		beq	.L86
 1199              	.L84:
 595:Core/Src/main.c **** 	{
 596:Core/Src/main.c **** 		f_timer_10ms = 1;
 597:Core/Src/main.c **** 	}
 598:Core/Src/main.c **** }
 1200              		.loc 1 598 1 view .LVU334
 1201 0006 7047     		bx	lr
 1202              	.L86:
 596:Core/Src/main.c **** 	}
 1203              		.loc 1 596 3 is_stmt 1 view .LVU335
 596:Core/Src/main.c **** 	}
 1204              		.loc 1 596 16 is_stmt 0 view .LVU336
ARM GAS  /tmp/ccLn1Ezy.s 			page 36


 1205 0008 024B     		ldr	r3, .L87+4
 1206 000a 0122     		movs	r2, #1
 1207 000c 1A70     		strb	r2, [r3]
 1208              		.loc 1 598 1 view .LVU337
 1209 000e FAE7     		b	.L84
 1210              	.L88:
 1211              		.align	2
 1212              	.L87:
 1213 0010 00000000 		.word	htim4
 1214 0014 00000000 		.word	.LANCHOR10
 1215              		.cfi_endproc
 1216              	.LFE140:
 1218              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1219              		.align	1
 1220              		.global	HAL_UART_RxCpltCallback
 1221              		.syntax unified
 1222              		.thumb
 1223              		.thumb_func
 1224              		.fpu fpv4-sp-d16
 1226              	HAL_UART_RxCpltCallback:
 1227              	.LVL36:
 1228              	.LFB141:
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 601:Core/Src/main.c **** {
 1229              		.loc 1 601 1 is_stmt 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 602:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 603:Core/Src/main.c **** 
 604:Core/Src/main.c **** 	if (huart == &huart4)
 1233              		.loc 1 604 2 view .LVU339
 1234              		.loc 1 604 5 is_stmt 0 view .LVU340
 1235 0000 074B     		ldr	r3, .L96
 1236 0002 8342     		cmp	r3, r0
 1237 0004 00D0     		beq	.L95
 1238 0006 7047     		bx	lr
 1239              	.L95:
 601:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 1240              		.loc 1 601 1 view .LVU341
 1241 0008 10B5     		push	{r4, lr}
 1242              	.LCFI6:
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 4, -8
 1245              		.cfi_offset 14, -4
 605:Core/Src/main.c **** 	{
 606:Core/Src/main.c **** 		buffer_push(&rx_buffer, rx_temp);
 1246              		.loc 1 606 3 is_stmt 1 view .LVU342
 1247 000a 064C     		ldr	r4, .L96+4
 1248 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1249 000e 0648     		ldr	r0, .L96+8
 1250              	.LVL37:
 1251              		.loc 1 606 3 is_stmt 0 view .LVU343
 1252 0010 FFF7FEFF 		bl	buffer_push
 1253              	.LVL38:
 607:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
ARM GAS  /tmp/ccLn1Ezy.s 			page 37


 1254              		.loc 1 607 3 is_stmt 1 view .LVU344
 1255 0014 0122     		movs	r2, #1
 1256 0016 2146     		mov	r1, r4
 1257 0018 0148     		ldr	r0, .L96
 1258 001a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1259              	.LVL39:
 608:Core/Src/main.c **** 	}
 609:Core/Src/main.c **** }
 1260              		.loc 1 609 1 is_stmt 0 view .LVU345
 1261 001e 10BD     		pop	{r4, pc}
 1262              	.L97:
 1263              		.align	2
 1264              	.L96:
 1265 0020 00000000 		.word	huart4
 1266 0024 00000000 		.word	.LANCHOR32
 1267 0028 00000000 		.word	.LANCHOR21
 1268              		.cfi_endproc
 1269              	.LFE141:
 1271              		.section	.text.Error_Handler,"ax",%progbits
 1272              		.align	1
 1273              		.global	Error_Handler
 1274              		.syntax unified
 1275              		.thumb
 1276              		.thumb_func
 1277              		.fpu fpv4-sp-d16
 1279              	Error_Handler:
 1280              	.LFB142:
 610:Core/Src/main.c **** /* USER CODE END 4 */
 611:Core/Src/main.c **** 
 612:Core/Src/main.c **** /**
 613:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 614:Core/Src/main.c ****  * @retval None
 615:Core/Src/main.c ****  */
 616:Core/Src/main.c **** void Error_Handler(void)
 617:Core/Src/main.c **** {
 1281              		.loc 1 617 1 is_stmt 1 view -0
 1282              		.cfi_startproc
 1283              		@ Volatile: function does not return.
 1284              		@ args = 0, pretend = 0, frame = 0
 1285              		@ frame_needed = 0, uses_anonymous_args = 0
 1286              		@ link register save eliminated.
 618:Core/Src/main.c **** 	/* USER CODE BEGIN Error_Handler_Debug */
 619:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 620:Core/Src/main.c **** 	__disable_irq();
 1287              		.loc 1 620 2 view .LVU347
 1288              	.LBB4:
 1289              	.LBI4:
 1290              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccLn1Ezy.s 			page 38


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccLn1Ezy.s 			page 39


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccLn1Ezy.s 			page 40


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1291              		.loc 2 140 27 view .LVU348
 1292              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1293              		.loc 2 142 3 view .LVU349
 1294              		.syntax unified
 1295              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1296 0000 72B6     		cpsid i
 1297              	@ 0 "" 2
 1298              		.thumb
 1299              		.syntax unified
 1300              	.L99:
 1301              	.LBE5:
 1302              	.LBE4:
 621:Core/Src/main.c **** 	while (1)
 1303              		.loc 1 621 2 discriminator 1 view .LVU350
 622:Core/Src/main.c **** 	{
 623:Core/Src/main.c **** 	}
 1304              		.loc 1 623 2 discriminator 1 view .LVU351
 621:Core/Src/main.c **** 	while (1)
 1305              		.loc 1 621 8 discriminator 1 view .LVU352
 1306 0002 FEE7     		b	.L99
 1307              		.cfi_endproc
 1308              	.LFE142:
 1310              		.section	.text.SystemClock_Config,"ax",%progbits
 1311              		.align	1
 1312              		.global	SystemClock_Config
 1313              		.syntax unified
 1314              		.thumb
 1315              		.thumb_func
 1316              		.fpu fpv4-sp-d16
 1318              	SystemClock_Config:
 1319              	.LFB131:
 235:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1320              		.loc 1 235 1 view -0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 80
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324 0000 00B5     		push	{lr}
 1325              	.LCFI7:
ARM GAS  /tmp/ccLn1Ezy.s 			page 41


 1326              		.cfi_def_cfa_offset 4
 1327              		.cfi_offset 14, -4
 1328 0002 95B0     		sub	sp, sp, #84
 1329              	.LCFI8:
 1330              		.cfi_def_cfa_offset 88
 236:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1331              		.loc 1 236 2 view .LVU354
 236:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1332              		.loc 1 236 21 is_stmt 0 view .LVU355
 1333 0004 3022     		movs	r2, #48
 1334 0006 0021     		movs	r1, #0
 1335 0008 08A8     		add	r0, sp, #32
 1336 000a FFF7FEFF 		bl	memset
 1337              	.LVL40:
 237:Core/Src/main.c **** 
 1338              		.loc 1 237 2 is_stmt 1 view .LVU356
 237:Core/Src/main.c **** 
 1339              		.loc 1 237 21 is_stmt 0 view .LVU357
 1340 000e 0023     		movs	r3, #0
 1341 0010 0393     		str	r3, [sp, #12]
 1342 0012 0493     		str	r3, [sp, #16]
 1343 0014 0593     		str	r3, [sp, #20]
 1344 0016 0693     		str	r3, [sp, #24]
 1345 0018 0793     		str	r3, [sp, #28]
 241:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1346              		.loc 1 241 2 is_stmt 1 view .LVU358
 1347              	.LBB6:
 241:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1348              		.loc 1 241 2 view .LVU359
 1349 001a 0193     		str	r3, [sp, #4]
 241:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1350              		.loc 1 241 2 view .LVU360
 1351 001c 204A     		ldr	r2, .L106
 1352 001e 116C     		ldr	r1, [r2, #64]
 1353 0020 41F08051 		orr	r1, r1, #268435456
 1354 0024 1164     		str	r1, [r2, #64]
 241:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1355              		.loc 1 241 2 view .LVU361
 1356 0026 126C     		ldr	r2, [r2, #64]
 1357 0028 02F08052 		and	r2, r2, #268435456
 1358 002c 0192     		str	r2, [sp, #4]
 241:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1359              		.loc 1 241 2 view .LVU362
 1360 002e 019A     		ldr	r2, [sp, #4]
 1361              	.LBE6:
 241:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1362              		.loc 1 241 2 view .LVU363
 242:Core/Src/main.c **** 
 1363              		.loc 1 242 2 view .LVU364
 1364              	.LBB7:
 242:Core/Src/main.c **** 
 1365              		.loc 1 242 2 view .LVU365
 1366 0030 0293     		str	r3, [sp, #8]
 242:Core/Src/main.c **** 
 1367              		.loc 1 242 2 view .LVU366
 1368 0032 1C4A     		ldr	r2, .L106+4
 1369 0034 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccLn1Ezy.s 			page 42


 1370 0036 23F44043 		bic	r3, r3, #49152
 1371 003a 43F48043 		orr	r3, r3, #16384
 1372 003e 1360     		str	r3, [r2]
 242:Core/Src/main.c **** 
 1373              		.loc 1 242 2 view .LVU367
 1374 0040 1368     		ldr	r3, [r2]
 1375 0042 03F44043 		and	r3, r3, #49152
 1376 0046 0293     		str	r3, [sp, #8]
 242:Core/Src/main.c **** 
 1377              		.loc 1 242 2 view .LVU368
 1378 0048 029B     		ldr	r3, [sp, #8]
 1379              	.LBE7:
 242:Core/Src/main.c **** 
 1380              		.loc 1 242 2 view .LVU369
 247:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1381              		.loc 1 247 2 view .LVU370
 247:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1382              		.loc 1 247 35 is_stmt 0 view .LVU371
 1383 004a 0123     		movs	r3, #1
 1384 004c 0893     		str	r3, [sp, #32]
 248:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1385              		.loc 1 248 2 is_stmt 1 view .LVU372
 248:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1386              		.loc 1 248 29 is_stmt 0 view .LVU373
 1387 004e 4FF48033 		mov	r3, #65536
 1388 0052 0993     		str	r3, [sp, #36]
 249:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1389              		.loc 1 249 2 is_stmt 1 view .LVU374
 249:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1390              		.loc 1 249 33 is_stmt 0 view .LVU375
 1391 0054 0223     		movs	r3, #2
 1392 0056 0E93     		str	r3, [sp, #56]
 250:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1393              		.loc 1 250 2 is_stmt 1 view .LVU376
 250:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1394              		.loc 1 250 34 is_stmt 0 view .LVU377
 1395 0058 4FF48002 		mov	r2, #4194304
 1396 005c 0F92     		str	r2, [sp, #60]
 251:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1397              		.loc 1 251 2 is_stmt 1 view .LVU378
 251:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1398              		.loc 1 251 29 is_stmt 0 view .LVU379
 1399 005e 0422     		movs	r2, #4
 1400 0060 1092     		str	r2, [sp, #64]
 252:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1401              		.loc 1 252 2 is_stmt 1 view .LVU380
 252:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1402              		.loc 1 252 29 is_stmt 0 view .LVU381
 1403 0062 6022     		movs	r2, #96
 1404 0064 1192     		str	r2, [sp, #68]
 253:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1405              		.loc 1 253 2 is_stmt 1 view .LVU382
 253:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1406              		.loc 1 253 29 is_stmt 0 view .LVU383
 1407 0066 1293     		str	r3, [sp, #72]
 254:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1408              		.loc 1 254 2 is_stmt 1 view .LVU384
ARM GAS  /tmp/ccLn1Ezy.s 			page 43


 254:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1409              		.loc 1 254 29 is_stmt 0 view .LVU385
 1410 0068 0323     		movs	r3, #3
 1411 006a 1393     		str	r3, [sp, #76]
 255:Core/Src/main.c **** 	{
 1412              		.loc 1 255 2 is_stmt 1 view .LVU386
 255:Core/Src/main.c **** 	{
 1413              		.loc 1 255 6 is_stmt 0 view .LVU387
 1414 006c 08A8     		add	r0, sp, #32
 1415 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1416              	.LVL41:
 255:Core/Src/main.c **** 	{
 1417              		.loc 1 255 5 view .LVU388
 1418 0072 88B9     		cbnz	r0, .L104
 262:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1419              		.loc 1 262 2 is_stmt 1 view .LVU389
 262:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1420              		.loc 1 262 30 is_stmt 0 view .LVU390
 1421 0074 0F23     		movs	r3, #15
 1422 0076 0393     		str	r3, [sp, #12]
 263:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1423              		.loc 1 263 2 is_stmt 1 view .LVU391
 263:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1424              		.loc 1 263 33 is_stmt 0 view .LVU392
 1425 0078 0223     		movs	r3, #2
 1426 007a 0493     		str	r3, [sp, #16]
 264:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1427              		.loc 1 264 2 is_stmt 1 view .LVU393
 264:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1428              		.loc 1 264 34 is_stmt 0 view .LVU394
 1429 007c 8023     		movs	r3, #128
 1430 007e 0593     		str	r3, [sp, #20]
 265:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1431              		.loc 1 265 2 is_stmt 1 view .LVU395
 265:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1432              		.loc 1 265 35 is_stmt 0 view .LVU396
 1433 0080 4FF48053 		mov	r3, #4096
 1434 0084 0693     		str	r3, [sp, #24]
 266:Core/Src/main.c **** 
 1435              		.loc 1 266 2 is_stmt 1 view .LVU397
 266:Core/Src/main.c **** 
 1436              		.loc 1 266 35 is_stmt 0 view .LVU398
 1437 0086 0793     		str	r3, [sp, #28]
 268:Core/Src/main.c **** 	{
 1438              		.loc 1 268 2 is_stmt 1 view .LVU399
 268:Core/Src/main.c **** 	{
 1439              		.loc 1 268 6 is_stmt 0 view .LVU400
 1440 0088 0121     		movs	r1, #1
 1441 008a 03A8     		add	r0, sp, #12
 1442 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1443              	.LVL42:
 268:Core/Src/main.c **** 	{
 1444              		.loc 1 268 5 view .LVU401
 1445 0090 20B9     		cbnz	r0, .L105
 272:Core/Src/main.c **** 
 1446              		.loc 1 272 1 view .LVU402
 1447 0092 15B0     		add	sp, sp, #84
ARM GAS  /tmp/ccLn1Ezy.s 			page 44


 1448              	.LCFI9:
 1449              		.cfi_remember_state
 1450              		.cfi_def_cfa_offset 4
 1451              		@ sp needed
 1452 0094 5DF804FB 		ldr	pc, [sp], #4
 1453              	.L104:
 1454              	.LCFI10:
 1455              		.cfi_restore_state
 257:Core/Src/main.c **** 	}
 1456              		.loc 1 257 3 is_stmt 1 view .LVU403
 1457 0098 FFF7FEFF 		bl	Error_Handler
 1458              	.LVL43:
 1459              	.L105:
 270:Core/Src/main.c **** 	}
 1460              		.loc 1 270 3 view .LVU404
 1461 009c FFF7FEFF 		bl	Error_Handler
 1462              	.LVL44:
 1463              	.L107:
 1464              		.align	2
 1465              	.L106:
 1466 00a0 00380240 		.word	1073887232
 1467 00a4 00700040 		.word	1073770496
 1468              		.cfi_endproc
 1469              	.LFE131:
 1471              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1472              		.align	2
 1473              	.LC0:
 1474 0000 4E554D20 		.ascii	"NUM SLAVE: \000"
 1474      534C4156 
 1474      453A2000 
 1475              		.align	2
 1476              	.LC1:
 1477 000c 53323A00 		.ascii	"S2:\000"
 1478              		.align	2
 1479              	.LC2:
 1480 0010 53313A00 		.ascii	"S1:\000"
 1481              		.section	.text.main,"ax",%progbits
 1482              		.align	1
 1483              		.global	main
 1484              		.syntax unified
 1485              		.thumb
 1486              		.thumb_func
 1487              		.fpu fpv4-sp-d16
 1489              	main:
 1490              	.LFB130:
 146:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 1491              		.loc 1 146 1 view -0
 1492              		.cfi_startproc
 1493              		@ Volatile: function does not return.
 1494              		@ args = 0, pretend = 0, frame = 0
 1495              		@ frame_needed = 0, uses_anonymous_args = 0
 1496 0000 80B5     		push	{r7, lr}
 1497              	.LCFI11:
 1498              		.cfi_def_cfa_offset 8
 1499              		.cfi_offset 7, -8
 1500              		.cfi_offset 14, -4
 154:Core/Src/main.c **** 
ARM GAS  /tmp/ccLn1Ezy.s 			page 45


 1501              		.loc 1 154 2 view .LVU406
 1502 0002 FFF7FEFF 		bl	HAL_Init
 1503              	.LVL45:
 161:Core/Src/main.c **** 
 1504              		.loc 1 161 2 view .LVU407
 1505 0006 FFF7FEFF 		bl	SystemClock_Config
 1506              	.LVL46:
 168:Core/Src/main.c **** 	MX_TIM4_Init();
 1507              		.loc 1 168 2 view .LVU408
 1508 000a FFF7FEFF 		bl	MX_GPIO_Init
 1509              	.LVL47:
 169:Core/Src/main.c **** 	MX_UART4_Init();
 1510              		.loc 1 169 2 view .LVU409
 1511 000e FFF7FEFF 		bl	MX_TIM4_Init
 1512              	.LVL48:
 170:Core/Src/main.c **** 	MX_UART5_Init();
 1513              		.loc 1 170 2 view .LVU410
 1514 0012 FFF7FEFF 		bl	MX_UART4_Init
 1515              	.LVL49:
 171:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 1516              		.loc 1 171 2 view .LVU411
 1517 0016 FFF7FEFF 		bl	MX_UART5_Init
 1518              	.LVL50:
 174:Core/Src/main.c **** 
 1519              		.loc 1 174 2 view .LVU412
 1520 001a 3148     		ldr	r0, .L111
 1521 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1522              	.LVL51:
 176:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 1523              		.loc 1 176 2 view .LVU413
 1524 0020 0022     		movs	r2, #0
 1525 0022 4FF48051 		mov	r1, #4096
 1526 0026 2F48     		ldr	r0, .L111+4
 1527 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1528              	.LVL52:
 179:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1529              		.loc 1 179 2 view .LVU414
 1530 002c 0122     		movs	r2, #1
 1531 002e 2E49     		ldr	r1, .L111+8
 1532 0030 2E48     		ldr	r0, .L111+12
 1533 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1534              	.LVL53:
 182:Core/Src/main.c **** 	digit2 = 16;
 1535              		.loc 1 182 2 view .LVU415
 182:Core/Src/main.c **** 	digit2 = 16;
 1536              		.loc 1 182 9 is_stmt 0 view .LVU416
 1537 0036 2E4F     		ldr	r7, .L111+16
 1538 0038 1023     		movs	r3, #16
 1539 003a 3B70     		strb	r3, [r7]
 183:Core/Src/main.c **** 	num_slave=2;
 1540              		.loc 1 183 2 is_stmt 1 view .LVU417
 183:Core/Src/main.c **** 	num_slave=2;
 1541              		.loc 1 183 9 is_stmt 0 view .LVU418
 1542 003c DFF8D080 		ldr	r8, .L111+48
 1543 0040 88F80030 		strb	r3, [r8]
 184:Core/Src/main.c **** 	ID=0;
 1544              		.loc 1 184 2 is_stmt 1 view .LVU419
ARM GAS  /tmp/ccLn1Ezy.s 			page 46


 184:Core/Src/main.c **** 	ID=0;
 1545              		.loc 1 184 11 is_stmt 0 view .LVU420
 1546 0044 DFF8CC90 		ldr	r9, .L111+52
 1547 0048 0222     		movs	r2, #2
 1548 004a 89F80020 		strb	r2, [r9]
 185:Core/Src/main.c **** 	ID_list[0]= 0x10;
 1549              		.loc 1 185 2 is_stmt 1 view .LVU421
 185:Core/Src/main.c **** 	ID_list[0]= 0x10;
 1550              		.loc 1 185 4 is_stmt 0 view .LVU422
 1551 004e 0025     		movs	r5, #0
 1552 0050 284A     		ldr	r2, .L111+20
 1553 0052 1570     		strb	r5, [r2]
 186:Core/Src/main.c **** 	ID_list[1]= 0x12;
 1554              		.loc 1 186 2 is_stmt 1 view .LVU423
 186:Core/Src/main.c **** 	ID_list[1]= 0x12;
 1555              		.loc 1 186 12 is_stmt 0 view .LVU424
 1556 0054 284A     		ldr	r2, .L111+24
 1557 0056 1370     		strb	r3, [r2]
 187:Core/Src/main.c **** 	state = STATE_TX;
 1558              		.loc 1 187 2 is_stmt 1 view .LVU425
 187:Core/Src/main.c **** 	state = STATE_TX;
 1559              		.loc 1 187 12 is_stmt 0 view .LVU426
 1560 0058 1223     		movs	r3, #18
 1561 005a 5370     		strb	r3, [r2, #1]
 188:Core/Src/main.c **** 	/*
 1562              		.loc 1 188 2 is_stmt 1 view .LVU427
 188:Core/Src/main.c **** 	/*
 1563              		.loc 1 188 8 is_stmt 0 view .LVU428
 1564 005c 0124     		movs	r4, #1
 1565 005e 274B     		ldr	r3, .L111+28
 1566 0060 1C70     		strb	r4, [r3]
 196:Core/Src/main.c **** 	lcd_clear();
 1567              		.loc 1 196 2 is_stmt 1 view .LVU429
 1568 0062 FFF7FEFF 		bl	lcd_init
 1569              	.LVL54:
 197:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 1570              		.loc 1 197 2 view .LVU430
 1571 0066 FFF7FEFF 		bl	lcd_clear
 1572              	.LVL55:
 198:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 1573              		.loc 1 198 2 view .LVU431
 1574 006a 2946     		mov	r1, r5
 1575 006c 2846     		mov	r0, r5
 1576 006e FFF7FEFF 		bl	lcd_set_pos
 1577              	.LVL56:
 199:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 1578              		.loc 1 199 2 view .LVU432
 1579 0072 2348     		ldr	r0, .L111+32
 1580 0074 FFF7FEFF 		bl	lcd_write_string
 1581              	.LVL57:
 200:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 1582              		.loc 1 200 2 view .LVU433
 1583 0078 0C21     		movs	r1, #12
 1584 007a 2846     		mov	r0, r5
 1585 007c FFF7FEFF 		bl	lcd_set_pos
 1586              	.LVL58:
 201:Core/Src/main.c **** 	lcd_set_pos(1, 0);
ARM GAS  /tmp/ccLn1Ezy.s 			page 47


 1587              		.loc 1 201 2 view .LVU434
 1588 0080 204E     		ldr	r6, .L111+36
 1589 0082 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 1590 0086 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 1591 0088 FFF7FEFF 		bl	lcd_data
 1592              	.LVL59:
 202:Core/Src/main.c **** 	lcd_write_string("S2:");
 1593              		.loc 1 202 2 view .LVU435
 1594 008c 2946     		mov	r1, r5
 1595 008e 2046     		mov	r0, r4
 1596 0090 FFF7FEFF 		bl	lcd_set_pos
 1597              	.LVL60:
 203:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 1598              		.loc 1 203 2 view .LVU436
 1599 0094 1C48     		ldr	r0, .L111+40
 1600 0096 FFF7FEFF 		bl	lcd_write_string
 1601              	.LVL61:
 204:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 1602              		.loc 1 204 2 view .LVU437
 1603 009a 0321     		movs	r1, #3
 1604 009c 2046     		mov	r0, r4
 1605 009e FFF7FEFF 		bl	lcd_set_pos
 1606              	.LVL62:
 205:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 1607              		.loc 1 205 2 view .LVU438
 1608 00a2 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 1609 00a6 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 1610 00a8 FFF7FEFF 		bl	lcd_data
 1611              	.LVL63:
 206:Core/Src/main.c **** 	lcd_write_string("S1:");
 1612              		.loc 1 206 2 view .LVU439
 1613 00ac 0C21     		movs	r1, #12
 1614 00ae 2046     		mov	r0, r4
 1615 00b0 FFF7FEFF 		bl	lcd_set_pos
 1616              	.LVL64:
 207:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 1617              		.loc 1 207 2 view .LVU440
 1618 00b4 1548     		ldr	r0, .L111+44
 1619 00b6 FFF7FEFF 		bl	lcd_write_string
 1620              	.LVL65:
 208:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 1621              		.loc 1 208 2 view .LVU441
 1622 00ba 0F21     		movs	r1, #15
 1623 00bc 2046     		mov	r0, r4
 1624 00be FFF7FEFF 		bl	lcd_set_pos
 1625              	.LVL66:
 209:Core/Src/main.c **** 	/* USER CODE END 2 */
 1626              		.loc 1 209 2 view .LVU442
 1627 00c2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1628 00c4 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 1629 00c6 FFF7FEFF 		bl	lcd_data
 1630              	.LVL67:
 1631              	.L109:
 214:Core/Src/main.c **** 	{
 1632              		.loc 1 214 2 discriminator 1 view .LVU443
 220:Core/Src/main.c **** 		/// segment_display_task();
 1633              		.loc 1 220 3 discriminator 1 view .LVU444
ARM GAS  /tmp/ccLn1Ezy.s 			page 48


 1634 00ca FFF7FEFF 		bl	task_timer
 1635              	.LVL68:
 222:Core/Src/main.c **** 		key_read_task();
 1636              		.loc 1 222 3 discriminator 1 view .LVU445
 1637 00ce FFF7FEFF 		bl	lcd_display_task
 1638              	.LVL69:
 223:Core/Src/main.c **** 		RS485_RX_Task();
 1639              		.loc 1 223 3 discriminator 1 view .LVU446
 1640 00d2 FFF7FEFF 		bl	key_read_task
 1641              	.LVL70:
 224:Core/Src/main.c **** 		main_task();
 1642              		.loc 1 224 3 discriminator 1 view .LVU447
 1643 00d6 FFF7FEFF 		bl	RS485_RX_Task
 1644              	.LVL71:
 225:Core/Src/main.c **** 	}
 1645              		.loc 1 225 3 discriminator 1 view .LVU448
 1646 00da FFF7FEFF 		bl	main_task
 1647              	.LVL72:
 214:Core/Src/main.c **** 	{
 1648              		.loc 1 214 8 discriminator 1 view .LVU449
 1649 00de F4E7     		b	.L109
 1650              	.L112:
 1651              		.align	2
 1652              	.L111:
 1653 00e0 00000000 		.word	htim4
 1654 00e4 00000240 		.word	1073872896
 1655 00e8 00000000 		.word	.LANCHOR32
 1656 00ec 00000000 		.word	huart4
 1657 00f0 00000000 		.word	.LANCHOR8
 1658 00f4 00000000 		.word	.LANCHOR30
 1659 00f8 00000000 		.word	.LANCHOR29
 1660 00fc 00000000 		.word	.LANCHOR27
 1661 0100 00000000 		.word	.LC0
 1662 0104 00000000 		.word	.LANCHOR5
 1663 0108 0C000000 		.word	.LC1
 1664 010c 10000000 		.word	.LC2
 1665 0110 00000000 		.word	.LANCHOR6
 1666 0114 00000000 		.word	.LANCHOR9
 1667              		.cfi_endproc
 1668              	.LFE130:
 1670              		.global	pTX_msg
 1671              		.global	pRX_msg
 1672              		.global	RX_msg
 1673              		.global	TX_msg
 1674              		.global	ID_list
 1675              		.global	ID
 1676              		.global	event_buffer
 1677              		.global	rx_buffer
 1678              		.global	digit2_buf
 1679              		.global	digit1_buf
 1680              		.global	rx_temp
 1681              		.global	digit_table
 1682              		.global	lcd_process
 1683              		.global	data
 1684              		.global	cmd
 1685              		.global	digit2_update
 1686              		.global	digit1_update
ARM GAS  /tmp/ccLn1Ezy.s 			page 49


 1687              		.global	is_EN
 1688              		.global	digit2
 1689              		.global	digit1
 1690              		.global	num_slave
 1691              		.global	error
 1692              		.global	event
 1693              		.global	state
 1694              		.global	key2_data
 1695              		.global	key1_data
 1696              		.global	TX2_delay_val
 1697              		.global	d_timer_TX2
 1698              		.global	TX1_delay_val
 1699              		.global	d_timer_TX1
 1700              		.global	d_timer_20ms
 1701              		.global	d_timer_50ms
 1702              		.global	d_timer_30ms
 1703              		.global	tx1_buffer
 1704              		.global	tx2_buffer
 1705              		.global	flag_digit_1
 1706              		.global	n_querry
 1707              		.global	f_timer_50ms
 1708              		.global	f_timer_30ms
 1709              		.global	f_waiting_rx
 1710              		.global	f_timer_20ms
 1711              		.global	f_timer_10ms
 1712              		.global	f_seg_timer_500ms
 1713              		.global	f_timer_TX
 1714              		.global	tx_timeout
 1715              		.global	f_read_msg
 1716              		.global	f_querry
 1717              		.global	f_busy
 1718              		.global	f_lcd_item
 1719              		.section	.bss.ID,"aw",%nobits
 1720              		.set	.LANCHOR30,. + 0
 1723              	ID:
 1724 0000 00       		.space	1
 1725              		.section	.bss.ID_list,"aw",%nobits
 1726              		.align	2
 1727              		.set	.LANCHOR29,. + 0
 1730              	ID_list:
 1731 0000 00000000 		.space	10
 1731      00000000 
 1731      0000
 1732              		.section	.bss.RX_msg,"aw",%nobits
 1733              		.align	2
 1734              		.set	.LANCHOR24,. + 0
 1737              	RX_msg:
 1738 0000 00000000 		.space	4
 1739              		.section	.bss.TX_msg,"aw",%nobits
 1740              		.align	2
 1741              		.set	.LANCHOR25,. + 0
 1744              	TX_msg:
 1745 0000 00000000 		.space	6
 1745      0000
 1746              		.section	.bss.cmd,"aw",%nobits
 1747              		.set	.LANCHOR4,. + 0
 1750              	cmd:
ARM GAS  /tmp/ccLn1Ezy.s 			page 50


 1751 0000 00       		.space	1
 1752              		.section	.bss.d_timer_20ms,"aw",%nobits
 1753              		.set	.LANCHOR13,. + 0
 1756              	d_timer_20ms:
 1757 0000 00       		.space	1
 1758              		.section	.bss.d_timer_30ms,"aw",%nobits
 1759              		.set	.LANCHOR11,. + 0
 1762              	d_timer_30ms:
 1763 0000 00       		.space	1
 1764              		.section	.bss.d_timer_50ms,"aw",%nobits
 1765              		.set	.LANCHOR14,. + 0
 1768              	d_timer_50ms:
 1769 0000 00       		.space	1
 1770              		.section	.bss.d_timer_TX1,"aw",%nobits
 1773              	d_timer_TX1:
 1774 0000 00       		.space	1
 1775              		.section	.bss.d_timer_TX2,"aw",%nobits
 1778              	d_timer_TX2:
 1779 0000 00       		.space	1
 1780              		.section	.bss.data,"aw",%nobits
 1781              		.set	.LANCHOR7,. + 0
 1784              	data:
 1785 0000 00       		.space	1
 1786              		.section	.bss.digit1,"aw",%nobits
 1787              		.set	.LANCHOR8,. + 0
 1790              	digit1:
 1791 0000 00       		.space	1
 1792              		.section	.bss.digit1_buf,"aw",%nobits
 1793              		.align	2
 1794              		.set	.LANCHOR18,. + 0
 1797              	digit1_buf:
 1798 0000 00000000 		.space	66
 1798      00000000 
 1798      00000000 
 1798      00000000 
 1798      00000000 
 1799              		.section	.bss.digit1_update,"aw",%nobits
 1802              	digit1_update:
 1803 0000 00       		.space	1
 1804              		.section	.bss.digit2,"aw",%nobits
 1805              		.set	.LANCHOR6,. + 0
 1808              	digit2:
 1809 0000 00       		.space	1
 1810              		.section	.bss.digit2_buf,"aw",%nobits
 1811              		.align	2
 1812              		.set	.LANCHOR20,. + 0
 1815              	digit2_buf:
 1816 0000 00000000 		.space	66
 1816      00000000 
 1816      00000000 
 1816      00000000 
 1816      00000000 
 1817              		.section	.bss.digit2_update,"aw",%nobits
 1820              	digit2_update:
 1821 0000 00       		.space	1
 1822              		.section	.bss.error,"aw",%nobits
 1825              	error:
ARM GAS  /tmp/ccLn1Ezy.s 			page 51


 1826 0000 00       		.space	1
 1827              		.section	.bss.event,"aw",%nobits
 1828              		.set	.LANCHOR26,. + 0
 1831              	event:
 1832 0000 00       		.space	1
 1833              		.section	.bss.event_buffer,"aw",%nobits
 1834              		.align	2
 1835              		.set	.LANCHOR19,. + 0
 1838              	event_buffer:
 1839 0000 00000000 		.space	66
 1839      00000000 
 1839      00000000 
 1839      00000000 
 1839      00000000 
 1840              		.section	.bss.f_busy,"aw",%nobits
 1843              	f_busy:
 1844 0000 00       		.space	1
 1845              		.section	.bss.f_lcd_item,"aw",%nobits
 1846              		.set	.LANCHOR3,. + 0
 1849              	f_lcd_item:
 1850 0000 00       		.space	1
 1851              		.section	.bss.f_querry,"aw",%nobits
 1852              		.set	.LANCHOR15,. + 0
 1855              	f_querry:
 1856 0000 00       		.space	1
 1857              		.section	.bss.f_read_msg,"aw",%nobits
 1858              		.set	.LANCHOR22,. + 0
 1861              	f_read_msg:
 1862 0000 00       		.space	1
 1863              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 1866              	f_seg_timer_500ms:
 1867 0000 00       		.space	1
 1868              		.section	.bss.f_timer_10ms,"aw",%nobits
 1869              		.set	.LANCHOR10,. + 0
 1872              	f_timer_10ms:
 1873 0000 00       		.space	1
 1874              		.section	.bss.f_timer_20ms,"aw",%nobits
 1875              		.set	.LANCHOR0,. + 0
 1878              	f_timer_20ms:
 1879 0000 00       		.space	1
 1880              		.section	.bss.f_timer_30ms,"aw",%nobits
 1881              		.set	.LANCHOR12,. + 0
 1884              	f_timer_30ms:
 1885 0000 00       		.space	1
 1886              		.section	.bss.f_timer_50ms,"aw",%nobits
 1889              	f_timer_50ms:
 1890 0000 00       		.space	1
 1891              		.section	.bss.f_timer_TX,"aw",%nobits
 1894              	f_timer_TX:
 1895 0000 00       		.space	1
 1896              		.section	.bss.f_waiting_rx,"aw",%nobits
 1899              	f_waiting_rx:
 1900 0000 00       		.space	1
 1901              		.section	.bss.is_EN,"aw",%nobits
 1902              		.set	.LANCHOR1,. + 0
 1905              	is_EN:
 1906 0000 00       		.space	1
ARM GAS  /tmp/ccLn1Ezy.s 			page 52


 1907              		.section	.bss.key1_data,"aw",%nobits
 1908              		.set	.LANCHOR16,. + 0
 1911              	key1_data:
 1912 0000 00       		.space	1
 1913              		.section	.bss.key2_data,"aw",%nobits
 1914              		.set	.LANCHOR17,. + 0
 1917              	key2_data:
 1918 0000 00       		.space	1
 1919              		.section	.bss.lcd_process,"aw",%nobits
 1920              		.set	.LANCHOR2,. + 0
 1923              	lcd_process:
 1924 0000 00       		.space	1
 1925              		.section	.bss.n_querry,"aw",%nobits
 1928              	n_querry:
 1929 0000 00       		.space	1
 1930              		.section	.bss.num_slave,"aw",%nobits
 1931              		.set	.LANCHOR9,. + 0
 1934              	num_slave:
 1935 0000 00       		.space	1
 1936              		.section	.bss.pRX_msg,"aw",%nobits
 1937              		.align	2
 1938              		.set	.LANCHOR23,. + 0
 1941              	pRX_msg:
 1942 0000 00000000 		.space	4
 1943              		.section	.bss.pTX_msg,"aw",%nobits
 1944              		.align	2
 1945              		.set	.LANCHOR28,. + 0
 1948              	pTX_msg:
 1949 0000 00000000 		.space	4
 1950              		.section	.bss.rx_buffer,"aw",%nobits
 1951              		.align	2
 1952              		.set	.LANCHOR21,. + 0
 1955              	rx_buffer:
 1956 0000 00000000 		.space	66
 1956      00000000 
 1956      00000000 
 1956      00000000 
 1956      00000000 
 1957              		.section	.bss.rx_temp,"aw",%nobits
 1958              		.set	.LANCHOR32,. + 0
 1961              	rx_temp:
 1962 0000 00       		.space	1
 1963              		.section	.bss.state,"aw",%nobits
 1964              		.set	.LANCHOR27,. + 0
 1967              	state:
 1968 0000 00       		.space	1
 1969              		.section	.bss.tx_timeout,"aw",%nobits
 1970              		.set	.LANCHOR31,. + 0
 1973              	tx_timeout:
 1974 0000 00       		.space	1
 1975              		.section	.data.TX1_delay_val,"aw"
 1978              	TX1_delay_val:
 1979 0000 FA       		.byte	-6
 1980              		.section	.data.TX2_delay_val,"aw"
 1983              	TX2_delay_val:
 1984 0000 FA       		.byte	-6
 1985              		.section	.data.digit_table,"aw"
ARM GAS  /tmp/ccLn1Ezy.s 			page 53


 1986              		.align	2
 1987              		.set	.LANCHOR5,. + 0
 1990              	digit_table:
 1991 0000 30313233 		.ascii	"0123456789abcdef-"
 1991      34353637 
 1991      38396162 
 1991      63646566 
 1991      2D
 1992              		.section	.data.flag_digit_1,"aw"
 1995              	flag_digit_1:
 1996 0000 01       		.byte	1
 1997              		.section	.data.tx1_buffer,"aw"
 1998              		.align	2
 2001              	tx1_buffer:
 2002 0000 61626364 		.ascii	"abcdef"
 2002      6566
 2003              		.section	.data.tx2_buffer,"aw"
 2004              		.align	2
 2007              	tx2_buffer:
 2008 0000 31323334 		.ascii	"123456789\000"
 2008      35363738 
 2008      3900
 2009              		.text
 2010              	.Letext0:
 2011              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 2012              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2013              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2014              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2015              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2016              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2017              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2018              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2019              		.file 11 "Core/Inc/tim.h"
 2020              		.file 12 "Core/Inc/usart.h"
 2021              		.file 13 "Core/Inc/buffer.h"
 2022              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2023              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2024              		.file 16 "Core/Inc/gpio.h"
 2025              		.file 17 "Core/Inc/lcd16x2.h"
 2026              		.file 18 "<built-in>"
ARM GAS  /tmp/ccLn1Ezy.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLn1Ezy.s:18     .text.m_send_to_lcd:0000000000000000 $t
     /tmp/ccLn1Ezy.s:26     .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/ccLn1Ezy.s:132    .text.m_send_to_lcd:000000000000006c $d
     /tmp/ccLn1Ezy.s:141    .text.lcd_display_task:0000000000000000 $t
     /tmp/ccLn1Ezy.s:148    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/ccLn1Ezy.s:187    .text.lcd_display_task:0000000000000026 $d
     /tmp/ccLn1Ezy.s:191    .text.lcd_display_task:000000000000002a $t
     /tmp/ccLn1Ezy.s:302    .text.lcd_display_task:00000000000000b8 $d
     /tmp/ccLn1Ezy.s:315    .text.task_timer:0000000000000000 $t
     /tmp/ccLn1Ezy.s:322    .text.task_timer:0000000000000000 task_timer
     /tmp/ccLn1Ezy.s:417    .text.task_timer:0000000000000064 $d
     /tmp/ccLn1Ezy.s:428    .text.key_read_task:0000000000000000 $t
     /tmp/ccLn1Ezy.s:435    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccLn1Ezy.s:575    .text.key_read_task:0000000000000098 $d
     /tmp/ccLn1Ezy.s:588    .text.RS485_RX_Task:0000000000000000 $t
     /tmp/ccLn1Ezy.s:595    .text.RS485_RX_Task:0000000000000000 RS485_RX_Task
     /tmp/ccLn1Ezy.s:686    .text.RS485_RX_Task:0000000000000060 $d
     /tmp/ccLn1Ezy.s:695    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccLn1Ezy.s:702    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccLn1Ezy.s:766    .text.RS485_Read_Message:0000000000000034 $d
     /tmp/ccLn1Ezy.s:773    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccLn1Ezy.s:780    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccLn1Ezy.s:838    .text.RS485_Send_Message:0000000000000040 $d
     /tmp/ccLn1Ezy.s:845    .text.main_task:0000000000000000 $t
     /tmp/ccLn1Ezy.s:852    .text.main_task:0000000000000000 main_task
     /tmp/ccLn1Ezy.s:1163   .text.main_task:0000000000000164 $d
     /tmp/ccLn1Ezy.s:1179   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccLn1Ezy.s:1186   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccLn1Ezy.s:1213   .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccLn1Ezy.s:1219   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccLn1Ezy.s:1226   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccLn1Ezy.s:1265   .text.HAL_UART_RxCpltCallback:0000000000000020 $d
     /tmp/ccLn1Ezy.s:1272   .text.Error_Handler:0000000000000000 $t
     /tmp/ccLn1Ezy.s:1279   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccLn1Ezy.s:1311   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLn1Ezy.s:1318   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLn1Ezy.s:1466   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccLn1Ezy.s:1472   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1482   .text.main:0000000000000000 $t
     /tmp/ccLn1Ezy.s:1489   .text.main:0000000000000000 main
     /tmp/ccLn1Ezy.s:1653   .text.main:00000000000000e0 $d
     /tmp/ccLn1Ezy.s:1948   .bss.pTX_msg:0000000000000000 pTX_msg
     /tmp/ccLn1Ezy.s:1941   .bss.pRX_msg:0000000000000000 pRX_msg
     /tmp/ccLn1Ezy.s:1737   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccLn1Ezy.s:1744   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccLn1Ezy.s:1730   .bss.ID_list:0000000000000000 ID_list
     /tmp/ccLn1Ezy.s:1723   .bss.ID:0000000000000000 ID
     /tmp/ccLn1Ezy.s:1838   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccLn1Ezy.s:1955   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccLn1Ezy.s:1815   .bss.digit2_buf:0000000000000000 digit2_buf
     /tmp/ccLn1Ezy.s:1797   .bss.digit1_buf:0000000000000000 digit1_buf
     /tmp/ccLn1Ezy.s:1961   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccLn1Ezy.s:1990   .data.digit_table:0000000000000000 digit_table
     /tmp/ccLn1Ezy.s:1923   .bss.lcd_process:0000000000000000 lcd_process
     /tmp/ccLn1Ezy.s:1784   .bss.data:0000000000000000 data
ARM GAS  /tmp/ccLn1Ezy.s 			page 55


     /tmp/ccLn1Ezy.s:1750   .bss.cmd:0000000000000000 cmd
     /tmp/ccLn1Ezy.s:1820   .bss.digit2_update:0000000000000000 digit2_update
     /tmp/ccLn1Ezy.s:1802   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/ccLn1Ezy.s:1905   .bss.is_EN:0000000000000000 is_EN
     /tmp/ccLn1Ezy.s:1808   .bss.digit2:0000000000000000 digit2
     /tmp/ccLn1Ezy.s:1790   .bss.digit1:0000000000000000 digit1
     /tmp/ccLn1Ezy.s:1934   .bss.num_slave:0000000000000000 num_slave
     /tmp/ccLn1Ezy.s:1825   .bss.error:0000000000000000 error
     /tmp/ccLn1Ezy.s:1831   .bss.event:0000000000000000 event
     /tmp/ccLn1Ezy.s:1967   .bss.state:0000000000000000 state
     /tmp/ccLn1Ezy.s:1917   .bss.key2_data:0000000000000000 key2_data
     /tmp/ccLn1Ezy.s:1911   .bss.key1_data:0000000000000000 key1_data
     /tmp/ccLn1Ezy.s:1983   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/ccLn1Ezy.s:1778   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/ccLn1Ezy.s:1978   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/ccLn1Ezy.s:1773   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/ccLn1Ezy.s:1756   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/ccLn1Ezy.s:1768   .bss.d_timer_50ms:0000000000000000 d_timer_50ms
     /tmp/ccLn1Ezy.s:1762   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccLn1Ezy.s:2001   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/ccLn1Ezy.s:2007   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/ccLn1Ezy.s:1995   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/ccLn1Ezy.s:1928   .bss.n_querry:0000000000000000 n_querry
     /tmp/ccLn1Ezy.s:1889   .bss.f_timer_50ms:0000000000000000 f_timer_50ms
     /tmp/ccLn1Ezy.s:1884   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccLn1Ezy.s:1899   .bss.f_waiting_rx:0000000000000000 f_waiting_rx
     /tmp/ccLn1Ezy.s:1878   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/ccLn1Ezy.s:1872   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccLn1Ezy.s:1866   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/ccLn1Ezy.s:1894   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/ccLn1Ezy.s:1973   .bss.tx_timeout:0000000000000000 tx_timeout
     /tmp/ccLn1Ezy.s:1861   .bss.f_read_msg:0000000000000000 f_read_msg
     /tmp/ccLn1Ezy.s:1855   .bss.f_querry:0000000000000000 f_querry
     /tmp/ccLn1Ezy.s:1843   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccLn1Ezy.s:1849   .bss.f_lcd_item:0000000000000000 f_lcd_item
     /tmp/ccLn1Ezy.s:1724   .bss.ID:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1726   .bss.ID_list:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1733   .bss.RX_msg:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1740   .bss.TX_msg:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1751   .bss.cmd:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1757   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1763   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1769   .bss.d_timer_50ms:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1774   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1779   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1785   .bss.data:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1791   .bss.digit1:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1793   .bss.digit1_buf:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1803   .bss.digit1_update:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1809   .bss.digit2:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1811   .bss.digit2_buf:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1821   .bss.digit2_update:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1826   .bss.error:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1832   .bss.event:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1834   .bss.event_buffer:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1844   .bss.f_busy:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1850   .bss.f_lcd_item:0000000000000000 $d
ARM GAS  /tmp/ccLn1Ezy.s 			page 56


     /tmp/ccLn1Ezy.s:1856   .bss.f_querry:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1862   .bss.f_read_msg:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1867   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1873   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1879   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1885   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1890   .bss.f_timer_50ms:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1895   .bss.f_timer_TX:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1900   .bss.f_waiting_rx:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1906   .bss.is_EN:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1912   .bss.key1_data:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1918   .bss.key2_data:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1924   .bss.lcd_process:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1929   .bss.n_querry:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1935   .bss.num_slave:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1937   .bss.pRX_msg:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1944   .bss.pTX_msg:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1951   .bss.rx_buffer:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1962   .bss.rx_temp:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1968   .bss.state:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1974   .bss.tx_timeout:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1986   .data.digit_table:0000000000000000 $d
     /tmp/ccLn1Ezy.s:1998   .data.tx1_buffer:0000000000000000 $d
     /tmp/ccLn1Ezy.s:2004   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
HAL_UART_Transmit
huart4
buffer_pop
htim4
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
lcd_clear
lcd_set_pos
lcd_write_string
lcd_data
