ARM GAS  /tmp/ccQwYmeq.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.m_send_to_lcd,"ax",%progbits
  18              		.align	1
  19              		.global	m_send_to_lcd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	m_send_to_lcd:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "message.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccQwYmeq.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** uint8_t f_busy;
  49:Core/Src/main.c **** unsigned char f_timer_TX=0;
  50:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  51:Core/Src/main.c **** unsigned char f_timer_10ms=0;
  52:Core/Src/main.c **** unsigned char f_timer_20ms=0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** unsigned char f_timer_30ms=0;
  55:Core/Src/main.c **** unsigned char i,p_tx1,p_tx2;
  56:Core/Src/main.c **** unsigned char flag_digit_1=1;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** unsigned char tx2_buffer[10]={"123456789"};
  59:Core/Src/main.c **** unsigned char tx1_buffer[6]={"abcdef"};
  60:Core/Src/main.c **** unsigned char d_timer_30ms;
  61:Core/Src/main.c **** unsigned char d_timer_20ms;
  62:Core/Src/main.c **** unsigned char d_timer_TX1;
  63:Core/Src/main.c **** unsigned char TX1_delay_val =250;
  64:Core/Src/main.c **** unsigned char d_timer_TX2;
  65:Core/Src/main.c **** unsigned char TX2_delay_val =250;
  66:Core/Src/main.c **** unsigned char key1_data, key2_data;
  67:Core/Src/main.c **** unsigned char state,event;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** unsigned char lcd_disp_lock=0;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** unsigned char uart_tx1_flag,uart_tx2_flag;
  72:Core/Src/main.c **** unsigned char flag_state_tx1, flag_state_tx;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** unsigned char digit1,digit2;
  75:Core/Src/main.c **** //flag for LCD
  76:Core/Src/main.c **** unsigned char is_EN=0;
  77:Core/Src/main.c **** unsigned char lcd_digit1_f=0;
  78:Core/Src/main.c **** unsigned char digit1_update = 0;
  79:Core/Src/main.c **** unsigned char digit2_update = 0;
  80:Core/Src/main.c **** unsigned char cmd, data;
  81:Core/Src/main.c **** unsigned char lcd_process=0;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** unsigned char digit_table[17]={"0123456789abcdef-"};
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** uint8_t rx_temp;
  86:Core/Src/main.c **** uint8_t transmission_f;
ARM GAS  /tmp/ccQwYmeq.s 			page 3


  87:Core/Src/main.c **** uint8_t start_cmd=0x2;
  88:Core/Src/main.c **** uint8_t stop_cmd=0x3;
  89:Core/Src/main.c **** circular_buffer rx1_buffer;
  90:Core/Src/main.c **** circular_buffer rx2_buffer;
  91:Core/Src/main.c **** circular_buffer event_buffer;
  92:Core/Src/main.c **** uint8_t ID;
  93:Core/Src/main.c **** uint8_t TX_msg[4];
  94:Core/Src/main.c **** uint8_t RX_msg[4];
  95:Core/Src/main.c **** /* USER CODE END PV */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  98:Core/Src/main.c **** void SystemClock_Config(void);
  99:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 100:Core/Src/main.c **** void task_timer(void);
 101:Core/Src/main.c **** void counting_task(void);
 102:Core/Src/main.c **** void uart_TX2_task(void);
 103:Core/Src/main.c **** void uart_TX1_task(void);
 104:Core/Src/main.c **** void uart_RX1_task(void);
 105:Core/Src/main.c **** void uart_RX2_task(void);
 106:Core/Src/main.c **** void segment_display_task(void);
 107:Core/Src/main.c **** void lcd_display_task(void);
 108:Core/Src/main.c **** void key_read_task(void);
 109:Core/Src/main.c **** void main_task(void);
 110:Core/Src/main.c **** void setEvent(unsigned char event);
 111:Core/Src/main.c **** unsigned char getEvent(void);
 112:Core/Src/main.c **** void seven_segment_driver(char input,char select_digit);
 113:Core/Src/main.c **** void TX1_delay_update(void);
 114:Core/Src/main.c **** void TX2_delay_update(void);
 115:Core/Src/main.c **** void m_send_to_lcd(char data);
 116:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 117:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 118:Core/Src/main.c **** void Set_Receiver_Port1(void);
 119:Core/Src/main.c **** void Set_Receiver_Port2(void);
 120:Core/Src/main.c **** void RS485_Send_Message(void);
 121:Core/Src/main.c **** void RS485_Read_Message(void);
 122:Core/Src/main.c **** /*
 123:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 124:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 125:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 126:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
 127:Core/Src/main.c **** */
 128:Core/Src/main.c **** /* USER CODE END PFP */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 131:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /* USER CODE END 0 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief  The application entry point.
 137:Core/Src/main.c ****   * @retval int
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** int main(void)
 140:Core/Src/main.c **** {
 141:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE END 1 */
ARM GAS  /tmp/ccQwYmeq.s 			page 4


 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 148:Core/Src/main.c ****   HAL_Init();
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE END Init */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Configure the system clock */
 155:Core/Src/main.c ****   SystemClock_Config();
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE END SysInit */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* Initialize all configured peripherals */
 162:Core/Src/main.c ****   MX_GPIO_Init();
 163:Core/Src/main.c ****   MX_TIM4_Init();
 164:Core/Src/main.c ****   MX_UART4_Init();
 165:Core/Src/main.c ****   MX_UART5_Init();
 166:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   	
 171:Core/Src/main.c ****   HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0);   // Enable Receiver 1
 172:Core/Src/main.c ****   HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart4, &rx1_buffer.data[rx1_buffer.head], 1);
 175:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   digit1=16;
 178:Core/Src/main.c ****   digit2=16;
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   lcd_init();
 182:Core/Src/main.c ****   lcd_clear();
 183:Core/Src/main.c ****   lcd_set_pos(0, 3);
 184:Core/Src/main.c ****   lcd_write_string("TETRADYNE");
 185:Core/Src/main.c ****   lcd_set_pos(1, 0);
 186:Core/Src/main.c ****   lcd_write_string("S2:");
 187:Core/Src/main.c ****   lcd_set_pos(1, 0xC);
 188:Core/Src/main.c ****   lcd_write_string("S1:");
 189:Core/Src/main.c ****   /* USER CODE END 2 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* Infinite loop */
 192:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 193:Core/Src/main.c ****   while (1)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     /* USER CODE END WHILE */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** 	  	  	 task_timer();
 200:Core/Src/main.c **** 	  	     ///segment_display_task();
ARM GAS  /tmp/ccQwYmeq.s 			page 5


 201:Core/Src/main.c **** 	  	     lcd_display_task();
 202:Core/Src/main.c **** 	  	     key_read_task();
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** 	  	     main_task();
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c ****   /* USER CODE END 3 */
 207:Core/Src/main.c **** }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** /**
 210:Core/Src/main.c ****   * @brief System Clock Configuration
 211:Core/Src/main.c ****   * @retval None
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c **** void SystemClock_Config(void)
 214:Core/Src/main.c **** {
 215:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 216:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 221:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 224:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 227:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 234:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     Error_Handler();
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 240:Core/Src/main.c ****   */
 241:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 242:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 243:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 244:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 245:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 246:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     Error_Handler();
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c **** }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** void lcd_display_task(void){
 257:Core/Src/main.c **** 
ARM GAS  /tmp/ccQwYmeq.s 			page 6


 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** 	if(!lcd_digit1_f){
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** 		 cmd = 0xC3;
 262:Core/Src/main.c **** 		 data = digit_table[digit2];
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** 	}else{
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** 		cmd = 0xCF;
 267:Core/Src/main.c ****         data = digit_table[digit1];
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** 	}
 270:Core/Src/main.c **** 	switch(lcd_process){
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** 			case 0:
 273:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 274:Core/Src/main.c **** 					m_send_to_lcd((cmd>>4)&0x0f);
 275:Core/Src/main.c **** 					break;
 276:Core/Src/main.c **** 			case 1:
 277:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 278:Core/Src/main.c **** 					m_send_to_lcd((cmd)&0x0f);
 279:Core/Src/main.c **** 					break;
 280:Core/Src/main.c **** 			case 2:
 281:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 282:Core/Src/main.c **** 					m_send_to_lcd((data>>4)&0x0f);
 283:Core/Src/main.c **** 					break;
 284:Core/Src/main.c **** 			case 3:
 285:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 286:Core/Src/main.c **** 					m_send_to_lcd(data&0x0f);
 287:Core/Src/main.c **** 					break;
 288:Core/Src/main.c **** 	}
 289:Core/Src/main.c **** }
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** void m_send_to_lcd(char data)
 293:Core/Src/main.c **** {
  30              		.loc 1 293 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 293 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** 	//writing data to pin PE0~PE3
 296:Core/Src/main.c **** 	GPIOE->ODR =  (GPIOE->ODR & 0xFFFFFFF0) | data;
  40              		.loc 1 296 2 is_stmt 1 view .LVU2
  41              		.loc 1 296 22 is_stmt 0 view .LVU3
  42 0002 194A     		ldr	r2, .L5
  43 0004 5369     		ldr	r3, [r2, #20]
  44              		.loc 1 296 28 view .LVU4
  45 0006 23F00F03 		bic	r3, r3, #15
  46              		.loc 1 296 42 view .LVU5
  47 000a 1843     		orrs	r0, r0, r3
ARM GAS  /tmp/ccQwYmeq.s 			page 7


  48              	.LVL1:
  49              		.loc 1 296 13 view .LVU6
  50 000c 5061     		str	r0, [r2, #20]
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** 	if(!f_timer_20ms) return ;
  51              		.loc 1 298 2 is_stmt 1 view .LVU7
  52              		.loc 1 298 5 is_stmt 0 view .LVU8
  53 000e 174B     		ldr	r3, .L5+4
  54 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  55              		.loc 1 298 4 view .LVU9
  56 0012 6BB1     		cbz	r3, .L1
 299:Core/Src/main.c **** 	f_timer_20ms =0;
  57              		.loc 1 299 2 is_stmt 1 view .LVU10
  58              		.loc 1 299 15 is_stmt 0 view .LVU11
  59 0014 154B     		ldr	r3, .L5+4
  60 0016 0022     		movs	r2, #0
  61 0018 1A70     		strb	r2, [r3]
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** 	if (!is_EN){
  62              		.loc 1 301 2 is_stmt 1 view .LVU12
  63              		.loc 1 301 6 is_stmt 0 view .LVU13
  64 001a 154B     		ldr	r3, .L5+8
  65 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66              		.loc 1 301 5 view .LVU14
  67 001e 43B9     		cbnz	r3, .L3
 302:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
  68              		.loc 1 302 3 is_stmt 1 view .LVU15
  69 0020 0122     		movs	r2, #1
  70 0022 2021     		movs	r1, #32
  71 0024 1048     		ldr	r0, .L5
  72 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL2:
 303:Core/Src/main.c **** 		is_EN=1;
  74              		.loc 1 303 3 view .LVU16
  75              		.loc 1 303 8 is_stmt 0 view .LVU17
  76 002a 114B     		ldr	r3, .L5+8
  77 002c 0122     		movs	r2, #1
  78 002e 1A70     		strb	r2, [r3]
  79              	.L1:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** 	}else{
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 308:Core/Src/main.c **** 		is_EN=0;
 309:Core/Src/main.c **** 		lcd_process++;
 310:Core/Src/main.c **** 		if (lcd_process>3){
 311:Core/Src/main.c **** 			lcd_process=0;
 312:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 313:Core/Src/main.c **** 		}
 314:Core/Src/main.c **** 	}
 315:Core/Src/main.c **** }
  80              		.loc 1 315 1 view .LVU18
  81 0030 08BD     		pop	{r3, pc}
  82              	.L3:
 307:Core/Src/main.c **** 		is_EN=0;
  83              		.loc 1 307 3 is_stmt 1 view .LVU19
  84 0032 0022     		movs	r2, #0
ARM GAS  /tmp/ccQwYmeq.s 			page 8


  85 0034 2021     		movs	r1, #32
  86 0036 0C48     		ldr	r0, .L5
  87 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL3:
 308:Core/Src/main.c **** 		lcd_process++;
  89              		.loc 1 308 3 view .LVU20
 308:Core/Src/main.c **** 		lcd_process++;
  90              		.loc 1 308 8 is_stmt 0 view .LVU21
  91 003c 0C4B     		ldr	r3, .L5+8
  92 003e 0022     		movs	r2, #0
  93 0040 1A70     		strb	r2, [r3]
 309:Core/Src/main.c **** 		if (lcd_process>3){
  94              		.loc 1 309 3 is_stmt 1 view .LVU22
 309:Core/Src/main.c **** 		if (lcd_process>3){
  95              		.loc 1 309 14 is_stmt 0 view .LVU23
  96 0042 0C4A     		ldr	r2, .L5+12
  97 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  98 0046 0133     		adds	r3, r3, #1
  99 0048 DBB2     		uxtb	r3, r3
 100 004a 1370     		strb	r3, [r2]
 310:Core/Src/main.c **** 			lcd_process=0;
 101              		.loc 1 310 3 is_stmt 1 view .LVU24
 310:Core/Src/main.c **** 			lcd_process=0;
 102              		.loc 1 310 6 is_stmt 0 view .LVU25
 103 004c 032B     		cmp	r3, #3
 104 004e EFD9     		bls	.L1
 311:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 105              		.loc 1 311 4 is_stmt 1 view .LVU26
 311:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 106              		.loc 1 311 15 is_stmt 0 view .LVU27
 107 0050 1346     		mov	r3, r2
 108 0052 0022     		movs	r2, #0
 109 0054 1A70     		strb	r2, [r3]
 312:Core/Src/main.c **** 		}
 110              		.loc 1 312 4 is_stmt 1 view .LVU28
 312:Core/Src/main.c **** 		}
 111              		.loc 1 312 33 is_stmt 0 view .LVU29
 112 0056 084A     		ldr	r2, .L5+16
 113 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 005a 83F00103 		eor	r3, r3, #1
 115 005e 03F00103 		and	r3, r3, #1
 312:Core/Src/main.c **** 		}
 116              		.loc 1 312 16 view .LVU30
 117 0062 1370     		strb	r3, [r2]
 118 0064 E4E7     		b	.L1
 119              	.L6:
 120 0066 00BF     		.align	2
 121              	.L5:
 122 0068 00100240 		.word	1073876992
 123 006c 00000000 		.word	.LANCHOR0
 124 0070 00000000 		.word	.LANCHOR1
 125 0074 00000000 		.word	.LANCHOR2
 126 0078 00000000 		.word	.LANCHOR3
 127              		.cfi_endproc
 128              	.LFE133:
 130              		.section	.text.lcd_display_task,"ax",%progbits
 131              		.align	1
ARM GAS  /tmp/ccQwYmeq.s 			page 9


 132              		.global	lcd_display_task
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	lcd_display_task:
 139              	.LFB132:
 256:Core/Src/main.c **** 
 140              		.loc 1 256 28 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 259:Core/Src/main.c **** 
 149              		.loc 1 259 2 view .LVU32
 259:Core/Src/main.c **** 
 150              		.loc 1 259 5 is_stmt 0 view .LVU33
 151 0002 264B     		ldr	r3, .L17
 152 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 259:Core/Src/main.c **** 
 153              		.loc 1 259 4 view .LVU34
 154 0006 83B9     		cbnz	r3, .L8
 261:Core/Src/main.c **** 		 data = digit_table[digit2];
 155              		.loc 1 261 4 is_stmt 1 view .LVU35
 261:Core/Src/main.c **** 		 data = digit_table[digit2];
 156              		.loc 1 261 8 is_stmt 0 view .LVU36
 157 0008 254B     		ldr	r3, .L17+4
 158 000a C322     		movs	r2, #195
 159 000c 1A70     		strb	r2, [r3]
 262:Core/Src/main.c **** 
 160              		.loc 1 262 4 is_stmt 1 view .LVU37
 262:Core/Src/main.c **** 
 161              		.loc 1 262 22 is_stmt 0 view .LVU38
 162 000e 254B     		ldr	r3, .L17+8
 163 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 164 0012 254A     		ldr	r2, .L17+12
 165 0014 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 262:Core/Src/main.c **** 
 166              		.loc 1 262 9 view .LVU39
 167 0016 254B     		ldr	r3, .L17+16
 168 0018 1A70     		strb	r2, [r3]
 169              	.L9:
 270:Core/Src/main.c **** 
 170              		.loc 1 270 2 is_stmt 1 view .LVU40
 171 001a 254B     		ldr	r3, .L17+20
 172 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173 001e 032B     		cmp	r3, #3
 174 0020 17D8     		bhi	.L7
 175 0022 DFE803F0 		tbb	[pc, r3]
 176              	.L12:
 177 0026 0C       		.byte	(.L15-.L12)/2
 178 0027 17       		.byte	(.L14-.L12)/2
 179 0028 23       		.byte	(.L13-.L12)/2
ARM GAS  /tmp/ccQwYmeq.s 			page 10


 180 0029 2E       		.byte	(.L11-.L12)/2
 181              		.p2align 1
 182              	.L8:
 266:Core/Src/main.c ****         data = digit_table[digit1];
 183              		.loc 1 266 3 view .LVU41
 266:Core/Src/main.c ****         data = digit_table[digit1];
 184              		.loc 1 266 7 is_stmt 0 view .LVU42
 185 002a 1D4B     		ldr	r3, .L17+4
 186 002c CF22     		movs	r2, #207
 187 002e 1A70     		strb	r2, [r3]
 267:Core/Src/main.c **** 
 188              		.loc 1 267 9 is_stmt 1 view .LVU43
 267:Core/Src/main.c **** 
 189              		.loc 1 267 27 is_stmt 0 view .LVU44
 190 0030 204B     		ldr	r3, .L17+24
 191 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 192 0034 1C4A     		ldr	r2, .L17+12
 193 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 267:Core/Src/main.c **** 
 194              		.loc 1 267 14 view .LVU45
 195 0038 1C4B     		ldr	r3, .L17+16
 196 003a 1A70     		strb	r2, [r3]
 197 003c EDE7     		b	.L9
 198              	.L15:
 273:Core/Src/main.c **** 					m_send_to_lcd((cmd>>4)&0x0f);
 199              		.loc 1 273 6 is_stmt 1 view .LVU46
 200 003e 0022     		movs	r2, #0
 201 0040 1021     		movs	r1, #16
 202 0042 1D48     		ldr	r0, .L17+28
 203 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL4:
 274:Core/Src/main.c **** 					break;
 205              		.loc 1 274 6 view .LVU47
 206 0048 154B     		ldr	r3, .L17+4
 207 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 208 004c 0009     		lsrs	r0, r0, #4
 209 004e FFF7FEFF 		bl	m_send_to_lcd
 210              	.LVL5:
 275:Core/Src/main.c **** 			case 1:
 211              		.loc 1 275 6 view .LVU48
 212              	.L7:
 289:Core/Src/main.c **** 
 213              		.loc 1 289 1 is_stmt 0 view .LVU49
 214 0052 08BD     		pop	{r3, pc}
 215              	.L14:
 277:Core/Src/main.c **** 					m_send_to_lcd((cmd)&0x0f);
 216              		.loc 1 277 6 is_stmt 1 view .LVU50
 217 0054 0022     		movs	r2, #0
 218 0056 1021     		movs	r1, #16
 219 0058 1748     		ldr	r0, .L17+28
 220 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 221              	.LVL6:
 278:Core/Src/main.c **** 					break;
 222              		.loc 1 278 6 view .LVU51
 278:Core/Src/main.c **** 					break;
 223              		.loc 1 278 25 is_stmt 0 view .LVU52
 224 005e 104B     		ldr	r3, .L17+4
ARM GAS  /tmp/ccQwYmeq.s 			page 11


 225 0060 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 278:Core/Src/main.c **** 					break;
 226              		.loc 1 278 6 view .LVU53
 227 0062 00F00F00 		and	r0, r0, #15
 228 0066 FFF7FEFF 		bl	m_send_to_lcd
 229              	.LVL7:
 279:Core/Src/main.c **** 			case 2:
 230              		.loc 1 279 6 is_stmt 1 view .LVU54
 231 006a F2E7     		b	.L7
 232              	.L13:
 281:Core/Src/main.c **** 					m_send_to_lcd((data>>4)&0x0f);
 233              		.loc 1 281 6 view .LVU55
 234 006c 0122     		movs	r2, #1
 235 006e 1021     		movs	r1, #16
 236 0070 1148     		ldr	r0, .L17+28
 237 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL8:
 282:Core/Src/main.c **** 					break;
 239              		.loc 1 282 6 view .LVU56
 240 0076 0D4B     		ldr	r3, .L17+16
 241 0078 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242 007a 0009     		lsrs	r0, r0, #4
 243 007c FFF7FEFF 		bl	m_send_to_lcd
 244              	.LVL9:
 283:Core/Src/main.c **** 			case 3:
 245              		.loc 1 283 6 view .LVU57
 246 0080 E7E7     		b	.L7
 247              	.L11:
 285:Core/Src/main.c **** 					m_send_to_lcd(data&0x0f);
 248              		.loc 1 285 6 view .LVU58
 249 0082 0122     		movs	r2, #1
 250 0084 1021     		movs	r1, #16
 251 0086 0C48     		ldr	r0, .L17+28
 252 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL10:
 286:Core/Src/main.c **** 					break;
 254              		.loc 1 286 6 view .LVU59
 286:Core/Src/main.c **** 					break;
 255              		.loc 1 286 24 is_stmt 0 view .LVU60
 256 008c 074B     		ldr	r3, .L17+16
 257 008e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 286:Core/Src/main.c **** 					break;
 258              		.loc 1 286 6 view .LVU61
 259 0090 00F00F00 		and	r0, r0, #15
 260 0094 FFF7FEFF 		bl	m_send_to_lcd
 261              	.LVL11:
 287:Core/Src/main.c **** 	}
 262              		.loc 1 287 6 is_stmt 1 view .LVU62
 289:Core/Src/main.c **** 
 263              		.loc 1 289 1 is_stmt 0 view .LVU63
 264 0098 DBE7     		b	.L7
 265              	.L18:
 266 009a 00BF     		.align	2
 267              	.L17:
 268 009c 00000000 		.word	.LANCHOR3
 269 00a0 00000000 		.word	.LANCHOR4
 270 00a4 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/ccQwYmeq.s 			page 12


 271 00a8 00000000 		.word	.LANCHOR5
 272 00ac 00000000 		.word	.LANCHOR7
 273 00b0 00000000 		.word	.LANCHOR2
 274 00b4 00000000 		.word	.LANCHOR8
 275 00b8 00100240 		.word	1073876992
 276              		.cfi_endproc
 277              	.LFE132:
 279              		.section	.text.task_timer,"ax",%progbits
 280              		.align	1
 281              		.global	task_timer
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	task_timer:
 288              	.LFB134:
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** void task_timer(void)
 319:Core/Src/main.c **** {
 289              		.loc 1 319 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 320:Core/Src/main.c **** 	if(!f_timer_10ms) return;       // checking if 10 ms timer interrupt is set (10 ms), if set then d
 294              		.loc 1 320 2 view .LVU65
 295              		.loc 1 320 5 is_stmt 0 view .LVU66
 296 0000 114B     		ldr	r3, .L24
 297 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 298              		.loc 1 320 4 view .LVU67
 299 0004 83B1     		cbz	r3, .L19
 321:Core/Src/main.c **** 	f_timer_10ms =0;		// clear the flag to wait next interupt
 300              		.loc 1 321 2 is_stmt 1 view .LVU68
 301              		.loc 1 321 15 is_stmt 0 view .LVU69
 302 0006 104B     		ldr	r3, .L24
 303 0008 0022     		movs	r2, #0
 304 000a 1A70     		strb	r2, [r3]
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** 	d_timer_30ms++;			// count timer for 30 ms interval
 305              		.loc 1 323 2 is_stmt 1 view .LVU70
 306              		.loc 1 323 14 is_stmt 0 view .LVU71
 307 000c 0F4A     		ldr	r2, .L24+4
 308 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 309 0010 0133     		adds	r3, r3, #1
 310 0012 DBB2     		uxtb	r3, r3
 311 0014 1370     		strb	r3, [r2]
 324:Core/Src/main.c **** 			
 325:Core/Src/main.c **** 	if(d_timer_30ms==3)		// checking if the count reached 30 ms
 312              		.loc 1 325 2 is_stmt 1 view .LVU72
 313              		.loc 1 325 4 is_stmt 0 view .LVU73
 314 0016 032B     		cmp	r3, #3
 315 0018 07D0     		beq	.L22
 316              	.L21:
 326:Core/Src/main.c **** 	{
 327:Core/Src/main.c **** 		d_timer_30ms =0;	// assign "0" to repeat counting
 328:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
ARM GAS  /tmp/ccQwYmeq.s 			page 13


 329:Core/Src/main.c **** 	}
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** 	d_timer_20ms++;
 317              		.loc 1 331 2 is_stmt 1 view .LVU74
 318              		.loc 1 331 14 is_stmt 0 view .LVU75
 319 001a 0D4A     		ldr	r2, .L24+8
 320 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 321 001e 0133     		adds	r3, r3, #1
 322 0020 DBB2     		uxtb	r3, r3
 323 0022 1370     		strb	r3, [r2]
 332:Core/Src/main.c **** 	if (d_timer_20ms==2){
 324              		.loc 1 332 2 is_stmt 1 view .LVU76
 325              		.loc 1 332 5 is_stmt 0 view .LVU77
 326 0024 022B     		cmp	r3, #2
 327 0026 07D0     		beq	.L23
 328              	.L19:
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** 		d_timer_20ms =0;
 335:Core/Src/main.c **** 		f_timer_20ms=1;
 336:Core/Src/main.c **** 	}
 337:Core/Src/main.c **** 	
 338:Core/Src/main.c **** /*
 339:Core/Src/main.c **** 	d_timer_TX1++;
 340:Core/Src/main.c **** 		if(d_timer_TX1>=TX1_delay_val)     // checking if the count reached LED interval
 341:Core/Src/main.c **** 		{
 342:Core/Src/main.c **** 			d_timer_TX1=0;		// assign "0" to repeat counting
 343:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX1_UPDATE);
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** 		}
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** 	d_timer_TX2++;
 348:Core/Src/main.c **** 		if(d_timer_TX2>=TX2_delay_val)     // checking if the count reached LED interval
 349:Core/Src/main.c **** 		{
 350:Core/Src/main.c **** 			d_timer_TX2=0;		// assign "0" to repeat counting
 351:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX2_UPDATE);
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** 		}
 354:Core/Src/main.c **** */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** }
 329              		.loc 1 356 1 view .LVU78
 330 0028 7047     		bx	lr
 331              	.L22:
 327:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 332              		.loc 1 327 3 is_stmt 1 view .LVU79
 327:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 333              		.loc 1 327 16 is_stmt 0 view .LVU80
 334 002a 1346     		mov	r3, r2
 335 002c 0022     		movs	r2, #0
 336 002e 1A70     		strb	r2, [r3]
 328:Core/Src/main.c **** 	}
 337              		.loc 1 328 3 is_stmt 1 view .LVU81
 328:Core/Src/main.c **** 	}
 338              		.loc 1 328 15 is_stmt 0 view .LVU82
 339 0030 084B     		ldr	r3, .L24+12
 340 0032 0122     		movs	r2, #1
 341 0034 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccQwYmeq.s 			page 14


 342 0036 F0E7     		b	.L21
 343              	.L23:
 334:Core/Src/main.c **** 		f_timer_20ms=1;
 344              		.loc 1 334 3 is_stmt 1 view .LVU83
 334:Core/Src/main.c **** 		f_timer_20ms=1;
 345              		.loc 1 334 16 is_stmt 0 view .LVU84
 346 0038 1346     		mov	r3, r2
 347 003a 0022     		movs	r2, #0
 348 003c 1A70     		strb	r2, [r3]
 335:Core/Src/main.c **** 	}
 349              		.loc 1 335 3 is_stmt 1 view .LVU85
 335:Core/Src/main.c **** 	}
 350              		.loc 1 335 15 is_stmt 0 view .LVU86
 351 003e 064B     		ldr	r3, .L24+16
 352 0040 0122     		movs	r2, #1
 353 0042 1A70     		strb	r2, [r3]
 354 0044 F0E7     		b	.L19
 355              	.L25:
 356 0046 00BF     		.align	2
 357              	.L24:
 358 0048 00000000 		.word	.LANCHOR9
 359 004c 00000000 		.word	.LANCHOR10
 360 0050 00000000 		.word	.LANCHOR12
 361 0054 00000000 		.word	.LANCHOR11
 362 0058 00000000 		.word	.LANCHOR0
 363              		.cfi_endproc
 364              	.LFE134:
 366              		.section	.text.key_read_task,"ax",%progbits
 367              		.align	1
 368              		.global	key_read_task
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv4-sp-d16
 374              	key_read_task:
 375              	.LFB135:
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** void key_read_task(void)
 359:Core/Src/main.c **** {
 376              		.loc 1 359 1 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380 0000 08B5     		push	{r3, lr}
 381              	.LCFI2:
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 3, -8
 384              		.cfi_offset 14, -4
 360:Core/Src/main.c **** 	if(!f_timer_30ms) return;  		 // Checking if 30 ms counting is done
 385              		.loc 1 360 2 view .LVU88
 386              		.loc 1 360 5 is_stmt 0 view .LVU89
 387 0002 1F4B     		ldr	r3, .L36
 388 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 389              		.loc 1 360 4 view .LVU90
 390 0006 33B3     		cbz	r3, .L26
 361:Core/Src/main.c **** 	f_timer_30ms =0;          		 // clear the flag to wait next counting
 391              		.loc 1 361 2 is_stmt 1 view .LVU91
ARM GAS  /tmp/ccQwYmeq.s 			page 15


 392              		.loc 1 361 15 is_stmt 0 view .LVU92
 393 0008 1D4B     		ldr	r3, .L36
 394 000a 0022     		movs	r2, #0
 395 000c 1A70     		strb	r2, [r3]
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin|KEY2_Pin));
 396              		.loc 1 363 2 is_stmt 1 view .LVU93
 397              		.loc 1 363 39 is_stmt 0 view .LVU94
 398 000e 1D4B     		ldr	r3, .L36+4
 399 0010 1869     		ldr	r0, [r3, #16]
 400              	.LVL12:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** 	key1_data = key1_data<<1;      		 //Preparing to read KEY1 Input
 401              		.loc 1 365 2 is_stmt 1 view .LVU95
 402              		.loc 1 365 23 is_stmt 0 view .LVU96
 403 0012 1D4B     		ldr	r3, .L36+8
 404 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 405 0016 5200     		lsls	r2, r2, #1
 406 0018 D2B2     		uxtb	r2, r2
 407              		.loc 1 365 12 view .LVU97
 408 001a 1A70     		strb	r2, [r3]
 366:Core/Src/main.c **** 	key1_data &= 0b00001110;
 409              		.loc 1 366 2 is_stmt 1 view .LVU98
 410              		.loc 1 366 12 is_stmt 0 view .LVU99
 411 001c 02F00E02 		and	r2, r2, #14
 412 0020 1A70     		strb	r2, [r3]
 367:Core/Src/main.c **** 	key1_data |= ((key_pindata>>2) & 0x1);			 // Read KEY1 Input
 413              		.loc 1 367 2 is_stmt 1 view .LVU100
 414              		.loc 1 367 33 is_stmt 0 view .LVU101
 415 0022 C0F38001 		ubfx	r1, r0, #2, #1
 416              		.loc 1 367 12 view .LVU102
 417 0026 0A43     		orrs	r2, r2, r1
 418 0028 1A70     		strb	r2, [r3]
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** 	key2_data = key2_data<<1;		 //Preparing to read KEY2 Input
 419              		.loc 1 369 2 is_stmt 1 view .LVU103
 420              		.loc 1 369 23 is_stmt 0 view .LVU104
 421 002a 1849     		ldr	r1, .L36+12
 422 002c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 423 002e 5B00     		lsls	r3, r3, #1
 424 0030 DBB2     		uxtb	r3, r3
 425              		.loc 1 369 12 view .LVU105
 426 0032 0B70     		strb	r3, [r1]
 370:Core/Src/main.c **** 	key2_data &= 0b00001110;
 427              		.loc 1 370 2 is_stmt 1 view .LVU106
 428              		.loc 1 370 12 is_stmt 0 view .LVU107
 429 0034 03F00E03 		and	r3, r3, #14
 430 0038 0B70     		strb	r3, [r1]
 371:Core/Src/main.c **** 	key2_data |= (key_pindata>>3);    		 // Read KEY2 Input
 431              		.loc 1 371 2 is_stmt 1 view .LVU108
 432              		.loc 1 371 12 is_stmt 0 view .LVU109
 433 003a C0F3C000 		ubfx	r0, r0, #3, #1
 434              	.LVL13:
 435              		.loc 1 371 12 view .LVU110
 436 003e 0343     		orrs	r3, r3, r0
 437 0040 0B70     		strb	r3, [r1]
 372:Core/Src/main.c **** 
ARM GAS  /tmp/ccQwYmeq.s 			page 16


 373:Core/Src/main.c **** 	if(key1_data == KEY_PRESSED)    	 // Checking if KEY1 is pressed
 438              		.loc 1 373 2 is_stmt 1 view .LVU111
 439              		.loc 1 373 4 is_stmt 0 view .LVU112
 440 0042 0C2A     		cmp	r2, #12
 441 0044 08D0     		beq	.L32
 374:Core/Src/main.c **** 	{
 375:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY1_PRESSED) ; // Store the event in buffer
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** 	}else if(key1_data == KEY_RELEASED)		//  Checking if KEY1 is released
 442              		.loc 1 377 8 is_stmt 1 view .LVU113
 443              		.loc 1 377 10 is_stmt 0 view .LVU114
 444 0046 032A     		cmp	r2, #3
 445 0048 0BD0     		beq	.L33
 446              	.L29:
 378:Core/Src/main.c **** 	{
 379:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY1_RELEASED); // Store the event in buffer
 380:Core/Src/main.c **** 	}
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** 	if(key2_data == KEY_PRESSED)		// Checking if KEY2 is pressed
 447              		.loc 1 382 2 is_stmt 1 view .LVU115
 448              		.loc 1 382 15 is_stmt 0 view .LVU116
 449 004a 104B     		ldr	r3, .L36+12
 450 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451              		.loc 1 382 4 view .LVU117
 452 004e 0C2B     		cmp	r3, #12
 453 0050 0CD0     		beq	.L34
 383:Core/Src/main.c **** 	{
 384:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY2_PRESSED); // Store the event in buffer
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** 	}else if(key2_data == KEY_RELEASED)		//  Checking if KEY2 is released
 454              		.loc 1 386 8 is_stmt 1 view .LVU118
 455              		.loc 1 386 10 is_stmt 0 view .LVU119
 456 0052 032B     		cmp	r3, #3
 457 0054 0FD0     		beq	.L35
 458              	.L26:
 387:Core/Src/main.c **** 	{
 388:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY2_RELEASED); // Store the event in buffer
 389:Core/Src/main.c **** 	}
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** }
 459              		.loc 1 391 1 view .LVU120
 460 0056 08BD     		pop	{r3, pc}
 461              	.L32:
 375:Core/Src/main.c **** 
 462              		.loc 1 375 3 is_stmt 1 view .LVU121
 463 0058 0121     		movs	r1, #1
 464 005a 0D48     		ldr	r0, .L36+16
 465 005c FFF7FEFF 		bl	buffer_push
 466              	.LVL14:
 467 0060 F3E7     		b	.L29
 468              	.L33:
 379:Core/Src/main.c **** 	}
 469              		.loc 1 379 3 view .LVU122
 470 0062 0321     		movs	r1, #3
 471 0064 0A48     		ldr	r0, .L36+16
 472 0066 FFF7FEFF 		bl	buffer_push
 473              	.LVL15:
ARM GAS  /tmp/ccQwYmeq.s 			page 17


 474 006a EEE7     		b	.L29
 475              	.L34:
 384:Core/Src/main.c **** 
 476              		.loc 1 384 3 view .LVU123
 477 006c 0221     		movs	r1, #2
 478 006e 0848     		ldr	r0, .L36+16
 479 0070 FFF7FEFF 		bl	buffer_push
 480              	.LVL16:
 481 0074 EFE7     		b	.L26
 482              	.L35:
 388:Core/Src/main.c **** 	}
 483              		.loc 1 388 3 view .LVU124
 484 0076 0421     		movs	r1, #4
 485 0078 0548     		ldr	r0, .L36+16
 486 007a FFF7FEFF 		bl	buffer_push
 487              	.LVL17:
 488 007e EAE7     		b	.L26
 489              	.L37:
 490              		.align	2
 491              	.L36:
 492 0080 00000000 		.word	.LANCHOR11
 493 0084 00180240 		.word	1073879040
 494 0088 00000000 		.word	.LANCHOR13
 495 008c 00000000 		.word	.LANCHOR14
 496 0090 00000000 		.word	.LANCHOR15
 497              		.cfi_endproc
 498              	.LFE135:
 500              		.section	.text.RS485_Read_Message,"ax",%progbits
 501              		.align	1
 502              		.global	RS485_Read_Message
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 506              		.fpu fpv4-sp-d16
 508              	RS485_Read_Message:
 509              	.LFB137:
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** void main_task(void)
 395:Core/Src/main.c **** {
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** 	if (event_buffer.head!=event_buffer.tail){
 398:Core/Src/main.c **** 		if (!f_busy){
 399:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 400:Core/Src/main.c **** 		}
 401:Core/Src/main.c **** 	}
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** 	switch(state)
 404:Core/Src/main.c **** 	{
 405:Core/Src/main.c **** 		case STATE_WAITING_RESPOND:
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** 			switch(event)
 408:Core/Src/main.c **** 				{
 409:Core/Src/main.c **** 					case EVENT_KEY1_PRESSED:
 410:Core/Src/main.c **** 						digit1++;
 411:Core/Src/main.c **** 						
 412:Core/Src/main.c ****                			 if (digit1>9){
ARM GAS  /tmp/ccQwYmeq.s 			page 18


 413:Core/Src/main.c ****                			   digit1=0;
 414:Core/Src/main.c ****                			 }
 415:Core/Src/main.c **** 						TX_msg[0]=0x1;
 416:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 417:Core/Src/main.c **** 						TX_msg[2]=digit1;
 418:Core/Src/main.c **** 						//f_busy=1;
 419:Core/Src/main.c **** 						RS485_Send_Message();
 420:Core/Src/main.c **** 						//state = STATE_SENDING_REQUEST;
 421:Core/Src/main.c **** 						event= EVENT_RESET;
 422:Core/Src/main.c **** 						break;
 423:Core/Src/main.c **** 					
 424:Core/Src/main.c **** 					case EVENT_KEY2_PRESSED:
 425:Core/Src/main.c **** 						digit2++;
 426:Core/Src/main.c **** 						if (digit2>15){
 427:Core/Src/main.c ****                  		 digit2=10;
 428:Core/Src/main.c ****                			 }	
 429:Core/Src/main.c **** 						TX_msg[0]=0x2;
 430:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 431:Core/Src/main.c **** 						TX_msg[2]=digit2;
 432:Core/Src/main.c **** 
 433:Core/Src/main.c **** 						//f_busy=1;
 434:Core/Src/main.c **** 						RS485_Send_Message();
 435:Core/Src/main.c **** 						//state = STATE_SENDING_REQUEST;
 436:Core/Src/main.c **** 						event= EVENT_RESET;
 437:Core/Src/main.c **** 												
 438:Core/Src/main.c **** 						break;
 439:Core/Src/main.c **** 					case EVENT_RX_COMPLETE:
 440:Core/Src/main.c **** 						RS485_Read_Message();
 441:Core/Src/main.c **** 						//event= EVENT_RESET;
 442:Core/Src/main.c **** 						//f_busy=1;
 443:Core/Src/main.c **** 						//state = STATE_READ_MESSAGE;						
 444:Core/Src/main.c **** 						break;
 445:Core/Src/main.c **** 					
 446:Core/Src/main.c **** 				}
 447:Core/Src/main.c **** 			break;
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** 		case STATE_SENDING_REQUEST:
 450:Core/Src/main.c **** 			RS485_Send_Message();
 451:Core/Src/main.c **** 			state= STATE_WAITING_RESPOND;
 452:Core/Src/main.c **** 			f_busy=0;
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** 			break;
 455:Core/Src/main.c **** 		case STATE_READ_MESSAGE:
 456:Core/Src/main.c **** 
 457:Core/Src/main.c **** 			RS485_Read_Message();
 458:Core/Src/main.c **** 			//f_busy=0;
 459:Core/Src/main.c **** 			state= STATE_WAITING_RESPOND;
 460:Core/Src/main.c **** 			event= EVENT_RESET;
 461:Core/Src/main.c **** 			break;
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** 	
 464:Core/Src/main.c **** 	}
 465:Core/Src/main.c **** 
 466:Core/Src/main.c **** }
 467:Core/Src/main.c **** 
 468:Core/Src/main.c **** /*
 469:Core/Src/main.c **** void TX1_delay_update(void){
ARM GAS  /tmp/ccQwYmeq.s 			page 19


 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** 	if (TX1_delay_val==50) return;
 472:Core/Src/main.c **** 
 473:Core/Src/main.c **** 	TX1_delay_val-=50;
 474:Core/Src/main.c **** }
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** void TX2_delay_update(void){
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** 	if (TX2_delay_val==50) return;
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** 	TX2_delay_val-=50;
 481:Core/Src/main.c **** }
 482:Core/Src/main.c **** 
 483:Core/Src/main.c **** */
 484:Core/Src/main.c **** 
 485:Core/Src/main.c **** void RS485_Read_Message(void){
 510              		.loc 1 485 30 view -0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   
 488:Core/Src/main.c ****   //if (transmission_f) return;
 489:Core/Src/main.c ****   if(rx2_buffer.tail==rx2_buffer.head) return;
 514              		.loc 1 489 3 view .LVU126
 515              		.loc 1 489 16 is_stmt 0 view .LVU127
 516 0000 094B     		ldr	r3, .L45
 517 0002 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 518              		.loc 1 489 33 view .LVU128
 519 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 520              		.loc 1 489 5 view .LVU129
 521 0006 9A42     		cmp	r2, r3
 522 0008 0DD0     		beq	.L41
 485:Core/Src/main.c **** 
 523              		.loc 1 485 30 view .LVU130
 524 000a 10B5     		push	{r4, lr}
 525              	.LCFI3:
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 4, -8
 528              		.cfi_offset 14, -4
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   buffer_to_message(&rx2_buffer, RX_msg);
 529              		.loc 1 491 3 is_stmt 1 view .LVU131
 530 000c 074C     		ldr	r4, .L45+4
 531 000e 2146     		mov	r1, r4
 532 0010 0548     		ldr	r0, .L45
 533 0012 FFF7FEFF 		bl	buffer_to_message
 534              	.LVL18:
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****  // if (check_checksum(&RX_msg)==CHECKSUM_ERROR) return;
 494:Core/Src/main.c ****   if (RX_msg[0]== 0x1) {
 535              		.loc 1 494 3 view .LVU132
 495:Core/Src/main.c **** 	//digit=&digit1;
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   }else if(RX_msg[0]== 0x2){
 498:Core/Src/main.c **** 	//digit=&digit2;
 499:Core/Src/main.c **** 
ARM GAS  /tmp/ccQwYmeq.s 			page 20


 500:Core/Src/main.c ****   }
 536              		.loc 1 500 3 view .LVU133
 501:Core/Src/main.c **** /*
 502:Core/Src/main.c ****   if (RX_msg.function_code == FUNC_READ)
 503:Core/Src/main.c ****   {
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   }
 506:Core/Src/main.c ****   */
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****    if (RX_msg[1] == FUNC_WRITE)
 537              		.loc 1 508 4 view .LVU134
 538              		.loc 1 508 14 is_stmt 0 view .LVU135
 539 0016 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 540              		.loc 1 508 7 view .LVU136
 541 0018 012B     		cmp	r3, #1
 542 001a 00D0     		beq	.L44
 543              	.L38:
 509:Core/Src/main.c ****   { 
 510:Core/Src/main.c ****     	//*digit= RX_msg[2];
 511:Core/Src/main.c **** 		digit1=RX_msg[2];
 512:Core/Src/main.c **** 	
 513:Core/Src/main.c ****   }
 514:Core/Src/main.c ****   
 515:Core/Src/main.c **** }
 544              		.loc 1 515 1 view .LVU137
 545 001c 10BD     		pop	{r4, pc}
 546              	.L44:
 511:Core/Src/main.c **** 	
 547              		.loc 1 511 3 is_stmt 1 view .LVU138
 511:Core/Src/main.c **** 	
 548              		.loc 1 511 16 is_stmt 0 view .LVU139
 549 001e A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 511:Core/Src/main.c **** 	
 550              		.loc 1 511 9 view .LVU140
 551 0020 034B     		ldr	r3, .L45+8
 552 0022 1A70     		strb	r2, [r3]
 553 0024 FAE7     		b	.L38
 554              	.L41:
 555              	.LCFI4:
 556              		.cfi_def_cfa_offset 0
 557              		.cfi_restore 4
 558              		.cfi_restore 14
 559 0026 7047     		bx	lr
 560              	.L46:
 561              		.align	2
 562              	.L45:
 563 0028 00000000 		.word	.LANCHOR16
 564 002c 00000000 		.word	.LANCHOR17
 565 0030 00000000 		.word	.LANCHOR8
 566              		.cfi_endproc
 567              	.LFE137:
 569              		.section	.text.RS485_Send_Message,"ax",%progbits
 570              		.align	1
 571              		.global	RS485_Send_Message
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
ARM GAS  /tmp/ccQwYmeq.s 			page 21


 575              		.fpu fpv4-sp-d16
 577              	RS485_Send_Message:
 578              	.LFB138:
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** void RS485_Send_Message(void)
 518:Core/Src/main.c **** {
 579              		.loc 1 518 1 is_stmt 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583 0000 38B5     		push	{r3, r4, r5, lr}
 584              	.LCFI5:
 585              		.cfi_def_cfa_offset 16
 586              		.cfi_offset 3, -16
 587              		.cfi_offset 4, -12
 588              		.cfi_offset 5, -8
 589              		.cfi_offset 14, -4
 519:Core/Src/main.c **** 
 520:Core/Src/main.c **** 	
 521:Core/Src/main.c **** 	
 522:Core/Src/main.c ****    //uint8_t *pbuf_tx = (uint8_t *)&msg; 
 523:Core/Src/main.c ****    HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 590              		.loc 1 523 4 view .LVU142
 591 0002 104D     		ldr	r5, .L49
 592 0004 0122     		movs	r2, #1
 593 0006 4FF48051 		mov	r1, #4096
 594 000a 2846     		mov	r0, r5
 595 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 596              	.LVL19:
 524:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,&start_cmd,1,10);
 597              		.loc 1 524 4 view .LVU143
 598 0010 0D4C     		ldr	r4, .L49+4
 599 0012 0A23     		movs	r3, #10
 600 0014 0122     		movs	r2, #1
 601 0016 0D49     		ldr	r1, .L49+8
 602 0018 2046     		mov	r0, r4
 603 001a FFF7FEFF 		bl	HAL_UART_Transmit
 604              	.LVL20:
 525:Core/Src/main.c ****   
 526:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,TX_msg,sizeof(TX_msg),10);
 605              		.loc 1 526 4 view .LVU144
 606 001e 0A23     		movs	r3, #10
 607 0020 0422     		movs	r2, #4
 608 0022 0B49     		ldr	r1, .L49+12
 609 0024 2046     		mov	r0, r4
 610 0026 FFF7FEFF 		bl	HAL_UART_Transmit
 611              	.LVL21:
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,&stop_cmd,1,10);
 612              		.loc 1 528 4 view .LVU145
 613 002a 0A23     		movs	r3, #10
 614 002c 0122     		movs	r2, #1
 615 002e 0949     		ldr	r1, .L49+16
 616 0030 2046     		mov	r0, r4
 617 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 618              	.LVL22:
 529:Core/Src/main.c ****   
ARM GAS  /tmp/ccQwYmeq.s 			page 22


 530:Core/Src/main.c ****    HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 619              		.loc 1 530 4 view .LVU146
 620 0036 0022     		movs	r2, #0
 621 0038 4FF48051 		mov	r1, #4096
 622 003c 2846     		mov	r0, r5
 623 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 624              	.LVL23:
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** }
 625              		.loc 1 532 1 is_stmt 0 view .LVU147
 626 0042 38BD     		pop	{r3, r4, r5, pc}
 627              	.L50:
 628              		.align	2
 629              	.L49:
 630 0044 00000240 		.word	1073872896
 631 0048 00000000 		.word	huart4
 632 004c 00000000 		.word	.LANCHOR18
 633 0050 00000000 		.word	.LANCHOR19
 634 0054 00000000 		.word	.LANCHOR20
 635              		.cfi_endproc
 636              	.LFE138:
 638              		.section	.text.main_task,"ax",%progbits
 639              		.align	1
 640              		.global	main_task
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu fpv4-sp-d16
 646              	main_task:
 647              	.LFB136:
 395:Core/Src/main.c **** 
 648              		.loc 1 395 1 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652 0000 08B5     		push	{r3, lr}
 653              	.LCFI6:
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 3, -8
 656              		.cfi_offset 14, -4
 397:Core/Src/main.c **** 		if (!f_busy){
 657              		.loc 1 397 2 view .LVU149
 397:Core/Src/main.c **** 		if (!f_busy){
 658              		.loc 1 397 18 is_stmt 0 view .LVU150
 659 0002 304B     		ldr	r3, .L63
 660 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 397:Core/Src/main.c **** 		if (!f_busy){
 661              		.loc 1 397 37 view .LVU151
 662 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 397:Core/Src/main.c **** 		if (!f_busy){
 663              		.loc 1 397 5 view .LVU152
 664 0008 9A42     		cmp	r2, r3
 665 000a 02D0     		beq	.L52
 398:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 666              		.loc 1 398 3 is_stmt 1 view .LVU153
 398:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 667              		.loc 1 398 7 is_stmt 0 view .LVU154
ARM GAS  /tmp/ccQwYmeq.s 			page 23


 668 000c 2E4B     		ldr	r3, .L63+4
 669 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 398:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 670              		.loc 1 398 6 view .LVU155
 671 0010 3BB1     		cbz	r3, .L61
 672              	.L52:
 403:Core/Src/main.c **** 	{
 673              		.loc 1 403 2 is_stmt 1 view .LVU156
 674 0012 2E4B     		ldr	r3, .L63+8
 675 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 676 0016 012B     		cmp	r3, #1
 677 0018 43D0     		beq	.L53
 678 001a 022B     		cmp	r3, #2
 679 001c 49D0     		beq	.L54
 680 001e 33B1     		cbz	r3, .L62
 681              	.L51:
 466:Core/Src/main.c **** 
 682              		.loc 1 466 1 is_stmt 0 view .LVU157
 683 0020 08BD     		pop	{r3, pc}
 684              	.L61:
 399:Core/Src/main.c **** 		}
 685              		.loc 1 399 3 is_stmt 1 view .LVU158
 399:Core/Src/main.c **** 		}
 686              		.loc 1 399 11 is_stmt 0 view .LVU159
 687 0022 2848     		ldr	r0, .L63
 688 0024 FFF7FEFF 		bl	buffer_pop
 689              	.LVL24:
 399:Core/Src/main.c **** 		}
 690              		.loc 1 399 9 view .LVU160
 691 0028 294B     		ldr	r3, .L63+12
 692 002a 1870     		strb	r0, [r3]
 693 002c F1E7     		b	.L52
 694              	.L62:
 407:Core/Src/main.c **** 				{
 695              		.loc 1 407 4 is_stmt 1 view .LVU161
 696 002e 284B     		ldr	r3, .L63+12
 697 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 698 0032 022B     		cmp	r3, #2
 699 0034 1AD0     		beq	.L56
 700 0036 052B     		cmp	r3, #5
 701 0038 30D0     		beq	.L57
 702 003a 012B     		cmp	r3, #1
 703 003c F0D1     		bne	.L51
 410:Core/Src/main.c **** 						
 704              		.loc 1 410 7 view .LVU162
 410:Core/Src/main.c **** 						
 705              		.loc 1 410 13 is_stmt 0 view .LVU163
 706 003e 254A     		ldr	r2, .L63+16
 707 0040 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 708 0042 0133     		adds	r3, r3, #1
 709 0044 DBB2     		uxtb	r3, r3
 710 0046 1370     		strb	r3, [r2]
 412:Core/Src/main.c ****                			   digit1=0;
 711              		.loc 1 412 20 is_stmt 1 view .LVU164
 412:Core/Src/main.c ****                			   digit1=0;
 712              		.loc 1 412 23 is_stmt 0 view .LVU165
 713 0048 092B     		cmp	r3, #9
ARM GAS  /tmp/ccQwYmeq.s 			page 24


 714 004a 02D9     		bls	.L58
 413:Core/Src/main.c ****                			 }
 715              		.loc 1 413 22 is_stmt 1 view .LVU166
 413:Core/Src/main.c ****                			 }
 716              		.loc 1 413 28 is_stmt 0 view .LVU167
 717 004c 1346     		mov	r3, r2
 718 004e 0022     		movs	r2, #0
 719 0050 1A70     		strb	r2, [r3]
 720              	.L58:
 415:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 721              		.loc 1 415 7 is_stmt 1 view .LVU168
 415:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 722              		.loc 1 415 16 is_stmt 0 view .LVU169
 723 0052 214B     		ldr	r3, .L63+20
 724 0054 0122     		movs	r2, #1
 725 0056 1A70     		strb	r2, [r3]
 416:Core/Src/main.c **** 						TX_msg[2]=digit1;
 726              		.loc 1 416 7 is_stmt 1 view .LVU170
 416:Core/Src/main.c **** 						TX_msg[2]=digit1;
 727              		.loc 1 416 16 is_stmt 0 view .LVU171
 728 0058 5A70     		strb	r2, [r3, #1]
 417:Core/Src/main.c **** 						//f_busy=1;
 729              		.loc 1 417 7 is_stmt 1 view .LVU172
 417:Core/Src/main.c **** 						//f_busy=1;
 730              		.loc 1 417 16 is_stmt 0 view .LVU173
 731 005a 1E4A     		ldr	r2, .L63+16
 732 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 733 005e 9A70     		strb	r2, [r3, #2]
 419:Core/Src/main.c **** 						//state = STATE_SENDING_REQUEST;
 734              		.loc 1 419 7 is_stmt 1 view .LVU174
 735 0060 FFF7FEFF 		bl	RS485_Send_Message
 736              	.LVL25:
 421:Core/Src/main.c **** 						break;
 737              		.loc 1 421 7 view .LVU175
 421:Core/Src/main.c **** 						break;
 738              		.loc 1 421 12 is_stmt 0 view .LVU176
 739 0064 1A4B     		ldr	r3, .L63+12
 740 0066 0022     		movs	r2, #0
 741 0068 1A70     		strb	r2, [r3]
 422:Core/Src/main.c **** 					
 742              		.loc 1 422 7 is_stmt 1 view .LVU177
 743 006a D9E7     		b	.L51
 744              	.L56:
 425:Core/Src/main.c **** 						if (digit2>15){
 745              		.loc 1 425 7 view .LVU178
 425:Core/Src/main.c **** 						if (digit2>15){
 746              		.loc 1 425 13 is_stmt 0 view .LVU179
 747 006c 1B4A     		ldr	r2, .L63+24
 748 006e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 749 0070 0133     		adds	r3, r3, #1
 750 0072 DBB2     		uxtb	r3, r3
 751 0074 1370     		strb	r3, [r2]
 426:Core/Src/main.c ****                  		 digit2=10;
 752              		.loc 1 426 7 is_stmt 1 view .LVU180
 426:Core/Src/main.c ****                  		 digit2=10;
 753              		.loc 1 426 10 is_stmt 0 view .LVU181
 754 0076 0F2B     		cmp	r3, #15
ARM GAS  /tmp/ccQwYmeq.s 			page 25


 755 0078 02D9     		bls	.L59
 427:Core/Src/main.c ****                			 }	
 756              		.loc 1 427 21 is_stmt 1 view .LVU182
 427:Core/Src/main.c ****                			 }	
 757              		.loc 1 427 27 is_stmt 0 view .LVU183
 758 007a 1346     		mov	r3, r2
 759 007c 0A22     		movs	r2, #10
 760 007e 1A70     		strb	r2, [r3]
 761              	.L59:
 429:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 762              		.loc 1 429 7 is_stmt 1 view .LVU184
 429:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 763              		.loc 1 429 16 is_stmt 0 view .LVU185
 764 0080 154B     		ldr	r3, .L63+20
 765 0082 0222     		movs	r2, #2
 766 0084 1A70     		strb	r2, [r3]
 430:Core/Src/main.c **** 						TX_msg[2]=digit2;
 767              		.loc 1 430 7 is_stmt 1 view .LVU186
 430:Core/Src/main.c **** 						TX_msg[2]=digit2;
 768              		.loc 1 430 16 is_stmt 0 view .LVU187
 769 0086 0122     		movs	r2, #1
 770 0088 5A70     		strb	r2, [r3, #1]
 431:Core/Src/main.c **** 
 771              		.loc 1 431 7 is_stmt 1 view .LVU188
 431:Core/Src/main.c **** 
 772              		.loc 1 431 16 is_stmt 0 view .LVU189
 773 008a 144A     		ldr	r2, .L63+24
 774 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 775 008e 9A70     		strb	r2, [r3, #2]
 434:Core/Src/main.c **** 						//state = STATE_SENDING_REQUEST;
 776              		.loc 1 434 7 is_stmt 1 view .LVU190
 777 0090 FFF7FEFF 		bl	RS485_Send_Message
 778              	.LVL26:
 436:Core/Src/main.c **** 												
 779              		.loc 1 436 7 view .LVU191
 436:Core/Src/main.c **** 												
 780              		.loc 1 436 12 is_stmt 0 view .LVU192
 781 0094 0E4B     		ldr	r3, .L63+12
 782 0096 0022     		movs	r2, #0
 783 0098 1A70     		strb	r2, [r3]
 438:Core/Src/main.c **** 					case EVENT_RX_COMPLETE:
 784              		.loc 1 438 7 is_stmt 1 view .LVU193
 785 009a C1E7     		b	.L51
 786              	.L57:
 440:Core/Src/main.c **** 						//event= EVENT_RESET;
 787              		.loc 1 440 7 view .LVU194
 788 009c FFF7FEFF 		bl	RS485_Read_Message
 789              	.LVL27:
 444:Core/Src/main.c **** 					
 790              		.loc 1 444 7 view .LVU195
 791 00a0 BEE7     		b	.L51
 792              	.L53:
 450:Core/Src/main.c **** 			state= STATE_WAITING_RESPOND;
 793              		.loc 1 450 4 view .LVU196
 794 00a2 FFF7FEFF 		bl	RS485_Send_Message
 795              	.LVL28:
 451:Core/Src/main.c **** 			f_busy=0;
ARM GAS  /tmp/ccQwYmeq.s 			page 26


 796              		.loc 1 451 4 view .LVU197
 451:Core/Src/main.c **** 			f_busy=0;
 797              		.loc 1 451 9 is_stmt 0 view .LVU198
 798 00a6 0023     		movs	r3, #0
 799 00a8 084A     		ldr	r2, .L63+8
 800 00aa 1370     		strb	r3, [r2]
 452:Core/Src/main.c **** 
 801              		.loc 1 452 4 is_stmt 1 view .LVU199
 452:Core/Src/main.c **** 
 802              		.loc 1 452 10 is_stmt 0 view .LVU200
 803 00ac 064A     		ldr	r2, .L63+4
 804 00ae 1370     		strb	r3, [r2]
 454:Core/Src/main.c **** 		case STATE_READ_MESSAGE:
 805              		.loc 1 454 4 is_stmt 1 view .LVU201
 806 00b0 B6E7     		b	.L51
 807              	.L54:
 457:Core/Src/main.c **** 			//f_busy=0;
 808              		.loc 1 457 4 view .LVU202
 809 00b2 FFF7FEFF 		bl	RS485_Read_Message
 810              	.LVL29:
 459:Core/Src/main.c **** 			event= EVENT_RESET;
 811              		.loc 1 459 4 view .LVU203
 459:Core/Src/main.c **** 			event= EVENT_RESET;
 812              		.loc 1 459 9 is_stmt 0 view .LVU204
 813 00b6 0023     		movs	r3, #0
 814 00b8 044A     		ldr	r2, .L63+8
 815 00ba 1370     		strb	r3, [r2]
 460:Core/Src/main.c **** 			break;
 816              		.loc 1 460 4 is_stmt 1 view .LVU205
 460:Core/Src/main.c **** 			break;
 817              		.loc 1 460 9 is_stmt 0 view .LVU206
 818 00bc 044A     		ldr	r2, .L63+12
 819 00be 1370     		strb	r3, [r2]
 461:Core/Src/main.c **** 
 820              		.loc 1 461 4 is_stmt 1 view .LVU207
 466:Core/Src/main.c **** 
 821              		.loc 1 466 1 is_stmt 0 view .LVU208
 822 00c0 AEE7     		b	.L51
 823              	.L64:
 824 00c2 00BF     		.align	2
 825              	.L63:
 826 00c4 00000000 		.word	.LANCHOR15
 827 00c8 00000000 		.word	.LANCHOR21
 828 00cc 00000000 		.word	.LANCHOR23
 829 00d0 00000000 		.word	.LANCHOR22
 830 00d4 00000000 		.word	.LANCHOR8
 831 00d8 00000000 		.word	.LANCHOR19
 832 00dc 00000000 		.word	.LANCHOR6
 833              		.cfi_endproc
 834              	.LFE136:
 836              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 837              		.align	1
 838              		.global	HAL_TIM_PeriodElapsedCallback
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 842              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccQwYmeq.s 			page 27


 844              	HAL_TIM_PeriodElapsedCallback:
 845              	.LVL30:
 846              	.LFB139:
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** 
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 537:Core/Src/main.c **** {
 847              		.loc 1 537 1 is_stmt 1 view -0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 538:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****    if(htim == &htim4)
 852              		.loc 1 540 4 view .LVU210
 853              		.loc 1 540 6 is_stmt 0 view .LVU211
 854 0000 034B     		ldr	r3, .L68
 855 0002 8342     		cmp	r3, r0
 856 0004 00D0     		beq	.L67
 857              	.L65:
 541:Core/Src/main.c ****   {
 542:Core/Src/main.c **** 	  f_timer_10ms=1;
 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   }
 545:Core/Src/main.c **** }
 858              		.loc 1 545 1 view .LVU212
 859 0006 7047     		bx	lr
 860              	.L67:
 542:Core/Src/main.c **** 
 861              		.loc 1 542 4 is_stmt 1 view .LVU213
 542:Core/Src/main.c **** 
 862              		.loc 1 542 16 is_stmt 0 view .LVU214
 863 0008 024B     		ldr	r3, .L68+4
 864 000a 0122     		movs	r2, #1
 865 000c 1A70     		strb	r2, [r3]
 866              		.loc 1 545 1 view .LVU215
 867 000e FAE7     		b	.L65
 868              	.L69:
 869              		.align	2
 870              	.L68:
 871 0010 00000000 		.word	htim4
 872 0014 00000000 		.word	.LANCHOR9
 873              		.cfi_endproc
 874              	.LFE139:
 876              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 877              		.align	1
 878              		.global	HAL_UART_RxCpltCallback
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu fpv4-sp-d16
 884              	HAL_UART_RxCpltCallback:
 885              	.LVL31:
 886              	.LFB140:
 546:Core/Src/main.c **** 
ARM GAS  /tmp/ccQwYmeq.s 			page 28


 547:Core/Src/main.c **** 
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 550:Core/Src/main.c **** {
 887              		.loc 1 550 1 is_stmt 1 view -0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              		.loc 1 550 1 is_stmt 0 view .LVU217
 892 0000 08B5     		push	{r3, lr}
 893              	.LCFI7:
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 3, -8
 896              		.cfi_offset 14, -4
 551:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 552:Core/Src/main.c **** 
 553:Core/Src/main.c **** 	 if(huart == &huart4)
 897              		.loc 1 553 3 is_stmt 1 view .LVU218
 898              		.loc 1 553 5 is_stmt 0 view .LVU219
 899 0002 114B     		ldr	r3, .L80
 900 0004 8342     		cmp	r3, r0
 901 0006 00D0     		beq	.L76
 902              	.LVL32:
 903              	.L70:
 554:Core/Src/main.c **** 	{
 555:Core/Src/main.c **** 		if (rx_temp==0x2)
 556:Core/Src/main.c **** 		{		//digit1= 0;
 557:Core/Src/main.c **** 				transmission_f=1;
 558:Core/Src/main.c **** 		}
 559:Core/Src/main.c **** 		else if (rx_temp==0x3)
 560:Core/Src/main.c **** 		{		//digit1= 2;
 561:Core/Src/main.c **** 				transmission_f=0;
 562:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 563:Core/Src/main.c **** 		}
 564:Core/Src/main.c **** 		else{
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** 			if (transmission_f)
 567:Core/Src/main.c **** 			{
 568:Core/Src/main.c **** 				 buffer_push(&rx2_buffer,rx_temp);
 569:Core/Src/main.c **** 			}
 570:Core/Src/main.c **** 		}
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 573:Core/Src/main.c ****     }
 574:Core/Src/main.c ****   
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** }
 904              		.loc 1 576 1 view .LVU220
 905 0008 08BD     		pop	{r3, pc}
 906              	.LVL33:
 907              	.L76:
 555:Core/Src/main.c **** 		{		//digit1= 0;
 908              		.loc 1 555 3 is_stmt 1 view .LVU221
 555:Core/Src/main.c **** 		{		//digit1= 0;
 909              		.loc 1 555 14 is_stmt 0 view .LVU222
 910 000a 104B     		ldr	r3, .L80+4
 911 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccQwYmeq.s 			page 29


 555:Core/Src/main.c **** 		{		//digit1= 0;
 912              		.loc 1 555 6 view .LVU223
 913 000e 0229     		cmp	r1, #2
 914 0010 0AD0     		beq	.L77
 559:Core/Src/main.c **** 		{		//digit1= 2;
 915              		.loc 1 559 8 is_stmt 1 view .LVU224
 559:Core/Src/main.c **** 		{		//digit1= 2;
 916              		.loc 1 559 11 is_stmt 0 view .LVU225
 917 0012 0329     		cmp	r1, #3
 918 0014 0CD0     		beq	.L78
 566:Core/Src/main.c **** 			{
 919              		.loc 1 566 4 is_stmt 1 view .LVU226
 566:Core/Src/main.c **** 			{
 920              		.loc 1 566 8 is_stmt 0 view .LVU227
 921 0016 0E4B     		ldr	r3, .L80+8
 922 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 566:Core/Src/main.c **** 			{
 923              		.loc 1 566 7 view .LVU228
 924 001a 8BB9     		cbnz	r3, .L79
 925              	.LVL34:
 926              	.L73:
 572:Core/Src/main.c ****     }
 927              		.loc 1 572 3 is_stmt 1 view .LVU229
 928 001c 0122     		movs	r2, #1
 929 001e 0B49     		ldr	r1, .L80+4
 930 0020 0948     		ldr	r0, .L80
 931 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 932              	.LVL35:
 933              		.loc 1 576 1 is_stmt 0 view .LVU230
 934 0026 EFE7     		b	.L70
 935              	.LVL36:
 936              	.L77:
 557:Core/Src/main.c **** 		}
 937              		.loc 1 557 5 is_stmt 1 view .LVU231
 557:Core/Src/main.c **** 		}
 938              		.loc 1 557 19 is_stmt 0 view .LVU232
 939 0028 094B     		ldr	r3, .L80+8
 940 002a 0122     		movs	r2, #1
 941 002c 1A70     		strb	r2, [r3]
 942 002e F5E7     		b	.L73
 943              	.L78:
 561:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 944              		.loc 1 561 5 is_stmt 1 view .LVU233
 561:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 945              		.loc 1 561 19 is_stmt 0 view .LVU234
 946 0030 074B     		ldr	r3, .L80+8
 947 0032 0022     		movs	r2, #0
 948 0034 1A70     		strb	r2, [r3]
 562:Core/Src/main.c **** 		}
 949              		.loc 1 562 5 is_stmt 1 view .LVU235
 950 0036 0521     		movs	r1, #5
 951 0038 0648     		ldr	r0, .L80+12
 952              	.LVL37:
 562:Core/Src/main.c **** 		}
 953              		.loc 1 562 5 is_stmt 0 view .LVU236
 954 003a FFF7FEFF 		bl	buffer_push
 955              	.LVL38:
ARM GAS  /tmp/ccQwYmeq.s 			page 30


 956 003e EDE7     		b	.L73
 957              	.LVL39:
 958              	.L79:
 568:Core/Src/main.c **** 			}
 959              		.loc 1 568 6 is_stmt 1 view .LVU237
 960 0040 0548     		ldr	r0, .L80+16
 961              	.LVL40:
 568:Core/Src/main.c **** 			}
 962              		.loc 1 568 6 is_stmt 0 view .LVU238
 963 0042 FFF7FEFF 		bl	buffer_push
 964              	.LVL41:
 965 0046 E9E7     		b	.L73
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0048 00000000 		.word	huart4
 970 004c 00000000 		.word	.LANCHOR24
 971 0050 00000000 		.word	.LANCHOR25
 972 0054 00000000 		.word	.LANCHOR15
 973 0058 00000000 		.word	.LANCHOR16
 974              		.cfi_endproc
 975              	.LFE140:
 977              		.section	.text.Error_Handler,"ax",%progbits
 978              		.align	1
 979              		.global	Error_Handler
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 983              		.fpu fpv4-sp-d16
 985              	Error_Handler:
 986              	.LFB141:
 577:Core/Src/main.c **** /* USER CODE END 4 */
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /**
 580:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 581:Core/Src/main.c ****   * @retval None
 582:Core/Src/main.c ****   */
 583:Core/Src/main.c **** void Error_Handler(void)
 584:Core/Src/main.c **** {
 987              		.loc 1 584 1 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ Volatile: function does not return.
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              		@ link register save eliminated.
 585:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 586:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 587:Core/Src/main.c ****   __disable_irq();
 993              		.loc 1 587 3 view .LVU240
 994              	.LBB4:
 995              	.LBI4:
 996              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
ARM GAS  /tmp/ccQwYmeq.s 			page 31


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  /tmp/ccQwYmeq.s 			page 32


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /tmp/ccQwYmeq.s 			page 33


 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 997              		.loc 2 140 27 view .LVU241
 998              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 999              		.loc 2 142 3 view .LVU242
 1000              		.syntax unified
 1001              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1002 0000 72B6     		cpsid i
 1003              	@ 0 "" 2
 1004              		.thumb
 1005              		.syntax unified
 1006              	.L83:
 1007              	.LBE5:
 1008              	.LBE4:
 588:Core/Src/main.c ****   while (1)
 1009              		.loc 1 588 3 discriminator 1 view .LVU243
 589:Core/Src/main.c ****   {
 590:Core/Src/main.c ****   }
 1010              		.loc 1 590 3 discriminator 1 view .LVU244
 588:Core/Src/main.c ****   while (1)
 1011              		.loc 1 588 9 discriminator 1 view .LVU245
 1012 0002 FEE7     		b	.L83
 1013              		.cfi_endproc
 1014              	.LFE141:
 1016              		.section	.text.SystemClock_Config,"ax",%progbits
 1017              		.align	1
 1018              		.global	SystemClock_Config
 1019              		.syntax unified
 1020              		.thumb
 1021              		.thumb_func
 1022              		.fpu fpv4-sp-d16
 1024              	SystemClock_Config:
 1025              	.LFB131:
 214:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1026              		.loc 1 214 1 view -0
 1027              		.cfi_startproc
ARM GAS  /tmp/ccQwYmeq.s 			page 34


 1028              		@ args = 0, pretend = 0, frame = 80
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030 0000 00B5     		push	{lr}
 1031              	.LCFI8:
 1032              		.cfi_def_cfa_offset 4
 1033              		.cfi_offset 14, -4
 1034 0002 95B0     		sub	sp, sp, #84
 1035              	.LCFI9:
 1036              		.cfi_def_cfa_offset 88
 215:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1037              		.loc 1 215 3 view .LVU247
 215:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1038              		.loc 1 215 22 is_stmt 0 view .LVU248
 1039 0004 3022     		movs	r2, #48
 1040 0006 0021     		movs	r1, #0
 1041 0008 08A8     		add	r0, sp, #32
 1042 000a FFF7FEFF 		bl	memset
 1043              	.LVL42:
 216:Core/Src/main.c **** 
 1044              		.loc 1 216 3 is_stmt 1 view .LVU249
 216:Core/Src/main.c **** 
 1045              		.loc 1 216 22 is_stmt 0 view .LVU250
 1046 000e 0023     		movs	r3, #0
 1047 0010 0393     		str	r3, [sp, #12]
 1048 0012 0493     		str	r3, [sp, #16]
 1049 0014 0593     		str	r3, [sp, #20]
 1050 0016 0693     		str	r3, [sp, #24]
 1051 0018 0793     		str	r3, [sp, #28]
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1052              		.loc 1 220 3 is_stmt 1 view .LVU251
 1053              	.LBB6:
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1054              		.loc 1 220 3 view .LVU252
 1055 001a 0193     		str	r3, [sp, #4]
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1056              		.loc 1 220 3 view .LVU253
 1057 001c 204A     		ldr	r2, .L90
 1058 001e 116C     		ldr	r1, [r2, #64]
 1059 0020 41F08051 		orr	r1, r1, #268435456
 1060 0024 1164     		str	r1, [r2, #64]
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1061              		.loc 1 220 3 view .LVU254
 1062 0026 126C     		ldr	r2, [r2, #64]
 1063 0028 02F08052 		and	r2, r2, #268435456
 1064 002c 0192     		str	r2, [sp, #4]
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1065              		.loc 1 220 3 view .LVU255
 1066 002e 019A     		ldr	r2, [sp, #4]
 1067              	.LBE6:
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1068              		.loc 1 220 3 view .LVU256
 221:Core/Src/main.c **** 
 1069              		.loc 1 221 3 view .LVU257
 1070              	.LBB7:
 221:Core/Src/main.c **** 
 1071              		.loc 1 221 3 view .LVU258
 1072 0030 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccQwYmeq.s 			page 35


 221:Core/Src/main.c **** 
 1073              		.loc 1 221 3 view .LVU259
 1074 0032 1C4A     		ldr	r2, .L90+4
 1075 0034 1368     		ldr	r3, [r2]
 1076 0036 23F44043 		bic	r3, r3, #49152
 1077 003a 43F48043 		orr	r3, r3, #16384
 1078 003e 1360     		str	r3, [r2]
 221:Core/Src/main.c **** 
 1079              		.loc 1 221 3 view .LVU260
 1080 0040 1368     		ldr	r3, [r2]
 1081 0042 03F44043 		and	r3, r3, #49152
 1082 0046 0293     		str	r3, [sp, #8]
 221:Core/Src/main.c **** 
 1083              		.loc 1 221 3 view .LVU261
 1084 0048 029B     		ldr	r3, [sp, #8]
 1085              	.LBE7:
 221:Core/Src/main.c **** 
 1086              		.loc 1 221 3 view .LVU262
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1087              		.loc 1 226 3 view .LVU263
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1088              		.loc 1 226 36 is_stmt 0 view .LVU264
 1089 004a 0123     		movs	r3, #1
 1090 004c 0893     		str	r3, [sp, #32]
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1091              		.loc 1 227 3 is_stmt 1 view .LVU265
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1092              		.loc 1 227 30 is_stmt 0 view .LVU266
 1093 004e 4FF48033 		mov	r3, #65536
 1094 0052 0993     		str	r3, [sp, #36]
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1095              		.loc 1 228 3 is_stmt 1 view .LVU267
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1096              		.loc 1 228 34 is_stmt 0 view .LVU268
 1097 0054 0223     		movs	r3, #2
 1098 0056 0E93     		str	r3, [sp, #56]
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1099              		.loc 1 229 3 is_stmt 1 view .LVU269
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1100              		.loc 1 229 35 is_stmt 0 view .LVU270
 1101 0058 4FF48002 		mov	r2, #4194304
 1102 005c 0F92     		str	r2, [sp, #60]
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1103              		.loc 1 230 3 is_stmt 1 view .LVU271
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1104              		.loc 1 230 30 is_stmt 0 view .LVU272
 1105 005e 0422     		movs	r2, #4
 1106 0060 1092     		str	r2, [sp, #64]
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1107              		.loc 1 231 3 is_stmt 1 view .LVU273
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1108              		.loc 1 231 30 is_stmt 0 view .LVU274
 1109 0062 6022     		movs	r2, #96
 1110 0064 1192     		str	r2, [sp, #68]
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1111              		.loc 1 232 3 is_stmt 1 view .LVU275
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
ARM GAS  /tmp/ccQwYmeq.s 			page 36


 1112              		.loc 1 232 30 is_stmt 0 view .LVU276
 1113 0066 1293     		str	r3, [sp, #72]
 233:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1114              		.loc 1 233 3 is_stmt 1 view .LVU277
 233:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1115              		.loc 1 233 30 is_stmt 0 view .LVU278
 1116 0068 0323     		movs	r3, #3
 1117 006a 1393     		str	r3, [sp, #76]
 234:Core/Src/main.c ****   {
 1118              		.loc 1 234 3 is_stmt 1 view .LVU279
 234:Core/Src/main.c ****   {
 1119              		.loc 1 234 7 is_stmt 0 view .LVU280
 1120 006c 08A8     		add	r0, sp, #32
 1121 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1122              	.LVL43:
 234:Core/Src/main.c ****   {
 1123              		.loc 1 234 6 view .LVU281
 1124 0072 88B9     		cbnz	r0, .L88
 241:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1125              		.loc 1 241 3 is_stmt 1 view .LVU282
 241:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1126              		.loc 1 241 31 is_stmt 0 view .LVU283
 1127 0074 0F23     		movs	r3, #15
 1128 0076 0393     		str	r3, [sp, #12]
 243:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1129              		.loc 1 243 3 is_stmt 1 view .LVU284
 243:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1130              		.loc 1 243 34 is_stmt 0 view .LVU285
 1131 0078 0223     		movs	r3, #2
 1132 007a 0493     		str	r3, [sp, #16]
 244:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1133              		.loc 1 244 3 is_stmt 1 view .LVU286
 244:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1134              		.loc 1 244 35 is_stmt 0 view .LVU287
 1135 007c 8023     		movs	r3, #128
 1136 007e 0593     		str	r3, [sp, #20]
 245:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1137              		.loc 1 245 3 is_stmt 1 view .LVU288
 245:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1138              		.loc 1 245 36 is_stmt 0 view .LVU289
 1139 0080 4FF48053 		mov	r3, #4096
 1140 0084 0693     		str	r3, [sp, #24]
 246:Core/Src/main.c **** 
 1141              		.loc 1 246 3 is_stmt 1 view .LVU290
 246:Core/Src/main.c **** 
 1142              		.loc 1 246 36 is_stmt 0 view .LVU291
 1143 0086 0793     		str	r3, [sp, #28]
 248:Core/Src/main.c ****   {
 1144              		.loc 1 248 3 is_stmt 1 view .LVU292
 248:Core/Src/main.c ****   {
 1145              		.loc 1 248 7 is_stmt 0 view .LVU293
 1146 0088 0121     		movs	r1, #1
 1147 008a 03A8     		add	r0, sp, #12
 1148 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1149              	.LVL44:
 248:Core/Src/main.c ****   {
 1150              		.loc 1 248 6 view .LVU294
ARM GAS  /tmp/ccQwYmeq.s 			page 37


 1151 0090 20B9     		cbnz	r0, .L89
 252:Core/Src/main.c **** 
 1152              		.loc 1 252 1 view .LVU295
 1153 0092 15B0     		add	sp, sp, #84
 1154              	.LCFI10:
 1155              		.cfi_remember_state
 1156              		.cfi_def_cfa_offset 4
 1157              		@ sp needed
 1158 0094 5DF804FB 		ldr	pc, [sp], #4
 1159              	.L88:
 1160              	.LCFI11:
 1161              		.cfi_restore_state
 236:Core/Src/main.c ****   }
 1162              		.loc 1 236 5 is_stmt 1 view .LVU296
 1163 0098 FFF7FEFF 		bl	Error_Handler
 1164              	.LVL45:
 1165              	.L89:
 250:Core/Src/main.c ****   }
 1166              		.loc 1 250 5 view .LVU297
 1167 009c FFF7FEFF 		bl	Error_Handler
 1168              	.LVL46:
 1169              	.L91:
 1170              		.align	2
 1171              	.L90:
 1172 00a0 00380240 		.word	1073887232
 1173 00a4 00700040 		.word	1073770496
 1174              		.cfi_endproc
 1175              	.LFE131:
 1177              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1178              		.align	2
 1179              	.LC0:
 1180 0000 54455452 		.ascii	"TETRADYNE\000"
 1180      4144594E 
 1180      4500
 1181 000a 0000     		.align	2
 1182              	.LC1:
 1183 000c 53323A00 		.ascii	"S2:\000"
 1184              		.align	2
 1185              	.LC2:
 1186 0010 53313A00 		.ascii	"S1:\000"
 1187              		.section	.text.main,"ax",%progbits
 1188              		.align	1
 1189              		.global	main
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1193              		.fpu fpv4-sp-d16
 1195              	main:
 1196              	.LFB130:
 140:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1197              		.loc 1 140 1 view -0
 1198              		.cfi_startproc
 1199              		@ Volatile: function does not return.
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202 0000 08B5     		push	{r3, lr}
 1203              	.LCFI12:
ARM GAS  /tmp/ccQwYmeq.s 			page 38


 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 3, -8
 1206              		.cfi_offset 14, -4
 148:Core/Src/main.c **** 
 1207              		.loc 1 148 3 view .LVU299
 1208 0002 FFF7FEFF 		bl	HAL_Init
 1209              	.LVL47:
 155:Core/Src/main.c **** 
 1210              		.loc 1 155 3 view .LVU300
 1211 0006 FFF7FEFF 		bl	SystemClock_Config
 1212              	.LVL48:
 162:Core/Src/main.c ****   MX_TIM4_Init();
 1213              		.loc 1 162 3 view .LVU301
 1214 000a FFF7FEFF 		bl	MX_GPIO_Init
 1215              	.LVL49:
 163:Core/Src/main.c ****   MX_UART4_Init();
 1216              		.loc 1 163 3 view .LVU302
 1217 000e FFF7FEFF 		bl	MX_TIM4_Init
 1218              	.LVL50:
 164:Core/Src/main.c ****   MX_UART5_Init();
 1219              		.loc 1 164 3 view .LVU303
 1220 0012 FFF7FEFF 		bl	MX_UART4_Init
 1221              	.LVL51:
 165:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1222              		.loc 1 165 3 view .LVU304
 1223 0016 FFF7FEFF 		bl	MX_UART5_Init
 1224              	.LVL52:
 168:Core/Src/main.c **** 
 1225              		.loc 1 168 3 view .LVU305
 1226 001a 2248     		ldr	r0, .L95
 1227 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1228              	.LVL53:
 171:Core/Src/main.c ****   HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 1229              		.loc 1 171 3 view .LVU306
 1230 0020 0022     		movs	r2, #0
 1231 0022 4FF48051 		mov	r1, #4096
 1232 0026 2048     		ldr	r0, .L95+4
 1233 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1234              	.LVL54:
 172:Core/Src/main.c **** 
 1235              		.loc 1 172 3 view .LVU307
 1236 002c 0022     		movs	r2, #0
 1237 002e 0221     		movs	r1, #2
 1238 0030 1E48     		ldr	r0, .L95+8
 1239 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1240              	.LVL55:
 174:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1241              		.loc 1 174 3 view .LVU308
 174:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1242              		.loc 1 174 59 is_stmt 0 view .LVU309
 1243 0036 1E4B     		ldr	r3, .L95+12
 1244 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 174:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1245              		.loc 1 174 3 view .LVU310
 1246 003a 1344     		add	r3, r3, r2
 1247 003c 0122     		movs	r2, #1
 1248 003e 991C     		adds	r1, r3, #2
ARM GAS  /tmp/ccQwYmeq.s 			page 39


 1249 0040 1C48     		ldr	r0, .L95+16
 1250 0042 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1251              	.LVL56:
 175:Core/Src/main.c **** 
 1252              		.loc 1 175 3 is_stmt 1 view .LVU311
 175:Core/Src/main.c **** 
 1253              		.loc 1 175 59 is_stmt 0 view .LVU312
 1254 0046 1C4B     		ldr	r3, .L95+20
 1255 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 175:Core/Src/main.c **** 
 1256              		.loc 1 175 3 view .LVU313
 1257 004a 1344     		add	r3, r3, r2
 1258 004c 0122     		movs	r2, #1
 1259 004e 991C     		adds	r1, r3, #2
 1260 0050 1A48     		ldr	r0, .L95+24
 1261 0052 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1262              	.LVL57:
 177:Core/Src/main.c ****   digit2=16;
 1263              		.loc 1 177 3 is_stmt 1 view .LVU314
 177:Core/Src/main.c ****   digit2=16;
 1264              		.loc 1 177 9 is_stmt 0 view .LVU315
 1265 0056 1023     		movs	r3, #16
 1266 0058 194A     		ldr	r2, .L95+28
 1267 005a 1370     		strb	r3, [r2]
 178:Core/Src/main.c **** 
 1268              		.loc 1 178 3 is_stmt 1 view .LVU316
 178:Core/Src/main.c **** 
 1269              		.loc 1 178 9 is_stmt 0 view .LVU317
 1270 005c 194A     		ldr	r2, .L95+32
 1271 005e 1370     		strb	r3, [r2]
 181:Core/Src/main.c ****   lcd_clear();
 1272              		.loc 1 181 3 is_stmt 1 view .LVU318
 1273 0060 FFF7FEFF 		bl	lcd_init
 1274              	.LVL58:
 182:Core/Src/main.c ****   lcd_set_pos(0, 3);
 1275              		.loc 1 182 3 view .LVU319
 1276 0064 FFF7FEFF 		bl	lcd_clear
 1277              	.LVL59:
 183:Core/Src/main.c ****   lcd_write_string("TETRADYNE");
 1278              		.loc 1 183 3 view .LVU320
 1279 0068 0321     		movs	r1, #3
 1280 006a 0020     		movs	r0, #0
 1281 006c FFF7FEFF 		bl	lcd_set_pos
 1282              	.LVL60:
 184:Core/Src/main.c ****   lcd_set_pos(1, 0);
 1283              		.loc 1 184 3 view .LVU321
 1284 0070 1548     		ldr	r0, .L95+36
 1285 0072 FFF7FEFF 		bl	lcd_write_string
 1286              	.LVL61:
 185:Core/Src/main.c ****   lcd_write_string("S2:");
 1287              		.loc 1 185 3 view .LVU322
 1288 0076 0021     		movs	r1, #0
 1289 0078 0120     		movs	r0, #1
 1290 007a FFF7FEFF 		bl	lcd_set_pos
 1291              	.LVL62:
 186:Core/Src/main.c ****   lcd_set_pos(1, 0xC);
 1292              		.loc 1 186 3 view .LVU323
ARM GAS  /tmp/ccQwYmeq.s 			page 40


 1293 007e 1348     		ldr	r0, .L95+40
 1294 0080 FFF7FEFF 		bl	lcd_write_string
 1295              	.LVL63:
 187:Core/Src/main.c ****   lcd_write_string("S1:");
 1296              		.loc 1 187 3 view .LVU324
 1297 0084 0C21     		movs	r1, #12
 1298 0086 0120     		movs	r0, #1
 1299 0088 FFF7FEFF 		bl	lcd_set_pos
 1300              	.LVL64:
 188:Core/Src/main.c ****   /* USER CODE END 2 */
 1301              		.loc 1 188 3 view .LVU325
 1302 008c 1048     		ldr	r0, .L95+44
 1303 008e FFF7FEFF 		bl	lcd_write_string
 1304              	.LVL65:
 1305              	.L93:
 193:Core/Src/main.c ****   {
 1306              		.loc 1 193 3 discriminator 1 view .LVU326
 199:Core/Src/main.c **** 	  	     ///segment_display_task();
 1307              		.loc 1 199 9 discriminator 1 view .LVU327
 1308 0092 FFF7FEFF 		bl	task_timer
 1309              	.LVL66:
 201:Core/Src/main.c **** 	  	     key_read_task();
 1310              		.loc 1 201 10 discriminator 1 view .LVU328
 1311 0096 FFF7FEFF 		bl	lcd_display_task
 1312              	.LVL67:
 202:Core/Src/main.c **** 
 1313              		.loc 1 202 10 discriminator 1 view .LVU329
 1314 009a FFF7FEFF 		bl	key_read_task
 1315              	.LVL68:
 204:Core/Src/main.c ****   }
 1316              		.loc 1 204 10 discriminator 1 view .LVU330
 1317 009e FFF7FEFF 		bl	main_task
 1318              	.LVL69:
 193:Core/Src/main.c ****   {
 1319              		.loc 1 193 9 discriminator 1 view .LVU331
 1320 00a2 F6E7     		b	.L93
 1321              	.L96:
 1322              		.align	2
 1323              	.L95:
 1324 00a4 00000000 		.word	htim4
 1325 00a8 00000240 		.word	1073872896
 1326 00ac 000C0240 		.word	1073875968
 1327 00b0 00000000 		.word	.LANCHOR26
 1328 00b4 00000000 		.word	huart4
 1329 00b8 00000000 		.word	.LANCHOR16
 1330 00bc 00000000 		.word	huart5
 1331 00c0 00000000 		.word	.LANCHOR8
 1332 00c4 00000000 		.word	.LANCHOR6
 1333 00c8 00000000 		.word	.LC0
 1334 00cc 0C000000 		.word	.LC1
 1335 00d0 10000000 		.word	.LC2
 1336              		.cfi_endproc
 1337              	.LFE130:
 1339              		.global	RX_msg
 1340              		.global	TX_msg
 1341              		.global	ID
 1342              		.global	event_buffer
ARM GAS  /tmp/ccQwYmeq.s 			page 41


 1343              		.global	rx2_buffer
 1344              		.global	rx1_buffer
 1345              		.global	stop_cmd
 1346              		.global	start_cmd
 1347              		.global	transmission_f
 1348              		.global	rx_temp
 1349              		.global	digit_table
 1350              		.global	lcd_process
 1351              		.global	data
 1352              		.global	cmd
 1353              		.global	digit2_update
 1354              		.global	digit1_update
 1355              		.global	lcd_digit1_f
 1356              		.global	is_EN
 1357              		.global	digit2
 1358              		.global	digit1
 1359              		.global	flag_state_tx
 1360              		.global	flag_state_tx1
 1361              		.global	uart_tx2_flag
 1362              		.global	uart_tx1_flag
 1363              		.global	lcd_disp_lock
 1364              		.global	event
 1365              		.global	state
 1366              		.global	key2_data
 1367              		.global	key1_data
 1368              		.global	TX2_delay_val
 1369              		.global	d_timer_TX2
 1370              		.global	TX1_delay_val
 1371              		.global	d_timer_TX1
 1372              		.global	d_timer_20ms
 1373              		.global	d_timer_30ms
 1374              		.global	tx1_buffer
 1375              		.global	tx2_buffer
 1376              		.global	flag_digit_1
 1377              		.global	p_tx2
 1378              		.global	p_tx1
 1379              		.global	i
 1380              		.global	f_timer_30ms
 1381              		.global	f_timer_20ms
 1382              		.global	f_timer_10ms
 1383              		.global	f_seg_timer_500ms
 1384              		.global	f_timer_TX
 1385              		.global	f_busy
 1386              		.section	.bss.ID,"aw",%nobits
 1389              	ID:
 1390 0000 00       		.space	1
 1391              		.section	.bss.RX_msg,"aw",%nobits
 1392              		.align	2
 1393              		.set	.LANCHOR17,. + 0
 1396              	RX_msg:
 1397 0000 00000000 		.space	4
 1398              		.section	.bss.TX_msg,"aw",%nobits
 1399              		.align	2
 1400              		.set	.LANCHOR19,. + 0
 1403              	TX_msg:
 1404 0000 00000000 		.space	4
 1405              		.section	.bss.cmd,"aw",%nobits
ARM GAS  /tmp/ccQwYmeq.s 			page 42


 1406              		.set	.LANCHOR4,. + 0
 1409              	cmd:
 1410 0000 00       		.space	1
 1411              		.section	.bss.d_timer_20ms,"aw",%nobits
 1412              		.set	.LANCHOR12,. + 0
 1415              	d_timer_20ms:
 1416 0000 00       		.space	1
 1417              		.section	.bss.d_timer_30ms,"aw",%nobits
 1418              		.set	.LANCHOR10,. + 0
 1421              	d_timer_30ms:
 1422 0000 00       		.space	1
 1423              		.section	.bss.d_timer_TX1,"aw",%nobits
 1426              	d_timer_TX1:
 1427 0000 00       		.space	1
 1428              		.section	.bss.d_timer_TX2,"aw",%nobits
 1431              	d_timer_TX2:
 1432 0000 00       		.space	1
 1433              		.section	.bss.data,"aw",%nobits
 1434              		.set	.LANCHOR7,. + 0
 1437              	data:
 1438 0000 00       		.space	1
 1439              		.section	.bss.digit1,"aw",%nobits
 1440              		.set	.LANCHOR8,. + 0
 1443              	digit1:
 1444 0000 00       		.space	1
 1445              		.section	.bss.digit1_update,"aw",%nobits
 1448              	digit1_update:
 1449 0000 00       		.space	1
 1450              		.section	.bss.digit2,"aw",%nobits
 1451              		.set	.LANCHOR6,. + 0
 1454              	digit2:
 1455 0000 00       		.space	1
 1456              		.section	.bss.digit2_update,"aw",%nobits
 1459              	digit2_update:
 1460 0000 00       		.space	1
 1461              		.section	.bss.event,"aw",%nobits
 1462              		.set	.LANCHOR22,. + 0
 1465              	event:
 1466 0000 00       		.space	1
 1467              		.section	.bss.event_buffer,"aw",%nobits
 1468              		.align	2
 1469              		.set	.LANCHOR15,. + 0
 1472              	event_buffer:
 1473 0000 00000000 		.space	66
 1473      00000000 
 1473      00000000 
 1473      00000000 
 1473      00000000 
 1474              		.section	.bss.f_busy,"aw",%nobits
 1475              		.set	.LANCHOR21,. + 0
 1478              	f_busy:
 1479 0000 00       		.space	1
 1480              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 1483              	f_seg_timer_500ms:
 1484 0000 00       		.space	1
 1485              		.section	.bss.f_timer_10ms,"aw",%nobits
 1486              		.set	.LANCHOR9,. + 0
ARM GAS  /tmp/ccQwYmeq.s 			page 43


 1489              	f_timer_10ms:
 1490 0000 00       		.space	1
 1491              		.section	.bss.f_timer_20ms,"aw",%nobits
 1492              		.set	.LANCHOR0,. + 0
 1495              	f_timer_20ms:
 1496 0000 00       		.space	1
 1497              		.section	.bss.f_timer_30ms,"aw",%nobits
 1498              		.set	.LANCHOR11,. + 0
 1501              	f_timer_30ms:
 1502 0000 00       		.space	1
 1503              		.section	.bss.f_timer_TX,"aw",%nobits
 1506              	f_timer_TX:
 1507 0000 00       		.space	1
 1508              		.section	.bss.flag_state_tx,"aw",%nobits
 1511              	flag_state_tx:
 1512 0000 00       		.space	1
 1513              		.section	.bss.flag_state_tx1,"aw",%nobits
 1516              	flag_state_tx1:
 1517 0000 00       		.space	1
 1518              		.section	.bss.i,"aw",%nobits
 1521              	i:
 1522 0000 00       		.space	1
 1523              		.section	.bss.is_EN,"aw",%nobits
 1524              		.set	.LANCHOR1,. + 0
 1527              	is_EN:
 1528 0000 00       		.space	1
 1529              		.section	.bss.key1_data,"aw",%nobits
 1530              		.set	.LANCHOR13,. + 0
 1533              	key1_data:
 1534 0000 00       		.space	1
 1535              		.section	.bss.key2_data,"aw",%nobits
 1536              		.set	.LANCHOR14,. + 0
 1539              	key2_data:
 1540 0000 00       		.space	1
 1541              		.section	.bss.lcd_digit1_f,"aw",%nobits
 1542              		.set	.LANCHOR3,. + 0
 1545              	lcd_digit1_f:
 1546 0000 00       		.space	1
 1547              		.section	.bss.lcd_disp_lock,"aw",%nobits
 1550              	lcd_disp_lock:
 1551 0000 00       		.space	1
 1552              		.section	.bss.lcd_process,"aw",%nobits
 1553              		.set	.LANCHOR2,. + 0
 1556              	lcd_process:
 1557 0000 00       		.space	1
 1558              		.section	.bss.p_tx1,"aw",%nobits
 1561              	p_tx1:
 1562 0000 00       		.space	1
 1563              		.section	.bss.p_tx2,"aw",%nobits
 1566              	p_tx2:
 1567 0000 00       		.space	1
 1568              		.section	.bss.rx1_buffer,"aw",%nobits
 1569              		.align	2
 1570              		.set	.LANCHOR26,. + 0
 1573              	rx1_buffer:
 1574 0000 00000000 		.space	66
 1574      00000000 
ARM GAS  /tmp/ccQwYmeq.s 			page 44


 1574      00000000 
 1574      00000000 
 1574      00000000 
 1575              		.section	.bss.rx2_buffer,"aw",%nobits
 1576              		.align	2
 1577              		.set	.LANCHOR16,. + 0
 1580              	rx2_buffer:
 1581 0000 00000000 		.space	66
 1581      00000000 
 1581      00000000 
 1581      00000000 
 1581      00000000 
 1582              		.section	.bss.rx_temp,"aw",%nobits
 1583              		.set	.LANCHOR24,. + 0
 1586              	rx_temp:
 1587 0000 00       		.space	1
 1588              		.section	.bss.state,"aw",%nobits
 1589              		.set	.LANCHOR23,. + 0
 1592              	state:
 1593 0000 00       		.space	1
 1594              		.section	.bss.transmission_f,"aw",%nobits
 1595              		.set	.LANCHOR25,. + 0
 1598              	transmission_f:
 1599 0000 00       		.space	1
 1600              		.section	.bss.uart_tx1_flag,"aw",%nobits
 1603              	uart_tx1_flag:
 1604 0000 00       		.space	1
 1605              		.section	.bss.uart_tx2_flag,"aw",%nobits
 1608              	uart_tx2_flag:
 1609 0000 00       		.space	1
 1610              		.section	.data.TX1_delay_val,"aw"
 1613              	TX1_delay_val:
 1614 0000 FA       		.byte	-6
 1615              		.section	.data.TX2_delay_val,"aw"
 1618              	TX2_delay_val:
 1619 0000 FA       		.byte	-6
 1620              		.section	.data.digit_table,"aw"
 1621              		.align	2
 1622              		.set	.LANCHOR5,. + 0
 1625              	digit_table:
 1626 0000 30313233 		.ascii	"0123456789abcdef-"
 1626      34353637 
 1626      38396162 
 1626      63646566 
 1626      2D
 1627              		.section	.data.flag_digit_1,"aw"
 1630              	flag_digit_1:
 1631 0000 01       		.byte	1
 1632              		.section	.data.start_cmd,"aw"
 1633              		.set	.LANCHOR18,. + 0
 1636              	start_cmd:
 1637 0000 02       		.byte	2
 1638              		.section	.data.stop_cmd,"aw"
 1639              		.set	.LANCHOR20,. + 0
 1642              	stop_cmd:
 1643 0000 03       		.byte	3
 1644              		.section	.data.tx1_buffer,"aw"
ARM GAS  /tmp/ccQwYmeq.s 			page 45


 1645              		.align	2
 1648              	tx1_buffer:
 1649 0000 61626364 		.ascii	"abcdef"
 1649      6566
 1650              		.section	.data.tx2_buffer,"aw"
 1651              		.align	2
 1654              	tx2_buffer:
 1655 0000 31323334 		.ascii	"123456789\000"
 1655      35363738 
 1655      3900
 1656              		.text
 1657              	.Letext0:
 1658              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1659              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1660              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1661              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1662              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1663              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1664              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1665              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1666              		.file 11 "Core/Inc/tim.h"
 1667              		.file 12 "Core/Inc/usart.h"
 1668              		.file 13 "Core/Inc/buffer.h"
 1669              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1670              		.file 15 "Core/Inc/message.h"
 1671              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1672              		.file 17 "Core/Inc/gpio.h"
 1673              		.file 18 "Core/Inc/lcd16x2.h"
 1674              		.file 19 "<built-in>"
ARM GAS  /tmp/ccQwYmeq.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccQwYmeq.s:18     .text.m_send_to_lcd:0000000000000000 $t
     /tmp/ccQwYmeq.s:26     .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/ccQwYmeq.s:122    .text.m_send_to_lcd:0000000000000068 $d
     /tmp/ccQwYmeq.s:131    .text.lcd_display_task:0000000000000000 $t
     /tmp/ccQwYmeq.s:138    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/ccQwYmeq.s:177    .text.lcd_display_task:0000000000000026 $d
     /tmp/ccQwYmeq.s:181    .text.lcd_display_task:000000000000002a $t
     /tmp/ccQwYmeq.s:268    .text.lcd_display_task:000000000000009c $d
     /tmp/ccQwYmeq.s:280    .text.task_timer:0000000000000000 $t
     /tmp/ccQwYmeq.s:287    .text.task_timer:0000000000000000 task_timer
     /tmp/ccQwYmeq.s:358    .text.task_timer:0000000000000048 $d
     /tmp/ccQwYmeq.s:367    .text.key_read_task:0000000000000000 $t
     /tmp/ccQwYmeq.s:374    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccQwYmeq.s:492    .text.key_read_task:0000000000000080 $d
     /tmp/ccQwYmeq.s:501    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccQwYmeq.s:508    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccQwYmeq.s:563    .text.RS485_Read_Message:0000000000000028 $d
     /tmp/ccQwYmeq.s:570    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccQwYmeq.s:577    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccQwYmeq.s:630    .text.RS485_Send_Message:0000000000000044 $d
     /tmp/ccQwYmeq.s:639    .text.main_task:0000000000000000 $t
     /tmp/ccQwYmeq.s:646    .text.main_task:0000000000000000 main_task
     /tmp/ccQwYmeq.s:826    .text.main_task:00000000000000c4 $d
     /tmp/ccQwYmeq.s:837    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccQwYmeq.s:844    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccQwYmeq.s:871    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccQwYmeq.s:877    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccQwYmeq.s:884    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccQwYmeq.s:969    .text.HAL_UART_RxCpltCallback:0000000000000048 $d
     /tmp/ccQwYmeq.s:978    .text.Error_Handler:0000000000000000 $t
     /tmp/ccQwYmeq.s:985    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccQwYmeq.s:1017   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccQwYmeq.s:1024   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccQwYmeq.s:1172   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccQwYmeq.s:1178   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccQwYmeq.s:1188   .text.main:0000000000000000 $t
     /tmp/ccQwYmeq.s:1195   .text.main:0000000000000000 main
     /tmp/ccQwYmeq.s:1324   .text.main:00000000000000a4 $d
     /tmp/ccQwYmeq.s:1396   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccQwYmeq.s:1403   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccQwYmeq.s:1389   .bss.ID:0000000000000000 ID
     /tmp/ccQwYmeq.s:1472   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccQwYmeq.s:1580   .bss.rx2_buffer:0000000000000000 rx2_buffer
     /tmp/ccQwYmeq.s:1573   .bss.rx1_buffer:0000000000000000 rx1_buffer
     /tmp/ccQwYmeq.s:1642   .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/ccQwYmeq.s:1636   .data.start_cmd:0000000000000000 start_cmd
     /tmp/ccQwYmeq.s:1598   .bss.transmission_f:0000000000000000 transmission_f
     /tmp/ccQwYmeq.s:1586   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccQwYmeq.s:1625   .data.digit_table:0000000000000000 digit_table
     /tmp/ccQwYmeq.s:1556   .bss.lcd_process:0000000000000000 lcd_process
     /tmp/ccQwYmeq.s:1437   .bss.data:0000000000000000 data
     /tmp/ccQwYmeq.s:1409   .bss.cmd:0000000000000000 cmd
     /tmp/ccQwYmeq.s:1459   .bss.digit2_update:0000000000000000 digit2_update
     /tmp/ccQwYmeq.s:1448   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/ccQwYmeq.s:1545   .bss.lcd_digit1_f:0000000000000000 lcd_digit1_f
ARM GAS  /tmp/ccQwYmeq.s 			page 47


     /tmp/ccQwYmeq.s:1527   .bss.is_EN:0000000000000000 is_EN
     /tmp/ccQwYmeq.s:1454   .bss.digit2:0000000000000000 digit2
     /tmp/ccQwYmeq.s:1443   .bss.digit1:0000000000000000 digit1
     /tmp/ccQwYmeq.s:1511   .bss.flag_state_tx:0000000000000000 flag_state_tx
     /tmp/ccQwYmeq.s:1516   .bss.flag_state_tx1:0000000000000000 flag_state_tx1
     /tmp/ccQwYmeq.s:1608   .bss.uart_tx2_flag:0000000000000000 uart_tx2_flag
     /tmp/ccQwYmeq.s:1603   .bss.uart_tx1_flag:0000000000000000 uart_tx1_flag
     /tmp/ccQwYmeq.s:1550   .bss.lcd_disp_lock:0000000000000000 lcd_disp_lock
     /tmp/ccQwYmeq.s:1465   .bss.event:0000000000000000 event
     /tmp/ccQwYmeq.s:1592   .bss.state:0000000000000000 state
     /tmp/ccQwYmeq.s:1539   .bss.key2_data:0000000000000000 key2_data
     /tmp/ccQwYmeq.s:1533   .bss.key1_data:0000000000000000 key1_data
     /tmp/ccQwYmeq.s:1618   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/ccQwYmeq.s:1431   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/ccQwYmeq.s:1613   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/ccQwYmeq.s:1426   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/ccQwYmeq.s:1415   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/ccQwYmeq.s:1421   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccQwYmeq.s:1648   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/ccQwYmeq.s:1654   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/ccQwYmeq.s:1630   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/ccQwYmeq.s:1566   .bss.p_tx2:0000000000000000 p_tx2
     /tmp/ccQwYmeq.s:1561   .bss.p_tx1:0000000000000000 p_tx1
     /tmp/ccQwYmeq.s:1521   .bss.i:0000000000000000 i
     /tmp/ccQwYmeq.s:1501   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccQwYmeq.s:1495   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/ccQwYmeq.s:1489   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccQwYmeq.s:1483   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/ccQwYmeq.s:1506   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/ccQwYmeq.s:1478   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccQwYmeq.s:1390   .bss.ID:0000000000000000 $d
     /tmp/ccQwYmeq.s:1392   .bss.RX_msg:0000000000000000 $d
     /tmp/ccQwYmeq.s:1399   .bss.TX_msg:0000000000000000 $d
     /tmp/ccQwYmeq.s:1410   .bss.cmd:0000000000000000 $d
     /tmp/ccQwYmeq.s:1416   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/ccQwYmeq.s:1422   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccQwYmeq.s:1427   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/ccQwYmeq.s:1432   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/ccQwYmeq.s:1438   .bss.data:0000000000000000 $d
     /tmp/ccQwYmeq.s:1444   .bss.digit1:0000000000000000 $d
     /tmp/ccQwYmeq.s:1449   .bss.digit1_update:0000000000000000 $d
     /tmp/ccQwYmeq.s:1455   .bss.digit2:0000000000000000 $d
     /tmp/ccQwYmeq.s:1460   .bss.digit2_update:0000000000000000 $d
     /tmp/ccQwYmeq.s:1466   .bss.event:0000000000000000 $d
     /tmp/ccQwYmeq.s:1468   .bss.event_buffer:0000000000000000 $d
     /tmp/ccQwYmeq.s:1479   .bss.f_busy:0000000000000000 $d
     /tmp/ccQwYmeq.s:1484   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/ccQwYmeq.s:1490   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccQwYmeq.s:1496   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/ccQwYmeq.s:1502   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccQwYmeq.s:1507   .bss.f_timer_TX:0000000000000000 $d
     /tmp/ccQwYmeq.s:1512   .bss.flag_state_tx:0000000000000000 $d
     /tmp/ccQwYmeq.s:1517   .bss.flag_state_tx1:0000000000000000 $d
     /tmp/ccQwYmeq.s:1522   .bss.i:0000000000000000 $d
     /tmp/ccQwYmeq.s:1528   .bss.is_EN:0000000000000000 $d
     /tmp/ccQwYmeq.s:1534   .bss.key1_data:0000000000000000 $d
     /tmp/ccQwYmeq.s:1540   .bss.key2_data:0000000000000000 $d
ARM GAS  /tmp/ccQwYmeq.s 			page 48


     /tmp/ccQwYmeq.s:1546   .bss.lcd_digit1_f:0000000000000000 $d
     /tmp/ccQwYmeq.s:1551   .bss.lcd_disp_lock:0000000000000000 $d
     /tmp/ccQwYmeq.s:1557   .bss.lcd_process:0000000000000000 $d
     /tmp/ccQwYmeq.s:1562   .bss.p_tx1:0000000000000000 $d
     /tmp/ccQwYmeq.s:1567   .bss.p_tx2:0000000000000000 $d
     /tmp/ccQwYmeq.s:1569   .bss.rx1_buffer:0000000000000000 $d
     /tmp/ccQwYmeq.s:1576   .bss.rx2_buffer:0000000000000000 $d
     /tmp/ccQwYmeq.s:1587   .bss.rx_temp:0000000000000000 $d
     /tmp/ccQwYmeq.s:1593   .bss.state:0000000000000000 $d
     /tmp/ccQwYmeq.s:1599   .bss.transmission_f:0000000000000000 $d
     /tmp/ccQwYmeq.s:1604   .bss.uart_tx1_flag:0000000000000000 $d
     /tmp/ccQwYmeq.s:1609   .bss.uart_tx2_flag:0000000000000000 $d
     /tmp/ccQwYmeq.s:1621   .data.digit_table:0000000000000000 $d
     /tmp/ccQwYmeq.s:1645   .data.tx1_buffer:0000000000000000 $d
     /tmp/ccQwYmeq.s:1651   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
buffer_to_message
HAL_UART_Transmit
huart4
buffer_pop
htim4
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
lcd_clear
lcd_set_pos
lcd_write_string
huart5
