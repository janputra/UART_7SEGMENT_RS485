ARM GAS  /tmp/ccq8Ph0O.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.m_send_to_lcd,"ax",%progbits
  18              		.align	1
  19              		.global	m_send_to_lcd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	m_send_to_lcd:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "message.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccq8Ph0O.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** uint8_t f_busy;
  49:Core/Src/main.c **** unsigned char f_timer_TX=0;
  50:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  51:Core/Src/main.c **** unsigned char f_timer_10ms=0;
  52:Core/Src/main.c **** unsigned char f_timer_20ms=0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** unsigned char f_timer_30ms=0;
  55:Core/Src/main.c **** unsigned char f_timer_50ms=0;
  56:Core/Src/main.c **** unsigned char f_querry=0;
  57:Core/Src/main.c **** unsigned char flag_digit_1=1;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** unsigned char tx2_buffer[10]={"123456789"};
  60:Core/Src/main.c **** unsigned char tx1_buffer[6]={"abcdef"};
  61:Core/Src/main.c **** unsigned char d_timer_30ms;
  62:Core/Src/main.c **** unsigned char d_timer_50ms;
  63:Core/Src/main.c **** unsigned char d_timer_20ms;
  64:Core/Src/main.c **** unsigned char d_timer_TX1;
  65:Core/Src/main.c **** unsigned char TX1_delay_val =250;
  66:Core/Src/main.c **** unsigned char d_timer_TX2;
  67:Core/Src/main.c **** unsigned char TX2_delay_val =250;
  68:Core/Src/main.c **** unsigned char key1_data, key2_data;
  69:Core/Src/main.c **** unsigned char state,event;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** unsigned char digit1,digit2;
  72:Core/Src/main.c **** //flag for LCD
  73:Core/Src/main.c **** unsigned char is_EN=0;
  74:Core/Src/main.c **** unsigned char lcd_digit1_f=0;
  75:Core/Src/main.c **** unsigned char digit1_update = 0;
  76:Core/Src/main.c **** unsigned char digit2_update = 0;
  77:Core/Src/main.c **** unsigned char cmd, data;
  78:Core/Src/main.c **** unsigned char lcd_process=0;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** unsigned char digit_table[17]={"0123456789abcdef-"};
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** uint8_t rx_temp;
  83:Core/Src/main.c **** uint8_t transmission_f;
  84:Core/Src/main.c **** uint8_t start_cmd=0x2;
  85:Core/Src/main.c **** uint8_t stop_cmd=0x3;
  86:Core/Src/main.c **** circular_buffer rx1_buffer;
ARM GAS  /tmp/ccq8Ph0O.s 			page 3


  87:Core/Src/main.c **** circular_buffer rx2_buffer;
  88:Core/Src/main.c **** circular_buffer event_buffer;
  89:Core/Src/main.c **** uint8_t ID;
  90:Core/Src/main.c **** uint8_t TX_msg[4];
  91:Core/Src/main.c **** uint8_t RX_msg[4];
  92:Core/Src/main.c **** /* USER CODE END PV */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  95:Core/Src/main.c **** void SystemClock_Config(void);
  96:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  97:Core/Src/main.c **** void task_timer(void);
  98:Core/Src/main.c **** void counting_task(void);
  99:Core/Src/main.c **** void uart_TX2_task(void);
 100:Core/Src/main.c **** void uart_TX1_task(void);
 101:Core/Src/main.c **** void uart_RX1_task(void);
 102:Core/Src/main.c **** void uart_RX2_task(void);
 103:Core/Src/main.c **** void segment_display_task(void);
 104:Core/Src/main.c **** void lcd_display_task(void);
 105:Core/Src/main.c **** void key_read_task(void);
 106:Core/Src/main.c **** void main_task(void);
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** void seven_segment_driver(char input,char select_digit);
 109:Core/Src/main.c **** void TX1_delay_update(void);
 110:Core/Src/main.c **** void TX2_delay_update(void);
 111:Core/Src/main.c **** void m_send_to_lcd(char data);
 112:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 113:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 114:Core/Src/main.c **** void Set_Receiver_Port1(void);
 115:Core/Src/main.c **** void Set_Receiver_Port2(void);
 116:Core/Src/main.c **** void RS485_Send_Message(void);
 117:Core/Src/main.c **** void RS485_Read_Message(void);
 118:Core/Src/main.c **** /*
 119:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 120:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 121:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 122:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
 123:Core/Src/main.c **** */
 124:Core/Src/main.c **** /* USER CODE END PFP */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 127:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /* USER CODE END 0 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /**
 132:Core/Src/main.c ****   * @brief  The application entry point.
 133:Core/Src/main.c ****   * @retval int
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c **** int main(void)
 136:Core/Src/main.c **** {
 137:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE END 1 */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/ccq8Ph0O.s 			page 4


 144:Core/Src/main.c ****   HAL_Init();
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* USER CODE END Init */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* Configure the system clock */
 151:Core/Src/main.c ****   SystemClock_Config();
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /* USER CODE END SysInit */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* Initialize all configured peripherals */
 158:Core/Src/main.c ****   MX_GPIO_Init();
 159:Core/Src/main.c ****   MX_TIM4_Init();
 160:Core/Src/main.c ****   MX_UART4_Init();
 161:Core/Src/main.c ****   MX_UART5_Init();
 162:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   	
 167:Core/Src/main.c ****   HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0);   // Enable Receiver 1
 168:Core/Src/main.c ****   //HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 171:Core/Src/main.c ****   //HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   digit1=16;
 174:Core/Src/main.c ****   digit2=16;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   lcd_init();
 178:Core/Src/main.c ****   lcd_clear();
 179:Core/Src/main.c ****   lcd_set_pos(0, 3);
 180:Core/Src/main.c ****   lcd_write_string("TETRADYNE");
 181:Core/Src/main.c ****   lcd_set_pos(1, 0);
 182:Core/Src/main.c ****   lcd_write_string("S2:");
 183:Core/Src/main.c ****   lcd_set_pos(1, 0xC);
 184:Core/Src/main.c ****   lcd_write_string("S1:");
 185:Core/Src/main.c ****   /* USER CODE END 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* Infinite loop */
 188:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 189:Core/Src/main.c ****   while (1)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     /* USER CODE END WHILE */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** 	  	  	 task_timer();
 196:Core/Src/main.c **** 	  	     ///segment_display_task();
 197:Core/Src/main.c **** 	  	     lcd_display_task();
 198:Core/Src/main.c **** 	  	     key_read_task();
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** 	  	     main_task();
ARM GAS  /tmp/ccq8Ph0O.s 			page 5


 201:Core/Src/main.c ****   }
 202:Core/Src/main.c ****   /* USER CODE END 3 */
 203:Core/Src/main.c **** }
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** /**
 206:Core/Src/main.c ****   * @brief System Clock Configuration
 207:Core/Src/main.c ****   * @retval None
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c **** void SystemClock_Config(void)
 210:Core/Src/main.c **** {
 211:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 212:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 217:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 220:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 223:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 230:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 238:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 239:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 240:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 241:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     Error_Handler();
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** void lcd_display_task(void){
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** 	if(!lcd_digit1_f){
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** 		 cmd = 0xC3;
ARM GAS  /tmp/ccq8Ph0O.s 			page 6


 258:Core/Src/main.c **** 		 data = digit_table[digit2];
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** 	}else{
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** 		cmd = 0xCF;
 263:Core/Src/main.c ****         data = digit_table[digit1];
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** 	}
 266:Core/Src/main.c **** 	switch(lcd_process){
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** 			case 0:
 269:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 270:Core/Src/main.c **** 					m_send_to_lcd((cmd>>4)&0x0f);
 271:Core/Src/main.c **** 					break;
 272:Core/Src/main.c **** 			case 1:
 273:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 274:Core/Src/main.c **** 					m_send_to_lcd((cmd)&0x0f);
 275:Core/Src/main.c **** 					break;
 276:Core/Src/main.c **** 			case 2:
 277:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 278:Core/Src/main.c **** 					m_send_to_lcd((data>>4)&0x0f);
 279:Core/Src/main.c **** 					break;
 280:Core/Src/main.c **** 			case 3:
 281:Core/Src/main.c **** 					HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 282:Core/Src/main.c **** 					m_send_to_lcd(data&0x0f);
 283:Core/Src/main.c **** 					break;
 284:Core/Src/main.c **** 	}
 285:Core/Src/main.c **** }
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** void m_send_to_lcd(char data)
 289:Core/Src/main.c **** {
  30              		.loc 1 289 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 289 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** 	//writing data to pin PE0~PE3
 292:Core/Src/main.c **** 	GPIOE->ODR =  (GPIOE->ODR & 0xFFFFFFF0) | data;
  40              		.loc 1 292 2 is_stmt 1 view .LVU2
  41              		.loc 1 292 22 is_stmt 0 view .LVU3
  42 0002 194A     		ldr	r2, .L5
  43 0004 5369     		ldr	r3, [r2, #20]
  44              		.loc 1 292 28 view .LVU4
  45 0006 23F00F03 		bic	r3, r3, #15
  46              		.loc 1 292 42 view .LVU5
  47 000a 1843     		orrs	r0, r0, r3
  48              	.LVL1:
  49              		.loc 1 292 13 view .LVU6
  50 000c 5061     		str	r0, [r2, #20]
 293:Core/Src/main.c **** 
ARM GAS  /tmp/ccq8Ph0O.s 			page 7


 294:Core/Src/main.c **** 	if(!f_timer_20ms) return ;
  51              		.loc 1 294 2 is_stmt 1 view .LVU7
  52              		.loc 1 294 5 is_stmt 0 view .LVU8
  53 000e 174B     		ldr	r3, .L5+4
  54 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  55              		.loc 1 294 4 view .LVU9
  56 0012 6BB1     		cbz	r3, .L1
 295:Core/Src/main.c **** 	f_timer_20ms =0;
  57              		.loc 1 295 2 is_stmt 1 view .LVU10
  58              		.loc 1 295 15 is_stmt 0 view .LVU11
  59 0014 154B     		ldr	r3, .L5+4
  60 0016 0022     		movs	r2, #0
  61 0018 1A70     		strb	r2, [r3]
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** 	if (!is_EN){
  62              		.loc 1 297 2 is_stmt 1 view .LVU12
  63              		.loc 1 297 6 is_stmt 0 view .LVU13
  64 001a 154B     		ldr	r3, .L5+8
  65 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66              		.loc 1 297 5 view .LVU14
  67 001e 43B9     		cbnz	r3, .L3
 298:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
  68              		.loc 1 298 3 is_stmt 1 view .LVU15
  69 0020 0122     		movs	r2, #1
  70 0022 2021     		movs	r1, #32
  71 0024 1048     		ldr	r0, .L5
  72 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL2:
 299:Core/Src/main.c **** 		is_EN=1;
  74              		.loc 1 299 3 view .LVU16
  75              		.loc 1 299 8 is_stmt 0 view .LVU17
  76 002a 114B     		ldr	r3, .L5+8
  77 002c 0122     		movs	r2, #1
  78 002e 1A70     		strb	r2, [r3]
  79              	.L1:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** 	}else{
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 304:Core/Src/main.c **** 		is_EN=0;
 305:Core/Src/main.c **** 		lcd_process++;
 306:Core/Src/main.c **** 		if (lcd_process>3){
 307:Core/Src/main.c **** 			lcd_process=0;
 308:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 309:Core/Src/main.c **** 		}
 310:Core/Src/main.c **** 	}
 311:Core/Src/main.c **** }
  80              		.loc 1 311 1 view .LVU18
  81 0030 08BD     		pop	{r3, pc}
  82              	.L3:
 303:Core/Src/main.c **** 		is_EN=0;
  83              		.loc 1 303 3 is_stmt 1 view .LVU19
  84 0032 0022     		movs	r2, #0
  85 0034 2021     		movs	r1, #32
  86 0036 0C48     		ldr	r0, .L5
  87 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL3:
ARM GAS  /tmp/ccq8Ph0O.s 			page 8


 304:Core/Src/main.c **** 		lcd_process++;
  89              		.loc 1 304 3 view .LVU20
 304:Core/Src/main.c **** 		lcd_process++;
  90              		.loc 1 304 8 is_stmt 0 view .LVU21
  91 003c 0C4B     		ldr	r3, .L5+8
  92 003e 0022     		movs	r2, #0
  93 0040 1A70     		strb	r2, [r3]
 305:Core/Src/main.c **** 		if (lcd_process>3){
  94              		.loc 1 305 3 is_stmt 1 view .LVU22
 305:Core/Src/main.c **** 		if (lcd_process>3){
  95              		.loc 1 305 14 is_stmt 0 view .LVU23
  96 0042 0C4A     		ldr	r2, .L5+12
  97 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  98 0046 0133     		adds	r3, r3, #1
  99 0048 DBB2     		uxtb	r3, r3
 100 004a 1370     		strb	r3, [r2]
 306:Core/Src/main.c **** 			lcd_process=0;
 101              		.loc 1 306 3 is_stmt 1 view .LVU24
 306:Core/Src/main.c **** 			lcd_process=0;
 102              		.loc 1 306 6 is_stmt 0 view .LVU25
 103 004c 032B     		cmp	r3, #3
 104 004e EFD9     		bls	.L1
 307:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 105              		.loc 1 307 4 is_stmt 1 view .LVU26
 307:Core/Src/main.c **** 			lcd_digit1_f= (~lcd_digit1_f)&0x1;
 106              		.loc 1 307 15 is_stmt 0 view .LVU27
 107 0050 1346     		mov	r3, r2
 108 0052 0022     		movs	r2, #0
 109 0054 1A70     		strb	r2, [r3]
 308:Core/Src/main.c **** 		}
 110              		.loc 1 308 4 is_stmt 1 view .LVU28
 308:Core/Src/main.c **** 		}
 111              		.loc 1 308 33 is_stmt 0 view .LVU29
 112 0056 084A     		ldr	r2, .L5+16
 113 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 005a 83F00103 		eor	r3, r3, #1
 115 005e 03F00103 		and	r3, r3, #1
 308:Core/Src/main.c **** 		}
 116              		.loc 1 308 16 view .LVU30
 117 0062 1370     		strb	r3, [r2]
 118 0064 E4E7     		b	.L1
 119              	.L6:
 120 0066 00BF     		.align	2
 121              	.L5:
 122 0068 00100240 		.word	1073876992
 123 006c 00000000 		.word	.LANCHOR0
 124 0070 00000000 		.word	.LANCHOR1
 125 0074 00000000 		.word	.LANCHOR2
 126 0078 00000000 		.word	.LANCHOR3
 127              		.cfi_endproc
 128              	.LFE133:
 130              		.section	.text.lcd_display_task,"ax",%progbits
 131              		.align	1
 132              		.global	lcd_display_task
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
ARM GAS  /tmp/ccq8Ph0O.s 			page 9


 136              		.fpu fpv4-sp-d16
 138              	lcd_display_task:
 139              	.LFB132:
 252:Core/Src/main.c **** 
 140              		.loc 1 252 28 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 255:Core/Src/main.c **** 
 149              		.loc 1 255 2 view .LVU32
 255:Core/Src/main.c **** 
 150              		.loc 1 255 5 is_stmt 0 view .LVU33
 151 0002 264B     		ldr	r3, .L17
 152 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 255:Core/Src/main.c **** 
 153              		.loc 1 255 4 view .LVU34
 154 0006 83B9     		cbnz	r3, .L8
 257:Core/Src/main.c **** 		 data = digit_table[digit2];
 155              		.loc 1 257 4 is_stmt 1 view .LVU35
 257:Core/Src/main.c **** 		 data = digit_table[digit2];
 156              		.loc 1 257 8 is_stmt 0 view .LVU36
 157 0008 254B     		ldr	r3, .L17+4
 158 000a C322     		movs	r2, #195
 159 000c 1A70     		strb	r2, [r3]
 258:Core/Src/main.c **** 
 160              		.loc 1 258 4 is_stmt 1 view .LVU37
 258:Core/Src/main.c **** 
 161              		.loc 1 258 22 is_stmt 0 view .LVU38
 162 000e 254B     		ldr	r3, .L17+8
 163 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 164 0012 254A     		ldr	r2, .L17+12
 165 0014 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 258:Core/Src/main.c **** 
 166              		.loc 1 258 9 view .LVU39
 167 0016 254B     		ldr	r3, .L17+16
 168 0018 1A70     		strb	r2, [r3]
 169              	.L9:
 266:Core/Src/main.c **** 
 170              		.loc 1 266 2 is_stmt 1 view .LVU40
 171 001a 254B     		ldr	r3, .L17+20
 172 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173 001e 032B     		cmp	r3, #3
 174 0020 17D8     		bhi	.L7
 175 0022 DFE803F0 		tbb	[pc, r3]
 176              	.L12:
 177 0026 0C       		.byte	(.L15-.L12)/2
 178 0027 17       		.byte	(.L14-.L12)/2
 179 0028 23       		.byte	(.L13-.L12)/2
 180 0029 2E       		.byte	(.L11-.L12)/2
 181              		.p2align 1
 182              	.L8:
 262:Core/Src/main.c ****         data = digit_table[digit1];
ARM GAS  /tmp/ccq8Ph0O.s 			page 10


 183              		.loc 1 262 3 view .LVU41
 262:Core/Src/main.c ****         data = digit_table[digit1];
 184              		.loc 1 262 7 is_stmt 0 view .LVU42
 185 002a 1D4B     		ldr	r3, .L17+4
 186 002c CF22     		movs	r2, #207
 187 002e 1A70     		strb	r2, [r3]
 263:Core/Src/main.c **** 
 188              		.loc 1 263 9 is_stmt 1 view .LVU43
 263:Core/Src/main.c **** 
 189              		.loc 1 263 27 is_stmt 0 view .LVU44
 190 0030 204B     		ldr	r3, .L17+24
 191 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 192 0034 1C4A     		ldr	r2, .L17+12
 193 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 263:Core/Src/main.c **** 
 194              		.loc 1 263 14 view .LVU45
 195 0038 1C4B     		ldr	r3, .L17+16
 196 003a 1A70     		strb	r2, [r3]
 197 003c EDE7     		b	.L9
 198              	.L15:
 269:Core/Src/main.c **** 					m_send_to_lcd((cmd>>4)&0x0f);
 199              		.loc 1 269 6 is_stmt 1 view .LVU46
 200 003e 0022     		movs	r2, #0
 201 0040 1021     		movs	r1, #16
 202 0042 1D48     		ldr	r0, .L17+28
 203 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL4:
 270:Core/Src/main.c **** 					break;
 205              		.loc 1 270 6 view .LVU47
 206 0048 154B     		ldr	r3, .L17+4
 207 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 208 004c 0009     		lsrs	r0, r0, #4
 209 004e FFF7FEFF 		bl	m_send_to_lcd
 210              	.LVL5:
 271:Core/Src/main.c **** 			case 1:
 211              		.loc 1 271 6 view .LVU48
 212              	.L7:
 285:Core/Src/main.c **** 
 213              		.loc 1 285 1 is_stmt 0 view .LVU49
 214 0052 08BD     		pop	{r3, pc}
 215              	.L14:
 273:Core/Src/main.c **** 					m_send_to_lcd((cmd)&0x0f);
 216              		.loc 1 273 6 is_stmt 1 view .LVU50
 217 0054 0022     		movs	r2, #0
 218 0056 1021     		movs	r1, #16
 219 0058 1748     		ldr	r0, .L17+28
 220 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 221              	.LVL6:
 274:Core/Src/main.c **** 					break;
 222              		.loc 1 274 6 view .LVU51
 274:Core/Src/main.c **** 					break;
 223              		.loc 1 274 25 is_stmt 0 view .LVU52
 224 005e 104B     		ldr	r3, .L17+4
 225 0060 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 274:Core/Src/main.c **** 					break;
 226              		.loc 1 274 6 view .LVU53
 227 0062 00F00F00 		and	r0, r0, #15
ARM GAS  /tmp/ccq8Ph0O.s 			page 11


 228 0066 FFF7FEFF 		bl	m_send_to_lcd
 229              	.LVL7:
 275:Core/Src/main.c **** 			case 2:
 230              		.loc 1 275 6 is_stmt 1 view .LVU54
 231 006a F2E7     		b	.L7
 232              	.L13:
 277:Core/Src/main.c **** 					m_send_to_lcd((data>>4)&0x0f);
 233              		.loc 1 277 6 view .LVU55
 234 006c 0122     		movs	r2, #1
 235 006e 1021     		movs	r1, #16
 236 0070 1148     		ldr	r0, .L17+28
 237 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL8:
 278:Core/Src/main.c **** 					break;
 239              		.loc 1 278 6 view .LVU56
 240 0076 0D4B     		ldr	r3, .L17+16
 241 0078 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242 007a 0009     		lsrs	r0, r0, #4
 243 007c FFF7FEFF 		bl	m_send_to_lcd
 244              	.LVL9:
 279:Core/Src/main.c **** 			case 3:
 245              		.loc 1 279 6 view .LVU57
 246 0080 E7E7     		b	.L7
 247              	.L11:
 281:Core/Src/main.c **** 					m_send_to_lcd(data&0x0f);
 248              		.loc 1 281 6 view .LVU58
 249 0082 0122     		movs	r2, #1
 250 0084 1021     		movs	r1, #16
 251 0086 0C48     		ldr	r0, .L17+28
 252 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL10:
 282:Core/Src/main.c **** 					break;
 254              		.loc 1 282 6 view .LVU59
 282:Core/Src/main.c **** 					break;
 255              		.loc 1 282 24 is_stmt 0 view .LVU60
 256 008c 074B     		ldr	r3, .L17+16
 257 008e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 282:Core/Src/main.c **** 					break;
 258              		.loc 1 282 6 view .LVU61
 259 0090 00F00F00 		and	r0, r0, #15
 260 0094 FFF7FEFF 		bl	m_send_to_lcd
 261              	.LVL11:
 283:Core/Src/main.c **** 	}
 262              		.loc 1 283 6 is_stmt 1 view .LVU62
 285:Core/Src/main.c **** 
 263              		.loc 1 285 1 is_stmt 0 view .LVU63
 264 0098 DBE7     		b	.L7
 265              	.L18:
 266 009a 00BF     		.align	2
 267              	.L17:
 268 009c 00000000 		.word	.LANCHOR3
 269 00a0 00000000 		.word	.LANCHOR4
 270 00a4 00000000 		.word	.LANCHOR6
 271 00a8 00000000 		.word	.LANCHOR5
 272 00ac 00000000 		.word	.LANCHOR7
 273 00b0 00000000 		.word	.LANCHOR2
 274 00b4 00000000 		.word	.LANCHOR8
ARM GAS  /tmp/ccq8Ph0O.s 			page 12


 275 00b8 00100240 		.word	1073876992
 276              		.cfi_endproc
 277              	.LFE132:
 279              		.section	.text.task_timer,"ax",%progbits
 280              		.align	1
 281              		.global	task_timer
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	task_timer:
 288              	.LFB134:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** void task_timer(void)
 315:Core/Src/main.c **** {
 289              		.loc 1 315 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI2:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 316:Core/Src/main.c **** 	if(!f_timer_10ms) return;       // checking if 10 ms timer interrupt is set (10 ms), if set then d
 298              		.loc 1 316 2 view .LVU65
 299              		.loc 1 316 5 is_stmt 0 view .LVU66
 300 0002 194B     		ldr	r3, .L27
 301 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302              		.loc 1 316 4 view .LVU67
 303 0006 BBB1     		cbz	r3, .L19
 317:Core/Src/main.c **** 	f_timer_10ms =0;		// clear the flag to wait next interupt
 304              		.loc 1 317 2 is_stmt 1 view .LVU68
 305              		.loc 1 317 15 is_stmt 0 view .LVU69
 306 0008 174B     		ldr	r3, .L27
 307 000a 0022     		movs	r2, #0
 308 000c 1A70     		strb	r2, [r3]
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** 	d_timer_30ms++;			// count timer for 30 ms interval
 309              		.loc 1 319 2 is_stmt 1 view .LVU70
 310              		.loc 1 319 14 is_stmt 0 view .LVU71
 311 000e 174A     		ldr	r2, .L27+4
 312 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 313 0012 0133     		adds	r3, r3, #1
 314 0014 DBB2     		uxtb	r3, r3
 315 0016 1370     		strb	r3, [r2]
 320:Core/Src/main.c **** 			
 321:Core/Src/main.c **** 	if(d_timer_30ms==3)		// checking if the count reached 30 ms
 316              		.loc 1 321 2 is_stmt 1 view .LVU72
 317              		.loc 1 321 4 is_stmt 0 view .LVU73
 318 0018 032B     		cmp	r3, #3
 319 001a 0ED0     		beq	.L24
 320              	.L21:
 322:Core/Src/main.c **** 	{
 323:Core/Src/main.c **** 		d_timer_30ms =0;	// assign "0" to repeat counting
 324:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
ARM GAS  /tmp/ccq8Ph0O.s 			page 13


 325:Core/Src/main.c **** 		
 326:Core/Src/main.c **** 	}
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** 	d_timer_20ms++;
 321              		.loc 1 328 2 is_stmt 1 view .LVU74
 322              		.loc 1 328 14 is_stmt 0 view .LVU75
 323 001c 144A     		ldr	r2, .L27+8
 324 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 325 0020 0133     		adds	r3, r3, #1
 326 0022 DBB2     		uxtb	r3, r3
 327 0024 1370     		strb	r3, [r2]
 329:Core/Src/main.c **** 	if (d_timer_20ms==2){
 328              		.loc 1 329 2 is_stmt 1 view .LVU76
 329              		.loc 1 329 5 is_stmt 0 view .LVU77
 330 0026 022B     		cmp	r3, #2
 331 0028 0ED0     		beq	.L25
 332              	.L22:
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** 		d_timer_20ms =0;
 332:Core/Src/main.c **** 		f_timer_20ms=1;
 333:Core/Src/main.c **** 	}
 334:Core/Src/main.c **** 	d_timer_50ms++;
 333              		.loc 1 334 2 is_stmt 1 view .LVU78
 334              		.loc 1 334 14 is_stmt 0 view .LVU79
 335 002a 124A     		ldr	r2, .L27+12
 336 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 337 002e 0133     		adds	r3, r3, #1
 338 0030 DBB2     		uxtb	r3, r3
 339 0032 1370     		strb	r3, [r2]
 335:Core/Src/main.c **** 	if (d_timer_50ms==10){
 340              		.loc 1 335 2 is_stmt 1 view .LVU80
 341              		.loc 1 335 5 is_stmt 0 view .LVU81
 342 0034 0A2B     		cmp	r3, #10
 343 0036 0ED0     		beq	.L26
 344              	.L19:
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** 		d_timer_50ms =0;
 338:Core/Src/main.c **** 		//f_timer_50ms=1;
 339:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_QUERRY);
 340:Core/Src/main.c **** 	}
 341:Core/Src/main.c **** /*
 342:Core/Src/main.c **** 	d_timer_TX1++;
 343:Core/Src/main.c **** 		if(d_timer_TX1>=TX1_delay_val)     // checking if the count reached LED interval
 344:Core/Src/main.c **** 		{
 345:Core/Src/main.c **** 			d_timer_TX1=0;		// assign "0" to repeat counting
 346:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX1_UPDATE);
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** 		}
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** 	d_timer_TX2++;
 351:Core/Src/main.c **** 		if(d_timer_TX2>=TX2_delay_val)     // checking if the count reached LED interval
 352:Core/Src/main.c **** 		{
 353:Core/Src/main.c **** 			d_timer_TX2=0;		// assign "0" to repeat counting
 354:Core/Src/main.c **** 			buffer_push(&event_buffer,EVENT_TX2_UPDATE);
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** 		}
 357:Core/Src/main.c **** */
ARM GAS  /tmp/ccq8Ph0O.s 			page 14


 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** }
 345              		.loc 1 359 1 view .LVU82
 346 0038 08BD     		pop	{r3, pc}
 347              	.L24:
 323:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 348              		.loc 1 323 3 is_stmt 1 view .LVU83
 323:Core/Src/main.c **** 		f_timer_30ms=1;		// Set flag to inform 30 ms timer is done counting
 349              		.loc 1 323 16 is_stmt 0 view .LVU84
 350 003a 1346     		mov	r3, r2
 351 003c 0022     		movs	r2, #0
 352 003e 1A70     		strb	r2, [r3]
 324:Core/Src/main.c **** 		
 353              		.loc 1 324 3 is_stmt 1 view .LVU85
 324:Core/Src/main.c **** 		
 354              		.loc 1 324 15 is_stmt 0 view .LVU86
 355 0040 0D4B     		ldr	r3, .L27+16
 356 0042 0122     		movs	r2, #1
 357 0044 1A70     		strb	r2, [r3]
 358 0046 E9E7     		b	.L21
 359              	.L25:
 331:Core/Src/main.c **** 		f_timer_20ms=1;
 360              		.loc 1 331 3 is_stmt 1 view .LVU87
 331:Core/Src/main.c **** 		f_timer_20ms=1;
 361              		.loc 1 331 16 is_stmt 0 view .LVU88
 362 0048 1346     		mov	r3, r2
 363 004a 0022     		movs	r2, #0
 364 004c 1A70     		strb	r2, [r3]
 332:Core/Src/main.c **** 	}
 365              		.loc 1 332 3 is_stmt 1 view .LVU89
 332:Core/Src/main.c **** 	}
 366              		.loc 1 332 15 is_stmt 0 view .LVU90
 367 004e 0B4B     		ldr	r3, .L27+20
 368 0050 0122     		movs	r2, #1
 369 0052 1A70     		strb	r2, [r3]
 370 0054 E9E7     		b	.L22
 371              	.L26:
 337:Core/Src/main.c **** 		//f_timer_50ms=1;
 372              		.loc 1 337 3 is_stmt 1 view .LVU91
 337:Core/Src/main.c **** 		//f_timer_50ms=1;
 373              		.loc 1 337 16 is_stmt 0 view .LVU92
 374 0056 1346     		mov	r3, r2
 375 0058 0022     		movs	r2, #0
 376 005a 1A70     		strb	r2, [r3]
 339:Core/Src/main.c **** 	}
 377              		.loc 1 339 3 is_stmt 1 view .LVU93
 378 005c 0621     		movs	r1, #6
 379 005e 0848     		ldr	r0, .L27+24
 380 0060 FFF7FEFF 		bl	buffer_push
 381              	.LVL12:
 382 0064 E8E7     		b	.L19
 383              	.L28:
 384 0066 00BF     		.align	2
 385              	.L27:
 386 0068 00000000 		.word	.LANCHOR9
 387 006c 00000000 		.word	.LANCHOR10
 388 0070 00000000 		.word	.LANCHOR12
ARM GAS  /tmp/ccq8Ph0O.s 			page 15


 389 0074 00000000 		.word	.LANCHOR13
 390 0078 00000000 		.word	.LANCHOR11
 391 007c 00000000 		.word	.LANCHOR0
 392 0080 00000000 		.word	.LANCHOR14
 393              		.cfi_endproc
 394              	.LFE134:
 396              		.section	.text.key_read_task,"ax",%progbits
 397              		.align	1
 398              		.global	key_read_task
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	key_read_task:
 405              	.LFB135:
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** void key_read_task(void)
 362:Core/Src/main.c **** {
 406              		.loc 1 362 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI3:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 363:Core/Src/main.c **** 	if(!f_timer_30ms) return;  		 // Checking if 30 ms counting is done
 415              		.loc 1 363 2 view .LVU95
 416              		.loc 1 363 5 is_stmt 0 view .LVU96
 417 0002 1F4B     		ldr	r3, .L39
 418 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419              		.loc 1 363 4 view .LVU97
 420 0006 33B3     		cbz	r3, .L29
 364:Core/Src/main.c **** 	f_timer_30ms =0;          		 // clear the flag to wait next counting
 421              		.loc 1 364 2 is_stmt 1 view .LVU98
 422              		.loc 1 364 15 is_stmt 0 view .LVU99
 423 0008 1D4B     		ldr	r3, .L39
 424 000a 0022     		movs	r2, #0
 425 000c 1A70     		strb	r2, [r3]
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin|KEY2_Pin));
 426              		.loc 1 366 2 is_stmt 1 view .LVU100
 427              		.loc 1 366 39 is_stmt 0 view .LVU101
 428 000e 1D4B     		ldr	r3, .L39+4
 429 0010 1869     		ldr	r0, [r3, #16]
 430              	.LVL13:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** 	key1_data = key1_data<<1;      		 //Preparing to read KEY1 Input
 431              		.loc 1 368 2 is_stmt 1 view .LVU102
 432              		.loc 1 368 23 is_stmt 0 view .LVU103
 433 0012 1D4B     		ldr	r3, .L39+8
 434 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 435 0016 5200     		lsls	r2, r2, #1
 436 0018 D2B2     		uxtb	r2, r2
 437              		.loc 1 368 12 view .LVU104
 438 001a 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccq8Ph0O.s 			page 16


 369:Core/Src/main.c **** 	key1_data &= 0b00001110;
 439              		.loc 1 369 2 is_stmt 1 view .LVU105
 440              		.loc 1 369 12 is_stmt 0 view .LVU106
 441 001c 02F00E02 		and	r2, r2, #14
 442 0020 1A70     		strb	r2, [r3]
 370:Core/Src/main.c **** 	key1_data |= ((key_pindata>>2) & 0x1);			 // Read KEY1 Input
 443              		.loc 1 370 2 is_stmt 1 view .LVU107
 444              		.loc 1 370 33 is_stmt 0 view .LVU108
 445 0022 C0F38001 		ubfx	r1, r0, #2, #1
 446              		.loc 1 370 12 view .LVU109
 447 0026 0A43     		orrs	r2, r2, r1
 448 0028 1A70     		strb	r2, [r3]
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** 	key2_data = key2_data<<1;		 //Preparing to read KEY2 Input
 449              		.loc 1 372 2 is_stmt 1 view .LVU110
 450              		.loc 1 372 23 is_stmt 0 view .LVU111
 451 002a 1849     		ldr	r1, .L39+12
 452 002c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 453 002e 5B00     		lsls	r3, r3, #1
 454 0030 DBB2     		uxtb	r3, r3
 455              		.loc 1 372 12 view .LVU112
 456 0032 0B70     		strb	r3, [r1]
 373:Core/Src/main.c **** 	key2_data &= 0b00001110;
 457              		.loc 1 373 2 is_stmt 1 view .LVU113
 458              		.loc 1 373 12 is_stmt 0 view .LVU114
 459 0034 03F00E03 		and	r3, r3, #14
 460 0038 0B70     		strb	r3, [r1]
 374:Core/Src/main.c **** 	key2_data |= (key_pindata>>3);    		 // Read KEY2 Input
 461              		.loc 1 374 2 is_stmt 1 view .LVU115
 462              		.loc 1 374 12 is_stmt 0 view .LVU116
 463 003a C0F3C000 		ubfx	r0, r0, #3, #1
 464              	.LVL14:
 465              		.loc 1 374 12 view .LVU117
 466 003e 0343     		orrs	r3, r3, r0
 467 0040 0B70     		strb	r3, [r1]
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** 	if(key1_data == KEY_PRESSED)    	 // Checking if KEY1 is pressed
 468              		.loc 1 376 2 is_stmt 1 view .LVU118
 469              		.loc 1 376 4 is_stmt 0 view .LVU119
 470 0042 0C2A     		cmp	r2, #12
 471 0044 08D0     		beq	.L35
 377:Core/Src/main.c **** 	{
 378:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY1_PRESSED) ; // Store the event in buffer
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** 	}else if(key1_data == KEY_RELEASED)		//  Checking if KEY1 is released
 472              		.loc 1 380 8 is_stmt 1 view .LVU120
 473              		.loc 1 380 10 is_stmt 0 view .LVU121
 474 0046 032A     		cmp	r2, #3
 475 0048 0BD0     		beq	.L36
 476              	.L32:
 381:Core/Src/main.c **** 	{
 382:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY1_RELEASED); // Store the event in buffer
 383:Core/Src/main.c **** 	}
 384:Core/Src/main.c **** 
 385:Core/Src/main.c **** 	if(key2_data == KEY_PRESSED)		// Checking if KEY2 is pressed
 477              		.loc 1 385 2 is_stmt 1 view .LVU122
 478              		.loc 1 385 15 is_stmt 0 view .LVU123
ARM GAS  /tmp/ccq8Ph0O.s 			page 17


 479 004a 104B     		ldr	r3, .L39+12
 480 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 481              		.loc 1 385 4 view .LVU124
 482 004e 0C2B     		cmp	r3, #12
 483 0050 0CD0     		beq	.L37
 386:Core/Src/main.c **** 	{
 387:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY2_PRESSED); // Store the event in buffer
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** 	}else if(key2_data == KEY_RELEASED)		//  Checking if KEY2 is released
 484              		.loc 1 389 8 is_stmt 1 view .LVU125
 485              		.loc 1 389 10 is_stmt 0 view .LVU126
 486 0052 032B     		cmp	r3, #3
 487 0054 0FD0     		beq	.L38
 488              	.L29:
 390:Core/Src/main.c **** 	{
 391:Core/Src/main.c **** 		buffer_push(&event_buffer,EVENT_KEY2_RELEASED); // Store the event in buffer
 392:Core/Src/main.c **** 	}
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** }
 489              		.loc 1 394 1 view .LVU127
 490 0056 08BD     		pop	{r3, pc}
 491              	.L35:
 378:Core/Src/main.c **** 
 492              		.loc 1 378 3 is_stmt 1 view .LVU128
 493 0058 0121     		movs	r1, #1
 494 005a 0D48     		ldr	r0, .L39+16
 495 005c FFF7FEFF 		bl	buffer_push
 496              	.LVL15:
 497 0060 F3E7     		b	.L32
 498              	.L36:
 382:Core/Src/main.c **** 	}
 499              		.loc 1 382 3 view .LVU129
 500 0062 0321     		movs	r1, #3
 501 0064 0A48     		ldr	r0, .L39+16
 502 0066 FFF7FEFF 		bl	buffer_push
 503              	.LVL16:
 504 006a EEE7     		b	.L32
 505              	.L37:
 387:Core/Src/main.c **** 
 506              		.loc 1 387 3 view .LVU130
 507 006c 0221     		movs	r1, #2
 508 006e 0848     		ldr	r0, .L39+16
 509 0070 FFF7FEFF 		bl	buffer_push
 510              	.LVL17:
 511 0074 EFE7     		b	.L29
 512              	.L38:
 391:Core/Src/main.c **** 	}
 513              		.loc 1 391 3 view .LVU131
 514 0076 0421     		movs	r1, #4
 515 0078 0548     		ldr	r0, .L39+16
 516 007a FFF7FEFF 		bl	buffer_push
 517              	.LVL18:
 518 007e EAE7     		b	.L29
 519              	.L40:
 520              		.align	2
 521              	.L39:
 522 0080 00000000 		.word	.LANCHOR11
ARM GAS  /tmp/ccq8Ph0O.s 			page 18


 523 0084 00180240 		.word	1073879040
 524 0088 00000000 		.word	.LANCHOR15
 525 008c 00000000 		.word	.LANCHOR16
 526 0090 00000000 		.word	.LANCHOR14
 527              		.cfi_endproc
 528              	.LFE135:
 530              		.section	.text.RS485_Read_Message,"ax",%progbits
 531              		.align	1
 532              		.global	RS485_Read_Message
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	RS485_Read_Message:
 539              	.LFB137:
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** void main_task(void)
 398:Core/Src/main.c **** {
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** 	if (event_buffer.head!=event_buffer.tail){
 401:Core/Src/main.c **** 		if (!f_busy){
 402:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 403:Core/Src/main.c **** 		}
 404:Core/Src/main.c **** 	}
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** 	switch(state)
 407:Core/Src/main.c **** 	{
 408:Core/Src/main.c **** 		case STATE_WAITING_RESPOND:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** 			switch(event)
 411:Core/Src/main.c **** 				{
 412:Core/Src/main.c **** 					case EVENT_KEY1_PRESSED:
 413:Core/Src/main.c **** 						digit1++;
 414:Core/Src/main.c **** 						
 415:Core/Src/main.c ****                			 if (digit1>9){
 416:Core/Src/main.c ****                			   digit1=0;
 417:Core/Src/main.c ****                			 }
 418:Core/Src/main.c **** 						TX_msg[0]=0x10;
 419:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 420:Core/Src/main.c **** 						TX_msg[2]=digit1+'0';
 421:Core/Src/main.c **** 						f_busy=1;
 422:Core/Src/main.c **** 					
 423:Core/Src/main.c **** 						state = STATE_SENDING_REQUEST;
 424:Core/Src/main.c **** 						//event= EVENT_RESET;
 425:Core/Src/main.c **** 						break;
 426:Core/Src/main.c **** 					
 427:Core/Src/main.c **** 					case EVENT_KEY2_PRESSED:
 428:Core/Src/main.c **** 						digit2++;
 429:Core/Src/main.c **** 						if (digit2>15){
 430:Core/Src/main.c ****                  		 digit2=10;
 431:Core/Src/main.c ****                			 }	
 432:Core/Src/main.c **** 						TX_msg[0]=0x20;
 433:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 434:Core/Src/main.c **** 						TX_msg[2]=(digit2+'0');
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** 						f_busy=1;
ARM GAS  /tmp/ccq8Ph0O.s 			page 19


 437:Core/Src/main.c **** 						
 438:Core/Src/main.c **** 						state = STATE_SENDING_REQUEST;
 439:Core/Src/main.c **** 						//event= EVENT_RESET;
 440:Core/Src/main.c **** 												
 441:Core/Src/main.c **** 						break;
 442:Core/Src/main.c **** 					case EVENT_RX_COMPLETE:
 443:Core/Src/main.c **** 						
 444:Core/Src/main.c **** 						//event= EVENT_RESET;
 445:Core/Src/main.c **** 						f_busy=1;
 446:Core/Src/main.c **** 						state = STATE_READ_MESSAGE;						
 447:Core/Src/main.c **** 						break;
 448:Core/Src/main.c **** 					
 449:Core/Src/main.c **** 					case EVENT_QUERRY:
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** 					if (f_querry){
 452:Core/Src/main.c **** 						TX_msg[0]=0x20;
 453:Core/Src/main.c **** 						f_querry=0;
 454:Core/Src/main.c **** 					}
 455:Core/Src/main.c **** 					else {
 456:Core/Src/main.c **** 						TX_msg[0]=0x10;
 457:Core/Src/main.c **** 						f_querry=1;
 458:Core/Src/main.c **** 					}
 459:Core/Src/main.c **** 						TX_msg[1]=FUNC_READ;
 460:Core/Src/main.c **** 						TX_msg[2]=0xFF;
 461:Core/Src/main.c **** 						f_busy=1;
 462:Core/Src/main.c **** 						state = STATE_SENDING_REQUEST;
 463:Core/Src/main.c **** 						break;
 464:Core/Src/main.c **** 				}
 465:Core/Src/main.c **** 			break;
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** 		case STATE_SENDING_REQUEST:
 468:Core/Src/main.c **** 			RS485_Send_Message();
 469:Core/Src/main.c **** 			state= STATE_WAITING_RESPOND;
 470:Core/Src/main.c **** 			f_busy=0;
 471:Core/Src/main.c **** 			event= EVENT_RESET;
 472:Core/Src/main.c **** 			break;
 473:Core/Src/main.c **** 		case STATE_READ_MESSAGE:
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** 			RS485_Read_Message();
 476:Core/Src/main.c **** 			f_busy=0;
 477:Core/Src/main.c **** 			state= STATE_WAITING_RESPOND;
 478:Core/Src/main.c **** 			event= EVENT_RESET;
 479:Core/Src/main.c **** 			break;
 480:Core/Src/main.c **** 
 481:Core/Src/main.c **** 	
 482:Core/Src/main.c **** 	}
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** }
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** /*
 487:Core/Src/main.c **** void TX1_delay_update(void){
 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** 	if (TX1_delay_val==50) return;
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** 	TX1_delay_val-=50;
 492:Core/Src/main.c **** }
 493:Core/Src/main.c **** 
ARM GAS  /tmp/ccq8Ph0O.s 			page 20


 494:Core/Src/main.c **** void TX2_delay_update(void){
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** 	if (TX2_delay_val==50) return;
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** 	TX2_delay_val-=50;
 499:Core/Src/main.c **** }
 500:Core/Src/main.c **** 
 501:Core/Src/main.c **** */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** void RS485_Read_Message(void){
 540              		.loc 1 503 30 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   
 506:Core/Src/main.c ****   //if (transmission_f) return;
 507:Core/Src/main.c ****   if(rx2_buffer.tail==rx2_buffer.head) return;
 544              		.loc 1 507 3 view .LVU133
 545              		.loc 1 507 16 is_stmt 0 view .LVU134
 546 0000 114B     		ldr	r3, .L50
 547 0002 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 548              		.loc 1 507 33 view .LVU135
 549 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550              		.loc 1 507 5 view .LVU136
 551 0006 9A42     		cmp	r2, r3
 552 0008 1DD0     		beq	.L45
 503:Core/Src/main.c **** 
 553              		.loc 1 503 30 view .LVU137
 554 000a 10B5     		push	{r4, lr}
 555              	.LCFI4:
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 4, -8
 558              		.cfi_offset 14, -4
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****     buffer_to_message(&rx2_buffer, RX_msg);
 559              		.loc 1 509 5 is_stmt 1 view .LVU138
 560 000c 0F4C     		ldr	r4, .L50+4
 561 000e 2146     		mov	r1, r4
 562 0010 0D48     		ldr	r0, .L50
 563 0012 FFF7FEFF 		bl	buffer_to_message
 564              	.LVL19:
 510:Core/Src/main.c **** 
 511:Core/Src/main.c ****  	if (check_checksum(RX_msg)==CHECKSUM_ERROR)
 565              		.loc 1 511 3 view .LVU139
 566              		.loc 1 511 7 is_stmt 0 view .LVU140
 567 0016 2046     		mov	r0, r4
 568 0018 FFF7FEFF 		bl	check_checksum
 569              	.LVL20:
 570              		.loc 1 511 6 view .LVU141
 571 001c 10B1     		cbz	r0, .L41
 512:Core/Src/main.c ****  	{
 513:Core/Src/main.c **** 		//digit1=16;
 514:Core/Src/main.c **** 		return;
 515:Core/Src/main.c ****  	} 
 516:Core/Src/main.c ****  
 517:Core/Src/main.c ****    if (RX_msg[1] == FUNC_READ)
ARM GAS  /tmp/ccq8Ph0O.s 			page 21


 572              		.loc 1 517 4 is_stmt 1 view .LVU142
 573              		.loc 1 517 14 is_stmt 0 view .LVU143
 574 001e 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 575              		.loc 1 517 7 view .LVU144
 576 0020 022B     		cmp	r3, #2
 577 0022 00D0     		beq	.L48
 578              	.L41:
 518:Core/Src/main.c ****    { 
 519:Core/Src/main.c ****     	//*digit= RX_msg[2];
 520:Core/Src/main.c **** 		//digit2=(RX_msg[2]-'0');
 521:Core/Src/main.c **** 		if (RX_msg[0]== 0x10) {
 522:Core/Src/main.c **** 			digit1=(RX_msg[2]-'0');
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   		}else if(RX_msg[0]== 0x20){
 525:Core/Src/main.c **** 			digit2=(RX_msg[2]-'0');
 526:Core/Src/main.c ****  		 }
 527:Core/Src/main.c **** 	
 528:Core/Src/main.c ****    }
 529:Core/Src/main.c ****   
 530:Core/Src/main.c **** }
 579              		.loc 1 530 1 view .LVU145
 580 0024 10BD     		pop	{r4, pc}
 581              	.L48:
 521:Core/Src/main.c **** 			digit1=(RX_msg[2]-'0');
 582              		.loc 1 521 3 is_stmt 1 view .LVU146
 521:Core/Src/main.c **** 			digit1=(RX_msg[2]-'0');
 583              		.loc 1 521 13 is_stmt 0 view .LVU147
 584 0026 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 521:Core/Src/main.c **** 			digit1=(RX_msg[2]-'0');
 585              		.loc 1 521 6 view .LVU148
 586 0028 102B     		cmp	r3, #16
 587 002a 07D0     		beq	.L49
 524:Core/Src/main.c **** 			digit2=(RX_msg[2]-'0');
 588              		.loc 1 524 11 is_stmt 1 view .LVU149
 524:Core/Src/main.c **** 			digit2=(RX_msg[2]-'0');
 589              		.loc 1 524 13 is_stmt 0 view .LVU150
 590 002c 202B     		cmp	r3, #32
 591 002e F9D1     		bne	.L41
 525:Core/Src/main.c ****  		 }
 592              		.loc 1 525 4 is_stmt 1 view .LVU151
 525:Core/Src/main.c ****  		 }
 593              		.loc 1 525 18 is_stmt 0 view .LVU152
 594 0030 064B     		ldr	r3, .L50+4
 595 0032 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 525:Core/Src/main.c ****  		 }
 596              		.loc 1 525 21 view .LVU153
 597 0034 303B     		subs	r3, r3, #48
 525:Core/Src/main.c ****  		 }
 598              		.loc 1 525 10 view .LVU154
 599 0036 064A     		ldr	r2, .L50+8
 600 0038 1370     		strb	r3, [r2]
 601 003a F3E7     		b	.L41
 602              	.L49:
 522:Core/Src/main.c **** 
 603              		.loc 1 522 4 is_stmt 1 view .LVU155
 522:Core/Src/main.c **** 
 604              		.loc 1 522 18 is_stmt 0 view .LVU156
ARM GAS  /tmp/ccq8Ph0O.s 			page 22


 605 003c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 522:Core/Src/main.c **** 
 606              		.loc 1 522 21 view .LVU157
 607 003e 303B     		subs	r3, r3, #48
 522:Core/Src/main.c **** 
 608              		.loc 1 522 10 view .LVU158
 609 0040 044A     		ldr	r2, .L50+12
 610 0042 1370     		strb	r3, [r2]
 611 0044 EEE7     		b	.L41
 612              	.L45:
 613              	.LCFI5:
 614              		.cfi_def_cfa_offset 0
 615              		.cfi_restore 4
 616              		.cfi_restore 14
 617 0046 7047     		bx	lr
 618              	.L51:
 619              		.align	2
 620              	.L50:
 621 0048 00000000 		.word	.LANCHOR17
 622 004c 00000000 		.word	.LANCHOR18
 623 0050 00000000 		.word	.LANCHOR6
 624 0054 00000000 		.word	.LANCHOR8
 625              		.cfi_endproc
 626              	.LFE137:
 628              		.section	.text.RS485_Send_Message,"ax",%progbits
 629              		.align	1
 630              		.global	RS485_Send_Message
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu fpv4-sp-d16
 636              	RS485_Send_Message:
 637              	.LFB138:
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** void RS485_Send_Message(void)
 533:Core/Src/main.c **** {
 638              		.loc 1 533 1 is_stmt 1 view -0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642 0000 70B5     		push	{r4, r5, r6, lr}
 643              	.LCFI6:
 644              		.cfi_def_cfa_offset 16
 645              		.cfi_offset 4, -16
 646              		.cfi_offset 5, -12
 647              		.cfi_offset 6, -8
 648              		.cfi_offset 14, -4
 534:Core/Src/main.c **** 
 535:Core/Src/main.c **** 	cal_checksum(TX_msg);
 649              		.loc 1 535 2 view .LVU160
 650 0002 124E     		ldr	r6, .L54
 651 0004 3046     		mov	r0, r6
 652 0006 FFF7FEFF 		bl	cal_checksum
 653              	.LVL21:
 536:Core/Src/main.c **** 	
 537:Core/Src/main.c ****    //uint8_t *pbuf_tx = (uint8_t *)&msg; 
 538:Core/Src/main.c ****    HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
ARM GAS  /tmp/ccq8Ph0O.s 			page 23


 654              		.loc 1 538 4 view .LVU161
 655 000a 114D     		ldr	r5, .L54+4
 656 000c 0122     		movs	r2, #1
 657 000e 4FF48051 		mov	r1, #4096
 658 0012 2846     		mov	r0, r5
 659 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 660              	.LVL22:
 539:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,&start_cmd,1,10);
 661              		.loc 1 539 4 view .LVU162
 662 0018 0E4C     		ldr	r4, .L54+8
 663 001a 0A23     		movs	r3, #10
 664 001c 0122     		movs	r2, #1
 665 001e 0E49     		ldr	r1, .L54+12
 666 0020 2046     		mov	r0, r4
 667 0022 FFF7FEFF 		bl	HAL_UART_Transmit
 668              	.LVL23:
 540:Core/Src/main.c ****   
 541:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,TX_msg,sizeof(TX_msg),10);
 669              		.loc 1 541 4 view .LVU163
 670 0026 0A23     		movs	r3, #10
 671 0028 0422     		movs	r2, #4
 672 002a 3146     		mov	r1, r6
 673 002c 2046     		mov	r0, r4
 674 002e FFF7FEFF 		bl	HAL_UART_Transmit
 675              	.LVL24:
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****    HAL_UART_Transmit(&huart4,&stop_cmd,1,10);
 676              		.loc 1 543 4 view .LVU164
 677 0032 0A23     		movs	r3, #10
 678 0034 0122     		movs	r2, #1
 679 0036 0949     		ldr	r1, .L54+16
 680 0038 2046     		mov	r0, r4
 681 003a FFF7FEFF 		bl	HAL_UART_Transmit
 682              	.LVL25:
 544:Core/Src/main.c ****   
 545:Core/Src/main.c ****    HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 683              		.loc 1 545 4 view .LVU165
 684 003e 0022     		movs	r2, #0
 685 0040 4FF48051 		mov	r1, #4096
 686 0044 2846     		mov	r0, r5
 687 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 688              	.LVL26:
 546:Core/Src/main.c **** 
 547:Core/Src/main.c **** }
 689              		.loc 1 547 1 is_stmt 0 view .LVU166
 690 004a 70BD     		pop	{r4, r5, r6, pc}
 691              	.L55:
 692              		.align	2
 693              	.L54:
 694 004c 00000000 		.word	.LANCHOR19
 695 0050 00000240 		.word	1073872896
 696 0054 00000000 		.word	huart4
 697 0058 00000000 		.word	.LANCHOR20
 698 005c 00000000 		.word	.LANCHOR21
 699              		.cfi_endproc
 700              	.LFE138:
 702              		.section	.text.main_task,"ax",%progbits
ARM GAS  /tmp/ccq8Ph0O.s 			page 24


 703              		.align	1
 704              		.global	main_task
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv4-sp-d16
 710              	main_task:
 711              	.LFB136:
 398:Core/Src/main.c **** 
 712              		.loc 1 398 1 is_stmt 1 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716 0000 08B5     		push	{r3, lr}
 717              	.LCFI7:
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 3, -8
 720              		.cfi_offset 14, -4
 400:Core/Src/main.c **** 		if (!f_busy){
 721              		.loc 1 400 2 view .LVU168
 400:Core/Src/main.c **** 		if (!f_busy){
 722              		.loc 1 400 18 is_stmt 0 view .LVU169
 723 0002 484B     		ldr	r3, .L73
 724 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 400:Core/Src/main.c **** 		if (!f_busy){
 725              		.loc 1 400 37 view .LVU170
 726 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 400:Core/Src/main.c **** 		if (!f_busy){
 727              		.loc 1 400 5 view .LVU171
 728 0008 9A42     		cmp	r2, r3
 729 000a 02D0     		beq	.L57
 401:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 730              		.loc 1 401 3 is_stmt 1 view .LVU172
 401:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 731              		.loc 1 401 7 is_stmt 0 view .LVU173
 732 000c 464B     		ldr	r3, .L73+4
 733 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 401:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 734              		.loc 1 401 6 view .LVU174
 735 0010 3BB1     		cbz	r3, .L71
 736              	.L57:
 406:Core/Src/main.c **** 	{
 737              		.loc 1 406 2 is_stmt 1 view .LVU175
 738 0012 464B     		ldr	r3, .L73+8
 739 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 740 0016 012B     		cmp	r3, #1
 741 0018 70D0     		beq	.L58
 742 001a 022B     		cmp	r3, #2
 743 001c 78D0     		beq	.L59
 744 001e 33B1     		cbz	r3, .L72
 745              	.L56:
 484:Core/Src/main.c **** 
 746              		.loc 1 484 1 is_stmt 0 view .LVU176
 747 0020 08BD     		pop	{r3, pc}
 748              	.L71:
 402:Core/Src/main.c **** 		}
 749              		.loc 1 402 3 is_stmt 1 view .LVU177
ARM GAS  /tmp/ccq8Ph0O.s 			page 25


 402:Core/Src/main.c **** 		}
 750              		.loc 1 402 11 is_stmt 0 view .LVU178
 751 0022 4048     		ldr	r0, .L73
 752 0024 FFF7FEFF 		bl	buffer_pop
 753              	.LVL27:
 402:Core/Src/main.c **** 		}
 754              		.loc 1 402 9 view .LVU179
 755 0028 414B     		ldr	r3, .L73+12
 756 002a 1870     		strb	r0, [r3]
 757 002c F1E7     		b	.L57
 758              	.L72:
 410:Core/Src/main.c **** 				{
 759              		.loc 1 410 4 is_stmt 1 view .LVU180
 760 002e 404B     		ldr	r3, .L73+12
 761 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 762 0032 013B     		subs	r3, r3, #1
 763 0034 052B     		cmp	r3, #5
 764 0036 F3D8     		bhi	.L56
 765 0038 01A2     		adr	r2, .L62
 766 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 767 003e 00BF     		.p2align 2
 768              	.L62:
 769 0040 59000000 		.word	.L65+1
 770 0044 89000000 		.word	.L64+1
 771 0048 21000000 		.word	.L56+1
 772 004c 21000000 		.word	.L56+1
 773 0050 B9000000 		.word	.L63+1
 774 0054 C7000000 		.word	.L61+1
 775              		.p2align 1
 776              	.L65:
 413:Core/Src/main.c **** 						
 777              		.loc 1 413 7 view .LVU181
 413:Core/Src/main.c **** 						
 778              		.loc 1 413 13 is_stmt 0 view .LVU182
 779 0058 364A     		ldr	r2, .L73+16
 780 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 781 005c 0133     		adds	r3, r3, #1
 782 005e DBB2     		uxtb	r3, r3
 783 0060 1370     		strb	r3, [r2]
 415:Core/Src/main.c ****                			   digit1=0;
 784              		.loc 1 415 20 is_stmt 1 view .LVU183
 415:Core/Src/main.c ****                			   digit1=0;
 785              		.loc 1 415 23 is_stmt 0 view .LVU184
 786 0062 092B     		cmp	r3, #9
 787 0064 02D9     		bls	.L66
 416:Core/Src/main.c ****                			 }
 788              		.loc 1 416 22 is_stmt 1 view .LVU185
 416:Core/Src/main.c ****                			 }
 789              		.loc 1 416 28 is_stmt 0 view .LVU186
 790 0066 1346     		mov	r3, r2
 791 0068 0022     		movs	r2, #0
 792 006a 1A70     		strb	r2, [r3]
 793              	.L66:
 418:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 794              		.loc 1 418 7 is_stmt 1 view .LVU187
 418:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 795              		.loc 1 418 16 is_stmt 0 view .LVU188
ARM GAS  /tmp/ccq8Ph0O.s 			page 26


 796 006c 324A     		ldr	r2, .L73+20
 797 006e 1023     		movs	r3, #16
 798 0070 1370     		strb	r3, [r2]
 419:Core/Src/main.c **** 						TX_msg[2]=digit1+'0';
 799              		.loc 1 419 7 is_stmt 1 view .LVU189
 419:Core/Src/main.c **** 						TX_msg[2]=digit1+'0';
 800              		.loc 1 419 16 is_stmt 0 view .LVU190
 801 0072 0123     		movs	r3, #1
 802 0074 5370     		strb	r3, [r2, #1]
 420:Core/Src/main.c **** 						f_busy=1;
 803              		.loc 1 420 7 is_stmt 1 view .LVU191
 420:Core/Src/main.c **** 						f_busy=1;
 804              		.loc 1 420 23 is_stmt 0 view .LVU192
 805 0076 2F49     		ldr	r1, .L73+16
 806 0078 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 807 007a 3031     		adds	r1, r1, #48
 420:Core/Src/main.c **** 						f_busy=1;
 808              		.loc 1 420 16 view .LVU193
 809 007c 9170     		strb	r1, [r2, #2]
 421:Core/Src/main.c **** 					
 810              		.loc 1 421 7 is_stmt 1 view .LVU194
 421:Core/Src/main.c **** 					
 811              		.loc 1 421 13 is_stmt 0 view .LVU195
 812 007e 2A4A     		ldr	r2, .L73+4
 813 0080 1370     		strb	r3, [r2]
 423:Core/Src/main.c **** 						//event= EVENT_RESET;
 814              		.loc 1 423 7 is_stmt 1 view .LVU196
 423:Core/Src/main.c **** 						//event= EVENT_RESET;
 815              		.loc 1 423 13 is_stmt 0 view .LVU197
 816 0082 2A4A     		ldr	r2, .L73+8
 817 0084 1370     		strb	r3, [r2]
 425:Core/Src/main.c **** 					
 818              		.loc 1 425 7 is_stmt 1 view .LVU198
 819 0086 CBE7     		b	.L56
 820              	.L64:
 428:Core/Src/main.c **** 						if (digit2>15){
 821              		.loc 1 428 7 view .LVU199
 428:Core/Src/main.c **** 						if (digit2>15){
 822              		.loc 1 428 13 is_stmt 0 view .LVU200
 823 0088 2C4A     		ldr	r2, .L73+24
 824 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 825 008c 0133     		adds	r3, r3, #1
 826 008e DBB2     		uxtb	r3, r3
 827 0090 1370     		strb	r3, [r2]
 429:Core/Src/main.c ****                  		 digit2=10;
 828              		.loc 1 429 7 is_stmt 1 view .LVU201
 429:Core/Src/main.c ****                  		 digit2=10;
 829              		.loc 1 429 10 is_stmt 0 view .LVU202
 830 0092 0F2B     		cmp	r3, #15
 831 0094 02D9     		bls	.L67
 430:Core/Src/main.c ****                			 }	
 832              		.loc 1 430 21 is_stmt 1 view .LVU203
 430:Core/Src/main.c ****                			 }	
 833              		.loc 1 430 27 is_stmt 0 view .LVU204
 834 0096 1346     		mov	r3, r2
 835 0098 0A22     		movs	r2, #10
 836 009a 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccq8Ph0O.s 			page 27


 837              	.L67:
 432:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 838              		.loc 1 432 7 is_stmt 1 view .LVU205
 432:Core/Src/main.c **** 						TX_msg[1]=FUNC_WRITE;
 839              		.loc 1 432 16 is_stmt 0 view .LVU206
 840 009c 264A     		ldr	r2, .L73+20
 841 009e 2023     		movs	r3, #32
 842 00a0 1370     		strb	r3, [r2]
 433:Core/Src/main.c **** 						TX_msg[2]=(digit2+'0');
 843              		.loc 1 433 7 is_stmt 1 view .LVU207
 433:Core/Src/main.c **** 						TX_msg[2]=(digit2+'0');
 844              		.loc 1 433 16 is_stmt 0 view .LVU208
 845 00a2 0123     		movs	r3, #1
 846 00a4 5370     		strb	r3, [r2, #1]
 434:Core/Src/main.c **** 
 847              		.loc 1 434 7 is_stmt 1 view .LVU209
 434:Core/Src/main.c **** 
 848              		.loc 1 434 24 is_stmt 0 view .LVU210
 849 00a6 2549     		ldr	r1, .L73+24
 850 00a8 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 851 00aa 3031     		adds	r1, r1, #48
 434:Core/Src/main.c **** 
 852              		.loc 1 434 16 view .LVU211
 853 00ac 9170     		strb	r1, [r2, #2]
 436:Core/Src/main.c **** 						
 854              		.loc 1 436 7 is_stmt 1 view .LVU212
 436:Core/Src/main.c **** 						
 855              		.loc 1 436 13 is_stmt 0 view .LVU213
 856 00ae 1E4A     		ldr	r2, .L73+4
 857 00b0 1370     		strb	r3, [r2]
 438:Core/Src/main.c **** 						//event= EVENT_RESET;
 858              		.loc 1 438 7 is_stmt 1 view .LVU214
 438:Core/Src/main.c **** 						//event= EVENT_RESET;
 859              		.loc 1 438 13 is_stmt 0 view .LVU215
 860 00b2 1E4A     		ldr	r2, .L73+8
 861 00b4 1370     		strb	r3, [r2]
 441:Core/Src/main.c **** 					case EVENT_RX_COMPLETE:
 862              		.loc 1 441 7 is_stmt 1 view .LVU216
 863 00b6 B3E7     		b	.L56
 864              	.L63:
 445:Core/Src/main.c **** 						state = STATE_READ_MESSAGE;						
 865              		.loc 1 445 7 view .LVU217
 445:Core/Src/main.c **** 						state = STATE_READ_MESSAGE;						
 866              		.loc 1 445 13 is_stmt 0 view .LVU218
 867 00b8 1B4B     		ldr	r3, .L73+4
 868 00ba 0122     		movs	r2, #1
 869 00bc 1A70     		strb	r2, [r3]
 446:Core/Src/main.c **** 						break;
 870              		.loc 1 446 7 is_stmt 1 view .LVU219
 446:Core/Src/main.c **** 						break;
 871              		.loc 1 446 13 is_stmt 0 view .LVU220
 872 00be 1B4B     		ldr	r3, .L73+8
 873 00c0 0222     		movs	r2, #2
 874 00c2 1A70     		strb	r2, [r3]
 447:Core/Src/main.c **** 					
 875              		.loc 1 447 7 is_stmt 1 view .LVU221
 876 00c4 ACE7     		b	.L56
ARM GAS  /tmp/ccq8Ph0O.s 			page 28


 877              	.L61:
 451:Core/Src/main.c **** 						TX_msg[0]=0x20;
 878              		.loc 1 451 6 view .LVU222
 451:Core/Src/main.c **** 						TX_msg[0]=0x20;
 879              		.loc 1 451 10 is_stmt 0 view .LVU223
 880 00c6 1E4B     		ldr	r3, .L73+28
 881 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451:Core/Src/main.c **** 						TX_msg[0]=0x20;
 882              		.loc 1 451 9 view .LVU224
 883 00ca 83B1     		cbz	r3, .L68
 452:Core/Src/main.c **** 						f_querry=0;
 884              		.loc 1 452 7 is_stmt 1 view .LVU225
 452:Core/Src/main.c **** 						f_querry=0;
 885              		.loc 1 452 16 is_stmt 0 view .LVU226
 886 00cc 1A4B     		ldr	r3, .L73+20
 887 00ce 2022     		movs	r2, #32
 888 00d0 1A70     		strb	r2, [r3]
 453:Core/Src/main.c **** 					}
 889              		.loc 1 453 7 is_stmt 1 view .LVU227
 453:Core/Src/main.c **** 					}
 890              		.loc 1 453 15 is_stmt 0 view .LVU228
 891 00d2 1B4B     		ldr	r3, .L73+28
 892 00d4 0022     		movs	r2, #0
 893 00d6 1A70     		strb	r2, [r3]
 894              	.L69:
 459:Core/Src/main.c **** 						TX_msg[2]=0xFF;
 895              		.loc 1 459 7 is_stmt 1 view .LVU229
 459:Core/Src/main.c **** 						TX_msg[2]=0xFF;
 896              		.loc 1 459 16 is_stmt 0 view .LVU230
 897 00d8 174B     		ldr	r3, .L73+20
 898 00da 0222     		movs	r2, #2
 899 00dc 5A70     		strb	r2, [r3, #1]
 460:Core/Src/main.c **** 						f_busy=1;
 900              		.loc 1 460 7 is_stmt 1 view .LVU231
 460:Core/Src/main.c **** 						f_busy=1;
 901              		.loc 1 460 16 is_stmt 0 view .LVU232
 902 00de FF22     		movs	r2, #255
 903 00e0 9A70     		strb	r2, [r3, #2]
 461:Core/Src/main.c **** 						state = STATE_SENDING_REQUEST;
 904              		.loc 1 461 7 is_stmt 1 view .LVU233
 461:Core/Src/main.c **** 						state = STATE_SENDING_REQUEST;
 905              		.loc 1 461 13 is_stmt 0 view .LVU234
 906 00e2 0123     		movs	r3, #1
 907 00e4 104A     		ldr	r2, .L73+4
 908 00e6 1370     		strb	r3, [r2]
 462:Core/Src/main.c **** 						break;
 909              		.loc 1 462 7 is_stmt 1 view .LVU235
 462:Core/Src/main.c **** 						break;
 910              		.loc 1 462 13 is_stmt 0 view .LVU236
 911 00e8 104A     		ldr	r2, .L73+8
 912 00ea 1370     		strb	r3, [r2]
 463:Core/Src/main.c **** 				}
 913              		.loc 1 463 7 is_stmt 1 view .LVU237
 914 00ec 98E7     		b	.L56
 915              	.L68:
 456:Core/Src/main.c **** 						f_querry=1;
 916              		.loc 1 456 7 view .LVU238
ARM GAS  /tmp/ccq8Ph0O.s 			page 29


 456:Core/Src/main.c **** 						f_querry=1;
 917              		.loc 1 456 16 is_stmt 0 view .LVU239
 918 00ee 124B     		ldr	r3, .L73+20
 919 00f0 1022     		movs	r2, #16
 920 00f2 1A70     		strb	r2, [r3]
 457:Core/Src/main.c **** 					}
 921              		.loc 1 457 7 is_stmt 1 view .LVU240
 457:Core/Src/main.c **** 					}
 922              		.loc 1 457 15 is_stmt 0 view .LVU241
 923 00f4 124B     		ldr	r3, .L73+28
 924 00f6 0122     		movs	r2, #1
 925 00f8 1A70     		strb	r2, [r3]
 926 00fa EDE7     		b	.L69
 927              	.L58:
 468:Core/Src/main.c **** 			state= STATE_WAITING_RESPOND;
 928              		.loc 1 468 4 is_stmt 1 view .LVU242
 929 00fc FFF7FEFF 		bl	RS485_Send_Message
 930              	.LVL28:
 469:Core/Src/main.c **** 			f_busy=0;
 931              		.loc 1 469 4 view .LVU243
 469:Core/Src/main.c **** 			f_busy=0;
 932              		.loc 1 469 9 is_stmt 0 view .LVU244
 933 0100 0023     		movs	r3, #0
 934 0102 0A4A     		ldr	r2, .L73+8
 935 0104 1370     		strb	r3, [r2]
 470:Core/Src/main.c **** 			event= EVENT_RESET;
 936              		.loc 1 470 4 is_stmt 1 view .LVU245
 470:Core/Src/main.c **** 			event= EVENT_RESET;
 937              		.loc 1 470 10 is_stmt 0 view .LVU246
 938 0106 084A     		ldr	r2, .L73+4
 939 0108 1370     		strb	r3, [r2]
 471:Core/Src/main.c **** 			break;
 940              		.loc 1 471 4 is_stmt 1 view .LVU247
 471:Core/Src/main.c **** 			break;
 941              		.loc 1 471 9 is_stmt 0 view .LVU248
 942 010a 094A     		ldr	r2, .L73+12
 943 010c 1370     		strb	r3, [r2]
 472:Core/Src/main.c **** 		case STATE_READ_MESSAGE:
 944              		.loc 1 472 4 is_stmt 1 view .LVU249
 945 010e 87E7     		b	.L56
 946              	.L59:
 475:Core/Src/main.c **** 			f_busy=0;
 947              		.loc 1 475 4 view .LVU250
 948 0110 FFF7FEFF 		bl	RS485_Read_Message
 949              	.LVL29:
 476:Core/Src/main.c **** 			state= STATE_WAITING_RESPOND;
 950              		.loc 1 476 4 view .LVU251
 476:Core/Src/main.c **** 			state= STATE_WAITING_RESPOND;
 951              		.loc 1 476 10 is_stmt 0 view .LVU252
 952 0114 0023     		movs	r3, #0
 953 0116 044A     		ldr	r2, .L73+4
 954 0118 1370     		strb	r3, [r2]
 477:Core/Src/main.c **** 			event= EVENT_RESET;
 955              		.loc 1 477 4 is_stmt 1 view .LVU253
 477:Core/Src/main.c **** 			event= EVENT_RESET;
 956              		.loc 1 477 9 is_stmt 0 view .LVU254
 957 011a 044A     		ldr	r2, .L73+8
ARM GAS  /tmp/ccq8Ph0O.s 			page 30


 958 011c 1370     		strb	r3, [r2]
 478:Core/Src/main.c **** 			break;
 959              		.loc 1 478 4 is_stmt 1 view .LVU255
 478:Core/Src/main.c **** 			break;
 960              		.loc 1 478 9 is_stmt 0 view .LVU256
 961 011e 044A     		ldr	r2, .L73+12
 962 0120 1370     		strb	r3, [r2]
 479:Core/Src/main.c **** 
 963              		.loc 1 479 4 is_stmt 1 view .LVU257
 484:Core/Src/main.c **** 
 964              		.loc 1 484 1 is_stmt 0 view .LVU258
 965 0122 7DE7     		b	.L56
 966              	.L74:
 967              		.align	2
 968              	.L73:
 969 0124 00000000 		.word	.LANCHOR14
 970 0128 00000000 		.word	.LANCHOR22
 971 012c 00000000 		.word	.LANCHOR24
 972 0130 00000000 		.word	.LANCHOR23
 973 0134 00000000 		.word	.LANCHOR8
 974 0138 00000000 		.word	.LANCHOR19
 975 013c 00000000 		.word	.LANCHOR6
 976 0140 00000000 		.word	.LANCHOR25
 977              		.cfi_endproc
 978              	.LFE136:
 980              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 981              		.align	1
 982              		.global	HAL_TIM_PeriodElapsedCallback
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 986              		.fpu fpv4-sp-d16
 988              	HAL_TIM_PeriodElapsedCallback:
 989              	.LVL30:
 990              	.LFB139:
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** 
 550:Core/Src/main.c **** 
 551:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 552:Core/Src/main.c **** {
 991              		.loc 1 552 1 is_stmt 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              		@ link register save eliminated.
 553:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****    if(htim == &htim4)
 996              		.loc 1 555 4 view .LVU260
 997              		.loc 1 555 6 is_stmt 0 view .LVU261
 998 0000 034B     		ldr	r3, .L78
 999 0002 8342     		cmp	r3, r0
 1000 0004 00D0     		beq	.L77
 1001              	.L75:
 556:Core/Src/main.c ****   {
 557:Core/Src/main.c **** 	  f_timer_10ms=1;
 558:Core/Src/main.c **** 
ARM GAS  /tmp/ccq8Ph0O.s 			page 31


 559:Core/Src/main.c ****   }
 560:Core/Src/main.c **** }
 1002              		.loc 1 560 1 view .LVU262
 1003 0006 7047     		bx	lr
 1004              	.L77:
 557:Core/Src/main.c **** 
 1005              		.loc 1 557 4 is_stmt 1 view .LVU263
 557:Core/Src/main.c **** 
 1006              		.loc 1 557 16 is_stmt 0 view .LVU264
 1007 0008 024B     		ldr	r3, .L78+4
 1008 000a 0122     		movs	r2, #1
 1009 000c 1A70     		strb	r2, [r3]
 1010              		.loc 1 560 1 view .LVU265
 1011 000e FAE7     		b	.L75
 1012              	.L79:
 1013              		.align	2
 1014              	.L78:
 1015 0010 00000000 		.word	htim4
 1016 0014 00000000 		.word	.LANCHOR9
 1017              		.cfi_endproc
 1018              	.LFE139:
 1020              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1021              		.align	1
 1022              		.global	HAL_UART_RxCpltCallback
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
 1026              		.fpu fpv4-sp-d16
 1028              	HAL_UART_RxCpltCallback:
 1029              	.LVL31:
 1030              	.LFB140:
 561:Core/Src/main.c **** 
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 565:Core/Src/main.c **** {
 1031              		.loc 1 565 1 is_stmt 1 view -0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              		.loc 1 565 1 is_stmt 0 view .LVU267
 1036 0000 08B5     		push	{r3, lr}
 1037              	.LCFI8:
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 3, -8
 1040              		.cfi_offset 14, -4
 566:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** 	 if(huart == &huart4)
 1041              		.loc 1 568 3 is_stmt 1 view .LVU268
 1042              		.loc 1 568 5 is_stmt 0 view .LVU269
 1043 0002 144B     		ldr	r3, .L88
 1044 0004 8342     		cmp	r3, r0
 1045 0006 00D0     		beq	.L86
 1046              	.LVL32:
 1047              	.L80:
 569:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccq8Ph0O.s 			page 32


 570:Core/Src/main.c **** 		
 571:Core/Src/main.c **** 		if(!transmission_f){
 572:Core/Src/main.c **** 			if (rx_temp==0x2){
 573:Core/Src/main.c **** 				transmission_f=1;
 574:Core/Src/main.c **** 			}
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** 		}else{
 577:Core/Src/main.c **** 			if (rx_temp==0x3)
 578:Core/Src/main.c **** 			{		//digit1= 2;
 579:Core/Src/main.c **** 				transmission_f=0;
 580:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 581:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 582:Core/Src/main.c **** 				return;
 583:Core/Src/main.c **** 			}
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****  			buffer_push(&rx2_buffer,rx_temp);
 586:Core/Src/main.c **** 		}
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 589:Core/Src/main.c ****     }
 590:Core/Src/main.c ****   
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** }
 1048              		.loc 1 592 1 view .LVU270
 1049 0008 08BD     		pop	{r3, pc}
 1050              	.LVL33:
 1051              	.L86:
 571:Core/Src/main.c **** 			if (rx_temp==0x2){
 1052              		.loc 1 571 3 is_stmt 1 view .LVU271
 571:Core/Src/main.c **** 			if (rx_temp==0x2){
 1053              		.loc 1 571 6 is_stmt 0 view .LVU272
 1054 000a 134B     		ldr	r3, .L88+4
 1055 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 571:Core/Src/main.c **** 			if (rx_temp==0x2){
 1056              		.loc 1 571 5 view .LVU273
 1057 000e 3BB9     		cbnz	r3, .L82
 572:Core/Src/main.c **** 				transmission_f=1;
 1058              		.loc 1 572 4 is_stmt 1 view .LVU274
 572:Core/Src/main.c **** 				transmission_f=1;
 1059              		.loc 1 572 15 is_stmt 0 view .LVU275
 1060 0010 124B     		ldr	r3, .L88+8
 1061 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 572:Core/Src/main.c **** 				transmission_f=1;
 1062              		.loc 1 572 7 view .LVU276
 1063 0014 022B     		cmp	r3, #2
 1064 0016 0AD1     		bne	.L83
 573:Core/Src/main.c **** 			}
 1065              		.loc 1 573 5 is_stmt 1 view .LVU277
 573:Core/Src/main.c **** 			}
 1066              		.loc 1 573 19 is_stmt 0 view .LVU278
 1067 0018 0F4B     		ldr	r3, .L88+4
 1068 001a 0122     		movs	r2, #1
 1069 001c 1A70     		strb	r2, [r3]
 1070 001e 06E0     		b	.L83
 1071              	.L82:
 577:Core/Src/main.c **** 			{		//digit1= 2;
 1072              		.loc 1 577 4 is_stmt 1 view .LVU279
ARM GAS  /tmp/ccq8Ph0O.s 			page 33


 577:Core/Src/main.c **** 			{		//digit1= 2;
 1073              		.loc 1 577 15 is_stmt 0 view .LVU280
 1074 0020 0E4B     		ldr	r3, .L88+8
 1075 0022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 577:Core/Src/main.c **** 			{		//digit1= 2;
 1076              		.loc 1 577 7 view .LVU281
 1077 0024 0329     		cmp	r1, #3
 1078 0026 08D0     		beq	.L87
 585:Core/Src/main.c **** 		}
 1079              		.loc 1 585 5 is_stmt 1 view .LVU282
 1080 0028 0D48     		ldr	r0, .L88+12
 1081              	.LVL34:
 585:Core/Src/main.c **** 		}
 1082              		.loc 1 585 5 is_stmt 0 view .LVU283
 1083 002a FFF7FEFF 		bl	buffer_push
 1084              	.LVL35:
 1085              	.L83:
 588:Core/Src/main.c ****     }
 1086              		.loc 1 588 3 is_stmt 1 view .LVU284
 1087 002e 0122     		movs	r2, #1
 1088 0030 0A49     		ldr	r1, .L88+8
 1089 0032 0848     		ldr	r0, .L88
 1090 0034 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1091              	.LVL36:
 1092 0038 E6E7     		b	.L80
 1093              	.LVL37:
 1094              	.L87:
 579:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 1095              		.loc 1 579 5 view .LVU285
 579:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 1096              		.loc 1 579 19 is_stmt 0 view .LVU286
 1097 003a 074B     		ldr	r3, .L88+4
 1098 003c 0022     		movs	r2, #0
 1099 003e 1A70     		strb	r2, [r3]
 580:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 1100              		.loc 1 580 5 is_stmt 1 view .LVU287
 1101 0040 0521     		movs	r1, #5
 1102 0042 0848     		ldr	r0, .L88+16
 1103              	.LVL38:
 580:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 1104              		.loc 1 580 5 is_stmt 0 view .LVU288
 1105 0044 FFF7FEFF 		bl	buffer_push
 1106              	.LVL39:
 581:Core/Src/main.c **** 				return;
 1107              		.loc 1 581 5 is_stmt 1 view .LVU289
 1108 0048 0122     		movs	r2, #1
 1109 004a 0449     		ldr	r1, .L88+8
 1110 004c 0148     		ldr	r0, .L88
 1111 004e FFF7FEFF 		bl	HAL_UART_Receive_IT
 1112              	.LVL40:
 582:Core/Src/main.c **** 			}
 1113              		.loc 1 582 5 view .LVU290
 1114 0052 D9E7     		b	.L80
 1115              	.L89:
 1116              		.align	2
 1117              	.L88:
 1118 0054 00000000 		.word	huart4
ARM GAS  /tmp/ccq8Ph0O.s 			page 34


 1119 0058 00000000 		.word	.LANCHOR26
 1120 005c 00000000 		.word	.LANCHOR27
 1121 0060 00000000 		.word	.LANCHOR17
 1122 0064 00000000 		.word	.LANCHOR14
 1123              		.cfi_endproc
 1124              	.LFE140:
 1126              		.section	.text.Error_Handler,"ax",%progbits
 1127              		.align	1
 1128              		.global	Error_Handler
 1129              		.syntax unified
 1130              		.thumb
 1131              		.thumb_func
 1132              		.fpu fpv4-sp-d16
 1134              	Error_Handler:
 1135              	.LFB141:
 593:Core/Src/main.c **** /* USER CODE END 4 */
 594:Core/Src/main.c **** 
 595:Core/Src/main.c **** /**
 596:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 597:Core/Src/main.c ****   * @retval None
 598:Core/Src/main.c ****   */
 599:Core/Src/main.c **** void Error_Handler(void)
 600:Core/Src/main.c **** {
 1136              		.loc 1 600 1 view -0
 1137              		.cfi_startproc
 1138              		@ Volatile: function does not return.
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141              		@ link register save eliminated.
 601:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 602:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 603:Core/Src/main.c ****   __disable_irq();
 1142              		.loc 1 603 3 view .LVU292
 1143              	.LBB4:
 1144              	.LBI4:
 1145              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  /tmp/ccq8Ph0O.s 			page 35


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  /tmp/ccq8Ph0O.s 			page 36


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccq8Ph0O.s 			page 37


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1146              		.loc 2 140 27 view .LVU293
 1147              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1148              		.loc 2 142 3 view .LVU294
 1149              		.syntax unified
 1150              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1151 0000 72B6     		cpsid i
 1152              	@ 0 "" 2
 1153              		.thumb
 1154              		.syntax unified
 1155              	.L91:
 1156              	.LBE5:
 1157              	.LBE4:
 604:Core/Src/main.c ****   while (1)
 1158              		.loc 1 604 3 discriminator 1 view .LVU295
 605:Core/Src/main.c ****   {
 606:Core/Src/main.c ****   }
 1159              		.loc 1 606 3 discriminator 1 view .LVU296
 604:Core/Src/main.c ****   while (1)
 1160              		.loc 1 604 9 discriminator 1 view .LVU297
 1161 0002 FEE7     		b	.L91
 1162              		.cfi_endproc
 1163              	.LFE141:
 1165              		.section	.text.SystemClock_Config,"ax",%progbits
 1166              		.align	1
 1167              		.global	SystemClock_Config
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1171              		.fpu fpv4-sp-d16
 1173              	SystemClock_Config:
 1174              	.LFB131:
 210:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1175              		.loc 1 210 1 view -0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 80
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179 0000 00B5     		push	{lr}
 1180              	.LCFI9:
 1181              		.cfi_def_cfa_offset 4
 1182              		.cfi_offset 14, -4
 1183 0002 95B0     		sub	sp, sp, #84
 1184              	.LCFI10:
 1185              		.cfi_def_cfa_offset 88
 211:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1186              		.loc 1 211 3 view .LVU299
 211:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1187              		.loc 1 211 22 is_stmt 0 view .LVU300
 1188 0004 3022     		movs	r2, #48
 1189 0006 0021     		movs	r1, #0
 1190 0008 08A8     		add	r0, sp, #32
ARM GAS  /tmp/ccq8Ph0O.s 			page 38


 1191 000a FFF7FEFF 		bl	memset
 1192              	.LVL41:
 212:Core/Src/main.c **** 
 1193              		.loc 1 212 3 is_stmt 1 view .LVU301
 212:Core/Src/main.c **** 
 1194              		.loc 1 212 22 is_stmt 0 view .LVU302
 1195 000e 0023     		movs	r3, #0
 1196 0010 0393     		str	r3, [sp, #12]
 1197 0012 0493     		str	r3, [sp, #16]
 1198 0014 0593     		str	r3, [sp, #20]
 1199 0016 0693     		str	r3, [sp, #24]
 1200 0018 0793     		str	r3, [sp, #28]
 216:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1201              		.loc 1 216 3 is_stmt 1 view .LVU303
 1202              	.LBB6:
 216:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1203              		.loc 1 216 3 view .LVU304
 1204 001a 0193     		str	r3, [sp, #4]
 216:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1205              		.loc 1 216 3 view .LVU305
 1206 001c 204A     		ldr	r2, .L98
 1207 001e 116C     		ldr	r1, [r2, #64]
 1208 0020 41F08051 		orr	r1, r1, #268435456
 1209 0024 1164     		str	r1, [r2, #64]
 216:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1210              		.loc 1 216 3 view .LVU306
 1211 0026 126C     		ldr	r2, [r2, #64]
 1212 0028 02F08052 		and	r2, r2, #268435456
 1213 002c 0192     		str	r2, [sp, #4]
 216:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1214              		.loc 1 216 3 view .LVU307
 1215 002e 019A     		ldr	r2, [sp, #4]
 1216              	.LBE6:
 216:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1217              		.loc 1 216 3 view .LVU308
 217:Core/Src/main.c **** 
 1218              		.loc 1 217 3 view .LVU309
 1219              	.LBB7:
 217:Core/Src/main.c **** 
 1220              		.loc 1 217 3 view .LVU310
 1221 0030 0293     		str	r3, [sp, #8]
 217:Core/Src/main.c **** 
 1222              		.loc 1 217 3 view .LVU311
 1223 0032 1C4A     		ldr	r2, .L98+4
 1224 0034 1368     		ldr	r3, [r2]
 1225 0036 23F44043 		bic	r3, r3, #49152
 1226 003a 43F48043 		orr	r3, r3, #16384
 1227 003e 1360     		str	r3, [r2]
 217:Core/Src/main.c **** 
 1228              		.loc 1 217 3 view .LVU312
 1229 0040 1368     		ldr	r3, [r2]
 1230 0042 03F44043 		and	r3, r3, #49152
 1231 0046 0293     		str	r3, [sp, #8]
 217:Core/Src/main.c **** 
 1232              		.loc 1 217 3 view .LVU313
 1233 0048 029B     		ldr	r3, [sp, #8]
 1234              	.LBE7:
ARM GAS  /tmp/ccq8Ph0O.s 			page 39


 217:Core/Src/main.c **** 
 1235              		.loc 1 217 3 view .LVU314
 222:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1236              		.loc 1 222 3 view .LVU315
 222:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1237              		.loc 1 222 36 is_stmt 0 view .LVU316
 1238 004a 0123     		movs	r3, #1
 1239 004c 0893     		str	r3, [sp, #32]
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1240              		.loc 1 223 3 is_stmt 1 view .LVU317
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1241              		.loc 1 223 30 is_stmt 0 view .LVU318
 1242 004e 4FF48033 		mov	r3, #65536
 1243 0052 0993     		str	r3, [sp, #36]
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1244              		.loc 1 224 3 is_stmt 1 view .LVU319
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1245              		.loc 1 224 34 is_stmt 0 view .LVU320
 1246 0054 0223     		movs	r3, #2
 1247 0056 0E93     		str	r3, [sp, #56]
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1248              		.loc 1 225 3 is_stmt 1 view .LVU321
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1249              		.loc 1 225 35 is_stmt 0 view .LVU322
 1250 0058 4FF48002 		mov	r2, #4194304
 1251 005c 0F92     		str	r2, [sp, #60]
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1252              		.loc 1 226 3 is_stmt 1 view .LVU323
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1253              		.loc 1 226 30 is_stmt 0 view .LVU324
 1254 005e 0422     		movs	r2, #4
 1255 0060 1092     		str	r2, [sp, #64]
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1256              		.loc 1 227 3 is_stmt 1 view .LVU325
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1257              		.loc 1 227 30 is_stmt 0 view .LVU326
 1258 0062 6022     		movs	r2, #96
 1259 0064 1192     		str	r2, [sp, #68]
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1260              		.loc 1 228 3 is_stmt 1 view .LVU327
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1261              		.loc 1 228 30 is_stmt 0 view .LVU328
 1262 0066 1293     		str	r3, [sp, #72]
 229:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1263              		.loc 1 229 3 is_stmt 1 view .LVU329
 229:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1264              		.loc 1 229 30 is_stmt 0 view .LVU330
 1265 0068 0323     		movs	r3, #3
 1266 006a 1393     		str	r3, [sp, #76]
 230:Core/Src/main.c ****   {
 1267              		.loc 1 230 3 is_stmt 1 view .LVU331
 230:Core/Src/main.c ****   {
 1268              		.loc 1 230 7 is_stmt 0 view .LVU332
 1269 006c 08A8     		add	r0, sp, #32
 1270 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1271              	.LVL42:
 230:Core/Src/main.c ****   {
ARM GAS  /tmp/ccq8Ph0O.s 			page 40


 1272              		.loc 1 230 6 view .LVU333
 1273 0072 88B9     		cbnz	r0, .L96
 237:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1274              		.loc 1 237 3 is_stmt 1 view .LVU334
 237:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1275              		.loc 1 237 31 is_stmt 0 view .LVU335
 1276 0074 0F23     		movs	r3, #15
 1277 0076 0393     		str	r3, [sp, #12]
 239:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1278              		.loc 1 239 3 is_stmt 1 view .LVU336
 239:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1279              		.loc 1 239 34 is_stmt 0 view .LVU337
 1280 0078 0223     		movs	r3, #2
 1281 007a 0493     		str	r3, [sp, #16]
 240:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1282              		.loc 1 240 3 is_stmt 1 view .LVU338
 240:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1283              		.loc 1 240 35 is_stmt 0 view .LVU339
 1284 007c 8023     		movs	r3, #128
 1285 007e 0593     		str	r3, [sp, #20]
 241:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1286              		.loc 1 241 3 is_stmt 1 view .LVU340
 241:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1287              		.loc 1 241 36 is_stmt 0 view .LVU341
 1288 0080 4FF48053 		mov	r3, #4096
 1289 0084 0693     		str	r3, [sp, #24]
 242:Core/Src/main.c **** 
 1290              		.loc 1 242 3 is_stmt 1 view .LVU342
 242:Core/Src/main.c **** 
 1291              		.loc 1 242 36 is_stmt 0 view .LVU343
 1292 0086 0793     		str	r3, [sp, #28]
 244:Core/Src/main.c ****   {
 1293              		.loc 1 244 3 is_stmt 1 view .LVU344
 244:Core/Src/main.c ****   {
 1294              		.loc 1 244 7 is_stmt 0 view .LVU345
 1295 0088 0121     		movs	r1, #1
 1296 008a 03A8     		add	r0, sp, #12
 1297 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1298              	.LVL43:
 244:Core/Src/main.c ****   {
 1299              		.loc 1 244 6 view .LVU346
 1300 0090 20B9     		cbnz	r0, .L97
 248:Core/Src/main.c **** 
 1301              		.loc 1 248 1 view .LVU347
 1302 0092 15B0     		add	sp, sp, #84
 1303              	.LCFI11:
 1304              		.cfi_remember_state
 1305              		.cfi_def_cfa_offset 4
 1306              		@ sp needed
 1307 0094 5DF804FB 		ldr	pc, [sp], #4
 1308              	.L96:
 1309              	.LCFI12:
 1310              		.cfi_restore_state
 232:Core/Src/main.c ****   }
 1311              		.loc 1 232 5 is_stmt 1 view .LVU348
 1312 0098 FFF7FEFF 		bl	Error_Handler
 1313              	.LVL44:
ARM GAS  /tmp/ccq8Ph0O.s 			page 41


 1314              	.L97:
 246:Core/Src/main.c ****   }
 1315              		.loc 1 246 5 view .LVU349
 1316 009c FFF7FEFF 		bl	Error_Handler
 1317              	.LVL45:
 1318              	.L99:
 1319              		.align	2
 1320              	.L98:
 1321 00a0 00380240 		.word	1073887232
 1322 00a4 00700040 		.word	1073770496
 1323              		.cfi_endproc
 1324              	.LFE131:
 1326              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1327              		.align	2
 1328              	.LC0:
 1329 0000 54455452 		.ascii	"TETRADYNE\000"
 1329      4144594E 
 1329      4500
 1330 000a 0000     		.align	2
 1331              	.LC1:
 1332 000c 53323A00 		.ascii	"S2:\000"
 1333              		.align	2
 1334              	.LC2:
 1335 0010 53313A00 		.ascii	"S1:\000"
 1336              		.section	.text.main,"ax",%progbits
 1337              		.align	1
 1338              		.global	main
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu fpv4-sp-d16
 1344              	main:
 1345              	.LFB130:
 136:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1346              		.loc 1 136 1 view -0
 1347              		.cfi_startproc
 1348              		@ Volatile: function does not return.
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351 0000 08B5     		push	{r3, lr}
 1352              	.LCFI13:
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 3, -8
 1355              		.cfi_offset 14, -4
 144:Core/Src/main.c **** 
 1356              		.loc 1 144 3 view .LVU351
 1357 0002 FFF7FEFF 		bl	HAL_Init
 1358              	.LVL46:
 151:Core/Src/main.c **** 
 1359              		.loc 1 151 3 view .LVU352
 1360 0006 FFF7FEFF 		bl	SystemClock_Config
 1361              	.LVL47:
 158:Core/Src/main.c ****   MX_TIM4_Init();
 1362              		.loc 1 158 3 view .LVU353
 1363 000a FFF7FEFF 		bl	MX_GPIO_Init
 1364              	.LVL48:
 159:Core/Src/main.c ****   MX_UART4_Init();
ARM GAS  /tmp/ccq8Ph0O.s 			page 42


 1365              		.loc 1 159 3 view .LVU354
 1366 000e FFF7FEFF 		bl	MX_TIM4_Init
 1367              	.LVL49:
 160:Core/Src/main.c ****   MX_UART5_Init();
 1368              		.loc 1 160 3 view .LVU355
 1369 0012 FFF7FEFF 		bl	MX_UART4_Init
 1370              	.LVL50:
 161:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1371              		.loc 1 161 3 view .LVU356
 1372 0016 FFF7FEFF 		bl	MX_UART5_Init
 1373              	.LVL51:
 164:Core/Src/main.c **** 
 1374              		.loc 1 164 3 view .LVU357
 1375 001a 1A48     		ldr	r0, .L103
 1376 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1377              	.LVL52:
 167:Core/Src/main.c ****   //HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 1378              		.loc 1 167 3 view .LVU358
 1379 0020 0022     		movs	r2, #0
 1380 0022 4FF48051 		mov	r1, #4096
 1381 0026 1848     		ldr	r0, .L103+4
 1382 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1383              	.LVL53:
 170:Core/Src/main.c ****   //HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1384              		.loc 1 170 3 view .LVU359
 1385 002c 0122     		movs	r2, #1
 1386 002e 1749     		ldr	r1, .L103+8
 1387 0030 1748     		ldr	r0, .L103+12
 1388 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1389              	.LVL54:
 173:Core/Src/main.c ****   digit2=16;
 1390              		.loc 1 173 3 view .LVU360
 173:Core/Src/main.c ****   digit2=16;
 1391              		.loc 1 173 9 is_stmt 0 view .LVU361
 1392 0036 1023     		movs	r3, #16
 1393 0038 164A     		ldr	r2, .L103+16
 1394 003a 1370     		strb	r3, [r2]
 174:Core/Src/main.c **** 
 1395              		.loc 1 174 3 is_stmt 1 view .LVU362
 174:Core/Src/main.c **** 
 1396              		.loc 1 174 9 is_stmt 0 view .LVU363
 1397 003c 164A     		ldr	r2, .L103+20
 1398 003e 1370     		strb	r3, [r2]
 177:Core/Src/main.c ****   lcd_clear();
 1399              		.loc 1 177 3 is_stmt 1 view .LVU364
 1400 0040 FFF7FEFF 		bl	lcd_init
 1401              	.LVL55:
 178:Core/Src/main.c ****   lcd_set_pos(0, 3);
 1402              		.loc 1 178 3 view .LVU365
 1403 0044 FFF7FEFF 		bl	lcd_clear
 1404              	.LVL56:
 179:Core/Src/main.c ****   lcd_write_string("TETRADYNE");
 1405              		.loc 1 179 3 view .LVU366
 1406 0048 0321     		movs	r1, #3
 1407 004a 0020     		movs	r0, #0
 1408 004c FFF7FEFF 		bl	lcd_set_pos
 1409              	.LVL57:
ARM GAS  /tmp/ccq8Ph0O.s 			page 43


 180:Core/Src/main.c ****   lcd_set_pos(1, 0);
 1410              		.loc 1 180 3 view .LVU367
 1411 0050 1248     		ldr	r0, .L103+24
 1412 0052 FFF7FEFF 		bl	lcd_write_string
 1413              	.LVL58:
 181:Core/Src/main.c ****   lcd_write_string("S2:");
 1414              		.loc 1 181 3 view .LVU368
 1415 0056 0021     		movs	r1, #0
 1416 0058 0120     		movs	r0, #1
 1417 005a FFF7FEFF 		bl	lcd_set_pos
 1418              	.LVL59:
 182:Core/Src/main.c ****   lcd_set_pos(1, 0xC);
 1419              		.loc 1 182 3 view .LVU369
 1420 005e 1048     		ldr	r0, .L103+28
 1421 0060 FFF7FEFF 		bl	lcd_write_string
 1422              	.LVL60:
 183:Core/Src/main.c ****   lcd_write_string("S1:");
 1423              		.loc 1 183 3 view .LVU370
 1424 0064 0C21     		movs	r1, #12
 1425 0066 0120     		movs	r0, #1
 1426 0068 FFF7FEFF 		bl	lcd_set_pos
 1427              	.LVL61:
 184:Core/Src/main.c ****   /* USER CODE END 2 */
 1428              		.loc 1 184 3 view .LVU371
 1429 006c 0D48     		ldr	r0, .L103+32
 1430 006e FFF7FEFF 		bl	lcd_write_string
 1431              	.LVL62:
 1432              	.L101:
 189:Core/Src/main.c ****   {
 1433              		.loc 1 189 3 discriminator 1 view .LVU372
 195:Core/Src/main.c **** 	  	     ///segment_display_task();
 1434              		.loc 1 195 9 discriminator 1 view .LVU373
 1435 0072 FFF7FEFF 		bl	task_timer
 1436              	.LVL63:
 197:Core/Src/main.c **** 	  	     key_read_task();
 1437              		.loc 1 197 10 discriminator 1 view .LVU374
 1438 0076 FFF7FEFF 		bl	lcd_display_task
 1439              	.LVL64:
 198:Core/Src/main.c **** 
 1440              		.loc 1 198 10 discriminator 1 view .LVU375
 1441 007a FFF7FEFF 		bl	key_read_task
 1442              	.LVL65:
 200:Core/Src/main.c ****   }
 1443              		.loc 1 200 10 discriminator 1 view .LVU376
 1444 007e FFF7FEFF 		bl	main_task
 1445              	.LVL66:
 189:Core/Src/main.c ****   {
 1446              		.loc 1 189 9 discriminator 1 view .LVU377
 1447 0082 F6E7     		b	.L101
 1448              	.L104:
 1449              		.align	2
 1450              	.L103:
 1451 0084 00000000 		.word	htim4
 1452 0088 00000240 		.word	1073872896
 1453 008c 00000000 		.word	.LANCHOR27
 1454 0090 00000000 		.word	huart4
 1455 0094 00000000 		.word	.LANCHOR8
ARM GAS  /tmp/ccq8Ph0O.s 			page 44


 1456 0098 00000000 		.word	.LANCHOR6
 1457 009c 00000000 		.word	.LC0
 1458 00a0 0C000000 		.word	.LC1
 1459 00a4 10000000 		.word	.LC2
 1460              		.cfi_endproc
 1461              	.LFE130:
 1463              		.global	RX_msg
 1464              		.global	TX_msg
 1465              		.global	ID
 1466              		.global	event_buffer
 1467              		.global	rx2_buffer
 1468              		.global	rx1_buffer
 1469              		.global	stop_cmd
 1470              		.global	start_cmd
 1471              		.global	transmission_f
 1472              		.global	rx_temp
 1473              		.global	digit_table
 1474              		.global	lcd_process
 1475              		.global	data
 1476              		.global	cmd
 1477              		.global	digit2_update
 1478              		.global	digit1_update
 1479              		.global	lcd_digit1_f
 1480              		.global	is_EN
 1481              		.global	digit2
 1482              		.global	digit1
 1483              		.global	event
 1484              		.global	state
 1485              		.global	key2_data
 1486              		.global	key1_data
 1487              		.global	TX2_delay_val
 1488              		.global	d_timer_TX2
 1489              		.global	TX1_delay_val
 1490              		.global	d_timer_TX1
 1491              		.global	d_timer_20ms
 1492              		.global	d_timer_50ms
 1493              		.global	d_timer_30ms
 1494              		.global	tx1_buffer
 1495              		.global	tx2_buffer
 1496              		.global	flag_digit_1
 1497              		.global	f_querry
 1498              		.global	f_timer_50ms
 1499              		.global	f_timer_30ms
 1500              		.global	f_timer_20ms
 1501              		.global	f_timer_10ms
 1502              		.global	f_seg_timer_500ms
 1503              		.global	f_timer_TX
 1504              		.global	f_busy
 1505              		.section	.bss.ID,"aw",%nobits
 1508              	ID:
 1509 0000 00       		.space	1
 1510              		.section	.bss.RX_msg,"aw",%nobits
 1511              		.align	2
 1512              		.set	.LANCHOR18,. + 0
 1515              	RX_msg:
 1516 0000 00000000 		.space	4
 1517              		.section	.bss.TX_msg,"aw",%nobits
ARM GAS  /tmp/ccq8Ph0O.s 			page 45


 1518              		.align	2
 1519              		.set	.LANCHOR19,. + 0
 1522              	TX_msg:
 1523 0000 00000000 		.space	4
 1524              		.section	.bss.cmd,"aw",%nobits
 1525              		.set	.LANCHOR4,. + 0
 1528              	cmd:
 1529 0000 00       		.space	1
 1530              		.section	.bss.d_timer_20ms,"aw",%nobits
 1531              		.set	.LANCHOR12,. + 0
 1534              	d_timer_20ms:
 1535 0000 00       		.space	1
 1536              		.section	.bss.d_timer_30ms,"aw",%nobits
 1537              		.set	.LANCHOR10,. + 0
 1540              	d_timer_30ms:
 1541 0000 00       		.space	1
 1542              		.section	.bss.d_timer_50ms,"aw",%nobits
 1543              		.set	.LANCHOR13,. + 0
 1546              	d_timer_50ms:
 1547 0000 00       		.space	1
 1548              		.section	.bss.d_timer_TX1,"aw",%nobits
 1551              	d_timer_TX1:
 1552 0000 00       		.space	1
 1553              		.section	.bss.d_timer_TX2,"aw",%nobits
 1556              	d_timer_TX2:
 1557 0000 00       		.space	1
 1558              		.section	.bss.data,"aw",%nobits
 1559              		.set	.LANCHOR7,. + 0
 1562              	data:
 1563 0000 00       		.space	1
 1564              		.section	.bss.digit1,"aw",%nobits
 1565              		.set	.LANCHOR8,. + 0
 1568              	digit1:
 1569 0000 00       		.space	1
 1570              		.section	.bss.digit1_update,"aw",%nobits
 1573              	digit1_update:
 1574 0000 00       		.space	1
 1575              		.section	.bss.digit2,"aw",%nobits
 1576              		.set	.LANCHOR6,. + 0
 1579              	digit2:
 1580 0000 00       		.space	1
 1581              		.section	.bss.digit2_update,"aw",%nobits
 1584              	digit2_update:
 1585 0000 00       		.space	1
 1586              		.section	.bss.event,"aw",%nobits
 1587              		.set	.LANCHOR23,. + 0
 1590              	event:
 1591 0000 00       		.space	1
 1592              		.section	.bss.event_buffer,"aw",%nobits
 1593              		.align	2
 1594              		.set	.LANCHOR14,. + 0
 1597              	event_buffer:
 1598 0000 00000000 		.space	66
 1598      00000000 
 1598      00000000 
 1598      00000000 
 1598      00000000 
ARM GAS  /tmp/ccq8Ph0O.s 			page 46


 1599              		.section	.bss.f_busy,"aw",%nobits
 1600              		.set	.LANCHOR22,. + 0
 1603              	f_busy:
 1604 0000 00       		.space	1
 1605              		.section	.bss.f_querry,"aw",%nobits
 1606              		.set	.LANCHOR25,. + 0
 1609              	f_querry:
 1610 0000 00       		.space	1
 1611              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 1614              	f_seg_timer_500ms:
 1615 0000 00       		.space	1
 1616              		.section	.bss.f_timer_10ms,"aw",%nobits
 1617              		.set	.LANCHOR9,. + 0
 1620              	f_timer_10ms:
 1621 0000 00       		.space	1
 1622              		.section	.bss.f_timer_20ms,"aw",%nobits
 1623              		.set	.LANCHOR0,. + 0
 1626              	f_timer_20ms:
 1627 0000 00       		.space	1
 1628              		.section	.bss.f_timer_30ms,"aw",%nobits
 1629              		.set	.LANCHOR11,. + 0
 1632              	f_timer_30ms:
 1633 0000 00       		.space	1
 1634              		.section	.bss.f_timer_50ms,"aw",%nobits
 1637              	f_timer_50ms:
 1638 0000 00       		.space	1
 1639              		.section	.bss.f_timer_TX,"aw",%nobits
 1642              	f_timer_TX:
 1643 0000 00       		.space	1
 1644              		.section	.bss.is_EN,"aw",%nobits
 1645              		.set	.LANCHOR1,. + 0
 1648              	is_EN:
 1649 0000 00       		.space	1
 1650              		.section	.bss.key1_data,"aw",%nobits
 1651              		.set	.LANCHOR15,. + 0
 1654              	key1_data:
 1655 0000 00       		.space	1
 1656              		.section	.bss.key2_data,"aw",%nobits
 1657              		.set	.LANCHOR16,. + 0
 1660              	key2_data:
 1661 0000 00       		.space	1
 1662              		.section	.bss.lcd_digit1_f,"aw",%nobits
 1663              		.set	.LANCHOR3,. + 0
 1666              	lcd_digit1_f:
 1667 0000 00       		.space	1
 1668              		.section	.bss.lcd_process,"aw",%nobits
 1669              		.set	.LANCHOR2,. + 0
 1672              	lcd_process:
 1673 0000 00       		.space	1
 1674              		.section	.bss.rx1_buffer,"aw",%nobits
 1675              		.align	2
 1678              	rx1_buffer:
 1679 0000 00000000 		.space	66
 1679      00000000 
 1679      00000000 
 1679      00000000 
 1679      00000000 
ARM GAS  /tmp/ccq8Ph0O.s 			page 47


 1680              		.section	.bss.rx2_buffer,"aw",%nobits
 1681              		.align	2
 1682              		.set	.LANCHOR17,. + 0
 1685              	rx2_buffer:
 1686 0000 00000000 		.space	66
 1686      00000000 
 1686      00000000 
 1686      00000000 
 1686      00000000 
 1687              		.section	.bss.rx_temp,"aw",%nobits
 1688              		.set	.LANCHOR27,. + 0
 1691              	rx_temp:
 1692 0000 00       		.space	1
 1693              		.section	.bss.state,"aw",%nobits
 1694              		.set	.LANCHOR24,. + 0
 1697              	state:
 1698 0000 00       		.space	1
 1699              		.section	.bss.transmission_f,"aw",%nobits
 1700              		.set	.LANCHOR26,. + 0
 1703              	transmission_f:
 1704 0000 00       		.space	1
 1705              		.section	.data.TX1_delay_val,"aw"
 1708              	TX1_delay_val:
 1709 0000 FA       		.byte	-6
 1710              		.section	.data.TX2_delay_val,"aw"
 1713              	TX2_delay_val:
 1714 0000 FA       		.byte	-6
 1715              		.section	.data.digit_table,"aw"
 1716              		.align	2
 1717              		.set	.LANCHOR5,. + 0
 1720              	digit_table:
 1721 0000 30313233 		.ascii	"0123456789abcdef-"
 1721      34353637 
 1721      38396162 
 1721      63646566 
 1721      2D
 1722              		.section	.data.flag_digit_1,"aw"
 1725              	flag_digit_1:
 1726 0000 01       		.byte	1
 1727              		.section	.data.start_cmd,"aw"
 1728              		.set	.LANCHOR20,. + 0
 1731              	start_cmd:
 1732 0000 02       		.byte	2
 1733              		.section	.data.stop_cmd,"aw"
 1734              		.set	.LANCHOR21,. + 0
 1737              	stop_cmd:
 1738 0000 03       		.byte	3
 1739              		.section	.data.tx1_buffer,"aw"
 1740              		.align	2
 1743              	tx1_buffer:
 1744 0000 61626364 		.ascii	"abcdef"
 1744      6566
 1745              		.section	.data.tx2_buffer,"aw"
 1746              		.align	2
 1749              	tx2_buffer:
 1750 0000 31323334 		.ascii	"123456789\000"
 1750      35363738 
ARM GAS  /tmp/ccq8Ph0O.s 			page 48


 1750      3900
 1751              		.text
 1752              	.Letext0:
 1753              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1754              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1755              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1756              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1757              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1758              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1759              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1760              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1761              		.file 11 "Core/Inc/tim.h"
 1762              		.file 12 "Core/Inc/usart.h"
 1763              		.file 13 "Core/Inc/buffer.h"
 1764              		.file 14 "Core/Inc/message.h"
 1765              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1766              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1767              		.file 17 "Core/Inc/gpio.h"
 1768              		.file 18 "Core/Inc/lcd16x2.h"
 1769              		.file 19 "<built-in>"
ARM GAS  /tmp/ccq8Ph0O.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccq8Ph0O.s:18     .text.m_send_to_lcd:0000000000000000 $t
     /tmp/ccq8Ph0O.s:26     .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/ccq8Ph0O.s:122    .text.m_send_to_lcd:0000000000000068 $d
     /tmp/ccq8Ph0O.s:131    .text.lcd_display_task:0000000000000000 $t
     /tmp/ccq8Ph0O.s:138    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/ccq8Ph0O.s:177    .text.lcd_display_task:0000000000000026 $d
     /tmp/ccq8Ph0O.s:181    .text.lcd_display_task:000000000000002a $t
     /tmp/ccq8Ph0O.s:268    .text.lcd_display_task:000000000000009c $d
     /tmp/ccq8Ph0O.s:280    .text.task_timer:0000000000000000 $t
     /tmp/ccq8Ph0O.s:287    .text.task_timer:0000000000000000 task_timer
     /tmp/ccq8Ph0O.s:386    .text.task_timer:0000000000000068 $d
     /tmp/ccq8Ph0O.s:397    .text.key_read_task:0000000000000000 $t
     /tmp/ccq8Ph0O.s:404    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccq8Ph0O.s:522    .text.key_read_task:0000000000000080 $d
     /tmp/ccq8Ph0O.s:531    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccq8Ph0O.s:538    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccq8Ph0O.s:621    .text.RS485_Read_Message:0000000000000048 $d
     /tmp/ccq8Ph0O.s:629    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccq8Ph0O.s:636    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccq8Ph0O.s:694    .text.RS485_Send_Message:000000000000004c $d
     /tmp/ccq8Ph0O.s:703    .text.main_task:0000000000000000 $t
     /tmp/ccq8Ph0O.s:710    .text.main_task:0000000000000000 main_task
     /tmp/ccq8Ph0O.s:769    .text.main_task:0000000000000040 $d
     /tmp/ccq8Ph0O.s:775    .text.main_task:0000000000000058 $t
     /tmp/ccq8Ph0O.s:969    .text.main_task:0000000000000124 $d
     /tmp/ccq8Ph0O.s:981    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccq8Ph0O.s:988    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccq8Ph0O.s:1015   .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccq8Ph0O.s:1021   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccq8Ph0O.s:1028   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccq8Ph0O.s:1118   .text.HAL_UART_RxCpltCallback:0000000000000054 $d
     /tmp/ccq8Ph0O.s:1127   .text.Error_Handler:0000000000000000 $t
     /tmp/ccq8Ph0O.s:1134   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccq8Ph0O.s:1166   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccq8Ph0O.s:1173   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccq8Ph0O.s:1321   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccq8Ph0O.s:1327   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1337   .text.main:0000000000000000 $t
     /tmp/ccq8Ph0O.s:1344   .text.main:0000000000000000 main
     /tmp/ccq8Ph0O.s:1451   .text.main:0000000000000084 $d
     /tmp/ccq8Ph0O.s:1515   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccq8Ph0O.s:1522   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccq8Ph0O.s:1508   .bss.ID:0000000000000000 ID
     /tmp/ccq8Ph0O.s:1597   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccq8Ph0O.s:1685   .bss.rx2_buffer:0000000000000000 rx2_buffer
     /tmp/ccq8Ph0O.s:1678   .bss.rx1_buffer:0000000000000000 rx1_buffer
     /tmp/ccq8Ph0O.s:1737   .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/ccq8Ph0O.s:1731   .data.start_cmd:0000000000000000 start_cmd
     /tmp/ccq8Ph0O.s:1703   .bss.transmission_f:0000000000000000 transmission_f
     /tmp/ccq8Ph0O.s:1691   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccq8Ph0O.s:1720   .data.digit_table:0000000000000000 digit_table
     /tmp/ccq8Ph0O.s:1672   .bss.lcd_process:0000000000000000 lcd_process
     /tmp/ccq8Ph0O.s:1562   .bss.data:0000000000000000 data
     /tmp/ccq8Ph0O.s:1528   .bss.cmd:0000000000000000 cmd
     /tmp/ccq8Ph0O.s:1584   .bss.digit2_update:0000000000000000 digit2_update
ARM GAS  /tmp/ccq8Ph0O.s 			page 50


     /tmp/ccq8Ph0O.s:1573   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/ccq8Ph0O.s:1666   .bss.lcd_digit1_f:0000000000000000 lcd_digit1_f
     /tmp/ccq8Ph0O.s:1648   .bss.is_EN:0000000000000000 is_EN
     /tmp/ccq8Ph0O.s:1579   .bss.digit2:0000000000000000 digit2
     /tmp/ccq8Ph0O.s:1568   .bss.digit1:0000000000000000 digit1
     /tmp/ccq8Ph0O.s:1590   .bss.event:0000000000000000 event
     /tmp/ccq8Ph0O.s:1697   .bss.state:0000000000000000 state
     /tmp/ccq8Ph0O.s:1660   .bss.key2_data:0000000000000000 key2_data
     /tmp/ccq8Ph0O.s:1654   .bss.key1_data:0000000000000000 key1_data
     /tmp/ccq8Ph0O.s:1713   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/ccq8Ph0O.s:1556   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/ccq8Ph0O.s:1708   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/ccq8Ph0O.s:1551   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/ccq8Ph0O.s:1534   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/ccq8Ph0O.s:1546   .bss.d_timer_50ms:0000000000000000 d_timer_50ms
     /tmp/ccq8Ph0O.s:1540   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccq8Ph0O.s:1743   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/ccq8Ph0O.s:1749   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/ccq8Ph0O.s:1725   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/ccq8Ph0O.s:1609   .bss.f_querry:0000000000000000 f_querry
     /tmp/ccq8Ph0O.s:1637   .bss.f_timer_50ms:0000000000000000 f_timer_50ms
     /tmp/ccq8Ph0O.s:1632   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccq8Ph0O.s:1626   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/ccq8Ph0O.s:1620   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccq8Ph0O.s:1614   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/ccq8Ph0O.s:1642   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/ccq8Ph0O.s:1603   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccq8Ph0O.s:1509   .bss.ID:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1511   .bss.RX_msg:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1518   .bss.TX_msg:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1529   .bss.cmd:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1535   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1541   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1547   .bss.d_timer_50ms:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1552   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1557   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1563   .bss.data:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1569   .bss.digit1:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1574   .bss.digit1_update:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1580   .bss.digit2:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1585   .bss.digit2_update:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1591   .bss.event:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1593   .bss.event_buffer:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1604   .bss.f_busy:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1610   .bss.f_querry:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1615   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1621   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1627   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1633   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1638   .bss.f_timer_50ms:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1643   .bss.f_timer_TX:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1649   .bss.is_EN:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1655   .bss.key1_data:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1661   .bss.key2_data:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1667   .bss.lcd_digit1_f:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1673   .bss.lcd_process:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1675   .bss.rx1_buffer:0000000000000000 $d
ARM GAS  /tmp/ccq8Ph0O.s 			page 51


     /tmp/ccq8Ph0O.s:1681   .bss.rx2_buffer:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1692   .bss.rx_temp:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1698   .bss.state:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1704   .bss.transmission_f:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1716   .data.digit_table:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1740   .data.tx1_buffer:0000000000000000 $d
     /tmp/ccq8Ph0O.s:1746   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
buffer_to_message
check_checksum
cal_checksum
HAL_UART_Transmit
huart4
buffer_pop
htim4
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
lcd_clear
lcd_set_pos
lcd_write_string
