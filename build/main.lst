ARM GAS  /tmp/ccEQqYmG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.update_lcd,"ax",%progbits
  20              		.align	1
  21              		.global	update_lcd
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	update_lcd:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "buffer.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccEQqYmG.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** #define RAND __TIME__
  49:Core/Src/main.c **** uint8_t f_lcd_item =0;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** uint8_t f_busy;
  52:Core/Src/main.c **** uint8_t f_querry=0;
  53:Core/Src/main.c **** uint8_t f_read_msg;
  54:Core/Src/main.c **** uint8_t tx_timeout = 0;
  55:Core/Src/main.c **** unsigned char f_timer_TX = 0;
  56:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  57:Core/Src/main.c **** unsigned char f_timer_10ms = 0;
  58:Core/Src/main.c **** unsigned char f_timer_20ms = 0;
  59:Core/Src/main.c **** unsigned char f_waiting_rx = 0;
  60:Core/Src/main.c **** unsigned char f_timer_30ms = 0;
  61:Core/Src/main.c **** unsigned char f_timer_50ms = 0;
  62:Core/Src/main.c **** unsigned char n_querry = 0;
  63:Core/Src/main.c **** unsigned char flag_digit_1 = 1;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** unsigned char tx2_buffer[10] = {"123456789"};
  66:Core/Src/main.c **** unsigned char tx1_buffer[6] = {"abcdef"};
  67:Core/Src/main.c **** unsigned char d_timer_30ms;
  68:Core/Src/main.c **** unsigned char d_timer_50ms;
  69:Core/Src/main.c **** unsigned char d_timer_20ms;
  70:Core/Src/main.c **** unsigned char d_timer_TX1;
  71:Core/Src/main.c **** unsigned char TX1_delay_val = 250;
  72:Core/Src/main.c **** unsigned char d_timer_TX2;
  73:Core/Src/main.c **** unsigned char TX2_delay_val = 250;
  74:Core/Src/main.c **** unsigned char key1_data, key2_data;
  75:Core/Src/main.c **** unsigned char state, event, error;
  76:Core/Src/main.c **** unsigned char num_slave=0;
  77:Core/Src/main.c **** uint8_t key1_ID,key2_ID;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** unsigned char digit1, digit2;
  80:Core/Src/main.c **** uint8_t old_num_slave, old_digit1,old_digit2;
  81:Core/Src/main.c **** // flag for LCD
  82:Core/Src/main.c **** unsigned char is_EN = 0;
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** unsigned char digit1_update = 0;
  85:Core/Src/main.c **** unsigned char digit2_update = 0;
  86:Core/Src/main.c **** unsigned char cmd, data;
ARM GAS  /tmp/ccEQqYmG.s 			page 3


  87:Core/Src/main.c **** unsigned char lcd_process = 4;
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** char digit_table[17] = {"0123456789abcdef-"};
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** uint8_t rx_temp;
  92:Core/Src/main.c **** uint8_t x=1;
  93:Core/Src/main.c **** circular_buffer digit1_buf;
  94:Core/Src/main.c **** circular_buffer digit2_buf;
  95:Core/Src/main.c **** circular_buffer rx_buffer;
  96:Core/Src/main.c **** circular_buffer event_buffer;
  97:Core/Src/main.c **** uint8_t ID;
  98:Core/Src/main.c **** uint8_t ID_list[10];
  99:Core/Src/main.c **** uint8_t TX_msg[6];
 100:Core/Src/main.c **** uint8_t RX_msg[4];
 101:Core/Src/main.c **** uint8_t *pRX_msg;
 102:Core/Src/main.c **** uint8_t *pTX_msg;
 103:Core/Src/main.c **** uint8_t temp;
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END PV */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 108:Core/Src/main.c **** void SystemClock_Config(void);
 109:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 110:Core/Src/main.c **** void RS485_RX_Task(void);
 111:Core/Src/main.c **** void RS485_TX_Task(void);
 112:Core/Src/main.c **** void task_timer(void);
 113:Core/Src/main.c **** void counting_task(void);
 114:Core/Src/main.c **** void uart_TX2_task(void);
 115:Core/Src/main.c **** void uart_TX1_task(void);
 116:Core/Src/main.c **** void uart_RX1_task(void);
 117:Core/Src/main.c **** void uart_RX2_task(void);
 118:Core/Src/main.c **** void segment_display_task(void);
 119:Core/Src/main.c **** void lcd_display_task(void);
 120:Core/Src/main.c **** void key_read_task(void);
 121:Core/Src/main.c **** void main_task(void);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** void seven_segment_driver(char input, char select_digit);
 124:Core/Src/main.c **** void TX1_delay_update(void);
 125:Core/Src/main.c **** void TX2_delay_update(void);
 126:Core/Src/main.c **** void m_send_to_lcd(char data);
 127:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 128:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 129:Core/Src/main.c **** void Set_Receiver_Port1(void);
 130:Core/Src/main.c **** void Set_Receiver_Port2(void);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** void RS485_Send_Message(uint8_t addr, uint8_t func_code, uint8_t data);
 133:Core/Src/main.c **** void RS485_Read_Message(void);
 134:Core/Src/main.c **** void check_slave(void);
 135:Core/Src/main.c **** void update_lcd(uint8_t* itm);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** void display_connected_slave(uint8_t slave);
 138:Core/Src/main.c **** void display_disconnected_slave(uint8_t slave);
 139:Core/Src/main.c **** /*
 140:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 141:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 142:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 143:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
ARM GAS  /tmp/ccEQqYmG.s 			page 4


 144:Core/Src/main.c **** */
 145:Core/Src/main.c **** /* USER CODE END PFP */
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 148:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /* USER CODE END 0 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**
 153:Core/Src/main.c ****  * @brief  The application entry point.
 154:Core/Src/main.c ****  * @retval int
 155:Core/Src/main.c ****  */
 156:Core/Src/main.c **** int main(void)
 157:Core/Src/main.c **** {
 158:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 	/* USER CODE END 1 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** 	/* MCU Configuration--------------------------------------------------------*/
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 165:Core/Src/main.c **** 	HAL_Init();
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 	/* USER CODE BEGIN Init */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** 	/* USER CODE END Init */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** 	/* Configure the system clock */
 172:Core/Src/main.c **** 	SystemClock_Config();
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** 	/* USER CODE BEGIN SysInit */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** 	/* USER CODE END SysInit */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** 	/* Initialize all configured peripherals */
 179:Core/Src/main.c **** 	MX_GPIO_Init();
 180:Core/Src/main.c **** 	MX_TIM4_Init();
 181:Core/Src/main.c **** 	MX_UART4_Init();
 182:Core/Src/main.c **** 	MX_UART5_Init();
 183:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim4);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); // Enable Receiver 1
 188:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 	HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 191:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** 	digit1 = 16;
 194:Core/Src/main.c **** 	digit2 = 16;
 195:Core/Src/main.c **** 	num_slave=0;
 196:Core/Src/main.c **** 	ID=0;
 197:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 198:Core/Src/main.c **** 	ID_list[SLAVE1]= 0;
 199:Core/Src/main.c **** 	ID_list[SLAVE2]= 0;
 200:Core/Src/main.c **** 	//ID_list[2]= 0x12;
ARM GAS  /tmp/ccEQqYmG.s 			page 5


 201:Core/Src/main.c **** 	state = STATE_TX;
 202:Core/Src/main.c **** 	/*
 203:Core/Src/main.c **** 	if (num_slave>0){
 204:Core/Src/main.c **** 		state = STATE_OPERATION;
 205:Core/Src/main.c **** 	}else{
 206:Core/Src/main.c **** 		state=STATE_ASSIGNED_ADDR;
 207:Core/Src/main.c **** 	}*/
 208:Core/Src/main.c **** 	HAL_Delay(1000);
 209:Core/Src/main.c **** 	lcd_init();
 210:Core/Src/main.c **** 	lcd_clear();
 211:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 212:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 213:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 214:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 215:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 216:Core/Src/main.c **** 	lcd_write_string("S2:");
 217:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 218:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 219:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 220:Core/Src/main.c **** 	lcd_write_string("S1:");
 221:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 222:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 223:Core/Src/main.c **** 	old_digit1 = digit1;
 224:Core/Src/main.c **** 	old_digit2=old_digit2;
 225:Core/Src/main.c **** 	old_num_slave= num_slave;
 226:Core/Src/main.c **** 	/* USER CODE END 2 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** 	/* Infinite loop */
 229:Core/Src/main.c **** 	/* USER CODE BEGIN WHILE */
 230:Core/Src/main.c **** 	while (1)
 231:Core/Src/main.c **** 	{
 232:Core/Src/main.c **** 		/* USER CODE END WHILE */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** 		/* USER CODE BEGIN 3 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** 		task_timer();
 237:Core/Src/main.c **** 		/// segment_display_task();
 238:Core/Src/main.c **** 		lcd_display_task();
 239:Core/Src/main.c **** 		key_read_task();
 240:Core/Src/main.c **** 		RS485_RX_Task();
 241:Core/Src/main.c **** 		main_task();
 242:Core/Src/main.c **** 	}
 243:Core/Src/main.c **** 	/* USER CODE END 3 */
 244:Core/Src/main.c **** }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /**
 247:Core/Src/main.c ****  * @brief System Clock Configuration
 248:Core/Src/main.c ****  * @retval None
 249:Core/Src/main.c ****  */
 250:Core/Src/main.c **** void SystemClock_Config(void)
 251:Core/Src/main.c **** {
 252:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 253:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** 	/** Configure the main internal regulator output voltage
 256:Core/Src/main.c **** 	 */
 257:Core/Src/main.c **** 	__HAL_RCC_PWR_CLK_ENABLE();
ARM GAS  /tmp/ccEQqYmG.s 			page 6


 258:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** 	/** Initializes the RCC Oscillators according to the specified parameters
 261:Core/Src/main.c **** 	 * in the RCC_OscInitTypeDef structure.
 262:Core/Src/main.c **** 	 */
 263:Core/Src/main.c **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 264:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 267:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 268:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 269:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 270:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 271:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 272:Core/Src/main.c **** 	{
 273:Core/Src/main.c **** 		Error_Handler();
 274:Core/Src/main.c **** 	}
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** 	/** Initializes the CPU, AHB and APB buses clocks
 277:Core/Src/main.c **** 	 */
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RC
 279:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 280:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 281:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 282:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 285:Core/Src/main.c **** 	{
 286:Core/Src/main.c **** 		Error_Handler();
 287:Core/Src/main.c **** 	}
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** void update_lcd(uint8_t* itm){
  30              		.loc 1 292 30 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** 	if (lcd_process<4)return;
  35              		.loc 1 294 2 view .LVU1
  36              		.loc 1 294 17 is_stmt 0 view .LVU2
  37 0000 1A4B     		ldr	r3, .L8
  38 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  39              		.loc 1 294 5 view .LVU3
  40 0004 032B     		cmp	r3, #3
  41 0006 08D9     		bls	.L1
 295:Core/Src/main.c **** 	if (itm == &digit2){
  42              		.loc 1 295 2 is_stmt 1 view .LVU4
  43              		.loc 1 295 5 is_stmt 0 view .LVU5
  44 0008 194B     		ldr	r3, .L8+4
  45 000a 9842     		cmp	r0, r3
  46 000c 06D0     		beq	.L5
 296:Core/Src/main.c **** 		cmd = 0xC3;
 297:Core/Src/main.c **** 		data = digit_table[digit2];
ARM GAS  /tmp/ccEQqYmG.s 			page 7


 298:Core/Src/main.c **** 		lcd_process = 0;
 299:Core/Src/main.c **** 	}else if(itm ==&digit1){
  47              		.loc 1 299 8 is_stmt 1 view .LVU6
  48              		.loc 1 299 10 is_stmt 0 view .LVU7
  49 000e 194B     		ldr	r3, .L8+8
  50 0010 9842     		cmp	r0, r3
  51 0012 10D0     		beq	.L6
 300:Core/Src/main.c **** 		cmd = 0xCF;
 301:Core/Src/main.c **** 		data = digit_table[digit1];
 302:Core/Src/main.c **** 		lcd_process = 0;
 303:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  52              		.loc 1 303 8 is_stmt 1 view .LVU8
  53              		.loc 1 303 10 is_stmt 0 view .LVU9
  54 0014 184B     		ldr	r3, .L8+12
  55 0016 9842     		cmp	r0, r3
  56 0018 1AD0     		beq	.L7
  57              	.L1:
 304:Core/Src/main.c **** 		cmd =0x8C;
 305:Core/Src/main.c **** 		data = digit_table[num_slave];
 306:Core/Src/main.c **** 		lcd_process = 0;
 307:Core/Src/main.c **** 	}
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** }
  58              		.loc 1 309 1 view .LVU10
  59 001a 7047     		bx	lr
  60              	.L5:
 296:Core/Src/main.c **** 		data = digit_table[digit2];
  61              		.loc 1 296 3 is_stmt 1 view .LVU11
 296:Core/Src/main.c **** 		data = digit_table[digit2];
  62              		.loc 1 296 7 is_stmt 0 view .LVU12
  63 001c 174B     		ldr	r3, .L8+16
  64 001e C322     		movs	r2, #195
  65 0020 1A70     		strb	r2, [r3]
 297:Core/Src/main.c **** 		lcd_process = 0;
  66              		.loc 1 297 3 is_stmt 1 view .LVU13
 297:Core/Src/main.c **** 		lcd_process = 0;
  67              		.loc 1 297 21 is_stmt 0 view .LVU14
  68 0022 134B     		ldr	r3, .L8+4
  69 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70 0026 164A     		ldr	r2, .L8+20
  71 0028 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 297:Core/Src/main.c **** 		lcd_process = 0;
  72              		.loc 1 297 8 view .LVU15
  73 002a 164B     		ldr	r3, .L8+24
  74 002c 1A70     		strb	r2, [r3]
 298:Core/Src/main.c **** 	}else if(itm ==&digit1){
  75              		.loc 1 298 3 is_stmt 1 view .LVU16
 298:Core/Src/main.c **** 	}else if(itm ==&digit1){
  76              		.loc 1 298 15 is_stmt 0 view .LVU17
  77 002e 0F4B     		ldr	r3, .L8
  78 0030 0022     		movs	r2, #0
  79 0032 1A70     		strb	r2, [r3]
  80 0034 7047     		bx	lr
  81              	.L6:
 300:Core/Src/main.c **** 		data = digit_table[digit1];
  82              		.loc 1 300 3 is_stmt 1 view .LVU18
 300:Core/Src/main.c **** 		data = digit_table[digit1];
ARM GAS  /tmp/ccEQqYmG.s 			page 8


  83              		.loc 1 300 7 is_stmt 0 view .LVU19
  84 0036 114B     		ldr	r3, .L8+16
  85 0038 CF22     		movs	r2, #207
  86 003a 1A70     		strb	r2, [r3]
 301:Core/Src/main.c **** 		lcd_process = 0;
  87              		.loc 1 301 3 is_stmt 1 view .LVU20
 301:Core/Src/main.c **** 		lcd_process = 0;
  88              		.loc 1 301 21 is_stmt 0 view .LVU21
  89 003c 0D4B     		ldr	r3, .L8+8
  90 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91 0040 0F4A     		ldr	r2, .L8+20
  92 0042 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 301:Core/Src/main.c **** 		lcd_process = 0;
  93              		.loc 1 301 8 view .LVU22
  94 0044 0F4B     		ldr	r3, .L8+24
  95 0046 1A70     		strb	r2, [r3]
 302:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  96              		.loc 1 302 3 is_stmt 1 view .LVU23
 302:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  97              		.loc 1 302 15 is_stmt 0 view .LVU24
  98 0048 084B     		ldr	r3, .L8
  99 004a 0022     		movs	r2, #0
 100 004c 1A70     		strb	r2, [r3]
 101 004e 7047     		bx	lr
 102              	.L7:
 304:Core/Src/main.c **** 		data = digit_table[num_slave];
 103              		.loc 1 304 3 is_stmt 1 view .LVU25
 304:Core/Src/main.c **** 		data = digit_table[num_slave];
 104              		.loc 1 304 7 is_stmt 0 view .LVU26
 105 0050 0A4B     		ldr	r3, .L8+16
 106 0052 8C22     		movs	r2, #140
 107 0054 1A70     		strb	r2, [r3]
 305:Core/Src/main.c **** 		lcd_process = 0;
 108              		.loc 1 305 3 is_stmt 1 view .LVU27
 305:Core/Src/main.c **** 		lcd_process = 0;
 109              		.loc 1 305 21 is_stmt 0 view .LVU28
 110 0056 084B     		ldr	r3, .L8+12
 111 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 005a 094A     		ldr	r2, .L8+20
 113 005c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 305:Core/Src/main.c **** 		lcd_process = 0;
 114              		.loc 1 305 8 view .LVU29
 115 005e 094B     		ldr	r3, .L8+24
 116 0060 1A70     		strb	r2, [r3]
 306:Core/Src/main.c **** 	}
 117              		.loc 1 306 3 is_stmt 1 view .LVU30
 306:Core/Src/main.c **** 	}
 118              		.loc 1 306 15 is_stmt 0 view .LVU31
 119 0062 024B     		ldr	r3, .L8
 120 0064 0022     		movs	r2, #0
 121 0066 1A70     		strb	r2, [r3]
 122 0068 D7E7     		b	.L1
 123              	.L9:
 124 006a 00BF     		.align	2
 125              	.L8:
 126 006c 00000000 		.word	.LANCHOR0
 127 0070 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccEQqYmG.s 			page 9


 128 0074 00000000 		.word	.LANCHOR5
 129 0078 00000000 		.word	.LANCHOR6
 130 007c 00000000 		.word	.LANCHOR2
 131 0080 00000000 		.word	.LANCHOR3
 132 0084 00000000 		.word	.LANCHOR4
 133              		.cfi_endproc
 134              	.LFE132:
 136              		.section	.text.m_send_to_lcd,"ax",%progbits
 137              		.align	1
 138              		.global	m_send_to_lcd
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	m_send_to_lcd:
 144              	.LVL1:
 145              	.LFB134:
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** 
 312:Core/Src/main.c **** void lcd_display_task(void)
 313:Core/Src/main.c **** {
 314:Core/Src/main.c **** 	/*
 315:Core/Src/main.c **** 	if (digit2!=old_digit2){
 316:Core/Src/main.c **** 		cmd = 0xC3;
 317:Core/Src/main.c **** 		data = digit_table[digit2];
 318:Core/Src/main.c **** 		old_digit2=digit2;
 319:Core/Src/main.c **** 		lcd_process = 0;
 320:Core/Src/main.c **** 	}else if(digit1!=old_digit1){
 321:Core/Src/main.c **** 		cmd = 0xCF;
 322:Core/Src/main.c **** 		data = digit_table[digit1];
 323:Core/Src/main.c **** 		old_digit1 = digit1;
 324:Core/Src/main.c **** 		lcd_process = 0;
 325:Core/Src/main.c **** 	}else if(old_num_slave!=num_slave){
 326:Core/Src/main.c **** 		cmd =0x8C;
 327:Core/Src/main.c **** 		data = digit_table[num_slave];
 328:Core/Src/main.c **** 		old_num_slave = num_slave;
 329:Core/Src/main.c **** 		lcd_process = 0;
 330:Core/Src/main.c **** 	}
 331:Core/Src/main.c **** 	*/
 332:Core/Src/main.c **** 	
 333:Core/Src/main.c **** 	if(lcd_process>3) return;
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** 	switch (lcd_process)
 336:Core/Src/main.c **** 	{
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** 	case 0:
 339:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 340:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 341:Core/Src/main.c **** 		break;
 342:Core/Src/main.c **** 	case 1:
 343:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 344:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 345:Core/Src/main.c **** 		break;
 346:Core/Src/main.c **** 	case 2:
 347:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 348:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 349:Core/Src/main.c **** 		break;
 350:Core/Src/main.c **** 	case 3:
ARM GAS  /tmp/ccEQqYmG.s 			page 10


 351:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 352:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 353:Core/Src/main.c **** 		break;
 354:Core/Src/main.c **** 	}
 355:Core/Src/main.c **** }
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** void m_send_to_lcd(char data)
 358:Core/Src/main.c **** {
 146              		.loc 1 358 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		.loc 1 358 1 is_stmt 0 view .LVU33
 151 0000 08B5     		push	{r3, lr}
 152              	.LCFI0:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** 	// writing data to pin PE0~PE3
 361:Core/Src/main.c **** 	GPIOE->ODR = (GPIOE->ODR & 0xFFFFFFF0) | data;
 156              		.loc 1 361 2 is_stmt 1 view .LVU34
 157              		.loc 1 361 21 is_stmt 0 view .LVU35
 158 0002 124A     		ldr	r2, .L14
 159 0004 5369     		ldr	r3, [r2, #20]
 160              		.loc 1 361 27 view .LVU36
 161 0006 23F00F03 		bic	r3, r3, #15
 162              		.loc 1 361 41 view .LVU37
 163 000a 1843     		orrs	r0, r0, r3
 164              	.LVL2:
 165              		.loc 1 361 13 view .LVU38
 166 000c 5061     		str	r0, [r2, #20]
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** 	if (!f_timer_20ms)
 167              		.loc 1 363 2 is_stmt 1 view .LVU39
 168              		.loc 1 363 6 is_stmt 0 view .LVU40
 169 000e 104B     		ldr	r3, .L14+4
 170 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 171              		.loc 1 363 5 view .LVU41
 172 0012 6BB1     		cbz	r3, .L10
 364:Core/Src/main.c **** 		return;
 365:Core/Src/main.c **** 	f_timer_20ms = 0;
 173              		.loc 1 365 2 is_stmt 1 view .LVU42
 174              		.loc 1 365 15 is_stmt 0 view .LVU43
 175 0014 0E4B     		ldr	r3, .L14+4
 176 0016 0022     		movs	r2, #0
 177 0018 1A70     		strb	r2, [r3]
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** 	if (!is_EN)
 178              		.loc 1 367 2 is_stmt 1 view .LVU44
 179              		.loc 1 367 6 is_stmt 0 view .LVU45
 180 001a 0E4B     		ldr	r3, .L14+8
 181 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 182              		.loc 1 367 5 view .LVU46
 183 001e 43B9     		cbnz	r3, .L12
 368:Core/Src/main.c **** 	{
 369:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
ARM GAS  /tmp/ccEQqYmG.s 			page 11


 184              		.loc 1 369 3 is_stmt 1 view .LVU47
 185 0020 0122     		movs	r2, #1
 186 0022 2021     		movs	r1, #32
 187 0024 0948     		ldr	r0, .L14
 188 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL3:
 370:Core/Src/main.c **** 		is_EN = 1;
 190              		.loc 1 370 3 view .LVU48
 191              		.loc 1 370 9 is_stmt 0 view .LVU49
 192 002a 0A4B     		ldr	r3, .L14+8
 193 002c 0122     		movs	r2, #1
 194 002e 1A70     		strb	r2, [r3]
 195              	.L10:
 371:Core/Src/main.c **** 	}
 372:Core/Src/main.c **** 	else
 373:Core/Src/main.c **** 	{
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 376:Core/Src/main.c **** 		is_EN = 0;
 377:Core/Src/main.c **** 		lcd_process++;
 378:Core/Src/main.c **** 	
 379:Core/Src/main.c **** 	}
 380:Core/Src/main.c **** }
 196              		.loc 1 380 1 view .LVU50
 197 0030 08BD     		pop	{r3, pc}
 198              	.L12:
 375:Core/Src/main.c **** 		is_EN = 0;
 199              		.loc 1 375 3 is_stmt 1 view .LVU51
 200 0032 0022     		movs	r2, #0
 201 0034 2021     		movs	r1, #32
 202 0036 0548     		ldr	r0, .L14
 203 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL4:
 376:Core/Src/main.c **** 		lcd_process++;
 205              		.loc 1 376 3 view .LVU52
 376:Core/Src/main.c **** 		lcd_process++;
 206              		.loc 1 376 9 is_stmt 0 view .LVU53
 207 003c 054B     		ldr	r3, .L14+8
 208 003e 0022     		movs	r2, #0
 209 0040 1A70     		strb	r2, [r3]
 377:Core/Src/main.c **** 	
 210              		.loc 1 377 3 is_stmt 1 view .LVU54
 377:Core/Src/main.c **** 	
 211              		.loc 1 377 14 is_stmt 0 view .LVU55
 212 0042 054A     		ldr	r2, .L14+12
 213 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 214 0046 0133     		adds	r3, r3, #1
 215 0048 1370     		strb	r3, [r2]
 216 004a F1E7     		b	.L10
 217              	.L15:
 218              		.align	2
 219              	.L14:
 220 004c 00100240 		.word	1073876992
 221 0050 00000000 		.word	.LANCHOR7
 222 0054 00000000 		.word	.LANCHOR8
 223 0058 00000000 		.word	.LANCHOR0
 224              		.cfi_endproc
ARM GAS  /tmp/ccEQqYmG.s 			page 12


 225              	.LFE134:
 227              		.section	.text.lcd_display_task,"ax",%progbits
 228              		.align	1
 229              		.global	lcd_display_task
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	lcd_display_task:
 235              	.LFB133:
 313:Core/Src/main.c **** 	/*
 236              		.loc 1 313 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 08B5     		push	{r3, lr}
 241              	.LCFI1:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 3, -8
 244              		.cfi_offset 14, -4
 333:Core/Src/main.c **** 
 245              		.loc 1 333 2 view .LVU57
 333:Core/Src/main.c **** 
 246              		.loc 1 333 16 is_stmt 0 view .LVU58
 247 0002 1C4B     		ldr	r3, .L25
 248 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 333:Core/Src/main.c **** 
 249              		.loc 1 333 4 view .LVU59
 250 0006 032B     		cmp	r3, #3
 251 0008 0FD8     		bhi	.L16
 335:Core/Src/main.c **** 	{
 252              		.loc 1 335 2 is_stmt 1 view .LVU60
 253 000a 032B     		cmp	r3, #3
 254 000c 0DD8     		bhi	.L16
 255 000e DFE803F0 		tbb	[pc, r3]
 256              	.L19:
 257 0012 02       		.byte	(.L22-.L19)/2
 258 0013 0D       		.byte	(.L21-.L19)/2
 259 0014 19       		.byte	(.L20-.L19)/2
 260 0015 24       		.byte	(.L18-.L19)/2
 261              		.p2align 1
 262              	.L22:
 339:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 263              		.loc 1 339 3 view .LVU61
 264 0016 0022     		movs	r2, #0
 265 0018 1021     		movs	r1, #16
 266 001a 1748     		ldr	r0, .L25+4
 267 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 268              	.LVL5:
 340:Core/Src/main.c **** 		break;
 269              		.loc 1 340 3 view .LVU62
 270 0020 164B     		ldr	r3, .L25+8
 271 0022 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 272 0024 0009     		lsrs	r0, r0, #4
 273 0026 FFF7FEFF 		bl	m_send_to_lcd
 274              	.LVL6:
 341:Core/Src/main.c **** 	case 1:
 275              		.loc 1 341 3 view .LVU63
ARM GAS  /tmp/ccEQqYmG.s 			page 13


 276              	.L16:
 355:Core/Src/main.c **** 
 277              		.loc 1 355 1 is_stmt 0 view .LVU64
 278 002a 08BD     		pop	{r3, pc}
 279              	.L21:
 343:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 280              		.loc 1 343 3 is_stmt 1 view .LVU65
 281 002c 0022     		movs	r2, #0
 282 002e 1021     		movs	r1, #16
 283 0030 1148     		ldr	r0, .L25+4
 284 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 285              	.LVL7:
 344:Core/Src/main.c **** 		break;
 286              		.loc 1 344 3 view .LVU66
 344:Core/Src/main.c **** 		break;
 287              		.loc 1 344 22 is_stmt 0 view .LVU67
 288 0036 114B     		ldr	r3, .L25+8
 289 0038 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 344:Core/Src/main.c **** 		break;
 290              		.loc 1 344 3 view .LVU68
 291 003a 00F00F00 		and	r0, r0, #15
 292 003e FFF7FEFF 		bl	m_send_to_lcd
 293              	.LVL8:
 345:Core/Src/main.c **** 	case 2:
 294              		.loc 1 345 3 is_stmt 1 view .LVU69
 295 0042 F2E7     		b	.L16
 296              	.L20:
 347:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 297              		.loc 1 347 3 view .LVU70
 298 0044 0122     		movs	r2, #1
 299 0046 1021     		movs	r1, #16
 300 0048 0B48     		ldr	r0, .L25+4
 301 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 302              	.LVL9:
 348:Core/Src/main.c **** 		break;
 303              		.loc 1 348 3 view .LVU71
 304 004e 0C4B     		ldr	r3, .L25+12
 305 0050 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 306 0052 0009     		lsrs	r0, r0, #4
 307 0054 FFF7FEFF 		bl	m_send_to_lcd
 308              	.LVL10:
 349:Core/Src/main.c **** 	case 3:
 309              		.loc 1 349 3 view .LVU72
 310 0058 E7E7     		b	.L16
 311              	.L18:
 351:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 312              		.loc 1 351 3 view .LVU73
 313 005a 0122     		movs	r2, #1
 314 005c 1021     		movs	r1, #16
 315 005e 0648     		ldr	r0, .L25+4
 316 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 317              	.LVL11:
 352:Core/Src/main.c **** 		break;
 318              		.loc 1 352 3 view .LVU74
 352:Core/Src/main.c **** 		break;
 319              		.loc 1 352 22 is_stmt 0 view .LVU75
 320 0064 064B     		ldr	r3, .L25+12
ARM GAS  /tmp/ccEQqYmG.s 			page 14


 321 0066 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 352:Core/Src/main.c **** 		break;
 322              		.loc 1 352 3 view .LVU76
 323 0068 00F00F00 		and	r0, r0, #15
 324 006c FFF7FEFF 		bl	m_send_to_lcd
 325              	.LVL12:
 353:Core/Src/main.c **** 	}
 326              		.loc 1 353 3 is_stmt 1 view .LVU77
 327 0070 DBE7     		b	.L16
 328              	.L26:
 329 0072 00BF     		.align	2
 330              	.L25:
 331 0074 00000000 		.word	.LANCHOR0
 332 0078 00100240 		.word	1073876992
 333 007c 00000000 		.word	.LANCHOR2
 334 0080 00000000 		.word	.LANCHOR4
 335              		.cfi_endproc
 336              	.LFE133:
 338              		.section	.text.task_timer,"ax",%progbits
 339              		.align	1
 340              		.global	task_timer
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 345              	task_timer:
 346              	.LFB135:
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** void task_timer(void)
 383:Core/Src/main.c **** {
 347              		.loc 1 383 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 384:Core/Src/main.c **** 	if (!f_timer_10ms)
 352              		.loc 1 384 2 view .LVU79
 353              		.loc 1 384 6 is_stmt 0 view .LVU80
 354 0000 184B     		ldr	r3, .L34
 355 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356              		.loc 1 384 5 view .LVU81
 357 0004 BBB1     		cbz	r3, .L27
 385:Core/Src/main.c **** 		return;		  // checking if 10 ms timer interrupt is set (10 ms), if set then do timer task
 386:Core/Src/main.c **** 	f_timer_10ms = 0; // clear the flag to wait next interupt
 358              		.loc 1 386 2 is_stmt 1 view .LVU82
 359              		.loc 1 386 15 is_stmt 0 view .LVU83
 360 0006 174B     		ldr	r3, .L34
 361 0008 0022     		movs	r2, #0
 362 000a 1A70     		strb	r2, [r3]
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** 	d_timer_30ms++; // count timer for 30 ms interval
 363              		.loc 1 388 2 is_stmt 1 view .LVU84
 364              		.loc 1 388 14 is_stmt 0 view .LVU85
 365 000c 164A     		ldr	r2, .L34+4
 366 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 367 0010 0133     		adds	r3, r3, #1
 368 0012 DBB2     		uxtb	r3, r3
 369 0014 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccEQqYmG.s 			page 15


 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** 	if (d_timer_30ms == 3) // checking if the count reached 30 ms
 370              		.loc 1 390 2 is_stmt 1 view .LVU86
 371              		.loc 1 390 5 is_stmt 0 view .LVU87
 372 0016 032B     		cmp	r3, #3
 373 0018 0ED0     		beq	.L31
 374              	.L29:
 391:Core/Src/main.c **** 	{
 392:Core/Src/main.c **** 		d_timer_30ms = 0; // assign "0" to repeat counting
 393:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 394:Core/Src/main.c **** 	}
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** 	d_timer_20ms++;
 375              		.loc 1 396 2 is_stmt 1 view .LVU88
 376              		.loc 1 396 14 is_stmt 0 view .LVU89
 377 001a 144A     		ldr	r2, .L34+8
 378 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 379 001e 0133     		adds	r3, r3, #1
 380 0020 DBB2     		uxtb	r3, r3
 381 0022 1370     		strb	r3, [r2]
 397:Core/Src/main.c **** 	if (d_timer_20ms == 2)
 382              		.loc 1 397 2 is_stmt 1 view .LVU90
 383              		.loc 1 397 5 is_stmt 0 view .LVU91
 384 0024 022B     		cmp	r3, #2
 385 0026 0ED0     		beq	.L32
 386              	.L30:
 398:Core/Src/main.c **** 	{
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** 		d_timer_20ms = 0;
 401:Core/Src/main.c **** 		f_timer_20ms = 1;
 402:Core/Src/main.c **** 	}
 403:Core/Src/main.c **** 	d_timer_50ms++;
 387              		.loc 1 403 2 is_stmt 1 view .LVU92
 388              		.loc 1 403 14 is_stmt 0 view .LVU93
 389 0028 114A     		ldr	r2, .L34+12
 390 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 391 002c 0133     		adds	r3, r3, #1
 392 002e DBB2     		uxtb	r3, r3
 393 0030 1370     		strb	r3, [r2]
 404:Core/Src/main.c **** 	if (d_timer_50ms == 5)
 394              		.loc 1 404 2 is_stmt 1 view .LVU94
 395              		.loc 1 404 5 is_stmt 0 view .LVU95
 396 0032 052B     		cmp	r3, #5
 397 0034 0ED0     		beq	.L33
 398              	.L27:
 405:Core/Src/main.c **** 	{
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** 		d_timer_50ms = 0;
 408:Core/Src/main.c **** 		// f_timer_50ms=1;
 409:Core/Src/main.c **** 		//buffer_push(&event_buffer, EVENT_QUERRY);
 410:Core/Src/main.c **** 		f_querry=1;
 411:Core/Src/main.c **** 	}
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** }
 399              		.loc 1 413 1 view .LVU96
 400 0036 7047     		bx	lr
 401              	.L31:
ARM GAS  /tmp/ccEQqYmG.s 			page 16


 392:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 402              		.loc 1 392 3 is_stmt 1 view .LVU97
 392:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 403              		.loc 1 392 16 is_stmt 0 view .LVU98
 404 0038 1346     		mov	r3, r2
 405 003a 0022     		movs	r2, #0
 406 003c 1A70     		strb	r2, [r3]
 393:Core/Src/main.c **** 	}
 407              		.loc 1 393 3 is_stmt 1 view .LVU99
 393:Core/Src/main.c **** 	}
 408              		.loc 1 393 16 is_stmt 0 view .LVU100
 409 003e 0D4B     		ldr	r3, .L34+16
 410 0040 0122     		movs	r2, #1
 411 0042 1A70     		strb	r2, [r3]
 412 0044 E9E7     		b	.L29
 413              	.L32:
 400:Core/Src/main.c **** 		f_timer_20ms = 1;
 414              		.loc 1 400 3 is_stmt 1 view .LVU101
 400:Core/Src/main.c **** 		f_timer_20ms = 1;
 415              		.loc 1 400 16 is_stmt 0 view .LVU102
 416 0046 1346     		mov	r3, r2
 417 0048 0022     		movs	r2, #0
 418 004a 1A70     		strb	r2, [r3]
 401:Core/Src/main.c **** 	}
 419              		.loc 1 401 3 is_stmt 1 view .LVU103
 401:Core/Src/main.c **** 	}
 420              		.loc 1 401 16 is_stmt 0 view .LVU104
 421 004c 0A4B     		ldr	r3, .L34+20
 422 004e 0122     		movs	r2, #1
 423 0050 1A70     		strb	r2, [r3]
 424 0052 E9E7     		b	.L30
 425              	.L33:
 407:Core/Src/main.c **** 		// f_timer_50ms=1;
 426              		.loc 1 407 3 is_stmt 1 view .LVU105
 407:Core/Src/main.c **** 		// f_timer_50ms=1;
 427              		.loc 1 407 16 is_stmt 0 view .LVU106
 428 0054 1346     		mov	r3, r2
 429 0056 0022     		movs	r2, #0
 430 0058 1A70     		strb	r2, [r3]
 410:Core/Src/main.c **** 	}
 431              		.loc 1 410 3 is_stmt 1 view .LVU107
 410:Core/Src/main.c **** 	}
 432              		.loc 1 410 11 is_stmt 0 view .LVU108
 433 005a 084B     		ldr	r3, .L34+24
 434 005c 0122     		movs	r2, #1
 435 005e 1A70     		strb	r2, [r3]
 436 0060 E9E7     		b	.L27
 437              	.L35:
 438 0062 00BF     		.align	2
 439              	.L34:
 440 0064 00000000 		.word	.LANCHOR9
 441 0068 00000000 		.word	.LANCHOR10
 442 006c 00000000 		.word	.LANCHOR12
 443 0070 00000000 		.word	.LANCHOR13
 444 0074 00000000 		.word	.LANCHOR11
 445 0078 00000000 		.word	.LANCHOR7
 446 007c 00000000 		.word	.LANCHOR14
ARM GAS  /tmp/ccEQqYmG.s 			page 17


 447              		.cfi_endproc
 448              	.LFE135:
 450              		.section	.text.key_read_task,"ax",%progbits
 451              		.align	1
 452              		.global	key_read_task
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 457              	key_read_task:
 458              	.LFB136:
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** void key_read_task(void)
 416:Core/Src/main.c **** {
 459              		.loc 1 416 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 417:Core/Src/main.c **** 	if (!f_timer_30ms) return;		  // Checking if 30 ms counting is done
 463              		.loc 1 417 2 view .LVU110
 464              		.loc 1 417 6 is_stmt 0 view .LVU111
 465 0000 2F4B     		ldr	r3, .L49
 466 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 467              		.loc 1 417 5 view .LVU112
 468 0004 002B     		cmp	r3, #0
 469 0006 59D0     		beq	.L44
 416:Core/Src/main.c **** 	if (!f_timer_30ms) return;		  // Checking if 30 ms counting is done
 470              		.loc 1 416 1 view .LVU113
 471 0008 10B5     		push	{r4, lr}
 472              	.LCFI2:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 4, -8
 475              		.cfi_offset 14, -4
 418:Core/Src/main.c **** 	f_timer_30ms = 0; // clear the flag to wait next counting
 476              		.loc 1 418 2 is_stmt 1 view .LVU114
 477              		.loc 1 418 15 is_stmt 0 view .LVU115
 478 000a 2D4B     		ldr	r3, .L49
 479 000c 0022     		movs	r2, #0
 480 000e 1A70     		strb	r2, [r3]
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin | KEY2_Pin));
 481              		.loc 1 420 2 is_stmt 1 view .LVU116
 482              		.loc 1 420 39 is_stmt 0 view .LVU117
 483 0010 2C4B     		ldr	r3, .L49+4
 484 0012 1869     		ldr	r0, [r3, #16]
 485              	.LVL13:
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** 	key1_data = key1_data << 1; // Preparing to read KEY1 Input
 486              		.loc 1 422 2 is_stmt 1 view .LVU118
 487              		.loc 1 422 24 is_stmt 0 view .LVU119
 488 0014 2C4A     		ldr	r2, .L49+8
 489 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 490 0018 5B00     		lsls	r3, r3, #1
 491 001a DBB2     		uxtb	r3, r3
 492              		.loc 1 422 12 view .LVU120
 493 001c 1370     		strb	r3, [r2]
 423:Core/Src/main.c **** 	key1_data &= 0b00001110;
 494              		.loc 1 423 2 is_stmt 1 view .LVU121
ARM GAS  /tmp/ccEQqYmG.s 			page 18


 495              		.loc 1 423 12 is_stmt 0 view .LVU122
 496 001e 03F00E03 		and	r3, r3, #14
 497 0022 1370     		strb	r3, [r2]
 424:Core/Src/main.c **** 	key1_data |= ((key_pindata >> 2) & 0x1); // Read KEY1 Input
 498              		.loc 1 424 2 is_stmt 1 view .LVU123
 499              		.loc 1 424 35 is_stmt 0 view .LVU124
 500 0024 C0F38001 		ubfx	r1, r0, #2, #1
 501              		.loc 1 424 12 view .LVU125
 502 0028 0B43     		orrs	r3, r3, r1
 503 002a 1370     		strb	r3, [r2]
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** 	key2_data = key2_data << 1; // Preparing to read KEY2 Input
 504              		.loc 1 426 2 is_stmt 1 view .LVU126
 505              		.loc 1 426 24 is_stmt 0 view .LVU127
 506 002c 2749     		ldr	r1, .L49+12
 507 002e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 508 0030 5200     		lsls	r2, r2, #1
 509 0032 D2B2     		uxtb	r2, r2
 510              		.loc 1 426 12 view .LVU128
 511 0034 0A70     		strb	r2, [r1]
 427:Core/Src/main.c **** 	key2_data &= 0b00001110;
 512              		.loc 1 427 2 is_stmt 1 view .LVU129
 513              		.loc 1 427 12 is_stmt 0 view .LVU130
 514 0036 02F00E02 		and	r2, r2, #14
 515 003a 0A70     		strb	r2, [r1]
 428:Core/Src/main.c **** 	key2_data |= (key_pindata >> 3); // Read KEY2 Input
 516              		.loc 1 428 2 is_stmt 1 view .LVU131
 517              		.loc 1 428 12 is_stmt 0 view .LVU132
 518 003c C0F3C000 		ubfx	r0, r0, #3, #1
 519              	.LVL14:
 520              		.loc 1 428 12 view .LVU133
 521 0040 0243     		orrs	r2, r2, r0
 522 0042 0A70     		strb	r2, [r1]
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** 	if (key1_data == KEY_PRESSED) // Checking if KEY1 is pressed
 523              		.loc 1 430 2 is_stmt 1 view .LVU134
 524              		.loc 1 430 5 is_stmt 0 view .LVU135
 525 0044 0C2B     		cmp	r3, #12
 526 0046 04D0     		beq	.L47
 527              	.L38:
 431:Core/Src/main.c **** 	{
 432:Core/Src/main.c **** 		digit1=(digit1+1)>9? 0 :digit1+1;
 433:Core/Src/main.c **** 		update_lcd(&digit1);
 434:Core/Src/main.c **** 		old_digit1 = digit1;
 435:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 436:Core/Src/main.c **** 		
 437:Core/Src/main.c **** 		state = STATE_TX;
 438:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 439:Core/Src/main.c **** 	}
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** 	if (key2_data == KEY_PRESSED) // Checking if KEY2 is pressed
 528              		.loc 1 441 2 is_stmt 1 view .LVU136
 529              		.loc 1 441 16 is_stmt 0 view .LVU137
 530 0048 204B     		ldr	r3, .L49+12
 531 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532              		.loc 1 441 5 view .LVU138
 533 004c 0C2B     		cmp	r3, #12
ARM GAS  /tmp/ccEQqYmG.s 			page 19


 534 004e 1AD0     		beq	.L48
 535              	.L36:
 442:Core/Src/main.c **** 	{
 443:Core/Src/main.c **** 		digit2=(digit2+1)>15? 0 :digit2+1;
 444:Core/Src/main.c **** 		update_lcd(&digit2);
 445:Core/Src/main.c **** 		old_digit2 =digit2;
 446:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 447:Core/Src/main.c **** 		state = STATE_TX;
 448:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 449:Core/Src/main.c **** 	}
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** }
 536              		.loc 1 451 1 view .LVU139
 537 0050 10BD     		pop	{r4, pc}
 538              	.L47:
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 539              		.loc 1 432 3 is_stmt 1 view .LVU140
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 540              		.loc 1 432 20 is_stmt 0 view .LVU141
 541 0052 1F4B     		ldr	r3, .L49+16
 542 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 543              		.loc 1 432 9 view .LVU142
 544 0056 082B     		cmp	r3, #8
 545 0058 13D8     		bhi	.L41
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 546              		.loc 1 432 9 discriminator 1 view .LVU143
 547 005a 0133     		adds	r3, r3, #1
 548 005c DBB2     		uxtb	r3, r3
 549              	.L39:
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 550              		.loc 1 432 9 discriminator 4 view .LVU144
 551 005e 1C4C     		ldr	r4, .L49+16
 552 0060 2370     		strb	r3, [r4]
 433:Core/Src/main.c **** 		old_digit1 = digit1;
 553              		.loc 1 433 3 is_stmt 1 discriminator 4 view .LVU145
 554 0062 2046     		mov	r0, r4
 555 0064 FFF7FEFF 		bl	update_lcd
 556              	.LVL15:
 434:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 557              		.loc 1 434 3 discriminator 4 view .LVU146
 434:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 558              		.loc 1 434 14 is_stmt 0 discriminator 4 view .LVU147
 559 0068 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 560 006a 1A4B     		ldr	r3, .L49+20
 561 006c 1970     		strb	r1, [r3]
 435:Core/Src/main.c **** 		
 562              		.loc 1 435 3 is_stmt 1 discriminator 4 view .LVU148
 563 006e 1A48     		ldr	r0, .L49+24
 564 0070 FFF7FEFF 		bl	buffer_push
 565              	.LVL16:
 437:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 566              		.loc 1 437 3 discriminator 4 view .LVU149
 437:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 567              		.loc 1 437 9 is_stmt 0 discriminator 4 view .LVU150
 568 0074 0121     		movs	r1, #1
 569 0076 194B     		ldr	r3, .L49+28
ARM GAS  /tmp/ccEQqYmG.s 			page 20


 570 0078 1970     		strb	r1, [r3]
 438:Core/Src/main.c **** 	}
 571              		.loc 1 438 3 is_stmt 1 discriminator 4 view .LVU151
 572 007a 1948     		ldr	r0, .L49+32
 573 007c FFF7FEFF 		bl	buffer_push
 574              	.LVL17:
 575 0080 E2E7     		b	.L38
 576              	.L41:
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 577              		.loc 1 432 9 is_stmt 0 view .LVU152
 578 0082 0023     		movs	r3, #0
 579 0084 EBE7     		b	.L39
 580              	.L48:
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 581              		.loc 1 443 3 is_stmt 1 view .LVU153
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 582              		.loc 1 443 20 is_stmt 0 view .LVU154
 583 0086 174B     		ldr	r3, .L49+36
 584 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 585              		.loc 1 443 9 view .LVU155
 586 008a 0E2B     		cmp	r3, #14
 587 008c 14D8     		bhi	.L42
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 588              		.loc 1 443 9 discriminator 1 view .LVU156
 589 008e 0133     		adds	r3, r3, #1
 590 0090 DBB2     		uxtb	r3, r3
 591              	.L40:
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 592              		.loc 1 443 9 discriminator 4 view .LVU157
 593 0092 144C     		ldr	r4, .L49+36
 594 0094 2370     		strb	r3, [r4]
 444:Core/Src/main.c **** 		old_digit2 =digit2;
 595              		.loc 1 444 3 is_stmt 1 discriminator 4 view .LVU158
 596 0096 2046     		mov	r0, r4
 597 0098 FFF7FEFF 		bl	update_lcd
 598              	.LVL18:
 445:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 599              		.loc 1 445 3 discriminator 4 view .LVU159
 445:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 600              		.loc 1 445 14 is_stmt 0 discriminator 4 view .LVU160
 601 009c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 602 009e 124B     		ldr	r3, .L49+40
 603 00a0 1970     		strb	r1, [r3]
 446:Core/Src/main.c **** 		state = STATE_TX;
 604              		.loc 1 446 3 is_stmt 1 discriminator 4 view .LVU161
 605 00a2 1248     		ldr	r0, .L49+44
 606 00a4 FFF7FEFF 		bl	buffer_push
 607              	.LVL19:
 447:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 608              		.loc 1 447 3 discriminator 4 view .LVU162
 447:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 609              		.loc 1 447 9 is_stmt 0 discriminator 4 view .LVU163
 610 00a8 0C4B     		ldr	r3, .L49+28
 611 00aa 0122     		movs	r2, #1
 612 00ac 1A70     		strb	r2, [r3]
 448:Core/Src/main.c **** 	}
ARM GAS  /tmp/ccEQqYmG.s 			page 21


 613              		.loc 1 448 3 is_stmt 1 discriminator 4 view .LVU164
 614 00ae 0221     		movs	r1, #2
 615 00b0 0B48     		ldr	r0, .L49+32
 616 00b2 FFF7FEFF 		bl	buffer_push
 617              	.LVL20:
 618 00b6 CBE7     		b	.L36
 619              	.L42:
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 620              		.loc 1 443 9 is_stmt 0 view .LVU165
 621 00b8 0023     		movs	r3, #0
 622 00ba EAE7     		b	.L40
 623              	.L44:
 624              	.LCFI3:
 625              		.cfi_def_cfa_offset 0
 626              		.cfi_restore 4
 627              		.cfi_restore 14
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 628              		.loc 1 443 9 view .LVU166
 629 00bc 7047     		bx	lr
 630              	.L50:
 631 00be 00BF     		.align	2
 632              	.L49:
 633 00c0 00000000 		.word	.LANCHOR11
 634 00c4 00180240 		.word	1073879040
 635 00c8 00000000 		.word	.LANCHOR15
 636 00cc 00000000 		.word	.LANCHOR16
 637 00d0 00000000 		.word	.LANCHOR5
 638 00d4 00000000 		.word	.LANCHOR17
 639 00d8 00000000 		.word	.LANCHOR18
 640 00dc 00000000 		.word	.LANCHOR19
 641 00e0 00000000 		.word	.LANCHOR20
 642 00e4 00000000 		.word	.LANCHOR1
 643 00e8 00000000 		.word	.LANCHOR21
 644 00ec 00000000 		.word	.LANCHOR22
 645              		.cfi_endproc
 646              	.LFE136:
 648              		.section	.text.RS485_RX_Task,"ax",%progbits
 649              		.align	1
 650              		.global	RS485_RX_Task
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 655              	RS485_RX_Task:
 656              	.LFB139:
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** void main_task(void)
 454:Core/Src/main.c **** {
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** 	if (event_buffer.head != event_buffer.tail)
 457:Core/Src/main.c **** 	{
 458:Core/Src/main.c **** 		
 459:Core/Src/main.c **** 		event = buffer_pop(&event_buffer); // if there is event then get the event from buffer
 460:Core/Src/main.c **** 
 461:Core/Src/main.c **** 	}
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** 	switch (state)
 464:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccEQqYmG.s 			page 22


 465:Core/Src/main.c **** 	case STATE_TX:
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** 		switch (event)
 468:Core/Src/main.c **** 		{
 469:Core/Src/main.c **** 		case EVENT_KEY1_PRESSED:
 470:Core/Src/main.c **** 			
 471:Core/Src/main.c **** 				
 472:Core/Src/main.c **** 			RS485_Send_Message(ID_list[SLAVE1],FUNC_WRITE,(buffer_pop(&digit1_buf)+'0'));
 473:Core/Src/main.c **** 			event = EVENT_RESET;
 474:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 475:Core/Src/main.c **** 			f_querry =0;
 476:Core/Src/main.c **** 			break;
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** 		case EVENT_KEY2_PRESSED:
 479:Core/Src/main.c **** 			
 480:Core/Src/main.c **** 			
 481:Core/Src/main.c **** 			RS485_Send_Message(ID_list[SLAVE2],FUNC_WRITE,(buffer_pop(&digit2_buf)+'0'));
 482:Core/Src/main.c **** 			event = EVENT_RESET;
 483:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 484:Core/Src/main.c **** 			f_querry =0;
 485:Core/Src/main.c **** 			break;
 486:Core/Src/main.c **** 		
 487:Core/Src/main.c **** 		
 488:Core/Src/main.c **** 		default:
 489:Core/Src/main.c **** 			if (!f_querry) break;
 490:Core/Src/main.c **** 			f_querry =0;
 491:Core/Src/main.c **** 					
 492:Core/Src/main.c **** 			if(ID>0){
 493:Core/Src/main.c **** 				
 494:Core/Src/main.c **** 				RS485_Send_Message(ID_list[ID],FUNC_READ, '0');
 495:Core/Src/main.c **** 			}else{
 496:Core/Src/main.c **** 				RS485_Send_Message(ID_list[ID],FUNC_FIND_SLAVE,'0');
 497:Core/Src/main.c **** 			}
 498:Core/Src/main.c **** 						
 499:Core/Src/main.c **** 			ID = (ID+1)== 3 ?0:ID+1;
 500:Core/Src/main.c **** 			
 501:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 502:Core/Src/main.c **** 			break;
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** 		}
 505:Core/Src/main.c **** 		break;
 506:Core/Src/main.c **** 		
 507:Core/Src/main.c **** 	case STATE_WAITING_RX:
 508:Core/Src/main.c **** 		
 509:Core/Src/main.c **** 		if (event==EVENT_RX_COMPLETE){
 510:Core/Src/main.c **** 			RS485_Read_Message();
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** 			state=STATE_TX;
 513:Core/Src/main.c **** 			event = EVENT_RESET;
 514:Core/Src/main.c **** 		
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** 		}else{
 517:Core/Src/main.c **** 			
 518:Core/Src/main.c **** 			if (!f_querry) break;
 519:Core/Src/main.c **** 			f_querry =0;
 520:Core/Src/main.c **** 			
 521:Core/Src/main.c **** 			RS485_Send_Message(TX_msg[1],TX_msg[2],TX_msg[3]);
ARM GAS  /tmp/ccEQqYmG.s 			page 23


 522:Core/Src/main.c **** 			tx_timeout++;
 523:Core/Src/main.c **** 			
 524:Core/Src/main.c **** 			if (tx_timeout==2){
 525:Core/Src/main.c **** 				state = STATE_TX;
 526:Core/Src/main.c **** 				event = EVENT_RESET;	
 527:Core/Src/main.c **** 				tx_timeout=0;
 528:Core/Src/main.c **** 				check_slave();
 529:Core/Src/main.c **** 				break;
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** 			}
 532:Core/Src/main.c **** 			
 533:Core/Src/main.c **** 		}
 534:Core/Src/main.c **** 		
 535:Core/Src/main.c **** 		break;
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** 	}
 538:Core/Src/main.c **** 
 539:Core/Src/main.c **** 
 540:Core/Src/main.c **** }
 541:Core/Src/main.c **** 
 542:Core/Src/main.c **** void check_slave(void){
 543:Core/Src/main.c **** 
 544:Core/Src/main.c **** 	if ((TX_msg[1]==ID_list[0])||(TX_msg[1]==0))return;
 545:Core/Src/main.c **** 	
 546:Core/Src/main.c **** 	if (TX_msg[1]==ID_list[SLAVE1]){
 547:Core/Src/main.c **** 		display_disconnected_slave(SLAVE1);
 548:Core/Src/main.c **** 		ID_list[SLAVE1] = 0;
 549:Core/Src/main.c **** 		digit1 = 16;
 550:Core/Src/main.c **** 	}else if (TX_msg[1]== ID_list[SLAVE2]){
 551:Core/Src/main.c **** 		display_disconnected_slave(SLAVE2);
 552:Core/Src/main.c **** 		ID_list[SLAVE2]	= 0;
 553:Core/Src/main.c **** 		digit2 =16;
 554:Core/Src/main.c **** 	}else{
 555:Core/Src/main.c **** 		return;
 556:Core/Src/main.c **** 	}		
 557:Core/Src/main.c **** 		num_slave--;
 558:Core/Src/main.c **** 		update_lcd(&num_slave);
 559:Core/Src/main.c **** 
 560:Core/Src/main.c **** 	
 561:Core/Src/main.c **** }
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** void RS485_RX_Task(void)
 565:Core/Src/main.c **** {
 657              		.loc 1 565 1 is_stmt 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661 0000 08B5     		push	{r3, lr}
 662              	.LCFI4:
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 3, -8
 665              		.cfi_offset 14, -4
 566:Core/Src/main.c **** 	
 567:Core/Src/main.c **** 	if (rx_buffer.tail==rx_buffer.head) return;
 666              		.loc 1 567 2 view .LVU168
 667              		.loc 1 567 15 is_stmt 0 view .LVU169
ARM GAS  /tmp/ccEQqYmG.s 			page 24


 668 0002 174B     		ldr	r3, .L59
 669 0004 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 670              		.loc 1 567 31 view .LVU170
 671 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 672              		.loc 1 567 5 view .LVU171
 673 0008 9A42     		cmp	r2, r3
 674 000a 20D0     		beq	.L51
 568:Core/Src/main.c **** 	
 569:Core/Src/main.c **** 	
 570:Core/Src/main.c **** 	if (rx_buffer.data[rx_buffer.tail]==SOF)
 675              		.loc 1 570 2 is_stmt 1 view .LVU172
 676              		.loc 1 570 20 is_stmt 0 view .LVU173
 677 000c 144B     		ldr	r3, .L59
 678 000e 1344     		add	r3, r3, r2
 679 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 680              		.loc 1 570 5 view .LVU174
 681 0012 022B     		cmp	r3, #2
 682 0014 0AD0     		beq	.L57
 571:Core/Src/main.c **** 	{
 572:Core/Src/main.c **** 		f_read_msg =1;
 573:Core/Src/main.c **** 		pRX_msg = RX_msg;
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** 	}else if(rx_buffer.data[rx_buffer.tail]==EOF)
 683              		.loc 1 575 8 is_stmt 1 view .LVU175
 684              		.loc 1 575 10 is_stmt 0 view .LVU176
 685 0016 032B     		cmp	r3, #3
 686 0018 1AD0     		beq	.L58
 576:Core/Src/main.c **** 	{
 577:Core/Src/main.c **** 		f_read_msg =0;
 578:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 579:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 580:Core/Src/main.c **** 	}else{
 581:Core/Src/main.c **** 
 582:Core/Src/main.c **** 		if (f_read_msg){
 687              		.loc 1 582 3 is_stmt 1 view .LVU177
 688              		.loc 1 582 7 is_stmt 0 view .LVU178
 689 001a 124A     		ldr	r2, .L59+4
 690 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 691              		.loc 1 582 6 view .LVU179
 692 001e 5AB1     		cbz	r2, .L54
 583:Core/Src/main.c **** 			*pRX_msg++=rx_buffer.data[rx_buffer.tail];
 693              		.loc 1 583 4 is_stmt 1 view .LVU180
 694              		.loc 1 583 12 is_stmt 0 view .LVU181
 695 0020 1149     		ldr	r1, .L59+8
 696 0022 0A68     		ldr	r2, [r1]
 697 0024 501C     		adds	r0, r2, #1
 698 0026 0860     		str	r0, [r1]
 699              		.loc 1 583 14 view .LVU182
 700 0028 1370     		strb	r3, [r2]
 701 002a 05E0     		b	.L54
 702              	.L57:
 572:Core/Src/main.c **** 		pRX_msg = RX_msg;
 703              		.loc 1 572 3 is_stmt 1 view .LVU183
 572:Core/Src/main.c **** 		pRX_msg = RX_msg;
 704              		.loc 1 572 14 is_stmt 0 view .LVU184
 705 002c 0D4B     		ldr	r3, .L59+4
 706 002e 0122     		movs	r2, #1
ARM GAS  /tmp/ccEQqYmG.s 			page 25


 707 0030 1A70     		strb	r2, [r3]
 573:Core/Src/main.c **** 
 708              		.loc 1 573 3 is_stmt 1 view .LVU185
 573:Core/Src/main.c **** 
 709              		.loc 1 573 11 is_stmt 0 view .LVU186
 710 0032 0D4B     		ldr	r3, .L59+8
 711 0034 0D4A     		ldr	r2, .L59+12
 712 0036 1A60     		str	r2, [r3]
 713              	.L54:
 584:Core/Src/main.c **** 		}	
 585:Core/Src/main.c **** 	}
 586:Core/Src/main.c **** 	rx_buffer.tail = (rx_buffer.tail+1)%BUFFER_SIZE;
 714              		.loc 1 586 2 is_stmt 1 view .LVU187
 715              		.loc 1 586 29 is_stmt 0 view .LVU188
 716 0038 0949     		ldr	r1, .L59
 717 003a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 718              		.loc 1 586 34 view .LVU189
 719 003c 0133     		adds	r3, r3, #1
 720              		.loc 1 586 37 view .LVU190
 721 003e 5A42     		rsbs	r2, r3, #0
 722 0040 03F03F03 		and	r3, r3, #63
 723 0044 02F03F02 		and	r2, r2, #63
 724 0048 58BF     		it	pl
 725 004a 5342     		rsbpl	r3, r2, #0
 726              		.loc 1 586 17 view .LVU191
 727 004c 4B70     		strb	r3, [r1, #1]
 728              	.L51:
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** }
 729              		.loc 1 588 1 view .LVU192
 730 004e 08BD     		pop	{r3, pc}
 731              	.L58:
 577:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 732              		.loc 1 577 3 is_stmt 1 view .LVU193
 577:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 733              		.loc 1 577 14 is_stmt 0 view .LVU194
 734 0050 044B     		ldr	r3, .L59+4
 735 0052 0022     		movs	r2, #0
 736 0054 1A70     		strb	r2, [r3]
 578:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 737              		.loc 1 578 6 is_stmt 1 view .LVU195
 738 0056 0521     		movs	r1, #5
 739 0058 0548     		ldr	r0, .L59+16
 740 005a FFF7FEFF 		bl	buffer_push
 741              	.LVL21:
 742 005e EBE7     		b	.L54
 743              	.L60:
 744              		.align	2
 745              	.L59:
 746 0060 00000000 		.word	.LANCHOR23
 747 0064 00000000 		.word	.LANCHOR24
 748 0068 00000000 		.word	.LANCHOR25
 749 006c 00000000 		.word	.LANCHOR26
 750 0070 00000000 		.word	.LANCHOR20
 751              		.cfi_endproc
 752              	.LFE139:
 754              		.section	.rodata.display_connected_slave.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccEQqYmG.s 			page 26


 755              		.align	2
 756              	.LC0:
 757 0000 434F4E4E 		.ascii	"CONNECTED\000"
 757      45435445 
 757      4400
 758 000a 0000     		.align	2
 759              	.LC1:
 760 000c 53312041 		.ascii	"S1 ADDR:\000"
 760      4444523A 
 760      00
 761 0015 000000   		.align	2
 762              	.LC2:
 763 0018 53322041 		.ascii	"S2 ADDR:\000"
 763      4444523A 
 763      00
 764 0021 000000   		.align	2
 765              	.LC3:
 766 0024 4E554D20 		.ascii	"NUM SLAVE: \000"
 766      534C4156 
 766      453A2000 
 767              		.align	2
 768              	.LC4:
 769 0030 53323A00 		.ascii	"S2:\000"
 770              		.align	2
 771              	.LC5:
 772 0034 53313A00 		.ascii	"S1:\000"
 773              		.section	.text.display_connected_slave,"ax",%progbits
 774              		.align	1
 775              		.global	display_connected_slave
 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 780              	display_connected_slave:
 781              	.LVL22:
 782              	.LFB141:
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** void RS485_Read_Message(void)
 591:Core/Src/main.c **** {
 592:Core/Src/main.c **** 	//digit2 = 10;
 593:Core/Src/main.c **** 	//uint8_t * digit;
 594:Core/Src/main.c **** 	uint8_t checksum = 0;
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** 	checksum = checksum^RX_msg[0]^RX_msg[1]^RX_msg[2];
 597:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 598:Core/Src/main.c **** 	{
 599:Core/Src/main.c **** 		return;
 600:Core/Src/main.c **** 
 601:Core/Src/main.c **** 	}
 602:Core/Src/main.c **** 
 603:Core/Src/main.c **** 	if ((RX_msg[0] == ID_list[SLAVE1]))
 604:Core/Src/main.c **** 	{
 605:Core/Src/main.c **** 		if (RX_msg[1] == FUNC_READ)
 606:Core/Src/main.c **** 		{	
 607:Core/Src/main.c **** 			digit1 = (RX_msg[2] - '0');
 608:Core/Src/main.c **** 			
 609:Core/Src/main.c **** 			if (digit1!= old_digit1){
 610:Core/Src/main.c **** 				update_lcd(&digit1);
ARM GAS  /tmp/ccEQqYmG.s 			page 27


 611:Core/Src/main.c **** 				old_digit1 = digit1;
 612:Core/Src/main.c **** 			}
 613:Core/Src/main.c **** 			
 614:Core/Src/main.c **** 		}
 615:Core/Src/main.c **** 		else if (RX_msg[1] == FUNC_WRITE)
 616:Core/Src/main.c **** 		{
 617:Core/Src/main.c **** 			
 618:Core/Src/main.c **** 		}
 619:Core/Src/main.c **** 
 620:Core/Src/main.c **** 	}else if ((RX_msg[0] == ID_list[SLAVE2]))
 621:Core/Src/main.c **** 	{
 622:Core/Src/main.c **** 		if (RX_msg[1] == FUNC_READ)
 623:Core/Src/main.c **** 		{	
 624:Core/Src/main.c **** 			digit2 = (RX_msg[2] - '0');
 625:Core/Src/main.c **** 			
 626:Core/Src/main.c **** 			if(digit2!= old_digit2)
 627:Core/Src/main.c **** 			{
 628:Core/Src/main.c **** 				update_lcd(&digit2);
 629:Core/Src/main.c **** 				old_digit2 =digit2;
 630:Core/Src/main.c **** 			}
 631:Core/Src/main.c **** 			
 632:Core/Src/main.c **** 		}
 633:Core/Src/main.c **** 		else if (RX_msg[1] == FUNC_WRITE)
 634:Core/Src/main.c **** 		{
 635:Core/Src/main.c **** 			
 636:Core/Src/main.c **** 	}
 637:Core/Src/main.c **** 	}else if(RX_msg[0]==ID_list[0]){
 638:Core/Src/main.c **** 
 639:Core/Src/main.c **** 		if (RX_msg[1]== FUNC_FIND_SLAVE){
 640:Core/Src/main.c **** 
 641:Core/Src/main.c **** 			if(ID_list[SLAVE1]==0){
 642:Core/Src/main.c **** 				ID_list[SLAVE1]=RX_msg[2];
 643:Core/Src/main.c **** 				display_connected_slave(SLAVE1);
 644:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 645:Core/Src/main.c **** 				ID_list[SLAVE2]= RX_msg[2];
 646:Core/Src/main.c **** 				display_connected_slave(SLAVE2);
 647:Core/Src/main.c **** 				}
 648:Core/Src/main.c **** 			else{
 649:Core/Src/main.c **** 				return;
 650:Core/Src/main.c **** 			}
 651:Core/Src/main.c **** 			num_slave++;
 652:Core/Src/main.c **** 			update_lcd(&num_slave);
 653:Core/Src/main.c **** 			
 654:Core/Src/main.c **** 		}
 655:Core/Src/main.c **** 		
 656:Core/Src/main.c **** 	}
 657:Core/Src/main.c **** 	else{
 658:Core/Src/main.c **** 		return;
 659:Core/Src/main.c **** 	}
 660:Core/Src/main.c **** 
 661:Core/Src/main.c **** 	
 662:Core/Src/main.c **** }
 663:Core/Src/main.c **** 
 664:Core/Src/main.c **** void display_connected_slave(uint8_t slave){
 783              		.loc 1 664 44 view -0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccEQqYmG.s 			page 28


 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		.loc 1 664 44 is_stmt 0 view .LVU197
 788 0000 70B5     		push	{r4, r5, r6, lr}
 789              	.LCFI5:
 790              		.cfi_def_cfa_offset 16
 791              		.cfi_offset 4, -16
 792              		.cfi_offset 5, -12
 793              		.cfi_offset 6, -8
 794              		.cfi_offset 14, -4
 795 0002 0446     		mov	r4, r0
 665:Core/Src/main.c **** 		
 666:Core/Src/main.c **** 	lcd_clear();
 796              		.loc 1 666 2 is_stmt 1 view .LVU198
 797 0004 FFF7FEFF 		bl	lcd_clear
 798              	.LVL23:
 667:Core/Src/main.c **** 	lcd_set_pos(0, 0x3);
 799              		.loc 1 667 2 view .LVU199
 800 0008 0321     		movs	r1, #3
 801 000a 0020     		movs	r0, #0
 802 000c FFF7FEFF 		bl	lcd_set_pos
 803              	.LVL24:
 668:Core/Src/main.c **** 	lcd_write_string("CONNECTED");
 804              		.loc 1 668 2 view .LVU200
 805 0010 3F48     		ldr	r0, .L67
 806 0012 FFF7FEFF 		bl	lcd_write_string
 807              	.LVL25:
 669:Core/Src/main.c **** 	if (slave ==SLAVE1)
 808              		.loc 1 669 2 view .LVU201
 809              		.loc 1 669 5 is_stmt 0 view .LVU202
 810 0016 012C     		cmp	r4, #1
 811 0018 39D0     		beq	.L65
 670:Core/Src/main.c **** 	{
 671:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 672:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 673:Core/Src/main.c **** 	
 674:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 675:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 676:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 677:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 678:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 679:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 680:Core/Src/main.c **** 	}
 681:Core/Src/main.c **** 	else if(slave == SLAVE2){
 812              		.loc 1 681 7 is_stmt 1 view .LVU203
 813              		.loc 1 681 9 is_stmt 0 view .LVU204
 814 001a 022C     		cmp	r4, #2
 815 001c 57D0     		beq	.L66
 816              	.L63:
 682:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 683:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 684:Core/Src/main.c **** 		
 685:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 686:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 687:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 688:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 689:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 690:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
ARM GAS  /tmp/ccEQqYmG.s 			page 29


 691:Core/Src/main.c **** 	}
 692:Core/Src/main.c **** 
 693:Core/Src/main.c **** 	HAL_Delay(1000);
 817              		.loc 1 693 2 is_stmt 1 view .LVU205
 818 001e 4FF47A70 		mov	r0, #1000
 819 0022 FFF7FEFF 		bl	HAL_Delay
 820              	.LVL26:
 694:Core/Src/main.c **** 	
 695:Core/Src/main.c **** 	lcd_clear();
 821              		.loc 1 695 2 view .LVU206
 822 0026 FFF7FEFF 		bl	lcd_clear
 823              	.LVL27:
 696:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 824              		.loc 1 696 2 view .LVU207
 825 002a 0021     		movs	r1, #0
 826 002c 0846     		mov	r0, r1
 827 002e FFF7FEFF 		bl	lcd_set_pos
 828              	.LVL28:
 697:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 829              		.loc 1 697 2 view .LVU208
 830 0032 3848     		ldr	r0, .L67+4
 831 0034 FFF7FEFF 		bl	lcd_write_string
 832              	.LVL29:
 698:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 833              		.loc 1 698 2 view .LVU209
 834 0038 0C21     		movs	r1, #12
 835 003a 0020     		movs	r0, #0
 836 003c FFF7FEFF 		bl	lcd_set_pos
 837              	.LVL30:
 699:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 838              		.loc 1 699 2 view .LVU210
 839 0040 354C     		ldr	r4, .L67+8
 840 0042 364B     		ldr	r3, .L67+12
 841 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 842 0046 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 843 0048 FFF7FEFF 		bl	lcd_data
 844              	.LVL31:
 700:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 845              		.loc 1 700 2 view .LVU211
 846 004c 0021     		movs	r1, #0
 847 004e 0120     		movs	r0, #1
 848 0050 FFF7FEFF 		bl	lcd_set_pos
 849              	.LVL32:
 701:Core/Src/main.c **** 	lcd_write_string("S2:");
 850              		.loc 1 701 2 view .LVU212
 851 0054 3248     		ldr	r0, .L67+16
 852 0056 FFF7FEFF 		bl	lcd_write_string
 853              	.LVL33:
 702:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 854              		.loc 1 702 2 view .LVU213
 855 005a 0321     		movs	r1, #3
 856 005c 0120     		movs	r0, #1
 857 005e FFF7FEFF 		bl	lcd_set_pos
 858              	.LVL34:
 703:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 859              		.loc 1 703 2 view .LVU214
 860 0062 304B     		ldr	r3, .L67+20
ARM GAS  /tmp/ccEQqYmG.s 			page 30


 861 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 862 0066 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 863 0068 FFF7FEFF 		bl	lcd_data
 864              	.LVL35:
 704:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 865              		.loc 1 704 2 view .LVU215
 866 006c 0C21     		movs	r1, #12
 867 006e 0120     		movs	r0, #1
 868 0070 FFF7FEFF 		bl	lcd_set_pos
 869              	.LVL36:
 705:Core/Src/main.c **** 	lcd_write_string("S1:");
 870              		.loc 1 705 2 view .LVU216
 871 0074 2C48     		ldr	r0, .L67+24
 872 0076 FFF7FEFF 		bl	lcd_write_string
 873              	.LVL37:
 706:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 874              		.loc 1 706 2 view .LVU217
 875 007a 0F21     		movs	r1, #15
 876 007c 0120     		movs	r0, #1
 877 007e FFF7FEFF 		bl	lcd_set_pos
 878              	.LVL38:
 707:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 879              		.loc 1 707 2 view .LVU218
 880 0082 2A4B     		ldr	r3, .L67+28
 881 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 882 0086 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 883 0088 FFF7FEFF 		bl	lcd_data
 884              	.LVL39:
 708:Core/Src/main.c **** 
 709:Core/Src/main.c **** }
 885              		.loc 1 709 1 is_stmt 0 view .LVU219
 886 008c 70BD     		pop	{r4, r5, r6, pc}
 887              	.L65:
 671:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 888              		.loc 1 671 3 is_stmt 1 view .LVU220
 889 008e 0221     		movs	r1, #2
 890 0090 0120     		movs	r0, #1
 891 0092 FFF7FEFF 		bl	lcd_set_pos
 892              	.LVL40:
 672:Core/Src/main.c **** 	
 893              		.loc 1 672 3 view .LVU221
 894 0096 2648     		ldr	r0, .L67+32
 895 0098 FFF7FEFF 		bl	lcd_write_string
 896              	.LVL41:
 674:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 897              		.loc 1 674 3 view .LVU222
 898 009c 0C21     		movs	r1, #12
 899 009e 0120     		movs	r0, #1
 900 00a0 FFF7FEFF 		bl	lcd_set_pos
 901              	.LVL42:
 675:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 902              		.loc 1 675 3 view .LVU223
 675:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 903              		.loc 1 675 17 is_stmt 0 view .LVU224
 904 00a4 234E     		ldr	r6, .L67+36
 905 00a6 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 675:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
ARM GAS  /tmp/ccEQqYmG.s 			page 31


 906              		.loc 1 675 8 view .LVU225
 907 00a8 1B09     		lsrs	r3, r3, #4
 908 00aa 234D     		ldr	r5, .L67+40
 909 00ac 2B70     		strb	r3, [r5]
 676:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 910              		.loc 1 676 3 is_stmt 1 view .LVU226
 911 00ae 1A4C     		ldr	r4, .L67+8
 912 00b0 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 913 00b2 FFF7FEFF 		bl	lcd_data
 914              	.LVL43:
 677:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 915              		.loc 1 677 3 view .LVU227
 916 00b6 0D21     		movs	r1, #13
 917 00b8 0120     		movs	r0, #1
 918 00ba FFF7FEFF 		bl	lcd_set_pos
 919              	.LVL44:
 678:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 920              		.loc 1 678 3 view .LVU228
 678:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 921              		.loc 1 678 17 is_stmt 0 view .LVU229
 922 00be 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 678:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 923              		.loc 1 678 25 view .LVU230
 924 00c0 03F00F03 		and	r3, r3, #15
 678:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 925              		.loc 1 678 8 view .LVU231
 926 00c4 2B70     		strb	r3, [r5]
 679:Core/Src/main.c **** 	}
 927              		.loc 1 679 3 is_stmt 1 view .LVU232
 928 00c6 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 929 00c8 FFF7FEFF 		bl	lcd_data
 930              	.LVL45:
 931 00cc A7E7     		b	.L63
 932              	.L66:
 682:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 933              		.loc 1 682 3 view .LVU233
 934 00ce 0221     		movs	r1, #2
 935 00d0 0120     		movs	r0, #1
 936 00d2 FFF7FEFF 		bl	lcd_set_pos
 937              	.LVL46:
 683:Core/Src/main.c **** 		
 938              		.loc 1 683 3 view .LVU234
 939 00d6 1948     		ldr	r0, .L67+44
 940 00d8 FFF7FEFF 		bl	lcd_write_string
 941              	.LVL47:
 685:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 942              		.loc 1 685 3 view .LVU235
 943 00dc 0C21     		movs	r1, #12
 944 00de 0120     		movs	r0, #1
 945 00e0 FFF7FEFF 		bl	lcd_set_pos
 946              	.LVL48:
 686:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 947              		.loc 1 686 3 view .LVU236
 686:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 948              		.loc 1 686 17 is_stmt 0 view .LVU237
 949 00e4 134E     		ldr	r6, .L67+36
 950 00e6 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccEQqYmG.s 			page 32


 686:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 951              		.loc 1 686 8 view .LVU238
 952 00e8 1B09     		lsrs	r3, r3, #4
 953 00ea 134D     		ldr	r5, .L67+40
 954 00ec 2B70     		strb	r3, [r5]
 687:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 955              		.loc 1 687 3 is_stmt 1 view .LVU239
 956 00ee 0A4C     		ldr	r4, .L67+8
 957 00f0 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 958 00f2 FFF7FEFF 		bl	lcd_data
 959              	.LVL49:
 688:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 960              		.loc 1 688 3 view .LVU240
 961 00f6 0D21     		movs	r1, #13
 962 00f8 0120     		movs	r0, #1
 963 00fa FFF7FEFF 		bl	lcd_set_pos
 964              	.LVL50:
 689:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 965              		.loc 1 689 3 view .LVU241
 689:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 966              		.loc 1 689 17 is_stmt 0 view .LVU242
 967 00fe B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 689:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 968              		.loc 1 689 25 view .LVU243
 969 0100 03F00F03 		and	r3, r3, #15
 689:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 970              		.loc 1 689 8 view .LVU244
 971 0104 2B70     		strb	r3, [r5]
 690:Core/Src/main.c **** 	}
 972              		.loc 1 690 3 is_stmt 1 view .LVU245
 973 0106 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 974 0108 FFF7FEFF 		bl	lcd_data
 975              	.LVL51:
 976 010c 87E7     		b	.L63
 977              	.L68:
 978 010e 00BF     		.align	2
 979              	.L67:
 980 0110 00000000 		.word	.LC0
 981 0114 24000000 		.word	.LC3
 982 0118 00000000 		.word	.LANCHOR3
 983 011c 00000000 		.word	.LANCHOR6
 984 0120 30000000 		.word	.LC4
 985 0124 00000000 		.word	.LANCHOR1
 986 0128 34000000 		.word	.LC5
 987 012c 00000000 		.word	.LANCHOR5
 988 0130 0C000000 		.word	.LC1
 989 0134 00000000 		.word	.LANCHOR27
 990 0138 00000000 		.word	.LANCHOR28
 991 013c 18000000 		.word	.LC2
 992              		.cfi_endproc
 993              	.LFE141:
 995              		.section	.text.RS485_Read_Message,"ax",%progbits
 996              		.align	1
 997              		.global	RS485_Read_Message
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
ARM GAS  /tmp/ccEQqYmG.s 			page 33


 1002              	RS485_Read_Message:
 1003              	.LFB140:
 591:Core/Src/main.c **** 	//digit2 = 10;
 1004              		.loc 1 591 1 view -0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 594:Core/Src/main.c **** 
 1008              		.loc 1 594 2 view .LVU247
 1009              	.LVL52:
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1010              		.loc 1 596 2 view .LVU248
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1011              		.loc 1 596 28 is_stmt 0 view .LVU249
 1012 0000 2B4B     		ldr	r3, .L83
 1013 0002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1014              		.loc 1 596 38 view .LVU250
 1015 0004 93F801C0 		ldrb	ip, [r3, #1]	@ zero_extendqisi2
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1016              		.loc 1 596 48 view .LVU251
 1017 0008 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1018              		.loc 1 596 11 view .LVU252
 1019 000a 81EA0C02 		eor	r2, r1, ip
 1020 000e 4240     		eors	r2, r2, r0
 1021              	.LVL53:
 597:Core/Src/main.c **** 	{
 1022              		.loc 1 597 2 is_stmt 1 view .LVU253
 597:Core/Src/main.c **** 	{
 1023              		.loc 1 597 25 is_stmt 0 view .LVU254
 1024 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 597:Core/Src/main.c **** 	{
 1025              		.loc 1 597 5 view .LVU255
 1026 0012 9342     		cmp	r3, r2
 1027 0014 4AD1     		bne	.L76
 591:Core/Src/main.c **** 	//digit2 = 10;
 1028              		.loc 1 591 1 view .LVU256
 1029 0016 10B5     		push	{r4, lr}
 1030              	.LCFI6:
 1031              		.cfi_def_cfa_offset 8
 1032              		.cfi_offset 4, -8
 1033              		.cfi_offset 14, -4
 603:Core/Src/main.c **** 	{
 1034              		.loc 1 603 2 is_stmt 1 view .LVU257
 603:Core/Src/main.c **** 	{
 1035              		.loc 1 603 27 is_stmt 0 view .LVU258
 1036 0018 264B     		ldr	r3, .L83+4
 1037 001a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 603:Core/Src/main.c **** 	{
 1038              		.loc 1 603 5 view .LVU259
 1039 001c 9942     		cmp	r1, r3
 1040 001e 13D0     		beq	.L79
 620:Core/Src/main.c **** 	{
 1041              		.loc 1 620 8 is_stmt 1 view .LVU260
 620:Core/Src/main.c **** 	{
 1042              		.loc 1 620 33 is_stmt 0 view .LVU261
ARM GAS  /tmp/ccEQqYmG.s 			page 34


 1043 0020 244A     		ldr	r2, .L83+4
 1044              	.LVL54:
 620:Core/Src/main.c **** 	{
 1045              		.loc 1 620 33 view .LVU262
 1046 0022 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 620:Core/Src/main.c **** 	{
 1047              		.loc 1 620 11 view .LVU263
 1048 0024 9142     		cmp	r1, r2
 1049 0026 23D0     		beq	.L80
 637:Core/Src/main.c **** 
 1050              		.loc 1 637 8 is_stmt 1 view .LVU264
 637:Core/Src/main.c **** 
 1051              		.loc 1 637 29 is_stmt 0 view .LVU265
 1052 0028 224C     		ldr	r4, .L83+4
 1053 002a 94F800E0 		ldrb	lr, [r4]	@ zero_extendqisi2
 637:Core/Src/main.c **** 
 1054              		.loc 1 637 10 view .LVU266
 1055 002e 7145     		cmp	r1, lr
 1056 0030 0DD1     		bne	.L69
 639:Core/Src/main.c **** 
 1057              		.loc 1 639 3 is_stmt 1 view .LVU267
 639:Core/Src/main.c **** 
 1058              		.loc 1 639 6 is_stmt 0 view .LVU268
 1059 0032 BCF1F40F 		cmp	ip, #244
 1060 0036 0AD1     		bne	.L69
 641:Core/Src/main.c **** 				ID_list[SLAVE1]=RX_msg[2];
 1061              		.loc 1 641 4 is_stmt 1 view .LVU269
 641:Core/Src/main.c **** 				ID_list[SLAVE1]=RX_msg[2];
 1062              		.loc 1 641 6 is_stmt 0 view .LVU270
 1063 0038 6BB3     		cbz	r3, .L81
 644:Core/Src/main.c **** 				ID_list[SLAVE2]= RX_msg[2];
 1064              		.loc 1 644 10 is_stmt 1 view .LVU271
 644:Core/Src/main.c **** 				ID_list[SLAVE2]= RX_msg[2];
 1065              		.loc 1 644 13 is_stmt 0 view .LVU272
 1066 003a 42B9     		cbnz	r2, .L69
 645:Core/Src/main.c **** 				display_connected_slave(SLAVE2);
 1067              		.loc 1 645 5 is_stmt 1 view .LVU273
 645:Core/Src/main.c **** 				display_connected_slave(SLAVE2);
 1068              		.loc 1 645 20 is_stmt 0 view .LVU274
 1069 003c 1D4B     		ldr	r3, .L83+4
 1070 003e 9870     		strb	r0, [r3, #2]
 646:Core/Src/main.c **** 				}
 1071              		.loc 1 646 5 is_stmt 1 view .LVU275
 1072 0040 0220     		movs	r0, #2
 1073              	.LVL55:
 646:Core/Src/main.c **** 				}
 1074              		.loc 1 646 5 is_stmt 0 view .LVU276
 1075 0042 FFF7FEFF 		bl	display_connected_slave
 1076              	.LVL56:
 646:Core/Src/main.c **** 				}
 1077              		.loc 1 646 5 view .LVU277
 1078 0046 2AE0     		b	.L74
 1079              	.LVL57:
 1080              	.L79:
 605:Core/Src/main.c **** 		{	
 1081              		.loc 1 605 3 is_stmt 1 view .LVU278
 605:Core/Src/main.c **** 		{	
ARM GAS  /tmp/ccEQqYmG.s 			page 35


 1082              		.loc 1 605 6 is_stmt 0 view .LVU279
 1083 0048 BCF1F20F 		cmp	ip, #242
 1084 004c 00D0     		beq	.L82
 1085              	.LVL58:
 1086              	.L69:
 662:Core/Src/main.c **** 
 1087              		.loc 1 662 1 view .LVU280
 1088 004e 10BD     		pop	{r4, pc}
 1089              	.LVL59:
 1090              	.L82:
 607:Core/Src/main.c **** 			
 1091              		.loc 1 607 4 is_stmt 1 view .LVU281
 607:Core/Src/main.c **** 			
 1092              		.loc 1 607 24 is_stmt 0 view .LVU282
 1093 0050 3038     		subs	r0, r0, #48
 1094 0052 C0B2     		uxtb	r0, r0
 607:Core/Src/main.c **** 			
 1095              		.loc 1 607 11 view .LVU283
 1096 0054 184B     		ldr	r3, .L83+8
 1097 0056 1870     		strb	r0, [r3]
 609:Core/Src/main.c **** 				update_lcd(&digit1);
 1098              		.loc 1 609 4 is_stmt 1 view .LVU284
 609:Core/Src/main.c **** 				update_lcd(&digit1);
 1099              		.loc 1 609 14 is_stmt 0 view .LVU285
 1100 0058 184B     		ldr	r3, .L83+12
 1101 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609:Core/Src/main.c **** 				update_lcd(&digit1);
 1102              		.loc 1 609 7 view .LVU286
 1103 005c 9842     		cmp	r0, r3
 1104 005e F6D0     		beq	.L69
 610:Core/Src/main.c **** 				old_digit1 = digit1;
 1105              		.loc 1 610 5 is_stmt 1 view .LVU287
 1106 0060 154C     		ldr	r4, .L83+8
 1107 0062 2046     		mov	r0, r4
 1108 0064 FFF7FEFF 		bl	update_lcd
 1109              	.LVL60:
 611:Core/Src/main.c **** 			}
 1110              		.loc 1 611 5 view .LVU288
 611:Core/Src/main.c **** 			}
 1111              		.loc 1 611 16 is_stmt 0 view .LVU289
 1112 0068 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1113 006a 144B     		ldr	r3, .L83+12
 1114 006c 1A70     		strb	r2, [r3]
 1115 006e EEE7     		b	.L69
 1116              	.LVL61:
 1117              	.L80:
 622:Core/Src/main.c **** 		{	
 1118              		.loc 1 622 3 is_stmt 1 view .LVU290
 622:Core/Src/main.c **** 		{	
 1119              		.loc 1 622 6 is_stmt 0 view .LVU291
 1120 0070 BCF1F20F 		cmp	ip, #242
 1121 0074 EBD1     		bne	.L69
 624:Core/Src/main.c **** 			
 1122              		.loc 1 624 4 is_stmt 1 view .LVU292
 624:Core/Src/main.c **** 			
 1123              		.loc 1 624 24 is_stmt 0 view .LVU293
 1124 0076 3038     		subs	r0, r0, #48
ARM GAS  /tmp/ccEQqYmG.s 			page 36


 1125              	.LVL62:
 624:Core/Src/main.c **** 			
 1126              		.loc 1 624 24 view .LVU294
 1127 0078 C0B2     		uxtb	r0, r0
 1128              	.LVL63:
 624:Core/Src/main.c **** 			
 1129              		.loc 1 624 11 view .LVU295
 1130 007a 114B     		ldr	r3, .L83+16
 1131 007c 1870     		strb	r0, [r3]
 626:Core/Src/main.c **** 			{
 1132              		.loc 1 626 4 is_stmt 1 view .LVU296
 626:Core/Src/main.c **** 			{
 1133              		.loc 1 626 13 is_stmt 0 view .LVU297
 1134 007e 114B     		ldr	r3, .L83+20
 1135 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 626:Core/Src/main.c **** 			{
 1136              		.loc 1 626 6 view .LVU298
 1137 0082 9842     		cmp	r0, r3
 1138 0084 E3D0     		beq	.L69
 628:Core/Src/main.c **** 				old_digit2 =digit2;
 1139              		.loc 1 628 5 is_stmt 1 view .LVU299
 1140 0086 0E4C     		ldr	r4, .L83+16
 1141 0088 2046     		mov	r0, r4
 1142 008a FFF7FEFF 		bl	update_lcd
 1143              	.LVL64:
 629:Core/Src/main.c **** 			}
 1144              		.loc 1 629 5 view .LVU300
 629:Core/Src/main.c **** 			}
 1145              		.loc 1 629 16 is_stmt 0 view .LVU301
 1146 008e 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1147 0090 0C4B     		ldr	r3, .L83+20
 1148 0092 1A70     		strb	r2, [r3]
 1149 0094 DBE7     		b	.L69
 1150              	.LVL65:
 1151              	.L81:
 642:Core/Src/main.c **** 				display_connected_slave(SLAVE1);
 1152              		.loc 1 642 5 is_stmt 1 view .LVU302
 642:Core/Src/main.c **** 				display_connected_slave(SLAVE1);
 1153              		.loc 1 642 20 is_stmt 0 view .LVU303
 1154 0096 6070     		strb	r0, [r4, #1]
 643:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 1155              		.loc 1 643 5 is_stmt 1 view .LVU304
 1156 0098 0120     		movs	r0, #1
 1157              	.LVL66:
 643:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 1158              		.loc 1 643 5 is_stmt 0 view .LVU305
 1159 009a FFF7FEFF 		bl	display_connected_slave
 1160              	.LVL67:
 1161              	.L74:
 651:Core/Src/main.c **** 			update_lcd(&num_slave);
 1162              		.loc 1 651 4 is_stmt 1 view .LVU306
 651:Core/Src/main.c **** 			update_lcd(&num_slave);
 1163              		.loc 1 651 13 is_stmt 0 view .LVU307
 1164 009e 0A48     		ldr	r0, .L83+24
 1165 00a0 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1166 00a2 0133     		adds	r3, r3, #1
 1167 00a4 0370     		strb	r3, [r0]
ARM GAS  /tmp/ccEQqYmG.s 			page 37


 652:Core/Src/main.c **** 			
 1168              		.loc 1 652 4 is_stmt 1 view .LVU308
 1169 00a6 FFF7FEFF 		bl	update_lcd
 1170              	.LVL68:
 1171 00aa D0E7     		b	.L69
 1172              	.LVL69:
 1173              	.L76:
 1174              	.LCFI7:
 1175              		.cfi_def_cfa_offset 0
 1176              		.cfi_restore 4
 1177              		.cfi_restore 14
 652:Core/Src/main.c **** 			
 1178              		.loc 1 652 4 is_stmt 0 view .LVU309
 1179 00ac 7047     		bx	lr
 1180              	.L84:
 1181 00ae 00BF     		.align	2
 1182              	.L83:
 1183 00b0 00000000 		.word	.LANCHOR26
 1184 00b4 00000000 		.word	.LANCHOR27
 1185 00b8 00000000 		.word	.LANCHOR5
 1186 00bc 00000000 		.word	.LANCHOR17
 1187 00c0 00000000 		.word	.LANCHOR1
 1188 00c4 00000000 		.word	.LANCHOR21
 1189 00c8 00000000 		.word	.LANCHOR6
 1190              		.cfi_endproc
 1191              	.LFE140:
 1193              		.section	.rodata.display_disconnected_slave.str1.4,"aMS",%progbits,1
 1194              		.align	2
 1195              	.LC6:
 1196 0000 44495343 		.ascii	"DISCONNECTED\000"
 1196      4F4E4E45 
 1196      43544544 
 1196      00
 1197              		.section	.text.display_disconnected_slave,"ax",%progbits
 1198              		.align	1
 1199              		.global	display_disconnected_slave
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1204              	display_disconnected_slave:
 1205              	.LVL70:
 1206              	.LFB142:
 710:Core/Src/main.c **** 
 711:Core/Src/main.c **** void display_disconnected_slave(uint8_t slave){
 1207              		.loc 1 711 47 is_stmt 1 view -0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211              		.loc 1 711 47 is_stmt 0 view .LVU311
 1212 0000 70B5     		push	{r4, r5, r6, lr}
 1213              	.LCFI8:
 1214              		.cfi_def_cfa_offset 16
 1215              		.cfi_offset 4, -16
 1216              		.cfi_offset 5, -12
 1217              		.cfi_offset 6, -8
 1218              		.cfi_offset 14, -4
 1219 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccEQqYmG.s 			page 38


 712:Core/Src/main.c **** 	
 713:Core/Src/main.c **** 	lcd_clear();
 1220              		.loc 1 713 2 is_stmt 1 view .LVU312
 1221 0004 FFF7FEFF 		bl	lcd_clear
 1222              	.LVL71:
 714:Core/Src/main.c **** 	lcd_clear();
 1223              		.loc 1 714 2 view .LVU313
 1224 0008 FFF7FEFF 		bl	lcd_clear
 1225              	.LVL72:
 715:Core/Src/main.c **** 	lcd_set_pos(0, 0x1);
 1226              		.loc 1 715 2 view .LVU314
 1227 000c 0121     		movs	r1, #1
 1228 000e 0020     		movs	r0, #0
 1229 0010 FFF7FEFF 		bl	lcd_set_pos
 1230              	.LVL73:
 716:Core/Src/main.c **** 	lcd_write_string("DISCONNECTED");
 1231              		.loc 1 716 2 view .LVU315
 1232 0014 3F48     		ldr	r0, .L91
 1233 0016 FFF7FEFF 		bl	lcd_write_string
 1234              	.LVL74:
 717:Core/Src/main.c **** 	if (slave ==SLAVE1)
 1235              		.loc 1 717 2 view .LVU316
 1236              		.loc 1 717 5 is_stmt 0 view .LVU317
 1237 001a 012C     		cmp	r4, #1
 1238 001c 39D0     		beq	.L89
 718:Core/Src/main.c **** 	{
 719:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 720:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 721:Core/Src/main.c **** 	
 722:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 723:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 724:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 725:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 726:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 727:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 728:Core/Src/main.c **** 	}
 729:Core/Src/main.c **** 	else if(slave == SLAVE2){
 1239              		.loc 1 729 7 is_stmt 1 view .LVU318
 1240              		.loc 1 729 9 is_stmt 0 view .LVU319
 1241 001e 022C     		cmp	r4, #2
 1242 0020 57D0     		beq	.L90
 1243              	.L87:
 730:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 731:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 732:Core/Src/main.c **** 		
 733:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 734:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 735:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 736:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 737:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 738:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 739:Core/Src/main.c **** 	}
 740:Core/Src/main.c **** 
 741:Core/Src/main.c **** 	HAL_Delay(1000);
 1244              		.loc 1 741 2 is_stmt 1 view .LVU320
 1245 0022 4FF47A70 		mov	r0, #1000
 1246 0026 FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccEQqYmG.s 			page 39


 1247              	.LVL75:
 742:Core/Src/main.c **** 	
 743:Core/Src/main.c **** 	lcd_clear();
 1248              		.loc 1 743 2 view .LVU321
 1249 002a FFF7FEFF 		bl	lcd_clear
 1250              	.LVL76:
 744:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 1251              		.loc 1 744 2 view .LVU322
 1252 002e 0021     		movs	r1, #0
 1253 0030 0846     		mov	r0, r1
 1254 0032 FFF7FEFF 		bl	lcd_set_pos
 1255              	.LVL77:
 745:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 1256              		.loc 1 745 2 view .LVU323
 1257 0036 3848     		ldr	r0, .L91+4
 1258 0038 FFF7FEFF 		bl	lcd_write_string
 1259              	.LVL78:
 746:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 1260              		.loc 1 746 2 view .LVU324
 1261 003c 0C21     		movs	r1, #12
 1262 003e 0020     		movs	r0, #0
 1263 0040 FFF7FEFF 		bl	lcd_set_pos
 1264              	.LVL79:
 747:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 1265              		.loc 1 747 2 view .LVU325
 1266 0044 354C     		ldr	r4, .L91+8
 1267 0046 364B     		ldr	r3, .L91+12
 1268 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1269 004a E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1270 004c FFF7FEFF 		bl	lcd_data
 1271              	.LVL80:
 748:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 1272              		.loc 1 748 2 view .LVU326
 1273 0050 0021     		movs	r1, #0
 1274 0052 0120     		movs	r0, #1
 1275 0054 FFF7FEFF 		bl	lcd_set_pos
 1276              	.LVL81:
 749:Core/Src/main.c **** 	lcd_write_string("S2:");
 1277              		.loc 1 749 2 view .LVU327
 1278 0058 3248     		ldr	r0, .L91+16
 1279 005a FFF7FEFF 		bl	lcd_write_string
 1280              	.LVL82:
 750:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 1281              		.loc 1 750 2 view .LVU328
 1282 005e 0321     		movs	r1, #3
 1283 0060 0120     		movs	r0, #1
 1284 0062 FFF7FEFF 		bl	lcd_set_pos
 1285              	.LVL83:
 751:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 1286              		.loc 1 751 2 view .LVU329
 1287 0066 304B     		ldr	r3, .L91+20
 1288 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1289 006a E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1290 006c FFF7FEFF 		bl	lcd_data
 1291              	.LVL84:
 752:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 1292              		.loc 1 752 2 view .LVU330
ARM GAS  /tmp/ccEQqYmG.s 			page 40


 1293 0070 0C21     		movs	r1, #12
 1294 0072 0120     		movs	r0, #1
 1295 0074 FFF7FEFF 		bl	lcd_set_pos
 1296              	.LVL85:
 753:Core/Src/main.c **** 	lcd_write_string("S1:");
 1297              		.loc 1 753 2 view .LVU331
 1298 0078 2C48     		ldr	r0, .L91+24
 1299 007a FFF7FEFF 		bl	lcd_write_string
 1300              	.LVL86:
 754:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 1301              		.loc 1 754 2 view .LVU332
 1302 007e 0F21     		movs	r1, #15
 1303 0080 0120     		movs	r0, #1
 1304 0082 FFF7FEFF 		bl	lcd_set_pos
 1305              	.LVL87:
 755:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 1306              		.loc 1 755 2 view .LVU333
 1307 0086 2A4B     		ldr	r3, .L91+28
 1308 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1309 008a E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1310 008c FFF7FEFF 		bl	lcd_data
 1311              	.LVL88:
 756:Core/Src/main.c **** }
 1312              		.loc 1 756 1 is_stmt 0 view .LVU334
 1313 0090 70BD     		pop	{r4, r5, r6, pc}
 1314              	.L89:
 719:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 1315              		.loc 1 719 3 is_stmt 1 view .LVU335
 1316 0092 0221     		movs	r1, #2
 1317 0094 0120     		movs	r0, #1
 1318 0096 FFF7FEFF 		bl	lcd_set_pos
 1319              	.LVL89:
 720:Core/Src/main.c **** 	
 1320              		.loc 1 720 3 view .LVU336
 1321 009a 2648     		ldr	r0, .L91+32
 1322 009c FFF7FEFF 		bl	lcd_write_string
 1323              	.LVL90:
 722:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 1324              		.loc 1 722 3 view .LVU337
 1325 00a0 0C21     		movs	r1, #12
 1326 00a2 0120     		movs	r0, #1
 1327 00a4 FFF7FEFF 		bl	lcd_set_pos
 1328              	.LVL91:
 723:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1329              		.loc 1 723 3 view .LVU338
 723:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1330              		.loc 1 723 17 is_stmt 0 view .LVU339
 1331 00a8 234E     		ldr	r6, .L91+36
 1332 00aa 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 723:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1333              		.loc 1 723 8 view .LVU340
 1334 00ac 1B09     		lsrs	r3, r3, #4
 1335 00ae 234D     		ldr	r5, .L91+40
 1336 00b0 2B70     		strb	r3, [r5]
 724:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 1337              		.loc 1 724 3 is_stmt 1 view .LVU341
 1338 00b2 1A4C     		ldr	r4, .L91+8
ARM GAS  /tmp/ccEQqYmG.s 			page 41


 1339 00b4 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1340 00b6 FFF7FEFF 		bl	lcd_data
 1341              	.LVL92:
 725:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 1342              		.loc 1 725 3 view .LVU342
 1343 00ba 0D21     		movs	r1, #13
 1344 00bc 0120     		movs	r0, #1
 1345 00be FFF7FEFF 		bl	lcd_set_pos
 1346              	.LVL93:
 726:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1347              		.loc 1 726 3 view .LVU343
 726:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1348              		.loc 1 726 17 is_stmt 0 view .LVU344
 1349 00c2 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 726:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1350              		.loc 1 726 25 view .LVU345
 1351 00c4 03F00F03 		and	r3, r3, #15
 726:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1352              		.loc 1 726 8 view .LVU346
 1353 00c8 2B70     		strb	r3, [r5]
 727:Core/Src/main.c **** 	}
 1354              		.loc 1 727 3 is_stmt 1 view .LVU347
 1355 00ca E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1356 00cc FFF7FEFF 		bl	lcd_data
 1357              	.LVL94:
 1358 00d0 A7E7     		b	.L87
 1359              	.L90:
 730:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 1360              		.loc 1 730 3 view .LVU348
 1361 00d2 0221     		movs	r1, #2
 1362 00d4 0120     		movs	r0, #1
 1363 00d6 FFF7FEFF 		bl	lcd_set_pos
 1364              	.LVL95:
 731:Core/Src/main.c **** 		
 1365              		.loc 1 731 3 view .LVU349
 1366 00da 1948     		ldr	r0, .L91+44
 1367 00dc FFF7FEFF 		bl	lcd_write_string
 1368              	.LVL96:
 733:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 1369              		.loc 1 733 3 view .LVU350
 1370 00e0 0C21     		movs	r1, #12
 1371 00e2 0120     		movs	r0, #1
 1372 00e4 FFF7FEFF 		bl	lcd_set_pos
 1373              	.LVL97:
 734:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1374              		.loc 1 734 3 view .LVU351
 734:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1375              		.loc 1 734 17 is_stmt 0 view .LVU352
 1376 00e8 134E     		ldr	r6, .L91+36
 1377 00ea B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 734:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1378              		.loc 1 734 8 view .LVU353
 1379 00ec 1B09     		lsrs	r3, r3, #4
 1380 00ee 134D     		ldr	r5, .L91+40
 1381 00f0 2B70     		strb	r3, [r5]
 735:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 1382              		.loc 1 735 3 is_stmt 1 view .LVU354
ARM GAS  /tmp/ccEQqYmG.s 			page 42


 1383 00f2 0A4C     		ldr	r4, .L91+8
 1384 00f4 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1385 00f6 FFF7FEFF 		bl	lcd_data
 1386              	.LVL98:
 736:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 1387              		.loc 1 736 3 view .LVU355
 1388 00fa 0D21     		movs	r1, #13
 1389 00fc 0120     		movs	r0, #1
 1390 00fe FFF7FEFF 		bl	lcd_set_pos
 1391              	.LVL99:
 737:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1392              		.loc 1 737 3 view .LVU356
 737:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1393              		.loc 1 737 17 is_stmt 0 view .LVU357
 1394 0102 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 737:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1395              		.loc 1 737 25 view .LVU358
 1396 0104 03F00F03 		and	r3, r3, #15
 737:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1397              		.loc 1 737 8 view .LVU359
 1398 0108 2B70     		strb	r3, [r5]
 738:Core/Src/main.c **** 	}
 1399              		.loc 1 738 3 is_stmt 1 view .LVU360
 1400 010a E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1401 010c FFF7FEFF 		bl	lcd_data
 1402              	.LVL100:
 1403 0110 87E7     		b	.L87
 1404              	.L92:
 1405 0112 00BF     		.align	2
 1406              	.L91:
 1407 0114 00000000 		.word	.LC6
 1408 0118 24000000 		.word	.LC3
 1409 011c 00000000 		.word	.LANCHOR3
 1410 0120 00000000 		.word	.LANCHOR6
 1411 0124 30000000 		.word	.LC4
 1412 0128 00000000 		.word	.LANCHOR1
 1413 012c 34000000 		.word	.LC5
 1414 0130 00000000 		.word	.LANCHOR5
 1415 0134 0C000000 		.word	.LC1
 1416 0138 00000000 		.word	.LANCHOR27
 1417 013c 00000000 		.word	.LANCHOR28
 1418 0140 18000000 		.word	.LC2
 1419              		.cfi_endproc
 1420              	.LFE142:
 1422              		.section	.text.check_slave,"ax",%progbits
 1423              		.align	1
 1424              		.global	check_slave
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1429              	check_slave:
 1430              	.LFB138:
 542:Core/Src/main.c **** 
 1431              		.loc 1 542 23 view -0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccEQqYmG.s 			page 43


 1435 0000 08B5     		push	{r3, lr}
 1436              	.LCFI9:
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 3, -8
 1439              		.cfi_offset 14, -4
 544:Core/Src/main.c **** 	
 1440              		.loc 1 544 2 view .LVU362
 544:Core/Src/main.c **** 	
 1441              		.loc 1 544 13 is_stmt 0 view .LVU363
 1442 0002 154B     		ldr	r3, .L100
 1443 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 544:Core/Src/main.c **** 	
 1444              		.loc 1 544 25 view .LVU364
 1445 0006 154A     		ldr	r2, .L100+4
 1446 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 544:Core/Src/main.c **** 	
 1447              		.loc 1 544 5 view .LVU365
 1448 000a 9342     		cmp	r3, r2
 1449 000c 08D0     		beq	.L93
 544:Core/Src/main.c **** 	
 1450              		.loc 1 544 29 discriminator 2 view .LVU366
 1451 000e 3BB1     		cbz	r3, .L93
 546:Core/Src/main.c **** 		display_disconnected_slave(SLAVE1);
 1452              		.loc 1 546 2 is_stmt 1 view .LVU367
 546:Core/Src/main.c **** 		display_disconnected_slave(SLAVE1);
 1453              		.loc 1 546 24 is_stmt 0 view .LVU368
 1454 0010 124A     		ldr	r2, .L100+4
 1455 0012 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 546:Core/Src/main.c **** 		display_disconnected_slave(SLAVE1);
 1456              		.loc 1 546 5 view .LVU369
 1457 0014 9342     		cmp	r3, r2
 1458 0016 04D0     		beq	.L98
 550:Core/Src/main.c **** 		display_disconnected_slave(SLAVE2);
 1459              		.loc 1 550 8 is_stmt 1 view .LVU370
 550:Core/Src/main.c **** 		display_disconnected_slave(SLAVE2);
 1460              		.loc 1 550 31 is_stmt 0 view .LVU371
 1461 0018 104A     		ldr	r2, .L100+4
 1462 001a 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 550:Core/Src/main.c **** 		display_disconnected_slave(SLAVE2);
 1463              		.loc 1 550 11 view .LVU372
 1464 001c 9342     		cmp	r3, r2
 1465 001e 0AD0     		beq	.L99
 1466              	.L93:
 561:Core/Src/main.c **** 
 1467              		.loc 1 561 1 view .LVU373
 1468 0020 08BD     		pop	{r3, pc}
 1469              	.L98:
 547:Core/Src/main.c **** 		ID_list[SLAVE1] = 0;
 1470              		.loc 1 547 3 is_stmt 1 view .LVU374
 1471 0022 0120     		movs	r0, #1
 1472 0024 FFF7FEFF 		bl	display_disconnected_slave
 1473              	.LVL101:
 548:Core/Src/main.c **** 		digit1 = 16;
 1474              		.loc 1 548 3 view .LVU375
 548:Core/Src/main.c **** 		digit1 = 16;
 1475              		.loc 1 548 19 is_stmt 0 view .LVU376
 1476 0028 0C4B     		ldr	r3, .L100+4
ARM GAS  /tmp/ccEQqYmG.s 			page 44


 1477 002a 0022     		movs	r2, #0
 1478 002c 5A70     		strb	r2, [r3, #1]
 549:Core/Src/main.c **** 	}else if (TX_msg[1]== ID_list[SLAVE2]){
 1479              		.loc 1 549 3 is_stmt 1 view .LVU377
 549:Core/Src/main.c **** 	}else if (TX_msg[1]== ID_list[SLAVE2]){
 1480              		.loc 1 549 10 is_stmt 0 view .LVU378
 1481 002e 0C4B     		ldr	r3, .L100+8
 1482 0030 1022     		movs	r2, #16
 1483 0032 1A70     		strb	r2, [r3]
 1484 0034 08E0     		b	.L96
 1485              	.L99:
 551:Core/Src/main.c **** 		ID_list[SLAVE2]	= 0;
 1486              		.loc 1 551 3 is_stmt 1 view .LVU379
 1487 0036 0220     		movs	r0, #2
 1488 0038 FFF7FEFF 		bl	display_disconnected_slave
 1489              	.LVL102:
 552:Core/Src/main.c **** 		digit2 =16;
 1490              		.loc 1 552 3 view .LVU380
 552:Core/Src/main.c **** 		digit2 =16;
 1491              		.loc 1 552 19 is_stmt 0 view .LVU381
 1492 003c 074B     		ldr	r3, .L100+4
 1493 003e 0022     		movs	r2, #0
 1494 0040 9A70     		strb	r2, [r3, #2]
 553:Core/Src/main.c **** 	}else{
 1495              		.loc 1 553 3 is_stmt 1 view .LVU382
 553:Core/Src/main.c **** 	}else{
 1496              		.loc 1 553 10 is_stmt 0 view .LVU383
 1497 0042 084B     		ldr	r3, .L100+12
 1498 0044 1022     		movs	r2, #16
 1499 0046 1A70     		strb	r2, [r3]
 1500              	.L96:
 557:Core/Src/main.c **** 		update_lcd(&num_slave);
 1501              		.loc 1 557 3 is_stmt 1 view .LVU384
 557:Core/Src/main.c **** 		update_lcd(&num_slave);
 1502              		.loc 1 557 12 is_stmt 0 view .LVU385
 1503 0048 0748     		ldr	r0, .L100+16
 1504 004a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1505 004c 013B     		subs	r3, r3, #1
 1506 004e 0370     		strb	r3, [r0]
 558:Core/Src/main.c **** 
 1507              		.loc 1 558 3 is_stmt 1 view .LVU386
 1508 0050 FFF7FEFF 		bl	update_lcd
 1509              	.LVL103:
 1510 0054 E4E7     		b	.L93
 1511              	.L101:
 1512 0056 00BF     		.align	2
 1513              	.L100:
 1514 0058 00000000 		.word	.LANCHOR29
 1515 005c 00000000 		.word	.LANCHOR27
 1516 0060 00000000 		.word	.LANCHOR5
 1517 0064 00000000 		.word	.LANCHOR1
 1518 0068 00000000 		.word	.LANCHOR6
 1519              		.cfi_endproc
 1520              	.LFE138:
 1522              		.section	.text.RS485_Send_Message,"ax",%progbits
 1523              		.align	1
 1524              		.global	RS485_Send_Message
ARM GAS  /tmp/ccEQqYmG.s 			page 45


 1525              		.syntax unified
 1526              		.thumb
 1527              		.thumb_func
 1529              	RS485_Send_Message:
 1530              	.LVL104:
 1531              	.LFB143:
 757:Core/Src/main.c **** 
 758:Core/Src/main.c **** void RS485_Send_Message(uint8_t addr, uint8_t func_code, uint8_t data)
 759:Core/Src/main.c **** {
 1532              		.loc 1 759 1 view -0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              		.loc 1 759 1 is_stmt 0 view .LVU388
 1537 0000 38B5     		push	{r3, r4, r5, lr}
 1538              	.LCFI10:
 1539              		.cfi_def_cfa_offset 16
 1540              		.cfi_offset 3, -16
 1541              		.cfi_offset 4, -12
 1542              		.cfi_offset 5, -8
 1543              		.cfi_offset 14, -4
 760:Core/Src/main.c **** 	
 761:Core/Src/main.c **** 	TX_msg[0] = SOF;
 1544              		.loc 1 761 2 is_stmt 1 view .LVU389
 1545              		.loc 1 761 12 is_stmt 0 view .LVU390
 1546 0002 0F4C     		ldr	r4, .L104
 1547 0004 0223     		movs	r3, #2
 1548 0006 2370     		strb	r3, [r4]
 762:Core/Src/main.c **** 	TX_msg[1] = addr;
 1549              		.loc 1 762 2 is_stmt 1 view .LVU391
 1550              		.loc 1 762 12 is_stmt 0 view .LVU392
 1551 0008 6070     		strb	r0, [r4, #1]
 763:Core/Src/main.c **** 	TX_msg[2] = func_code;
 1552              		.loc 1 763 2 is_stmt 1 view .LVU393
 1553              		.loc 1 763 12 is_stmt 0 view .LVU394
 1554 000a A170     		strb	r1, [r4, #2]
 764:Core/Src/main.c **** 	TX_msg[3] = data;
 1555              		.loc 1 764 2 is_stmt 1 view .LVU395
 1556              		.loc 1 764 12 is_stmt 0 view .LVU396
 1557 000c E270     		strb	r2, [r4, #3]
 765:Core/Src/main.c **** 	TX_msg[4] = (((0x00^TX_msg[1])^TX_msg[2])^TX_msg[3]);    // checksum
 1558              		.loc 1 765 2 is_stmt 1 view .LVU397
 1559              		.loc 1 765 12 is_stmt 0 view .LVU398
 1560 000e 4840     		eors	r0, r0, r1
 1561              	.LVL105:
 1562              		.loc 1 765 12 view .LVU399
 1563 0010 4240     		eors	r2, r2, r0
 1564              	.LVL106:
 1565              		.loc 1 765 12 view .LVU400
 1566 0012 2271     		strb	r2, [r4, #4]
 766:Core/Src/main.c **** 	TX_msg[5] = EOF;
 1567              		.loc 1 766 2 is_stmt 1 view .LVU401
 1568              		.loc 1 766 12 is_stmt 0 view .LVU402
 1569 0014 0323     		movs	r3, #3
 1570 0016 6371     		strb	r3, [r4, #5]
 767:Core/Src/main.c **** 
 768:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
ARM GAS  /tmp/ccEQqYmG.s 			page 46


 769:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 1571              		.loc 1 769 2 is_stmt 1 view .LVU403
 1572 0018 0A4D     		ldr	r5, .L104+4
 1573 001a 0122     		movs	r2, #1
 1574 001c 4FF48051 		mov	r1, #4096
 1575              	.LVL107:
 1576              		.loc 1 769 2 is_stmt 0 view .LVU404
 1577 0020 2846     		mov	r0, r5
 1578 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1579              	.LVL108:
 770:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, TX_msg, sizeof(TX_msg), 10);
 1580              		.loc 1 770 2 is_stmt 1 view .LVU405
 1581 0026 0A23     		movs	r3, #10
 1582 0028 0622     		movs	r2, #6
 1583 002a 2146     		mov	r1, r4
 1584 002c 0648     		ldr	r0, .L104+8
 1585 002e FFF7FEFF 		bl	HAL_UART_Transmit
 1586              	.LVL109:
 771:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 1587              		.loc 1 771 2 view .LVU406
 1588 0032 0022     		movs	r2, #0
 1589 0034 4FF48051 		mov	r1, #4096
 1590 0038 2846     		mov	r0, r5
 1591 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1592              	.LVL110:
 772:Core/Src/main.c **** }
 1593              		.loc 1 772 1 is_stmt 0 view .LVU407
 1594 003e 38BD     		pop	{r3, r4, r5, pc}
 1595              	.L105:
 1596              		.align	2
 1597              	.L104:
 1598 0040 00000000 		.word	.LANCHOR29
 1599 0044 00000240 		.word	1073872896
 1600 0048 00000000 		.word	huart4
 1601              		.cfi_endproc
 1602              	.LFE143:
 1604              		.section	.text.main_task,"ax",%progbits
 1605              		.align	1
 1606              		.global	main_task
 1607              		.syntax unified
 1608              		.thumb
 1609              		.thumb_func
 1611              	main_task:
 1612              	.LFB137:
 454:Core/Src/main.c **** 
 1613              		.loc 1 454 1 is_stmt 1 view -0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617 0000 10B5     		push	{r4, lr}
 1618              	.LCFI11:
 1619              		.cfi_def_cfa_offset 8
 1620              		.cfi_offset 4, -8
 1621              		.cfi_offset 14, -4
 456:Core/Src/main.c **** 	{
 1622              		.loc 1 456 2 view .LVU409
 456:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccEQqYmG.s 			page 47


 1623              		.loc 1 456 18 is_stmt 0 view .LVU410
 1624 0002 4A4B     		ldr	r3, .L123
 1625 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 456:Core/Src/main.c **** 	{
 1626              		.loc 1 456 39 view .LVU411
 1627 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 456:Core/Src/main.c **** 	{
 1628              		.loc 1 456 5 view .LVU412
 1629 0008 9A42     		cmp	r2, r3
 1630 000a 06D1     		bne	.L121
 1631              	.L107:
 463:Core/Src/main.c **** 	{
 1632              		.loc 1 463 2 is_stmt 1 view .LVU413
 1633 000c 484B     		ldr	r3, .L123+4
 1634 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1635 0010 012B     		cmp	r3, #1
 1636 0012 08D0     		beq	.L108
 1637 0014 022B     		cmp	r3, #2
 1638 0016 5CD0     		beq	.L109
 1639              	.L106:
 540:Core/Src/main.c **** 
 1640              		.loc 1 540 1 is_stmt 0 view .LVU414
 1641 0018 10BD     		pop	{r4, pc}
 1642              	.L121:
 459:Core/Src/main.c **** 
 1643              		.loc 1 459 3 is_stmt 1 view .LVU415
 459:Core/Src/main.c **** 
 1644              		.loc 1 459 11 is_stmt 0 view .LVU416
 1645 001a 4448     		ldr	r0, .L123
 1646 001c FFF7FEFF 		bl	buffer_pop
 1647              	.LVL111:
 459:Core/Src/main.c **** 
 1648              		.loc 1 459 9 view .LVU417
 1649 0020 444B     		ldr	r3, .L123+8
 1650 0022 1870     		strb	r0, [r3]
 1651 0024 F2E7     		b	.L107
 1652              	.L108:
 467:Core/Src/main.c **** 		{
 1653              		.loc 1 467 3 is_stmt 1 view .LVU418
 1654 0026 434B     		ldr	r3, .L123+8
 1655 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1656 002a 012B     		cmp	r3, #1
 1657 002c 1ED0     		beq	.L111
 1658 002e 022B     		cmp	r3, #2
 1659 0030 31D0     		beq	.L112
 489:Core/Src/main.c **** 			f_querry =0;
 1660              		.loc 1 489 4 view .LVU419
 489:Core/Src/main.c **** 			f_querry =0;
 1661              		.loc 1 489 8 is_stmt 0 view .LVU420
 1662 0032 414B     		ldr	r3, .L123+12
 1663 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 489:Core/Src/main.c **** 			f_querry =0;
 1664              		.loc 1 489 7 view .LVU421
 1665 0036 002B     		cmp	r3, #0
 1666 0038 EED0     		beq	.L106
 490:Core/Src/main.c **** 					
 1667              		.loc 1 490 4 is_stmt 1 view .LVU422
ARM GAS  /tmp/ccEQqYmG.s 			page 48


 490:Core/Src/main.c **** 					
 1668              		.loc 1 490 13 is_stmt 0 view .LVU423
 1669 003a 3F4B     		ldr	r3, .L123+12
 1670 003c 0022     		movs	r2, #0
 1671 003e 1A70     		strb	r2, [r3]
 492:Core/Src/main.c **** 				
 1672              		.loc 1 492 4 is_stmt 1 view .LVU424
 492:Core/Src/main.c **** 				
 1673              		.loc 1 492 9 is_stmt 0 view .LVU425
 1674 0040 3E4B     		ldr	r3, .L123+16
 1675 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 492:Core/Src/main.c **** 				
 1676              		.loc 1 492 6 view .LVU426
 1677 0044 002B     		cmp	r3, #0
 1678 0046 3BD0     		beq	.L114
 494:Core/Src/main.c **** 			}else{
 1679              		.loc 1 494 5 is_stmt 1 view .LVU427
 1680 0048 3022     		movs	r2, #48
 1681 004a F221     		movs	r1, #242
 1682 004c 3C48     		ldr	r0, .L123+20
 1683 004e C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 1684 0050 FFF7FEFF 		bl	RS485_Send_Message
 1685              	.LVL112:
 1686              	.L115:
 499:Core/Src/main.c **** 			
 1687              		.loc 1 499 4 view .LVU428
 499:Core/Src/main.c **** 			
 1688              		.loc 1 499 15 is_stmt 0 view .LVU429
 1689 0054 394B     		ldr	r3, .L123+16
 1690 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 499:Core/Src/main.c **** 			
 1691              		.loc 1 499 7 view .LVU430
 1692 0058 022B     		cmp	r3, #2
 1693 005a 38D0     		beq	.L118
 499:Core/Src/main.c **** 			
 1694              		.loc 1 499 7 discriminator 1 view .LVU431
 1695 005c 0133     		adds	r3, r3, #1
 1696 005e DBB2     		uxtb	r3, r3
 1697              	.L116:
 499:Core/Src/main.c **** 			
 1698              		.loc 1 499 7 discriminator 4 view .LVU432
 1699 0060 364A     		ldr	r2, .L123+16
 1700 0062 1370     		strb	r3, [r2]
 501:Core/Src/main.c **** 			break;
 1701              		.loc 1 501 4 is_stmt 1 discriminator 4 view .LVU433
 501:Core/Src/main.c **** 			break;
 1702              		.loc 1 501 10 is_stmt 0 discriminator 4 view .LVU434
 1703 0064 324B     		ldr	r3, .L123+4
 1704 0066 0222     		movs	r2, #2
 1705 0068 1A70     		strb	r2, [r3]
 502:Core/Src/main.c **** 
 1706              		.loc 1 502 4 is_stmt 1 discriminator 4 view .LVU435
 1707 006a D5E7     		b	.L106
 1708              	.L111:
 472:Core/Src/main.c **** 			event = EVENT_RESET;
 1709              		.loc 1 472 4 view .LVU436
 1710 006c 344B     		ldr	r3, .L123+20
ARM GAS  /tmp/ccEQqYmG.s 			page 49


 1711 006e 5C78     		ldrb	r4, [r3, #1]	@ zero_extendqisi2
 472:Core/Src/main.c **** 			event = EVENT_RESET;
 1712              		.loc 1 472 51 is_stmt 0 view .LVU437
 1713 0070 3448     		ldr	r0, .L123+24
 1714 0072 FFF7FEFF 		bl	buffer_pop
 1715              	.LVL113:
 472:Core/Src/main.c **** 			event = EVENT_RESET;
 1716              		.loc 1 472 4 view .LVU438
 1717 0076 00F13002 		add	r2, r0, #48
 1718 007a D2B2     		uxtb	r2, r2
 1719 007c F121     		movs	r1, #241
 1720 007e 2046     		mov	r0, r4
 1721 0080 FFF7FEFF 		bl	RS485_Send_Message
 1722              	.LVL114:
 473:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1723              		.loc 1 473 4 is_stmt 1 view .LVU439
 473:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1724              		.loc 1 473 10 is_stmt 0 view .LVU440
 1725 0084 0023     		movs	r3, #0
 1726 0086 2B4A     		ldr	r2, .L123+8
 1727 0088 1370     		strb	r3, [r2]
 474:Core/Src/main.c **** 			f_querry =0;
 1728              		.loc 1 474 4 is_stmt 1 view .LVU441
 474:Core/Src/main.c **** 			f_querry =0;
 1729              		.loc 1 474 10 is_stmt 0 view .LVU442
 1730 008a 294A     		ldr	r2, .L123+4
 1731 008c 0221     		movs	r1, #2
 1732 008e 1170     		strb	r1, [r2]
 475:Core/Src/main.c **** 			break;
 1733              		.loc 1 475 4 is_stmt 1 view .LVU443
 475:Core/Src/main.c **** 			break;
 1734              		.loc 1 475 13 is_stmt 0 view .LVU444
 1735 0090 294A     		ldr	r2, .L123+12
 1736 0092 1370     		strb	r3, [r2]
 476:Core/Src/main.c **** 
 1737              		.loc 1 476 4 is_stmt 1 view .LVU445
 1738 0094 C0E7     		b	.L106
 1739              	.L112:
 481:Core/Src/main.c **** 			event = EVENT_RESET;
 1740              		.loc 1 481 4 view .LVU446
 1741 0096 2A4B     		ldr	r3, .L123+20
 1742 0098 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 481:Core/Src/main.c **** 			event = EVENT_RESET;
 1743              		.loc 1 481 51 is_stmt 0 view .LVU447
 1744 009a 2B48     		ldr	r0, .L123+28
 1745 009c FFF7FEFF 		bl	buffer_pop
 1746              	.LVL115:
 481:Core/Src/main.c **** 			event = EVENT_RESET;
 1747              		.loc 1 481 4 view .LVU448
 1748 00a0 00F13002 		add	r2, r0, #48
 1749 00a4 D2B2     		uxtb	r2, r2
 1750 00a6 F121     		movs	r1, #241
 1751 00a8 2046     		mov	r0, r4
 1752 00aa FFF7FEFF 		bl	RS485_Send_Message
 1753              	.LVL116:
 482:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1754              		.loc 1 482 4 is_stmt 1 view .LVU449
ARM GAS  /tmp/ccEQqYmG.s 			page 50


 482:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1755              		.loc 1 482 10 is_stmt 0 view .LVU450
 1756 00ae 0023     		movs	r3, #0
 1757 00b0 204A     		ldr	r2, .L123+8
 1758 00b2 1370     		strb	r3, [r2]
 483:Core/Src/main.c **** 			f_querry =0;
 1759              		.loc 1 483 4 is_stmt 1 view .LVU451
 483:Core/Src/main.c **** 			f_querry =0;
 1760              		.loc 1 483 10 is_stmt 0 view .LVU452
 1761 00b4 1E4A     		ldr	r2, .L123+4
 1762 00b6 0221     		movs	r1, #2
 1763 00b8 1170     		strb	r1, [r2]
 484:Core/Src/main.c **** 			break;
 1764              		.loc 1 484 4 is_stmt 1 view .LVU453
 484:Core/Src/main.c **** 			break;
 1765              		.loc 1 484 13 is_stmt 0 view .LVU454
 1766 00ba 1F4A     		ldr	r2, .L123+12
 1767 00bc 1370     		strb	r3, [r2]
 485:Core/Src/main.c **** 		
 1768              		.loc 1 485 4 is_stmt 1 view .LVU455
 1769 00be ABE7     		b	.L106
 1770              	.L114:
 496:Core/Src/main.c **** 			}
 1771              		.loc 1 496 5 view .LVU456
 1772 00c0 3022     		movs	r2, #48
 1773 00c2 F421     		movs	r1, #244
 1774 00c4 1E48     		ldr	r0, .L123+20
 1775 00c6 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 1776 00c8 FFF7FEFF 		bl	RS485_Send_Message
 1777              	.LVL117:
 1778 00cc C2E7     		b	.L115
 1779              	.L118:
 499:Core/Src/main.c **** 			
 1780              		.loc 1 499 7 is_stmt 0 view .LVU457
 1781 00ce 0023     		movs	r3, #0
 1782 00d0 C6E7     		b	.L116
 1783              	.L109:
 509:Core/Src/main.c **** 			RS485_Read_Message();
 1784              		.loc 1 509 3 is_stmt 1 view .LVU458
 509:Core/Src/main.c **** 			RS485_Read_Message();
 1785              		.loc 1 509 12 is_stmt 0 view .LVU459
 1786 00d2 184B     		ldr	r3, .L123+8
 1787 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 509:Core/Src/main.c **** 			RS485_Read_Message();
 1788              		.loc 1 509 6 view .LVU460
 1789 00d6 052B     		cmp	r3, #5
 1790 00d8 1ED0     		beq	.L122
 518:Core/Src/main.c **** 			f_querry =0;
 1791              		.loc 1 518 4 is_stmt 1 view .LVU461
 518:Core/Src/main.c **** 			f_querry =0;
 1792              		.loc 1 518 8 is_stmt 0 view .LVU462
 1793 00da 174B     		ldr	r3, .L123+12
 1794 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518:Core/Src/main.c **** 			f_querry =0;
 1795              		.loc 1 518 7 view .LVU463
 1796 00de 002B     		cmp	r3, #0
 1797 00e0 9AD0     		beq	.L106
ARM GAS  /tmp/ccEQqYmG.s 			page 51


 519:Core/Src/main.c **** 			
 1798              		.loc 1 519 4 is_stmt 1 view .LVU464
 519:Core/Src/main.c **** 			
 1799              		.loc 1 519 13 is_stmt 0 view .LVU465
 1800 00e2 154B     		ldr	r3, .L123+12
 1801 00e4 0022     		movs	r2, #0
 1802 00e6 1A70     		strb	r2, [r3]
 521:Core/Src/main.c **** 			tx_timeout++;
 1803              		.loc 1 521 4 is_stmt 1 view .LVU466
 1804 00e8 184B     		ldr	r3, .L123+32
 1805 00ea DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1806 00ec 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1807 00ee 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1808 00f0 FFF7FEFF 		bl	RS485_Send_Message
 1809              	.LVL118:
 522:Core/Src/main.c **** 			
 1810              		.loc 1 522 4 view .LVU467
 522:Core/Src/main.c **** 			
 1811              		.loc 1 522 14 is_stmt 0 view .LVU468
 1812 00f4 164A     		ldr	r2, .L123+36
 1813 00f6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1814 00f8 0133     		adds	r3, r3, #1
 1815 00fa DBB2     		uxtb	r3, r3
 1816 00fc 1370     		strb	r3, [r2]
 524:Core/Src/main.c **** 				state = STATE_TX;
 1817              		.loc 1 524 4 is_stmt 1 view .LVU469
 524:Core/Src/main.c **** 				state = STATE_TX;
 1818              		.loc 1 524 7 is_stmt 0 view .LVU470
 1819 00fe 022B     		cmp	r3, #2
 1820 0100 8AD1     		bne	.L106
 525:Core/Src/main.c **** 				event = EVENT_RESET;	
 1821              		.loc 1 525 5 is_stmt 1 view .LVU471
 525:Core/Src/main.c **** 				event = EVENT_RESET;	
 1822              		.loc 1 525 11 is_stmt 0 view .LVU472
 1823 0102 0B4B     		ldr	r3, .L123+4
 1824 0104 0122     		movs	r2, #1
 1825 0106 1A70     		strb	r2, [r3]
 526:Core/Src/main.c **** 				tx_timeout=0;
 1826              		.loc 1 526 5 is_stmt 1 view .LVU473
 526:Core/Src/main.c **** 				tx_timeout=0;
 1827              		.loc 1 526 11 is_stmt 0 view .LVU474
 1828 0108 0023     		movs	r3, #0
 1829 010a 0A4A     		ldr	r2, .L123+8
 1830 010c 1370     		strb	r3, [r2]
 527:Core/Src/main.c **** 				check_slave();
 1831              		.loc 1 527 5 is_stmt 1 view .LVU475
 527:Core/Src/main.c **** 				check_slave();
 1832              		.loc 1 527 15 is_stmt 0 view .LVU476
 1833 010e 104A     		ldr	r2, .L123+36
 1834 0110 1370     		strb	r3, [r2]
 528:Core/Src/main.c **** 				break;
 1835              		.loc 1 528 5 is_stmt 1 view .LVU477
 1836 0112 FFF7FEFF 		bl	check_slave
 1837              	.LVL119:
 529:Core/Src/main.c **** 
 1838              		.loc 1 529 5 view .LVU478
 540:Core/Src/main.c **** 
ARM GAS  /tmp/ccEQqYmG.s 			page 52


 1839              		.loc 1 540 1 is_stmt 0 view .LVU479
 1840 0116 7FE7     		b	.L106
 1841              	.L122:
 510:Core/Src/main.c **** 
 1842              		.loc 1 510 4 is_stmt 1 view .LVU480
 1843 0118 FFF7FEFF 		bl	RS485_Read_Message
 1844              	.LVL120:
 512:Core/Src/main.c **** 			event = EVENT_RESET;
 1845              		.loc 1 512 4 view .LVU481
 512:Core/Src/main.c **** 			event = EVENT_RESET;
 1846              		.loc 1 512 9 is_stmt 0 view .LVU482
 1847 011c 044B     		ldr	r3, .L123+4
 1848 011e 0122     		movs	r2, #1
 1849 0120 1A70     		strb	r2, [r3]
 513:Core/Src/main.c **** 		
 1850              		.loc 1 513 4 is_stmt 1 view .LVU483
 513:Core/Src/main.c **** 		
 1851              		.loc 1 513 10 is_stmt 0 view .LVU484
 1852 0122 044B     		ldr	r3, .L123+8
 1853 0124 0022     		movs	r2, #0
 1854 0126 1A70     		strb	r2, [r3]
 1855 0128 76E7     		b	.L106
 1856              	.L124:
 1857 012a 00BF     		.align	2
 1858              	.L123:
 1859 012c 00000000 		.word	.LANCHOR20
 1860 0130 00000000 		.word	.LANCHOR19
 1861 0134 00000000 		.word	.LANCHOR30
 1862 0138 00000000 		.word	.LANCHOR14
 1863 013c 00000000 		.word	.LANCHOR31
 1864 0140 00000000 		.word	.LANCHOR27
 1865 0144 00000000 		.word	.LANCHOR18
 1866 0148 00000000 		.word	.LANCHOR22
 1867 014c 00000000 		.word	.LANCHOR29
 1868 0150 00000000 		.word	.LANCHOR32
 1869              		.cfi_endproc
 1870              	.LFE137:
 1872              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1873              		.align	1
 1874              		.global	HAL_TIM_PeriodElapsedCallback
 1875              		.syntax unified
 1876              		.thumb
 1877              		.thumb_func
 1879              	HAL_TIM_PeriodElapsedCallback:
 1880              	.LVL121:
 1881              	.LFB144:
 773:Core/Src/main.c **** 
 774:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 775:Core/Src/main.c **** {
 1882              		.loc 1 775 1 is_stmt 1 view -0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 0
 1885              		@ frame_needed = 0, uses_anonymous_args = 0
 1886              		@ link register save eliminated.
 776:Core/Src/main.c **** 	// Check which version of the timer triggered this callback and toggle LED
 777:Core/Src/main.c **** 
 778:Core/Src/main.c **** 	if (htim == &htim4)
ARM GAS  /tmp/ccEQqYmG.s 			page 53


 1887              		.loc 1 778 2 view .LVU486
 1888              		.loc 1 778 5 is_stmt 0 view .LVU487
 1889 0000 034B     		ldr	r3, .L128
 1890 0002 8342     		cmp	r3, r0
 1891 0004 00D0     		beq	.L127
 1892              	.L125:
 779:Core/Src/main.c **** 	{
 780:Core/Src/main.c **** 		f_timer_10ms = 1;
 781:Core/Src/main.c **** 	}
 782:Core/Src/main.c **** }
 1893              		.loc 1 782 1 view .LVU488
 1894 0006 7047     		bx	lr
 1895              	.L127:
 780:Core/Src/main.c **** 	}
 1896              		.loc 1 780 3 is_stmt 1 view .LVU489
 780:Core/Src/main.c **** 	}
 1897              		.loc 1 780 16 is_stmt 0 view .LVU490
 1898 0008 024B     		ldr	r3, .L128+4
 1899 000a 0122     		movs	r2, #1
 1900 000c 1A70     		strb	r2, [r3]
 1901              		.loc 1 782 1 view .LVU491
 1902 000e FAE7     		b	.L125
 1903              	.L129:
 1904              		.align	2
 1905              	.L128:
 1906 0010 00000000 		.word	htim4
 1907 0014 00000000 		.word	.LANCHOR9
 1908              		.cfi_endproc
 1909              	.LFE144:
 1911              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1912              		.align	1
 1913              		.global	HAL_UART_RxCpltCallback
 1914              		.syntax unified
 1915              		.thumb
 1916              		.thumb_func
 1918              	HAL_UART_RxCpltCallback:
 1919              	.LVL122:
 1920              	.LFB145:
 783:Core/Src/main.c **** 
 784:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 785:Core/Src/main.c **** {
 1921              		.loc 1 785 1 is_stmt 1 view -0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 786:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 787:Core/Src/main.c **** 
 788:Core/Src/main.c **** 	if (huart == &huart4)
 1925              		.loc 1 788 2 view .LVU493
 1926              		.loc 1 788 5 is_stmt 0 view .LVU494
 1927 0000 074B     		ldr	r3, .L137
 1928 0002 8342     		cmp	r3, r0
 1929 0004 00D0     		beq	.L136
 1930 0006 7047     		bx	lr
 1931              	.L136:
 785:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 1932              		.loc 1 785 1 view .LVU495
ARM GAS  /tmp/ccEQqYmG.s 			page 54


 1933 0008 10B5     		push	{r4, lr}
 1934              	.LCFI12:
 1935              		.cfi_def_cfa_offset 8
 1936              		.cfi_offset 4, -8
 1937              		.cfi_offset 14, -4
 789:Core/Src/main.c **** 	{
 790:Core/Src/main.c **** 		buffer_push(&rx_buffer, rx_temp);
 1938              		.loc 1 790 3 is_stmt 1 view .LVU496
 1939 000a 064C     		ldr	r4, .L137+4
 1940 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1941 000e 0648     		ldr	r0, .L137+8
 1942              	.LVL123:
 1943              		.loc 1 790 3 is_stmt 0 view .LVU497
 1944 0010 FFF7FEFF 		bl	buffer_push
 1945              	.LVL124:
 791:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 1946              		.loc 1 791 3 is_stmt 1 view .LVU498
 1947 0014 0122     		movs	r2, #1
 1948 0016 2146     		mov	r1, r4
 1949 0018 0148     		ldr	r0, .L137
 1950 001a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1951              	.LVL125:
 792:Core/Src/main.c **** 	}
 793:Core/Src/main.c **** }
 1952              		.loc 1 793 1 is_stmt 0 view .LVU499
 1953 001e 10BD     		pop	{r4, pc}
 1954              	.L138:
 1955              		.align	2
 1956              	.L137:
 1957 0020 00000000 		.word	huart4
 1958 0024 00000000 		.word	.LANCHOR33
 1959 0028 00000000 		.word	.LANCHOR23
 1960              		.cfi_endproc
 1961              	.LFE145:
 1963              		.section	.text.Error_Handler,"ax",%progbits
 1964              		.align	1
 1965              		.global	Error_Handler
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1970              	Error_Handler:
 1971              	.LFB146:
 794:Core/Src/main.c **** /* USER CODE END 4 */
 795:Core/Src/main.c **** 
 796:Core/Src/main.c **** /**
 797:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 798:Core/Src/main.c ****  * @retval None
 799:Core/Src/main.c ****  */
 800:Core/Src/main.c **** void Error_Handler(void)
 801:Core/Src/main.c **** {
 1972              		.loc 1 801 1 is_stmt 1 view -0
 1973              		.cfi_startproc
 1974              		@ Volatile: function does not return.
 1975              		@ args = 0, pretend = 0, frame = 0
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
 1977              		@ link register save eliminated.
 802:Core/Src/main.c **** 	/* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /tmp/ccEQqYmG.s 			page 55


 803:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 804:Core/Src/main.c **** 	__disable_irq();
 1978              		.loc 1 804 2 view .LVU501
 1979              	.LBB4:
 1980              	.LBI4:
 1981              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /tmp/ccEQqYmG.s 			page 56


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/ccEQqYmG.s 			page 57


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1982              		.loc 2 140 27 view .LVU502
 1983              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1984              		.loc 2 142 3 view .LVU503
 1985              		.syntax unified
 1986              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1987 0000 72B6     		cpsid i
 1988              	@ 0 "" 2
 1989              		.thumb
 1990              		.syntax unified
 1991              	.L140:
 1992              	.LBE5:
 1993              	.LBE4:
 805:Core/Src/main.c **** 	while (1)
 1994              		.loc 1 805 2 discriminator 1 view .LVU504
 806:Core/Src/main.c **** 	{
 807:Core/Src/main.c **** 	}
 1995              		.loc 1 807 2 discriminator 1 view .LVU505
 805:Core/Src/main.c **** 	while (1)
 1996              		.loc 1 805 8 discriminator 1 view .LVU506
 1997 0002 FEE7     		b	.L140
 1998              		.cfi_endproc
 1999              	.LFE146:
 2001              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /tmp/ccEQqYmG.s 			page 58


 2002              		.align	1
 2003              		.global	SystemClock_Config
 2004              		.syntax unified
 2005              		.thumb
 2006              		.thumb_func
 2008              	SystemClock_Config:
 2009              	.LFB131:
 251:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2010              		.loc 1 251 1 view -0
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 80
 2013              		@ frame_needed = 0, uses_anonymous_args = 0
 2014 0000 00B5     		push	{lr}
 2015              	.LCFI13:
 2016              		.cfi_def_cfa_offset 4
 2017              		.cfi_offset 14, -4
 2018 0002 95B0     		sub	sp, sp, #84
 2019              	.LCFI14:
 2020              		.cfi_def_cfa_offset 88
 252:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2021              		.loc 1 252 2 view .LVU508
 252:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2022              		.loc 1 252 21 is_stmt 0 view .LVU509
 2023 0004 3022     		movs	r2, #48
 2024 0006 0021     		movs	r1, #0
 2025 0008 08A8     		add	r0, sp, #32
 2026 000a FFF7FEFF 		bl	memset
 2027              	.LVL126:
 253:Core/Src/main.c **** 
 2028              		.loc 1 253 2 is_stmt 1 view .LVU510
 253:Core/Src/main.c **** 
 2029              		.loc 1 253 21 is_stmt 0 view .LVU511
 2030 000e 0023     		movs	r3, #0
 2031 0010 0393     		str	r3, [sp, #12]
 2032 0012 0493     		str	r3, [sp, #16]
 2033 0014 0593     		str	r3, [sp, #20]
 2034 0016 0693     		str	r3, [sp, #24]
 2035 0018 0793     		str	r3, [sp, #28]
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2036              		.loc 1 257 2 is_stmt 1 view .LVU512
 2037              	.LBB6:
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2038              		.loc 1 257 2 view .LVU513
 2039 001a 0193     		str	r3, [sp, #4]
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2040              		.loc 1 257 2 view .LVU514
 2041 001c 204A     		ldr	r2, .L147
 2042 001e 116C     		ldr	r1, [r2, #64]
 2043 0020 41F08051 		orr	r1, r1, #268435456
 2044 0024 1164     		str	r1, [r2, #64]
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2045              		.loc 1 257 2 view .LVU515
 2046 0026 126C     		ldr	r2, [r2, #64]
 2047 0028 02F08052 		and	r2, r2, #268435456
 2048 002c 0192     		str	r2, [sp, #4]
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2049              		.loc 1 257 2 view .LVU516
ARM GAS  /tmp/ccEQqYmG.s 			page 59


 2050 002e 019A     		ldr	r2, [sp, #4]
 2051              	.LBE6:
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2052              		.loc 1 257 2 view .LVU517
 258:Core/Src/main.c **** 
 2053              		.loc 1 258 2 view .LVU518
 2054              	.LBB7:
 258:Core/Src/main.c **** 
 2055              		.loc 1 258 2 view .LVU519
 2056 0030 0293     		str	r3, [sp, #8]
 258:Core/Src/main.c **** 
 2057              		.loc 1 258 2 view .LVU520
 2058 0032 1C4A     		ldr	r2, .L147+4
 2059 0034 1368     		ldr	r3, [r2]
 2060 0036 23F44043 		bic	r3, r3, #49152
 2061 003a 43F48043 		orr	r3, r3, #16384
 2062 003e 1360     		str	r3, [r2]
 258:Core/Src/main.c **** 
 2063              		.loc 1 258 2 view .LVU521
 2064 0040 1368     		ldr	r3, [r2]
 2065 0042 03F44043 		and	r3, r3, #49152
 2066 0046 0293     		str	r3, [sp, #8]
 258:Core/Src/main.c **** 
 2067              		.loc 1 258 2 view .LVU522
 2068 0048 029B     		ldr	r3, [sp, #8]
 2069              	.LBE7:
 258:Core/Src/main.c **** 
 2070              		.loc 1 258 2 view .LVU523
 263:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2071              		.loc 1 263 2 view .LVU524
 263:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2072              		.loc 1 263 35 is_stmt 0 view .LVU525
 2073 004a 0123     		movs	r3, #1
 2074 004c 0893     		str	r3, [sp, #32]
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2075              		.loc 1 264 2 is_stmt 1 view .LVU526
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2076              		.loc 1 264 29 is_stmt 0 view .LVU527
 2077 004e 4FF48033 		mov	r3, #65536
 2078 0052 0993     		str	r3, [sp, #36]
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2079              		.loc 1 265 2 is_stmt 1 view .LVU528
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2080              		.loc 1 265 33 is_stmt 0 view .LVU529
 2081 0054 0223     		movs	r3, #2
 2082 0056 0E93     		str	r3, [sp, #56]
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 2083              		.loc 1 266 2 is_stmt 1 view .LVU530
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 2084              		.loc 1 266 34 is_stmt 0 view .LVU531
 2085 0058 4FF48002 		mov	r2, #4194304
 2086 005c 0F92     		str	r2, [sp, #60]
 267:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 2087              		.loc 1 267 2 is_stmt 1 view .LVU532
 267:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 2088              		.loc 1 267 29 is_stmt 0 view .LVU533
 2089 005e 0422     		movs	r2, #4
ARM GAS  /tmp/ccEQqYmG.s 			page 60


 2090 0060 1092     		str	r2, [sp, #64]
 268:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2091              		.loc 1 268 2 is_stmt 1 view .LVU534
 268:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2092              		.loc 1 268 29 is_stmt 0 view .LVU535
 2093 0062 6022     		movs	r2, #96
 2094 0064 1192     		str	r2, [sp, #68]
 269:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 2095              		.loc 1 269 2 is_stmt 1 view .LVU536
 269:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 2096              		.loc 1 269 29 is_stmt 0 view .LVU537
 2097 0066 1293     		str	r3, [sp, #72]
 270:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2098              		.loc 1 270 2 is_stmt 1 view .LVU538
 270:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2099              		.loc 1 270 29 is_stmt 0 view .LVU539
 2100 0068 0323     		movs	r3, #3
 2101 006a 1393     		str	r3, [sp, #76]
 271:Core/Src/main.c **** 	{
 2102              		.loc 1 271 2 is_stmt 1 view .LVU540
 271:Core/Src/main.c **** 	{
 2103              		.loc 1 271 6 is_stmt 0 view .LVU541
 2104 006c 08A8     		add	r0, sp, #32
 2105 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 2106              	.LVL127:
 271:Core/Src/main.c **** 	{
 2107              		.loc 1 271 5 view .LVU542
 2108 0072 88B9     		cbnz	r0, .L145
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2109              		.loc 1 278 2 is_stmt 1 view .LVU543
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2110              		.loc 1 278 30 is_stmt 0 view .LVU544
 2111 0074 0F23     		movs	r3, #15
 2112 0076 0393     		str	r3, [sp, #12]
 279:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 2113              		.loc 1 279 2 is_stmt 1 view .LVU545
 279:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 2114              		.loc 1 279 33 is_stmt 0 view .LVU546
 2115 0078 0223     		movs	r3, #2
 2116 007a 0493     		str	r3, [sp, #16]
 280:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2117              		.loc 1 280 2 is_stmt 1 view .LVU547
 280:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2118              		.loc 1 280 34 is_stmt 0 view .LVU548
 2119 007c 8023     		movs	r3, #128
 2120 007e 0593     		str	r3, [sp, #20]
 281:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 2121              		.loc 1 281 2 is_stmt 1 view .LVU549
 281:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 2122              		.loc 1 281 35 is_stmt 0 view .LVU550
 2123 0080 4FF48053 		mov	r3, #4096
 2124 0084 0693     		str	r3, [sp, #24]
 282:Core/Src/main.c **** 
 2125              		.loc 1 282 2 is_stmt 1 view .LVU551
 282:Core/Src/main.c **** 
 2126              		.loc 1 282 35 is_stmt 0 view .LVU552
 2127 0086 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccEQqYmG.s 			page 61


 284:Core/Src/main.c **** 	{
 2128              		.loc 1 284 2 is_stmt 1 view .LVU553
 284:Core/Src/main.c **** 	{
 2129              		.loc 1 284 6 is_stmt 0 view .LVU554
 2130 0088 0121     		movs	r1, #1
 2131 008a 03A8     		add	r0, sp, #12
 2132 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2133              	.LVL128:
 284:Core/Src/main.c **** 	{
 2134              		.loc 1 284 5 view .LVU555
 2135 0090 20B9     		cbnz	r0, .L146
 288:Core/Src/main.c **** 
 2136              		.loc 1 288 1 view .LVU556
 2137 0092 15B0     		add	sp, sp, #84
 2138              	.LCFI15:
 2139              		.cfi_remember_state
 2140              		.cfi_def_cfa_offset 4
 2141              		@ sp needed
 2142 0094 5DF804FB 		ldr	pc, [sp], #4
 2143              	.L145:
 2144              	.LCFI16:
 2145              		.cfi_restore_state
 273:Core/Src/main.c **** 	}
 2146              		.loc 1 273 3 is_stmt 1 view .LVU557
 2147 0098 FFF7FEFF 		bl	Error_Handler
 2148              	.LVL129:
 2149              	.L146:
 286:Core/Src/main.c **** 	}
 2150              		.loc 1 286 3 view .LVU558
 2151 009c FFF7FEFF 		bl	Error_Handler
 2152              	.LVL130:
 2153              	.L148:
 2154              		.align	2
 2155              	.L147:
 2156 00a0 00380240 		.word	1073887232
 2157 00a4 00700040 		.word	1073770496
 2158              		.cfi_endproc
 2159              	.LFE131:
 2161              		.section	.text.main,"ax",%progbits
 2162              		.align	1
 2163              		.global	main
 2164              		.syntax unified
 2165              		.thumb
 2166              		.thumb_func
 2168              	main:
 2169              	.LFB130:
 157:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 2170              		.loc 1 157 1 view -0
 2171              		.cfi_startproc
 2172              		@ Volatile: function does not return.
 2173              		@ args = 0, pretend = 0, frame = 0
 2174              		@ frame_needed = 0, uses_anonymous_args = 0
 2175 0000 80B5     		push	{r7, lr}
 2176              	.LCFI17:
 2177              		.cfi_def_cfa_offset 8
 2178              		.cfi_offset 7, -8
 2179              		.cfi_offset 14, -4
ARM GAS  /tmp/ccEQqYmG.s 			page 62


 165:Core/Src/main.c **** 
 2180              		.loc 1 165 2 view .LVU560
 2181 0002 FFF7FEFF 		bl	HAL_Init
 2182              	.LVL131:
 172:Core/Src/main.c **** 
 2183              		.loc 1 172 2 view .LVU561
 2184 0006 FFF7FEFF 		bl	SystemClock_Config
 2185              	.LVL132:
 179:Core/Src/main.c **** 	MX_TIM4_Init();
 2186              		.loc 1 179 2 view .LVU562
 2187 000a FFF7FEFF 		bl	MX_GPIO_Init
 2188              	.LVL133:
 180:Core/Src/main.c **** 	MX_UART4_Init();
 2189              		.loc 1 180 2 view .LVU563
 2190 000e FFF7FEFF 		bl	MX_TIM4_Init
 2191              	.LVL134:
 181:Core/Src/main.c **** 	MX_UART5_Init();
 2192              		.loc 1 181 2 view .LVU564
 2193 0012 FFF7FEFF 		bl	MX_UART4_Init
 2194              	.LVL135:
 182:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 2195              		.loc 1 182 2 view .LVU565
 2196 0016 FFF7FEFF 		bl	MX_UART5_Init
 2197              	.LVL136:
 185:Core/Src/main.c **** 
 2198              		.loc 1 185 2 view .LVU566
 2199 001a 3748     		ldr	r0, .L152
 2200 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2201              	.LVL137:
 187:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 2202              		.loc 1 187 2 view .LVU567
 2203 0020 0022     		movs	r2, #0
 2204 0022 4FF48051 		mov	r1, #4096
 2205 0026 3548     		ldr	r0, .L152+4
 2206 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2207              	.LVL138:
 190:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 2208              		.loc 1 190 2 view .LVU568
 2209 002c 0122     		movs	r2, #1
 2210 002e 3449     		ldr	r1, .L152+8
 2211 0030 3448     		ldr	r0, .L152+12
 2212 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2213              	.LVL139:
 193:Core/Src/main.c **** 	digit2 = 16;
 2214              		.loc 1 193 2 view .LVU569
 193:Core/Src/main.c **** 	digit2 = 16;
 2215              		.loc 1 193 9 is_stmt 0 view .LVU570
 2216 0036 344F     		ldr	r7, .L152+16
 2217 0038 1023     		movs	r3, #16
 2218 003a 3B70     		strb	r3, [r7]
 194:Core/Src/main.c **** 	num_slave=0;
 2219              		.loc 1 194 2 is_stmt 1 view .LVU571
 194:Core/Src/main.c **** 	num_slave=0;
 2220              		.loc 1 194 9 is_stmt 0 view .LVU572
 2221 003c DFF8F090 		ldr	r9, .L152+56
 2222 0040 89F80030 		strb	r3, [r9]
 195:Core/Src/main.c **** 	ID=0;
ARM GAS  /tmp/ccEQqYmG.s 			page 63


 2223              		.loc 1 195 2 is_stmt 1 view .LVU573
 195:Core/Src/main.c **** 	ID=0;
 2224              		.loc 1 195 11 is_stmt 0 view .LVU574
 2225 0044 314E     		ldr	r6, .L152+20
 2226 0046 0024     		movs	r4, #0
 2227 0048 3470     		strb	r4, [r6]
 196:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 2228              		.loc 1 196 2 is_stmt 1 view .LVU575
 196:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 2229              		.loc 1 196 4 is_stmt 0 view .LVU576
 2230 004a 314B     		ldr	r3, .L152+24
 2231 004c 1C70     		strb	r4, [r3]
 197:Core/Src/main.c **** 	ID_list[SLAVE1]= 0;
 2232              		.loc 1 197 2 is_stmt 1 view .LVU577
 197:Core/Src/main.c **** 	ID_list[SLAVE1]= 0;
 2233              		.loc 1 197 12 is_stmt 0 view .LVU578
 2234 004e 314B     		ldr	r3, .L152+28
 2235 0050 FF22     		movs	r2, #255
 2236 0052 1A70     		strb	r2, [r3]
 198:Core/Src/main.c **** 	ID_list[SLAVE2]= 0;
 2237              		.loc 1 198 2 is_stmt 1 view .LVU579
 198:Core/Src/main.c **** 	ID_list[SLAVE2]= 0;
 2238              		.loc 1 198 17 is_stmt 0 view .LVU580
 2239 0054 5C70     		strb	r4, [r3, #1]
 199:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 2240              		.loc 1 199 2 is_stmt 1 view .LVU581
 199:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 2241              		.loc 1 199 17 is_stmt 0 view .LVU582
 2242 0056 9C70     		strb	r4, [r3, #2]
 201:Core/Src/main.c **** 	/*
 2243              		.loc 1 201 2 is_stmt 1 view .LVU583
 201:Core/Src/main.c **** 	/*
 2244              		.loc 1 201 8 is_stmt 0 view .LVU584
 2245 0058 0125     		movs	r5, #1
 2246 005a 2F4B     		ldr	r3, .L152+32
 2247 005c 1D70     		strb	r5, [r3]
 208:Core/Src/main.c **** 	lcd_init();
 2248              		.loc 1 208 2 is_stmt 1 view .LVU585
 2249 005e 4FF47A70 		mov	r0, #1000
 2250 0062 FFF7FEFF 		bl	HAL_Delay
 2251              	.LVL140:
 209:Core/Src/main.c **** 	lcd_clear();
 2252              		.loc 1 209 2 view .LVU586
 2253 0066 FFF7FEFF 		bl	lcd_init
 2254              	.LVL141:
 210:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 2255              		.loc 1 210 2 view .LVU587
 2256 006a FFF7FEFF 		bl	lcd_clear
 2257              	.LVL142:
 211:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 2258              		.loc 1 211 2 view .LVU588
 2259 006e 2146     		mov	r1, r4
 2260 0070 2046     		mov	r0, r4
 2261 0072 FFF7FEFF 		bl	lcd_set_pos
 2262              	.LVL143:
 212:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 2263              		.loc 1 212 2 view .LVU589
ARM GAS  /tmp/ccEQqYmG.s 			page 64


 2264 0076 2948     		ldr	r0, .L152+36
 2265 0078 FFF7FEFF 		bl	lcd_write_string
 2266              	.LVL144:
 213:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 2267              		.loc 1 213 2 view .LVU590
 2268 007c 0C21     		movs	r1, #12
 2269 007e 2046     		mov	r0, r4
 2270 0080 FFF7FEFF 		bl	lcd_set_pos
 2271              	.LVL145:
 214:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 2272              		.loc 1 214 2 view .LVU591
 2273 0084 DFF8AC80 		ldr	r8, .L152+60
 2274 0088 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2275 008a 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 2276 008e FFF7FEFF 		bl	lcd_data
 2277              	.LVL146:
 215:Core/Src/main.c **** 	lcd_write_string("S2:");
 2278              		.loc 1 215 2 view .LVU592
 2279 0092 2146     		mov	r1, r4
 2280 0094 2846     		mov	r0, r5
 2281 0096 FFF7FEFF 		bl	lcd_set_pos
 2282              	.LVL147:
 216:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 2283              		.loc 1 216 2 view .LVU593
 2284 009a 2148     		ldr	r0, .L152+40
 2285 009c FFF7FEFF 		bl	lcd_write_string
 2286              	.LVL148:
 217:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 2287              		.loc 1 217 2 view .LVU594
 2288 00a0 0321     		movs	r1, #3
 2289 00a2 2846     		mov	r0, r5
 2290 00a4 FFF7FEFF 		bl	lcd_set_pos
 2291              	.LVL149:
 218:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 2292              		.loc 1 218 2 view .LVU595
 2293 00a8 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 2294 00ac 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 2295 00b0 FFF7FEFF 		bl	lcd_data
 2296              	.LVL150:
 219:Core/Src/main.c **** 	lcd_write_string("S1:");
 2297              		.loc 1 219 2 view .LVU596
 2298 00b4 0C21     		movs	r1, #12
 2299 00b6 2846     		mov	r0, r5
 2300 00b8 FFF7FEFF 		bl	lcd_set_pos
 2301              	.LVL151:
 220:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 2302              		.loc 1 220 2 view .LVU597
 2303 00bc 1948     		ldr	r0, .L152+44
 2304 00be FFF7FEFF 		bl	lcd_write_string
 2305              	.LVL152:
 221:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 2306              		.loc 1 221 2 view .LVU598
 2307 00c2 0F21     		movs	r1, #15
 2308 00c4 2846     		mov	r0, r5
 2309 00c6 FFF7FEFF 		bl	lcd_set_pos
 2310              	.LVL153:
 222:Core/Src/main.c **** 	old_digit1 = digit1;
ARM GAS  /tmp/ccEQqYmG.s 			page 65


 2311              		.loc 1 222 2 view .LVU599
 2312 00ca 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2313 00cc 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 2314 00d0 FFF7FEFF 		bl	lcd_data
 2315              	.LVL154:
 223:Core/Src/main.c **** 	old_digit2=old_digit2;
 2316              		.loc 1 223 2 view .LVU600
 223:Core/Src/main.c **** 	old_digit2=old_digit2;
 2317              		.loc 1 223 13 is_stmt 0 view .LVU601
 2318 00d4 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2319 00d6 144B     		ldr	r3, .L152+48
 2320 00d8 1A70     		strb	r2, [r3]
 224:Core/Src/main.c **** 	old_num_slave= num_slave;
 2321              		.loc 1 224 2 is_stmt 1 view .LVU602
 225:Core/Src/main.c **** 	/* USER CODE END 2 */
 2322              		.loc 1 225 2 view .LVU603
 225:Core/Src/main.c **** 	/* USER CODE END 2 */
 2323              		.loc 1 225 15 is_stmt 0 view .LVU604
 2324 00da 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 2325 00dc 134B     		ldr	r3, .L152+52
 2326 00de 1A70     		strb	r2, [r3]
 2327              	.L150:
 230:Core/Src/main.c **** 	{
 2328              		.loc 1 230 2 is_stmt 1 discriminator 1 view .LVU605
 236:Core/Src/main.c **** 		/// segment_display_task();
 2329              		.loc 1 236 3 discriminator 1 view .LVU606
 2330 00e0 FFF7FEFF 		bl	task_timer
 2331              	.LVL155:
 238:Core/Src/main.c **** 		key_read_task();
 2332              		.loc 1 238 3 discriminator 1 view .LVU607
 2333 00e4 FFF7FEFF 		bl	lcd_display_task
 2334              	.LVL156:
 239:Core/Src/main.c **** 		RS485_RX_Task();
 2335              		.loc 1 239 3 discriminator 1 view .LVU608
 2336 00e8 FFF7FEFF 		bl	key_read_task
 2337              	.LVL157:
 240:Core/Src/main.c **** 		main_task();
 2338              		.loc 1 240 3 discriminator 1 view .LVU609
 2339 00ec FFF7FEFF 		bl	RS485_RX_Task
 2340              	.LVL158:
 241:Core/Src/main.c **** 	}
 2341              		.loc 1 241 3 discriminator 1 view .LVU610
 2342 00f0 FFF7FEFF 		bl	main_task
 2343              	.LVL159:
 230:Core/Src/main.c **** 	{
 2344              		.loc 1 230 8 discriminator 1 view .LVU611
 2345 00f4 F4E7     		b	.L150
 2346              	.L153:
 2347 00f6 00BF     		.align	2
 2348              	.L152:
 2349 00f8 00000000 		.word	htim4
 2350 00fc 00000240 		.word	1073872896
 2351 0100 00000000 		.word	.LANCHOR33
 2352 0104 00000000 		.word	huart4
 2353 0108 00000000 		.word	.LANCHOR5
 2354 010c 00000000 		.word	.LANCHOR6
 2355 0110 00000000 		.word	.LANCHOR31
ARM GAS  /tmp/ccEQqYmG.s 			page 66


 2356 0114 00000000 		.word	.LANCHOR27
 2357 0118 00000000 		.word	.LANCHOR19
 2358 011c 24000000 		.word	.LC3
 2359 0120 30000000 		.word	.LC4
 2360 0124 34000000 		.word	.LC5
 2361 0128 00000000 		.word	.LANCHOR17
 2362 012c 00000000 		.word	.LANCHOR34
 2363 0130 00000000 		.word	.LANCHOR1
 2364 0134 00000000 		.word	.LANCHOR3
 2365              		.cfi_endproc
 2366              	.LFE130:
 2368              		.global	temp
 2369              		.global	pTX_msg
 2370              		.global	pRX_msg
 2371              		.global	RX_msg
 2372              		.global	TX_msg
 2373              		.global	ID_list
 2374              		.global	ID
 2375              		.global	event_buffer
 2376              		.global	rx_buffer
 2377              		.global	digit2_buf
 2378              		.global	digit1_buf
 2379              		.global	x
 2380              		.global	rx_temp
 2381              		.global	digit_table
 2382              		.global	lcd_process
 2383              		.global	data
 2384              		.global	cmd
 2385              		.global	digit2_update
 2386              		.global	digit1_update
 2387              		.global	is_EN
 2388              		.global	old_digit2
 2389              		.global	old_digit1
 2390              		.global	old_num_slave
 2391              		.global	digit2
 2392              		.global	digit1
 2393              		.global	key2_ID
 2394              		.global	key1_ID
 2395              		.global	num_slave
 2396              		.global	error
 2397              		.global	event
 2398              		.global	state
 2399              		.global	key2_data
 2400              		.global	key1_data
 2401              		.global	TX2_delay_val
 2402              		.global	d_timer_TX2
 2403              		.global	TX1_delay_val
 2404              		.global	d_timer_TX1
 2405              		.global	d_timer_20ms
 2406              		.global	d_timer_50ms
 2407              		.global	d_timer_30ms
 2408              		.global	tx1_buffer
 2409              		.global	tx2_buffer
 2410              		.global	flag_digit_1
 2411              		.global	n_querry
 2412              		.global	f_timer_50ms
 2413              		.global	f_timer_30ms
ARM GAS  /tmp/ccEQqYmG.s 			page 67


 2414              		.global	f_waiting_rx
 2415              		.global	f_timer_20ms
 2416              		.global	f_timer_10ms
 2417              		.global	f_seg_timer_500ms
 2418              		.global	f_timer_TX
 2419              		.global	tx_timeout
 2420              		.global	f_read_msg
 2421              		.global	f_querry
 2422              		.global	f_busy
 2423              		.global	f_lcd_item
 2424              		.section	.bss.ID,"aw",%nobits
 2425              		.set	.LANCHOR31,. + 0
 2428              	ID:
 2429 0000 00       		.space	1
 2430              		.section	.bss.ID_list,"aw",%nobits
 2431              		.align	2
 2432              		.set	.LANCHOR27,. + 0
 2435              	ID_list:
 2436 0000 00000000 		.space	10
 2436      00000000 
 2436      0000
 2437              		.section	.bss.RX_msg,"aw",%nobits
 2438              		.align	2
 2439              		.set	.LANCHOR26,. + 0
 2442              	RX_msg:
 2443 0000 00000000 		.space	4
 2444              		.section	.bss.TX_msg,"aw",%nobits
 2445              		.align	2
 2446              		.set	.LANCHOR29,. + 0
 2449              	TX_msg:
 2450 0000 00000000 		.space	6
 2450      0000
 2451              		.section	.bss.cmd,"aw",%nobits
 2452              		.set	.LANCHOR2,. + 0
 2455              	cmd:
 2456 0000 00       		.space	1
 2457              		.section	.bss.d_timer_20ms,"aw",%nobits
 2458              		.set	.LANCHOR12,. + 0
 2461              	d_timer_20ms:
 2462 0000 00       		.space	1
 2463              		.section	.bss.d_timer_30ms,"aw",%nobits
 2464              		.set	.LANCHOR10,. + 0
 2467              	d_timer_30ms:
 2468 0000 00       		.space	1
 2469              		.section	.bss.d_timer_50ms,"aw",%nobits
 2470              		.set	.LANCHOR13,. + 0
 2473              	d_timer_50ms:
 2474 0000 00       		.space	1
 2475              		.section	.bss.d_timer_TX1,"aw",%nobits
 2478              	d_timer_TX1:
 2479 0000 00       		.space	1
 2480              		.section	.bss.d_timer_TX2,"aw",%nobits
 2483              	d_timer_TX2:
 2484 0000 00       		.space	1
 2485              		.section	.bss.data,"aw",%nobits
 2486              		.set	.LANCHOR4,. + 0
 2489              	data:
ARM GAS  /tmp/ccEQqYmG.s 			page 68


 2490 0000 00       		.space	1
 2491              		.section	.bss.digit1,"aw",%nobits
 2492              		.set	.LANCHOR5,. + 0
 2495              	digit1:
 2496 0000 00       		.space	1
 2497              		.section	.bss.digit1_buf,"aw",%nobits
 2498              		.align	2
 2499              		.set	.LANCHOR18,. + 0
 2502              	digit1_buf:
 2503 0000 00000000 		.space	66
 2503      00000000 
 2503      00000000 
 2503      00000000 
 2503      00000000 
 2504              		.section	.bss.digit1_update,"aw",%nobits
 2507              	digit1_update:
 2508 0000 00       		.space	1
 2509              		.section	.bss.digit2,"aw",%nobits
 2510              		.set	.LANCHOR1,. + 0
 2513              	digit2:
 2514 0000 00       		.space	1
 2515              		.section	.bss.digit2_buf,"aw",%nobits
 2516              		.align	2
 2517              		.set	.LANCHOR22,. + 0
 2520              	digit2_buf:
 2521 0000 00000000 		.space	66
 2521      00000000 
 2521      00000000 
 2521      00000000 
 2521      00000000 
 2522              		.section	.bss.digit2_update,"aw",%nobits
 2525              	digit2_update:
 2526 0000 00       		.space	1
 2527              		.section	.bss.error,"aw",%nobits
 2530              	error:
 2531 0000 00       		.space	1
 2532              		.section	.bss.event,"aw",%nobits
 2533              		.set	.LANCHOR30,. + 0
 2536              	event:
 2537 0000 00       		.space	1
 2538              		.section	.bss.event_buffer,"aw",%nobits
 2539              		.align	2
 2540              		.set	.LANCHOR20,. + 0
 2543              	event_buffer:
 2544 0000 00000000 		.space	66
 2544      00000000 
 2544      00000000 
 2544      00000000 
 2544      00000000 
 2545              		.section	.bss.f_busy,"aw",%nobits
 2548              	f_busy:
 2549 0000 00       		.space	1
 2550              		.section	.bss.f_lcd_item,"aw",%nobits
 2553              	f_lcd_item:
 2554 0000 00       		.space	1
 2555              		.section	.bss.f_querry,"aw",%nobits
 2556              		.set	.LANCHOR14,. + 0
ARM GAS  /tmp/ccEQqYmG.s 			page 69


 2559              	f_querry:
 2560 0000 00       		.space	1
 2561              		.section	.bss.f_read_msg,"aw",%nobits
 2562              		.set	.LANCHOR24,. + 0
 2565              	f_read_msg:
 2566 0000 00       		.space	1
 2567              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 2570              	f_seg_timer_500ms:
 2571 0000 00       		.space	1
 2572              		.section	.bss.f_timer_10ms,"aw",%nobits
 2573              		.set	.LANCHOR9,. + 0
 2576              	f_timer_10ms:
 2577 0000 00       		.space	1
 2578              		.section	.bss.f_timer_20ms,"aw",%nobits
 2579              		.set	.LANCHOR7,. + 0
 2582              	f_timer_20ms:
 2583 0000 00       		.space	1
 2584              		.section	.bss.f_timer_30ms,"aw",%nobits
 2585              		.set	.LANCHOR11,. + 0
 2588              	f_timer_30ms:
 2589 0000 00       		.space	1
 2590              		.section	.bss.f_timer_50ms,"aw",%nobits
 2593              	f_timer_50ms:
 2594 0000 00       		.space	1
 2595              		.section	.bss.f_timer_TX,"aw",%nobits
 2598              	f_timer_TX:
 2599 0000 00       		.space	1
 2600              		.section	.bss.f_waiting_rx,"aw",%nobits
 2603              	f_waiting_rx:
 2604 0000 00       		.space	1
 2605              		.section	.bss.is_EN,"aw",%nobits
 2606              		.set	.LANCHOR8,. + 0
 2609              	is_EN:
 2610 0000 00       		.space	1
 2611              		.section	.bss.key1_ID,"aw",%nobits
 2614              	key1_ID:
 2615 0000 00       		.space	1
 2616              		.section	.bss.key1_data,"aw",%nobits
 2617              		.set	.LANCHOR15,. + 0
 2620              	key1_data:
 2621 0000 00       		.space	1
 2622              		.section	.bss.key2_ID,"aw",%nobits
 2625              	key2_ID:
 2626 0000 00       		.space	1
 2627              		.section	.bss.key2_data,"aw",%nobits
 2628              		.set	.LANCHOR16,. + 0
 2631              	key2_data:
 2632 0000 00       		.space	1
 2633              		.section	.bss.n_querry,"aw",%nobits
 2636              	n_querry:
 2637 0000 00       		.space	1
 2638              		.section	.bss.num_slave,"aw",%nobits
 2639              		.set	.LANCHOR6,. + 0
 2642              	num_slave:
 2643 0000 00       		.space	1
 2644              		.section	.bss.old_digit1,"aw",%nobits
 2645              		.set	.LANCHOR17,. + 0
ARM GAS  /tmp/ccEQqYmG.s 			page 70


 2648              	old_digit1:
 2649 0000 00       		.space	1
 2650              		.section	.bss.old_digit2,"aw",%nobits
 2651              		.set	.LANCHOR21,. + 0
 2654              	old_digit2:
 2655 0000 00       		.space	1
 2656              		.section	.bss.old_num_slave,"aw",%nobits
 2657              		.set	.LANCHOR34,. + 0
 2660              	old_num_slave:
 2661 0000 00       		.space	1
 2662              		.section	.bss.pRX_msg,"aw",%nobits
 2663              		.align	2
 2664              		.set	.LANCHOR25,. + 0
 2667              	pRX_msg:
 2668 0000 00000000 		.space	4
 2669              		.section	.bss.pTX_msg,"aw",%nobits
 2670              		.align	2
 2673              	pTX_msg:
 2674 0000 00000000 		.space	4
 2675              		.section	.bss.rx_buffer,"aw",%nobits
 2676              		.align	2
 2677              		.set	.LANCHOR23,. + 0
 2680              	rx_buffer:
 2681 0000 00000000 		.space	66
 2681      00000000 
 2681      00000000 
 2681      00000000 
 2681      00000000 
 2682              		.section	.bss.rx_temp,"aw",%nobits
 2683              		.set	.LANCHOR33,. + 0
 2686              	rx_temp:
 2687 0000 00       		.space	1
 2688              		.section	.bss.state,"aw",%nobits
 2689              		.set	.LANCHOR19,. + 0
 2692              	state:
 2693 0000 00       		.space	1
 2694              		.section	.bss.temp,"aw",%nobits
 2695              		.set	.LANCHOR28,. + 0
 2698              	temp:
 2699 0000 00       		.space	1
 2700              		.section	.bss.tx_timeout,"aw",%nobits
 2701              		.set	.LANCHOR32,. + 0
 2704              	tx_timeout:
 2705 0000 00       		.space	1
 2706              		.section	.data.TX1_delay_val,"aw"
 2709              	TX1_delay_val:
 2710 0000 FA       		.byte	-6
 2711              		.section	.data.TX2_delay_val,"aw"
 2714              	TX2_delay_val:
 2715 0000 FA       		.byte	-6
 2716              		.section	.data.digit_table,"aw"
 2717              		.align	2
 2718              		.set	.LANCHOR3,. + 0
 2721              	digit_table:
 2722 0000 30313233 		.ascii	"0123456789abcdef-"
 2722      34353637 
 2722      38396162 
ARM GAS  /tmp/ccEQqYmG.s 			page 71


 2722      63646566 
 2722      2D
 2723              		.section	.data.flag_digit_1,"aw"
 2726              	flag_digit_1:
 2727 0000 01       		.byte	1
 2728              		.section	.data.lcd_process,"aw"
 2729              		.set	.LANCHOR0,. + 0
 2732              	lcd_process:
 2733 0000 04       		.byte	4
 2734              		.section	.data.tx1_buffer,"aw"
 2735              		.align	2
 2738              	tx1_buffer:
 2739 0000 61626364 		.ascii	"abcdef"
 2739      6566
 2740              		.section	.data.tx2_buffer,"aw"
 2741              		.align	2
 2744              	tx2_buffer:
 2745 0000 31323334 		.ascii	"123456789\000"
 2745      35363738 
 2745      3900
 2746              		.section	.data.x,"aw"
 2749              	x:
 2750 0000 01       		.byte	1
 2751              		.text
 2752              	.Letext0:
 2753              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2754              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2755              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2756              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2757              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2758              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2759              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2760              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2761              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2762              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2763              		.file 13 "Core/Inc/tim.h"
 2764              		.file 14 "Core/Inc/usart.h"
 2765              		.file 15 "Core/Inc/buffer.h"
 2766              		.file 16 "Core/Inc/lcd16x2.h"
 2767              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2768              		.file 18 "Core/Inc/gpio.h"
 2769              		.file 19 "<built-in>"
ARM GAS  /tmp/ccEQqYmG.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccEQqYmG.s:20     .text.update_lcd:0000000000000000 $t
     /tmp/ccEQqYmG.s:26     .text.update_lcd:0000000000000000 update_lcd
     /tmp/ccEQqYmG.s:126    .text.update_lcd:000000000000006c $d
     /tmp/ccEQqYmG.s:137    .text.m_send_to_lcd:0000000000000000 $t
     /tmp/ccEQqYmG.s:143    .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/ccEQqYmG.s:220    .text.m_send_to_lcd:000000000000004c $d
     /tmp/ccEQqYmG.s:228    .text.lcd_display_task:0000000000000000 $t
     /tmp/ccEQqYmG.s:234    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/ccEQqYmG.s:257    .text.lcd_display_task:0000000000000012 $d
     /tmp/ccEQqYmG.s:261    .text.lcd_display_task:0000000000000016 $t
     /tmp/ccEQqYmG.s:331    .text.lcd_display_task:0000000000000074 $d
     /tmp/ccEQqYmG.s:339    .text.task_timer:0000000000000000 $t
     /tmp/ccEQqYmG.s:345    .text.task_timer:0000000000000000 task_timer
     /tmp/ccEQqYmG.s:440    .text.task_timer:0000000000000064 $d
     /tmp/ccEQqYmG.s:451    .text.key_read_task:0000000000000000 $t
     /tmp/ccEQqYmG.s:457    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccEQqYmG.s:633    .text.key_read_task:00000000000000c0 $d
     /tmp/ccEQqYmG.s:649    .text.RS485_RX_Task:0000000000000000 $t
     /tmp/ccEQqYmG.s:655    .text.RS485_RX_Task:0000000000000000 RS485_RX_Task
     /tmp/ccEQqYmG.s:746    .text.RS485_RX_Task:0000000000000060 $d
     /tmp/ccEQqYmG.s:755    .rodata.display_connected_slave.str1.4:0000000000000000 $d
     /tmp/ccEQqYmG.s:774    .text.display_connected_slave:0000000000000000 $t
     /tmp/ccEQqYmG.s:780    .text.display_connected_slave:0000000000000000 display_connected_slave
     /tmp/ccEQqYmG.s:980    .text.display_connected_slave:0000000000000110 $d
     /tmp/ccEQqYmG.s:996    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccEQqYmG.s:1002   .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccEQqYmG.s:1183   .text.RS485_Read_Message:00000000000000b0 $d
     /tmp/ccEQqYmG.s:1194   .rodata.display_disconnected_slave.str1.4:0000000000000000 $d
     /tmp/ccEQqYmG.s:1198   .text.display_disconnected_slave:0000000000000000 $t
     /tmp/ccEQqYmG.s:1204   .text.display_disconnected_slave:0000000000000000 display_disconnected_slave
     /tmp/ccEQqYmG.s:1407   .text.display_disconnected_slave:0000000000000114 $d
     /tmp/ccEQqYmG.s:1423   .text.check_slave:0000000000000000 $t
     /tmp/ccEQqYmG.s:1429   .text.check_slave:0000000000000000 check_slave
     /tmp/ccEQqYmG.s:1514   .text.check_slave:0000000000000058 $d
     /tmp/ccEQqYmG.s:1523   .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccEQqYmG.s:1529   .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccEQqYmG.s:1598   .text.RS485_Send_Message:0000000000000040 $d
     /tmp/ccEQqYmG.s:1605   .text.main_task:0000000000000000 $t
     /tmp/ccEQqYmG.s:1611   .text.main_task:0000000000000000 main_task
     /tmp/ccEQqYmG.s:1859   .text.main_task:000000000000012c $d
     /tmp/ccEQqYmG.s:1873   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccEQqYmG.s:1879   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccEQqYmG.s:1906   .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccEQqYmG.s:1912   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccEQqYmG.s:1918   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccEQqYmG.s:1957   .text.HAL_UART_RxCpltCallback:0000000000000020 $d
     /tmp/ccEQqYmG.s:1964   .text.Error_Handler:0000000000000000 $t
     /tmp/ccEQqYmG.s:1970   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccEQqYmG.s:2002   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccEQqYmG.s:2008   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccEQqYmG.s:2156   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccEQqYmG.s:2162   .text.main:0000000000000000 $t
     /tmp/ccEQqYmG.s:2168   .text.main:0000000000000000 main
     /tmp/ccEQqYmG.s:2349   .text.main:00000000000000f8 $d
     /tmp/ccEQqYmG.s:2698   .bss.temp:0000000000000000 temp
ARM GAS  /tmp/ccEQqYmG.s 			page 73


     /tmp/ccEQqYmG.s:2673   .bss.pTX_msg:0000000000000000 pTX_msg
     /tmp/ccEQqYmG.s:2667   .bss.pRX_msg:0000000000000000 pRX_msg
     /tmp/ccEQqYmG.s:2442   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccEQqYmG.s:2449   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccEQqYmG.s:2435   .bss.ID_list:0000000000000000 ID_list
     /tmp/ccEQqYmG.s:2428   .bss.ID:0000000000000000 ID
     /tmp/ccEQqYmG.s:2543   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccEQqYmG.s:2680   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccEQqYmG.s:2520   .bss.digit2_buf:0000000000000000 digit2_buf
     /tmp/ccEQqYmG.s:2502   .bss.digit1_buf:0000000000000000 digit1_buf
     /tmp/ccEQqYmG.s:2749   .data.x:0000000000000000 x
     /tmp/ccEQqYmG.s:2686   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccEQqYmG.s:2721   .data.digit_table:0000000000000000 digit_table
     /tmp/ccEQqYmG.s:2732   .data.lcd_process:0000000000000000 lcd_process
     /tmp/ccEQqYmG.s:2489   .bss.data:0000000000000000 data
     /tmp/ccEQqYmG.s:2455   .bss.cmd:0000000000000000 cmd
     /tmp/ccEQqYmG.s:2525   .bss.digit2_update:0000000000000000 digit2_update
     /tmp/ccEQqYmG.s:2507   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/ccEQqYmG.s:2609   .bss.is_EN:0000000000000000 is_EN
     /tmp/ccEQqYmG.s:2654   .bss.old_digit2:0000000000000000 old_digit2
     /tmp/ccEQqYmG.s:2648   .bss.old_digit1:0000000000000000 old_digit1
     /tmp/ccEQqYmG.s:2660   .bss.old_num_slave:0000000000000000 old_num_slave
     /tmp/ccEQqYmG.s:2513   .bss.digit2:0000000000000000 digit2
     /tmp/ccEQqYmG.s:2495   .bss.digit1:0000000000000000 digit1
     /tmp/ccEQqYmG.s:2625   .bss.key2_ID:0000000000000000 key2_ID
     /tmp/ccEQqYmG.s:2614   .bss.key1_ID:0000000000000000 key1_ID
     /tmp/ccEQqYmG.s:2642   .bss.num_slave:0000000000000000 num_slave
     /tmp/ccEQqYmG.s:2530   .bss.error:0000000000000000 error
     /tmp/ccEQqYmG.s:2536   .bss.event:0000000000000000 event
     /tmp/ccEQqYmG.s:2692   .bss.state:0000000000000000 state
     /tmp/ccEQqYmG.s:2631   .bss.key2_data:0000000000000000 key2_data
     /tmp/ccEQqYmG.s:2620   .bss.key1_data:0000000000000000 key1_data
     /tmp/ccEQqYmG.s:2714   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/ccEQqYmG.s:2483   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/ccEQqYmG.s:2709   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/ccEQqYmG.s:2478   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/ccEQqYmG.s:2461   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/ccEQqYmG.s:2473   .bss.d_timer_50ms:0000000000000000 d_timer_50ms
     /tmp/ccEQqYmG.s:2467   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccEQqYmG.s:2738   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/ccEQqYmG.s:2744   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/ccEQqYmG.s:2726   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/ccEQqYmG.s:2636   .bss.n_querry:0000000000000000 n_querry
     /tmp/ccEQqYmG.s:2593   .bss.f_timer_50ms:0000000000000000 f_timer_50ms
     /tmp/ccEQqYmG.s:2588   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccEQqYmG.s:2603   .bss.f_waiting_rx:0000000000000000 f_waiting_rx
     /tmp/ccEQqYmG.s:2582   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/ccEQqYmG.s:2576   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccEQqYmG.s:2570   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/ccEQqYmG.s:2598   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/ccEQqYmG.s:2704   .bss.tx_timeout:0000000000000000 tx_timeout
     /tmp/ccEQqYmG.s:2565   .bss.f_read_msg:0000000000000000 f_read_msg
     /tmp/ccEQqYmG.s:2559   .bss.f_querry:0000000000000000 f_querry
     /tmp/ccEQqYmG.s:2548   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccEQqYmG.s:2553   .bss.f_lcd_item:0000000000000000 f_lcd_item
     /tmp/ccEQqYmG.s:2429   .bss.ID:0000000000000000 $d
     /tmp/ccEQqYmG.s:2431   .bss.ID_list:0000000000000000 $d
ARM GAS  /tmp/ccEQqYmG.s 			page 74


     /tmp/ccEQqYmG.s:2438   .bss.RX_msg:0000000000000000 $d
     /tmp/ccEQqYmG.s:2445   .bss.TX_msg:0000000000000000 $d
     /tmp/ccEQqYmG.s:2456   .bss.cmd:0000000000000000 $d
     /tmp/ccEQqYmG.s:2462   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/ccEQqYmG.s:2468   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccEQqYmG.s:2474   .bss.d_timer_50ms:0000000000000000 $d
     /tmp/ccEQqYmG.s:2479   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/ccEQqYmG.s:2484   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/ccEQqYmG.s:2490   .bss.data:0000000000000000 $d
     /tmp/ccEQqYmG.s:2496   .bss.digit1:0000000000000000 $d
     /tmp/ccEQqYmG.s:2498   .bss.digit1_buf:0000000000000000 $d
     /tmp/ccEQqYmG.s:2508   .bss.digit1_update:0000000000000000 $d
     /tmp/ccEQqYmG.s:2514   .bss.digit2:0000000000000000 $d
     /tmp/ccEQqYmG.s:2516   .bss.digit2_buf:0000000000000000 $d
     /tmp/ccEQqYmG.s:2526   .bss.digit2_update:0000000000000000 $d
     /tmp/ccEQqYmG.s:2531   .bss.error:0000000000000000 $d
     /tmp/ccEQqYmG.s:2537   .bss.event:0000000000000000 $d
     /tmp/ccEQqYmG.s:2539   .bss.event_buffer:0000000000000000 $d
     /tmp/ccEQqYmG.s:2549   .bss.f_busy:0000000000000000 $d
     /tmp/ccEQqYmG.s:2554   .bss.f_lcd_item:0000000000000000 $d
     /tmp/ccEQqYmG.s:2560   .bss.f_querry:0000000000000000 $d
     /tmp/ccEQqYmG.s:2566   .bss.f_read_msg:0000000000000000 $d
     /tmp/ccEQqYmG.s:2571   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/ccEQqYmG.s:2577   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccEQqYmG.s:2583   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/ccEQqYmG.s:2589   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccEQqYmG.s:2594   .bss.f_timer_50ms:0000000000000000 $d
     /tmp/ccEQqYmG.s:2599   .bss.f_timer_TX:0000000000000000 $d
     /tmp/ccEQqYmG.s:2604   .bss.f_waiting_rx:0000000000000000 $d
     /tmp/ccEQqYmG.s:2610   .bss.is_EN:0000000000000000 $d
     /tmp/ccEQqYmG.s:2615   .bss.key1_ID:0000000000000000 $d
     /tmp/ccEQqYmG.s:2621   .bss.key1_data:0000000000000000 $d
     /tmp/ccEQqYmG.s:2626   .bss.key2_ID:0000000000000000 $d
     /tmp/ccEQqYmG.s:2632   .bss.key2_data:0000000000000000 $d
     /tmp/ccEQqYmG.s:2637   .bss.n_querry:0000000000000000 $d
     /tmp/ccEQqYmG.s:2643   .bss.num_slave:0000000000000000 $d
     /tmp/ccEQqYmG.s:2649   .bss.old_digit1:0000000000000000 $d
     /tmp/ccEQqYmG.s:2655   .bss.old_digit2:0000000000000000 $d
     /tmp/ccEQqYmG.s:2661   .bss.old_num_slave:0000000000000000 $d
     /tmp/ccEQqYmG.s:2663   .bss.pRX_msg:0000000000000000 $d
     /tmp/ccEQqYmG.s:2670   .bss.pTX_msg:0000000000000000 $d
     /tmp/ccEQqYmG.s:2676   .bss.rx_buffer:0000000000000000 $d
     /tmp/ccEQqYmG.s:2687   .bss.rx_temp:0000000000000000 $d
     /tmp/ccEQqYmG.s:2693   .bss.state:0000000000000000 $d
     /tmp/ccEQqYmG.s:2699   .bss.temp:0000000000000000 $d
     /tmp/ccEQqYmG.s:2705   .bss.tx_timeout:0000000000000000 $d
     /tmp/ccEQqYmG.s:2717   .data.digit_table:0000000000000000 $d
     /tmp/ccEQqYmG.s:2735   .data.tx1_buffer:0000000000000000 $d
     /tmp/ccEQqYmG.s:2741   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
lcd_clear
lcd_set_pos
lcd_write_string
HAL_Delay
ARM GAS  /tmp/ccEQqYmG.s 			page 75


lcd_data
HAL_UART_Transmit
huart4
buffer_pop
htim4
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
