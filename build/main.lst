ARM GAS  /tmp/ccZoqNrj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.update_lcd,"ax",%progbits
  18              		.align	1
  19              		.global	update_lcd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	update_lcd:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "buffer.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccZoqNrj.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** #define RAND __TIME__
  49:Core/Src/main.c **** uint8_t f_lcd_item =0;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** uint8_t f_busy;
  52:Core/Src/main.c **** uint8_t f_querry=0;
  53:Core/Src/main.c **** uint8_t f_read_msg;
  54:Core/Src/main.c **** uint8_t tx_timeout = 0;
  55:Core/Src/main.c **** unsigned char f_timer_TX = 0;
  56:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  57:Core/Src/main.c **** unsigned char f_timer_10ms = 0;
  58:Core/Src/main.c **** unsigned char f_timer_20ms = 0;
  59:Core/Src/main.c **** unsigned char f_waiting_rx = 0;
  60:Core/Src/main.c **** unsigned char f_timer_30ms = 0;
  61:Core/Src/main.c **** unsigned char f_timer_50ms = 0;
  62:Core/Src/main.c **** unsigned char n_querry = 0;
  63:Core/Src/main.c **** unsigned char flag_digit_1 = 1;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** unsigned char tx2_buffer[10] = {"123456789"};
  66:Core/Src/main.c **** unsigned char tx1_buffer[6] = {"abcdef"};
  67:Core/Src/main.c **** unsigned char d_timer_30ms;
  68:Core/Src/main.c **** unsigned char d_timer_50ms;
  69:Core/Src/main.c **** unsigned char d_timer_20ms;
  70:Core/Src/main.c **** unsigned char d_timer_TX1;
  71:Core/Src/main.c **** unsigned char TX1_delay_val = 250;
  72:Core/Src/main.c **** unsigned char d_timer_TX2;
  73:Core/Src/main.c **** unsigned char TX2_delay_val = 250;
  74:Core/Src/main.c **** unsigned char key1_data, key2_data;
  75:Core/Src/main.c **** unsigned char state, event, error;
  76:Core/Src/main.c **** unsigned char num_slave=0;
  77:Core/Src/main.c **** uint8_t key1_ID,key2_ID;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** unsigned char digit1, digit2;
  80:Core/Src/main.c **** uint8_t old_num_slave, old_digit1,old_digit2;
  81:Core/Src/main.c **** // flag for LCD
  82:Core/Src/main.c **** unsigned char is_EN = 0;
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** unsigned char digit1_update = 0;
  85:Core/Src/main.c **** unsigned char digit2_update = 0;
  86:Core/Src/main.c **** unsigned char cmd, data;
ARM GAS  /tmp/ccZoqNrj.s 			page 3


  87:Core/Src/main.c **** unsigned char lcd_process = 4;
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** char digit_table[17] = {"0123456789abcdef-"};
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** uint8_t rx_temp;
  92:Core/Src/main.c **** uint8_t x=1;
  93:Core/Src/main.c **** circular_buffer digit1_buf;
  94:Core/Src/main.c **** circular_buffer digit2_buf;
  95:Core/Src/main.c **** circular_buffer rx_buffer;
  96:Core/Src/main.c **** circular_buffer event_buffer;
  97:Core/Src/main.c **** uint8_t ID;
  98:Core/Src/main.c **** uint8_t ID_list[10];
  99:Core/Src/main.c **** uint8_t TX_msg[6];
 100:Core/Src/main.c **** uint8_t RX_msg[4];
 101:Core/Src/main.c **** uint8_t *pRX_msg;
 102:Core/Src/main.c **** uint8_t *pTX_msg;
 103:Core/Src/main.c **** uint8_t temp;
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END PV */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 108:Core/Src/main.c **** void SystemClock_Config(void);
 109:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 110:Core/Src/main.c **** void RS485_RX_Task(void);
 111:Core/Src/main.c **** void RS485_TX_Task(void);
 112:Core/Src/main.c **** void task_timer(void);
 113:Core/Src/main.c **** void counting_task(void);
 114:Core/Src/main.c **** void uart_TX2_task(void);
 115:Core/Src/main.c **** void uart_TX1_task(void);
 116:Core/Src/main.c **** void uart_RX1_task(void);
 117:Core/Src/main.c **** void uart_RX2_task(void);
 118:Core/Src/main.c **** void segment_display_task(void);
 119:Core/Src/main.c **** void lcd_display_task(void);
 120:Core/Src/main.c **** void key_read_task(void);
 121:Core/Src/main.c **** void main_task(void);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** void seven_segment_driver(char input, char select_digit);
 124:Core/Src/main.c **** void TX1_delay_update(void);
 125:Core/Src/main.c **** void TX2_delay_update(void);
 126:Core/Src/main.c **** void m_send_to_lcd(char data);
 127:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 128:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 129:Core/Src/main.c **** void Set_Receiver_Port1(void);
 130:Core/Src/main.c **** void Set_Receiver_Port2(void);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** void RS485_Send_Message(uint8_t addr, uint8_t func_code, uint8_t data);
 133:Core/Src/main.c **** void RS485_Read_Message(void);
 134:Core/Src/main.c **** void check_slave(void);
 135:Core/Src/main.c **** void update_lcd(uint8_t* itm);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** void display_connected_slave(uint8_t slave);
 138:Core/Src/main.c **** void display_disconnected_slave(uint8_t slave);
 139:Core/Src/main.c **** /*
 140:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 141:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 142:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 143:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
ARM GAS  /tmp/ccZoqNrj.s 			page 4


 144:Core/Src/main.c **** */
 145:Core/Src/main.c **** /* USER CODE END PFP */
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 148:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /* USER CODE END 0 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**
 153:Core/Src/main.c ****  * @brief  The application entry point.
 154:Core/Src/main.c ****  * @retval int
 155:Core/Src/main.c ****  */
 156:Core/Src/main.c **** int main(void)
 157:Core/Src/main.c **** {
 158:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 	/* USER CODE END 1 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** 	/* MCU Configuration--------------------------------------------------------*/
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 165:Core/Src/main.c **** 	HAL_Init();
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 	/* USER CODE BEGIN Init */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** 	/* USER CODE END Init */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** 	/* Configure the system clock */
 172:Core/Src/main.c **** 	SystemClock_Config();
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** 	/* USER CODE BEGIN SysInit */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** 	/* USER CODE END SysInit */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** 	/* Initialize all configured peripherals */
 179:Core/Src/main.c **** 	MX_GPIO_Init();
 180:Core/Src/main.c **** 	MX_TIM4_Init();
 181:Core/Src/main.c **** 	MX_UART4_Init();
 182:Core/Src/main.c **** 	MX_UART5_Init();
 183:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim4);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); // Enable Receiver 1
 188:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 	HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 191:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** 	digit1 = 16;
 194:Core/Src/main.c **** 	digit2 = 16;
 195:Core/Src/main.c **** 	num_slave=0;
 196:Core/Src/main.c **** 	ID=0;
 197:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 198:Core/Src/main.c **** 	ID_list[SLAVE1]= 0;
 199:Core/Src/main.c **** 	ID_list[SLAVE2]= 0;
 200:Core/Src/main.c **** 	//ID_list[2]= 0x12;
ARM GAS  /tmp/ccZoqNrj.s 			page 5


 201:Core/Src/main.c **** 	state = STATE_TX;
 202:Core/Src/main.c **** 	/*
 203:Core/Src/main.c **** 	if (num_slave>0){
 204:Core/Src/main.c **** 		state = STATE_OPERATION;
 205:Core/Src/main.c **** 	}else{
 206:Core/Src/main.c **** 		state=STATE_ASSIGNED_ADDR;
 207:Core/Src/main.c **** 	}*/
 208:Core/Src/main.c **** 	HAL_Delay(1000);
 209:Core/Src/main.c **** 	lcd_init();
 210:Core/Src/main.c **** 	lcd_clear();
 211:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 212:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 213:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 214:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 215:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 216:Core/Src/main.c **** 	lcd_write_string("S2:");
 217:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 218:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 219:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 220:Core/Src/main.c **** 	lcd_write_string("S1:");
 221:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 222:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 223:Core/Src/main.c **** 	old_digit1 = digit1;
 224:Core/Src/main.c **** 	old_digit2=old_digit2;
 225:Core/Src/main.c **** 	old_num_slave= num_slave;
 226:Core/Src/main.c **** 	/* USER CODE END 2 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** 	/* Infinite loop */
 229:Core/Src/main.c **** 	/* USER CODE BEGIN WHILE */
 230:Core/Src/main.c **** 	while (1)
 231:Core/Src/main.c **** 	{
 232:Core/Src/main.c **** 		/* USER CODE END WHILE */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** 		/* USER CODE BEGIN 3 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** 		task_timer();
 237:Core/Src/main.c **** 		/// segment_display_task();
 238:Core/Src/main.c **** 		lcd_display_task();
 239:Core/Src/main.c **** 		key_read_task();
 240:Core/Src/main.c **** 		RS485_RX_Task();
 241:Core/Src/main.c **** 		main_task();
 242:Core/Src/main.c **** 	}
 243:Core/Src/main.c **** 	/* USER CODE END 3 */
 244:Core/Src/main.c **** }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /**
 247:Core/Src/main.c ****  * @brief System Clock Configuration
 248:Core/Src/main.c ****  * @retval None
 249:Core/Src/main.c ****  */
 250:Core/Src/main.c **** void SystemClock_Config(void)
 251:Core/Src/main.c **** {
 252:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 253:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** 	/** Configure the main internal regulator output voltage
 256:Core/Src/main.c **** 	 */
 257:Core/Src/main.c **** 	__HAL_RCC_PWR_CLK_ENABLE();
ARM GAS  /tmp/ccZoqNrj.s 			page 6


 258:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** 	/** Initializes the RCC Oscillators according to the specified parameters
 261:Core/Src/main.c **** 	 * in the RCC_OscInitTypeDef structure.
 262:Core/Src/main.c **** 	 */
 263:Core/Src/main.c **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 264:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 267:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 268:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 269:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 270:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 271:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 272:Core/Src/main.c **** 	{
 273:Core/Src/main.c **** 		Error_Handler();
 274:Core/Src/main.c **** 	}
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** 	/** Initializes the CPU, AHB and APB buses clocks
 277:Core/Src/main.c **** 	 */
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RC
 279:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 280:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 281:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 282:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 285:Core/Src/main.c **** 	{
 286:Core/Src/main.c **** 		Error_Handler();
 287:Core/Src/main.c **** 	}
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** void update_lcd(uint8_t* itm){
  30              		.loc 1 292 30 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** 	if (lcd_process<4)return;
  35              		.loc 1 294 2 view .LVU1
  36              		.loc 1 294 17 is_stmt 0 view .LVU2
  37 0000 1A4B     		ldr	r3, .L8
  38 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  39              		.loc 1 294 5 view .LVU3
  40 0004 032B     		cmp	r3, #3
  41 0006 08D9     		bls	.L1
 295:Core/Src/main.c **** 	if (itm == &digit2){
  42              		.loc 1 295 2 is_stmt 1 view .LVU4
  43              		.loc 1 295 5 is_stmt 0 view .LVU5
  44 0008 194B     		ldr	r3, .L8+4
  45 000a 9842     		cmp	r0, r3
  46 000c 06D0     		beq	.L5
 296:Core/Src/main.c **** 		cmd = 0xC3;
 297:Core/Src/main.c **** 		data = digit_table[digit2];
ARM GAS  /tmp/ccZoqNrj.s 			page 7


 298:Core/Src/main.c **** 		lcd_process = 0;
 299:Core/Src/main.c **** 	}else if(itm ==&digit1){
  47              		.loc 1 299 8 is_stmt 1 view .LVU6
  48              		.loc 1 299 10 is_stmt 0 view .LVU7
  49 000e 194B     		ldr	r3, .L8+8
  50 0010 9842     		cmp	r0, r3
  51 0012 10D0     		beq	.L6
 300:Core/Src/main.c **** 		cmd = 0xCF;
 301:Core/Src/main.c **** 		data = digit_table[digit1];
 302:Core/Src/main.c **** 		lcd_process = 0;
 303:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  52              		.loc 1 303 8 is_stmt 1 view .LVU8
  53              		.loc 1 303 10 is_stmt 0 view .LVU9
  54 0014 184B     		ldr	r3, .L8+12
  55 0016 9842     		cmp	r0, r3
  56 0018 1AD0     		beq	.L7
  57              	.L1:
 304:Core/Src/main.c **** 		cmd =0x8C;
 305:Core/Src/main.c **** 		data = digit_table[num_slave];
 306:Core/Src/main.c **** 		lcd_process = 0;
 307:Core/Src/main.c **** 	}
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** }
  58              		.loc 1 309 1 view .LVU10
  59 001a 7047     		bx	lr
  60              	.L5:
 296:Core/Src/main.c **** 		data = digit_table[digit2];
  61              		.loc 1 296 3 is_stmt 1 view .LVU11
 296:Core/Src/main.c **** 		data = digit_table[digit2];
  62              		.loc 1 296 7 is_stmt 0 view .LVU12
  63 001c 174B     		ldr	r3, .L8+16
  64 001e C322     		movs	r2, #195
  65 0020 1A70     		strb	r2, [r3]
 297:Core/Src/main.c **** 		lcd_process = 0;
  66              		.loc 1 297 3 is_stmt 1 view .LVU13
 297:Core/Src/main.c **** 		lcd_process = 0;
  67              		.loc 1 297 21 is_stmt 0 view .LVU14
  68 0022 134B     		ldr	r3, .L8+4
  69 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70 0026 164A     		ldr	r2, .L8+20
  71 0028 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 297:Core/Src/main.c **** 		lcd_process = 0;
  72              		.loc 1 297 8 view .LVU15
  73 002a 164B     		ldr	r3, .L8+24
  74 002c 1A70     		strb	r2, [r3]
 298:Core/Src/main.c **** 	}else if(itm ==&digit1){
  75              		.loc 1 298 3 is_stmt 1 view .LVU16
 298:Core/Src/main.c **** 	}else if(itm ==&digit1){
  76              		.loc 1 298 15 is_stmt 0 view .LVU17
  77 002e 0F4B     		ldr	r3, .L8
  78 0030 0022     		movs	r2, #0
  79 0032 1A70     		strb	r2, [r3]
  80 0034 7047     		bx	lr
  81              	.L6:
 300:Core/Src/main.c **** 		data = digit_table[digit1];
  82              		.loc 1 300 3 is_stmt 1 view .LVU18
 300:Core/Src/main.c **** 		data = digit_table[digit1];
ARM GAS  /tmp/ccZoqNrj.s 			page 8


  83              		.loc 1 300 7 is_stmt 0 view .LVU19
  84 0036 114B     		ldr	r3, .L8+16
  85 0038 CF22     		movs	r2, #207
  86 003a 1A70     		strb	r2, [r3]
 301:Core/Src/main.c **** 		lcd_process = 0;
  87              		.loc 1 301 3 is_stmt 1 view .LVU20
 301:Core/Src/main.c **** 		lcd_process = 0;
  88              		.loc 1 301 21 is_stmt 0 view .LVU21
  89 003c 0D4B     		ldr	r3, .L8+8
  90 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91 0040 0F4A     		ldr	r2, .L8+20
  92 0042 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 301:Core/Src/main.c **** 		lcd_process = 0;
  93              		.loc 1 301 8 view .LVU22
  94 0044 0F4B     		ldr	r3, .L8+24
  95 0046 1A70     		strb	r2, [r3]
 302:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  96              		.loc 1 302 3 is_stmt 1 view .LVU23
 302:Core/Src/main.c **** 	}else if(itm ==&num_slave){
  97              		.loc 1 302 15 is_stmt 0 view .LVU24
  98 0048 084B     		ldr	r3, .L8
  99 004a 0022     		movs	r2, #0
 100 004c 1A70     		strb	r2, [r3]
 101 004e 7047     		bx	lr
 102              	.L7:
 304:Core/Src/main.c **** 		data = digit_table[num_slave];
 103              		.loc 1 304 3 is_stmt 1 view .LVU25
 304:Core/Src/main.c **** 		data = digit_table[num_slave];
 104              		.loc 1 304 7 is_stmt 0 view .LVU26
 105 0050 0A4B     		ldr	r3, .L8+16
 106 0052 8C22     		movs	r2, #140
 107 0054 1A70     		strb	r2, [r3]
 305:Core/Src/main.c **** 		lcd_process = 0;
 108              		.loc 1 305 3 is_stmt 1 view .LVU27
 305:Core/Src/main.c **** 		lcd_process = 0;
 109              		.loc 1 305 21 is_stmt 0 view .LVU28
 110 0056 084B     		ldr	r3, .L8+12
 111 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 005a 094A     		ldr	r2, .L8+20
 113 005c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 305:Core/Src/main.c **** 		lcd_process = 0;
 114              		.loc 1 305 8 view .LVU29
 115 005e 094B     		ldr	r3, .L8+24
 116 0060 1A70     		strb	r2, [r3]
 306:Core/Src/main.c **** 	}
 117              		.loc 1 306 3 is_stmt 1 view .LVU30
 306:Core/Src/main.c **** 	}
 118              		.loc 1 306 15 is_stmt 0 view .LVU31
 119 0062 024B     		ldr	r3, .L8
 120 0064 0022     		movs	r2, #0
 121 0066 1A70     		strb	r2, [r3]
 122 0068 D7E7     		b	.L1
 123              	.L9:
 124 006a 00BF     		.align	2
 125              	.L8:
 126 006c 00000000 		.word	.LANCHOR0
 127 0070 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccZoqNrj.s 			page 9


 128 0074 00000000 		.word	.LANCHOR5
 129 0078 00000000 		.word	.LANCHOR6
 130 007c 00000000 		.word	.LANCHOR2
 131 0080 00000000 		.word	.LANCHOR3
 132 0084 00000000 		.word	.LANCHOR4
 133              		.cfi_endproc
 134              	.LFE132:
 136              		.section	.text.m_send_to_lcd,"ax",%progbits
 137              		.align	1
 138              		.global	m_send_to_lcd
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu fpv4-sp-d16
 144              	m_send_to_lcd:
 145              	.LVL1:
 146              	.LFB134:
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** 
 312:Core/Src/main.c **** void lcd_display_task(void)
 313:Core/Src/main.c **** {
 314:Core/Src/main.c **** 	/*
 315:Core/Src/main.c **** 	if (digit2!=old_digit2){
 316:Core/Src/main.c **** 		cmd = 0xC3;
 317:Core/Src/main.c **** 		data = digit_table[digit2];
 318:Core/Src/main.c **** 		old_digit2=digit2;
 319:Core/Src/main.c **** 		lcd_process = 0;
 320:Core/Src/main.c **** 	}else if(digit1!=old_digit1){
 321:Core/Src/main.c **** 		cmd = 0xCF;
 322:Core/Src/main.c **** 		data = digit_table[digit1];
 323:Core/Src/main.c **** 		old_digit1 = digit1;
 324:Core/Src/main.c **** 		lcd_process = 0;
 325:Core/Src/main.c **** 	}else if(old_num_slave!=num_slave){
 326:Core/Src/main.c **** 		cmd =0x8C;
 327:Core/Src/main.c **** 		data = digit_table[num_slave];
 328:Core/Src/main.c **** 		old_num_slave = num_slave;
 329:Core/Src/main.c **** 		lcd_process = 0;
 330:Core/Src/main.c **** 	}
 331:Core/Src/main.c **** 	*/
 332:Core/Src/main.c **** 	
 333:Core/Src/main.c **** 	if(lcd_process>3) return;
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** 	switch (lcd_process)
 336:Core/Src/main.c **** 	{
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** 	case 0:
 339:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 340:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 341:Core/Src/main.c **** 		break;
 342:Core/Src/main.c **** 	case 1:
 343:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 344:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 345:Core/Src/main.c **** 		break;
 346:Core/Src/main.c **** 	case 2:
 347:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 348:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 349:Core/Src/main.c **** 		break;
ARM GAS  /tmp/ccZoqNrj.s 			page 10


 350:Core/Src/main.c **** 	case 3:
 351:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 352:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 353:Core/Src/main.c **** 		break;
 354:Core/Src/main.c **** 	}
 355:Core/Src/main.c **** }
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** void m_send_to_lcd(char data)
 358:Core/Src/main.c **** {
 147              		.loc 1 358 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 358 1 is_stmt 0 view .LVU33
 152 0000 08B5     		push	{r3, lr}
 153              	.LCFI0:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 3, -8
 156              		.cfi_offset 14, -4
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** 	// writing data to pin PE0~PE3
 361:Core/Src/main.c **** 	GPIOE->ODR = (GPIOE->ODR & 0xFFFFFFF0) | data;
 157              		.loc 1 361 2 is_stmt 1 view .LVU34
 158              		.loc 1 361 21 is_stmt 0 view .LVU35
 159 0002 124A     		ldr	r2, .L14
 160 0004 5369     		ldr	r3, [r2, #20]
 161              		.loc 1 361 27 view .LVU36
 162 0006 23F00F03 		bic	r3, r3, #15
 163              		.loc 1 361 41 view .LVU37
 164 000a 1843     		orrs	r0, r0, r3
 165              	.LVL2:
 166              		.loc 1 361 13 view .LVU38
 167 000c 5061     		str	r0, [r2, #20]
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** 	if (!f_timer_20ms)
 168              		.loc 1 363 2 is_stmt 1 view .LVU39
 169              		.loc 1 363 6 is_stmt 0 view .LVU40
 170 000e 104B     		ldr	r3, .L14+4
 171 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 172              		.loc 1 363 5 view .LVU41
 173 0012 6BB1     		cbz	r3, .L10
 364:Core/Src/main.c **** 		return;
 365:Core/Src/main.c **** 	f_timer_20ms = 0;
 174              		.loc 1 365 2 is_stmt 1 view .LVU42
 175              		.loc 1 365 15 is_stmt 0 view .LVU43
 176 0014 0E4B     		ldr	r3, .L14+4
 177 0016 0022     		movs	r2, #0
 178 0018 1A70     		strb	r2, [r3]
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** 	if (!is_EN)
 179              		.loc 1 367 2 is_stmt 1 view .LVU44
 180              		.loc 1 367 6 is_stmt 0 view .LVU45
 181 001a 0E4B     		ldr	r3, .L14+8
 182 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 183              		.loc 1 367 5 view .LVU46
 184 001e 43B9     		cbnz	r3, .L12
 368:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccZoqNrj.s 			page 11


 369:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
 185              		.loc 1 369 3 is_stmt 1 view .LVU47
 186 0020 0122     		movs	r2, #1
 187 0022 2021     		movs	r1, #32
 188 0024 0948     		ldr	r0, .L14
 189 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 190              	.LVL3:
 370:Core/Src/main.c **** 		is_EN = 1;
 191              		.loc 1 370 3 view .LVU48
 192              		.loc 1 370 9 is_stmt 0 view .LVU49
 193 002a 0A4B     		ldr	r3, .L14+8
 194 002c 0122     		movs	r2, #1
 195 002e 1A70     		strb	r2, [r3]
 196              	.L10:
 371:Core/Src/main.c **** 	}
 372:Core/Src/main.c **** 	else
 373:Core/Src/main.c **** 	{
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 376:Core/Src/main.c **** 		is_EN = 0;
 377:Core/Src/main.c **** 		lcd_process++;
 378:Core/Src/main.c **** 	
 379:Core/Src/main.c **** 	}
 380:Core/Src/main.c **** }
 197              		.loc 1 380 1 view .LVU50
 198 0030 08BD     		pop	{r3, pc}
 199              	.L12:
 375:Core/Src/main.c **** 		is_EN = 0;
 200              		.loc 1 375 3 is_stmt 1 view .LVU51
 201 0032 0022     		movs	r2, #0
 202 0034 2021     		movs	r1, #32
 203 0036 0548     		ldr	r0, .L14
 204 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 205              	.LVL4:
 376:Core/Src/main.c **** 		lcd_process++;
 206              		.loc 1 376 3 view .LVU52
 376:Core/Src/main.c **** 		lcd_process++;
 207              		.loc 1 376 9 is_stmt 0 view .LVU53
 208 003c 054B     		ldr	r3, .L14+8
 209 003e 0022     		movs	r2, #0
 210 0040 1A70     		strb	r2, [r3]
 377:Core/Src/main.c **** 	
 211              		.loc 1 377 3 is_stmt 1 view .LVU54
 377:Core/Src/main.c **** 	
 212              		.loc 1 377 14 is_stmt 0 view .LVU55
 213 0042 054A     		ldr	r2, .L14+12
 214 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 215 0046 0133     		adds	r3, r3, #1
 216 0048 1370     		strb	r3, [r2]
 217 004a F1E7     		b	.L10
 218              	.L15:
 219              		.align	2
 220              	.L14:
 221 004c 00100240 		.word	1073876992
 222 0050 00000000 		.word	.LANCHOR7
 223 0054 00000000 		.word	.LANCHOR8
 224 0058 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccZoqNrj.s 			page 12


 225              		.cfi_endproc
 226              	.LFE134:
 228              		.section	.text.lcd_display_task,"ax",%progbits
 229              		.align	1
 230              		.global	lcd_display_task
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv4-sp-d16
 236              	lcd_display_task:
 237              	.LFB133:
 313:Core/Src/main.c **** 	/*
 238              		.loc 1 313 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 08B5     		push	{r3, lr}
 243              	.LCFI1:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 333:Core/Src/main.c **** 
 247              		.loc 1 333 2 view .LVU57
 333:Core/Src/main.c **** 
 248              		.loc 1 333 16 is_stmt 0 view .LVU58
 249 0002 1C4B     		ldr	r3, .L24
 250 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 333:Core/Src/main.c **** 
 251              		.loc 1 333 4 view .LVU59
 252 0006 032B     		cmp	r3, #3
 253 0008 0FD8     		bhi	.L16
 335:Core/Src/main.c **** 	{
 254              		.loc 1 335 2 is_stmt 1 view .LVU60
 255 000a 032B     		cmp	r3, #3
 256 000c 0DD8     		bhi	.L16
 257 000e DFE803F0 		tbb	[pc, r3]
 258              	.L19:
 259 0012 02       		.byte	(.L22-.L19)/2
 260 0013 0D       		.byte	(.L21-.L19)/2
 261 0014 19       		.byte	(.L20-.L19)/2
 262 0015 24       		.byte	(.L18-.L19)/2
 263              		.p2align 1
 264              	.L22:
 339:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 265              		.loc 1 339 3 view .LVU61
 266 0016 0022     		movs	r2, #0
 267 0018 1021     		movs	r1, #16
 268 001a 1748     		ldr	r0, .L24+4
 269 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 270              	.LVL5:
 340:Core/Src/main.c **** 		break;
 271              		.loc 1 340 3 view .LVU62
 272 0020 164B     		ldr	r3, .L24+8
 273 0022 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 274 0024 0009     		lsrs	r0, r0, #4
 275 0026 FFF7FEFF 		bl	m_send_to_lcd
 276              	.LVL6:
ARM GAS  /tmp/ccZoqNrj.s 			page 13


 341:Core/Src/main.c **** 	case 1:
 277              		.loc 1 341 3 view .LVU63
 278              	.L16:
 355:Core/Src/main.c **** 
 279              		.loc 1 355 1 is_stmt 0 view .LVU64
 280 002a 08BD     		pop	{r3, pc}
 281              	.L21:
 343:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 282              		.loc 1 343 3 is_stmt 1 view .LVU65
 283 002c 0022     		movs	r2, #0
 284 002e 1021     		movs	r1, #16
 285 0030 1148     		ldr	r0, .L24+4
 286 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 287              	.LVL7:
 344:Core/Src/main.c **** 		break;
 288              		.loc 1 344 3 view .LVU66
 344:Core/Src/main.c **** 		break;
 289              		.loc 1 344 22 is_stmt 0 view .LVU67
 290 0036 114B     		ldr	r3, .L24+8
 291 0038 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 344:Core/Src/main.c **** 		break;
 292              		.loc 1 344 3 view .LVU68
 293 003a 00F00F00 		and	r0, r0, #15
 294 003e FFF7FEFF 		bl	m_send_to_lcd
 295              	.LVL8:
 345:Core/Src/main.c **** 	case 2:
 296              		.loc 1 345 3 is_stmt 1 view .LVU69
 297 0042 F2E7     		b	.L16
 298              	.L20:
 347:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 299              		.loc 1 347 3 view .LVU70
 300 0044 0122     		movs	r2, #1
 301 0046 1021     		movs	r1, #16
 302 0048 0B48     		ldr	r0, .L24+4
 303 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 304              	.LVL9:
 348:Core/Src/main.c **** 		break;
 305              		.loc 1 348 3 view .LVU71
 306 004e 0C4B     		ldr	r3, .L24+12
 307 0050 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 308 0052 0009     		lsrs	r0, r0, #4
 309 0054 FFF7FEFF 		bl	m_send_to_lcd
 310              	.LVL10:
 349:Core/Src/main.c **** 	case 3:
 311              		.loc 1 349 3 view .LVU72
 312 0058 E7E7     		b	.L16
 313              	.L18:
 351:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 314              		.loc 1 351 3 view .LVU73
 315 005a 0122     		movs	r2, #1
 316 005c 1021     		movs	r1, #16
 317 005e 0648     		ldr	r0, .L24+4
 318 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 319              	.LVL11:
 352:Core/Src/main.c **** 		break;
 320              		.loc 1 352 3 view .LVU74
 352:Core/Src/main.c **** 		break;
ARM GAS  /tmp/ccZoqNrj.s 			page 14


 321              		.loc 1 352 22 is_stmt 0 view .LVU75
 322 0064 064B     		ldr	r3, .L24+12
 323 0066 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 352:Core/Src/main.c **** 		break;
 324              		.loc 1 352 3 view .LVU76
 325 0068 00F00F00 		and	r0, r0, #15
 326 006c FFF7FEFF 		bl	m_send_to_lcd
 327              	.LVL12:
 353:Core/Src/main.c **** 	}
 328              		.loc 1 353 3 is_stmt 1 view .LVU77
 329 0070 DBE7     		b	.L16
 330              	.L25:
 331 0072 00BF     		.align	2
 332              	.L24:
 333 0074 00000000 		.word	.LANCHOR0
 334 0078 00100240 		.word	1073876992
 335 007c 00000000 		.word	.LANCHOR2
 336 0080 00000000 		.word	.LANCHOR4
 337              		.cfi_endproc
 338              	.LFE133:
 340              		.section	.text.task_timer,"ax",%progbits
 341              		.align	1
 342              		.global	task_timer
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 346              		.fpu fpv4-sp-d16
 348              	task_timer:
 349              	.LFB135:
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** void task_timer(void)
 383:Core/Src/main.c **** {
 350              		.loc 1 383 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 384:Core/Src/main.c **** 	if (!f_timer_10ms)
 355              		.loc 1 384 2 view .LVU79
 356              		.loc 1 384 6 is_stmt 0 view .LVU80
 357 0000 184B     		ldr	r3, .L33
 358 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 359              		.loc 1 384 5 view .LVU81
 360 0004 BBB1     		cbz	r3, .L26
 385:Core/Src/main.c **** 		return;		  // checking if 10 ms timer interrupt is set (10 ms), if set then do timer task
 386:Core/Src/main.c **** 	f_timer_10ms = 0; // clear the flag to wait next interupt
 361              		.loc 1 386 2 is_stmt 1 view .LVU82
 362              		.loc 1 386 15 is_stmt 0 view .LVU83
 363 0006 174B     		ldr	r3, .L33
 364 0008 0022     		movs	r2, #0
 365 000a 1A70     		strb	r2, [r3]
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** 	d_timer_30ms++; // count timer for 30 ms interval
 366              		.loc 1 388 2 is_stmt 1 view .LVU84
 367              		.loc 1 388 14 is_stmt 0 view .LVU85
 368 000c 164A     		ldr	r2, .L33+4
 369 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccZoqNrj.s 			page 15


 370 0010 0133     		adds	r3, r3, #1
 371 0012 DBB2     		uxtb	r3, r3
 372 0014 1370     		strb	r3, [r2]
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** 	if (d_timer_30ms == 3) // checking if the count reached 30 ms
 373              		.loc 1 390 2 is_stmt 1 view .LVU86
 374              		.loc 1 390 5 is_stmt 0 view .LVU87
 375 0016 032B     		cmp	r3, #3
 376 0018 0ED0     		beq	.L30
 377              	.L28:
 391:Core/Src/main.c **** 	{
 392:Core/Src/main.c **** 		d_timer_30ms = 0; // assign "0" to repeat counting
 393:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 394:Core/Src/main.c **** 	}
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** 	d_timer_20ms++;
 378              		.loc 1 396 2 is_stmt 1 view .LVU88
 379              		.loc 1 396 14 is_stmt 0 view .LVU89
 380 001a 144A     		ldr	r2, .L33+8
 381 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 382 001e 0133     		adds	r3, r3, #1
 383 0020 DBB2     		uxtb	r3, r3
 384 0022 1370     		strb	r3, [r2]
 397:Core/Src/main.c **** 	if (d_timer_20ms == 2)
 385              		.loc 1 397 2 is_stmt 1 view .LVU90
 386              		.loc 1 397 5 is_stmt 0 view .LVU91
 387 0024 022B     		cmp	r3, #2
 388 0026 0ED0     		beq	.L31
 389              	.L29:
 398:Core/Src/main.c **** 	{
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** 		d_timer_20ms = 0;
 401:Core/Src/main.c **** 		f_timer_20ms = 1;
 402:Core/Src/main.c **** 	}
 403:Core/Src/main.c **** 	d_timer_50ms++;
 390              		.loc 1 403 2 is_stmt 1 view .LVU92
 391              		.loc 1 403 14 is_stmt 0 view .LVU93
 392 0028 114A     		ldr	r2, .L33+12
 393 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 394 002c 0133     		adds	r3, r3, #1
 395 002e DBB2     		uxtb	r3, r3
 396 0030 1370     		strb	r3, [r2]
 404:Core/Src/main.c **** 	if (d_timer_50ms == 5)
 397              		.loc 1 404 2 is_stmt 1 view .LVU94
 398              		.loc 1 404 5 is_stmt 0 view .LVU95
 399 0032 052B     		cmp	r3, #5
 400 0034 0ED0     		beq	.L32
 401              	.L26:
 405:Core/Src/main.c **** 	{
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** 		d_timer_50ms = 0;
 408:Core/Src/main.c **** 		// f_timer_50ms=1;
 409:Core/Src/main.c **** 		//buffer_push(&event_buffer, EVENT_QUERRY);
 410:Core/Src/main.c **** 		f_querry=1;
 411:Core/Src/main.c **** 	}
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** }
ARM GAS  /tmp/ccZoqNrj.s 			page 16


 402              		.loc 1 413 1 view .LVU96
 403 0036 7047     		bx	lr
 404              	.L30:
 392:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 405              		.loc 1 392 3 is_stmt 1 view .LVU97
 392:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 406              		.loc 1 392 16 is_stmt 0 view .LVU98
 407 0038 1346     		mov	r3, r2
 408 003a 0022     		movs	r2, #0
 409 003c 1A70     		strb	r2, [r3]
 393:Core/Src/main.c **** 	}
 410              		.loc 1 393 3 is_stmt 1 view .LVU99
 393:Core/Src/main.c **** 	}
 411              		.loc 1 393 16 is_stmt 0 view .LVU100
 412 003e 0D4B     		ldr	r3, .L33+16
 413 0040 0122     		movs	r2, #1
 414 0042 1A70     		strb	r2, [r3]
 415 0044 E9E7     		b	.L28
 416              	.L31:
 400:Core/Src/main.c **** 		f_timer_20ms = 1;
 417              		.loc 1 400 3 is_stmt 1 view .LVU101
 400:Core/Src/main.c **** 		f_timer_20ms = 1;
 418              		.loc 1 400 16 is_stmt 0 view .LVU102
 419 0046 1346     		mov	r3, r2
 420 0048 0022     		movs	r2, #0
 421 004a 1A70     		strb	r2, [r3]
 401:Core/Src/main.c **** 	}
 422              		.loc 1 401 3 is_stmt 1 view .LVU103
 401:Core/Src/main.c **** 	}
 423              		.loc 1 401 16 is_stmt 0 view .LVU104
 424 004c 0A4B     		ldr	r3, .L33+20
 425 004e 0122     		movs	r2, #1
 426 0050 1A70     		strb	r2, [r3]
 427 0052 E9E7     		b	.L29
 428              	.L32:
 407:Core/Src/main.c **** 		// f_timer_50ms=1;
 429              		.loc 1 407 3 is_stmt 1 view .LVU105
 407:Core/Src/main.c **** 		// f_timer_50ms=1;
 430              		.loc 1 407 16 is_stmt 0 view .LVU106
 431 0054 1346     		mov	r3, r2
 432 0056 0022     		movs	r2, #0
 433 0058 1A70     		strb	r2, [r3]
 410:Core/Src/main.c **** 	}
 434              		.loc 1 410 3 is_stmt 1 view .LVU107
 410:Core/Src/main.c **** 	}
 435              		.loc 1 410 11 is_stmt 0 view .LVU108
 436 005a 084B     		ldr	r3, .L33+24
 437 005c 0122     		movs	r2, #1
 438 005e 1A70     		strb	r2, [r3]
 439 0060 E9E7     		b	.L26
 440              	.L34:
 441 0062 00BF     		.align	2
 442              	.L33:
 443 0064 00000000 		.word	.LANCHOR9
 444 0068 00000000 		.word	.LANCHOR10
 445 006c 00000000 		.word	.LANCHOR12
 446 0070 00000000 		.word	.LANCHOR13
ARM GAS  /tmp/ccZoqNrj.s 			page 17


 447 0074 00000000 		.word	.LANCHOR11
 448 0078 00000000 		.word	.LANCHOR7
 449 007c 00000000 		.word	.LANCHOR14
 450              		.cfi_endproc
 451              	.LFE135:
 453              		.section	.text.key_read_task,"ax",%progbits
 454              		.align	1
 455              		.global	key_read_task
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu fpv4-sp-d16
 461              	key_read_task:
 462              	.LFB136:
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** void key_read_task(void)
 416:Core/Src/main.c **** {
 463              		.loc 1 416 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 417:Core/Src/main.c **** 	if (!f_timer_30ms) return;		  // Checking if 30 ms counting is done
 467              		.loc 1 417 2 view .LVU110
 468              		.loc 1 417 6 is_stmt 0 view .LVU111
 469 0000 2F4B     		ldr	r3, .L48
 470 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 471              		.loc 1 417 5 view .LVU112
 472 0004 002B     		cmp	r3, #0
 473 0006 59D0     		beq	.L43
 416:Core/Src/main.c **** 	if (!f_timer_30ms) return;		  // Checking if 30 ms counting is done
 474              		.loc 1 416 1 view .LVU113
 475 0008 10B5     		push	{r4, lr}
 476              	.LCFI2:
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 4, -8
 479              		.cfi_offset 14, -4
 418:Core/Src/main.c **** 	f_timer_30ms = 0; // clear the flag to wait next counting
 480              		.loc 1 418 2 is_stmt 1 view .LVU114
 481              		.loc 1 418 15 is_stmt 0 view .LVU115
 482 000a 2D4B     		ldr	r3, .L48
 483 000c 0022     		movs	r2, #0
 484 000e 1A70     		strb	r2, [r3]
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin | KEY2_Pin));
 485              		.loc 1 420 2 is_stmt 1 view .LVU116
 486              		.loc 1 420 39 is_stmt 0 view .LVU117
 487 0010 2C4B     		ldr	r3, .L48+4
 488 0012 1869     		ldr	r0, [r3, #16]
 489              	.LVL13:
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** 	key1_data = key1_data << 1; // Preparing to read KEY1 Input
 490              		.loc 1 422 2 is_stmt 1 view .LVU118
 491              		.loc 1 422 24 is_stmt 0 view .LVU119
 492 0014 2C4B     		ldr	r3, .L48+8
 493 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 494 0018 5200     		lsls	r2, r2, #1
 495 001a D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccZoqNrj.s 			page 18


 496              		.loc 1 422 12 view .LVU120
 497 001c 1A70     		strb	r2, [r3]
 423:Core/Src/main.c **** 	key1_data &= 0b00001110;
 498              		.loc 1 423 2 is_stmt 1 view .LVU121
 499              		.loc 1 423 12 is_stmt 0 view .LVU122
 500 001e 02F00E02 		and	r2, r2, #14
 501 0022 1A70     		strb	r2, [r3]
 424:Core/Src/main.c **** 	key1_data |= ((key_pindata >> 2) & 0x1); // Read KEY1 Input
 502              		.loc 1 424 2 is_stmt 1 view .LVU123
 503              		.loc 1 424 35 is_stmt 0 view .LVU124
 504 0024 C0F38001 		ubfx	r1, r0, #2, #1
 505              		.loc 1 424 12 view .LVU125
 506 0028 0A43     		orrs	r2, r2, r1
 507 002a 1A70     		strb	r2, [r3]
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** 	key2_data = key2_data << 1; // Preparing to read KEY2 Input
 508              		.loc 1 426 2 is_stmt 1 view .LVU126
 509              		.loc 1 426 24 is_stmt 0 view .LVU127
 510 002c 2749     		ldr	r1, .L48+12
 511 002e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 512 0030 5B00     		lsls	r3, r3, #1
 513 0032 DBB2     		uxtb	r3, r3
 514              		.loc 1 426 12 view .LVU128
 515 0034 0B70     		strb	r3, [r1]
 427:Core/Src/main.c **** 	key2_data &= 0b00001110;
 516              		.loc 1 427 2 is_stmt 1 view .LVU129
 517              		.loc 1 427 12 is_stmt 0 view .LVU130
 518 0036 03F00E03 		and	r3, r3, #14
 519 003a 0B70     		strb	r3, [r1]
 428:Core/Src/main.c **** 	key2_data |= (key_pindata >> 3); // Read KEY2 Input
 520              		.loc 1 428 2 is_stmt 1 view .LVU131
 521              		.loc 1 428 12 is_stmt 0 view .LVU132
 522 003c C0F3C000 		ubfx	r0, r0, #3, #1
 523              	.LVL14:
 524              		.loc 1 428 12 view .LVU133
 525 0040 0343     		orrs	r3, r3, r0
 526 0042 0B70     		strb	r3, [r1]
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** 	if (key1_data == KEY_PRESSED) // Checking if KEY1 is pressed
 527              		.loc 1 430 2 is_stmt 1 view .LVU134
 528              		.loc 1 430 5 is_stmt 0 view .LVU135
 529 0044 0C2A     		cmp	r2, #12
 530 0046 04D0     		beq	.L46
 531              	.L37:
 431:Core/Src/main.c **** 	{
 432:Core/Src/main.c **** 		digit1=(digit1+1)>9? 0 :digit1+1;
 433:Core/Src/main.c **** 		update_lcd(&digit1);
 434:Core/Src/main.c **** 		old_digit1 = digit1;
 435:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 436:Core/Src/main.c **** 		
 437:Core/Src/main.c **** 		state = STATE_TX;
 438:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 439:Core/Src/main.c **** 	}
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** 	if (key2_data == KEY_PRESSED) // Checking if KEY2 is pressed
 532              		.loc 1 441 2 is_stmt 1 view .LVU136
 533              		.loc 1 441 16 is_stmt 0 view .LVU137
ARM GAS  /tmp/ccZoqNrj.s 			page 19


 534 0048 204B     		ldr	r3, .L48+12
 535 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536              		.loc 1 441 5 view .LVU138
 537 004c 0C2B     		cmp	r3, #12
 538 004e 1AD0     		beq	.L47
 539              	.L35:
 442:Core/Src/main.c **** 	{
 443:Core/Src/main.c **** 		digit2=(digit2+1)>15? 0 :digit2+1;
 444:Core/Src/main.c **** 		update_lcd(&digit2);
 445:Core/Src/main.c **** 		old_digit2 =digit2;
 446:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 447:Core/Src/main.c **** 		state = STATE_TX;
 448:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 449:Core/Src/main.c **** 	}
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** }
 540              		.loc 1 451 1 view .LVU139
 541 0050 10BD     		pop	{r4, pc}
 542              	.L46:
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 543              		.loc 1 432 3 is_stmt 1 view .LVU140
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 544              		.loc 1 432 20 is_stmt 0 view .LVU141
 545 0052 1F4B     		ldr	r3, .L48+16
 546 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 547              		.loc 1 432 9 view .LVU142
 548 0056 082B     		cmp	r3, #8
 549 0058 13D8     		bhi	.L40
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 550              		.loc 1 432 9 discriminator 1 view .LVU143
 551 005a 0133     		adds	r3, r3, #1
 552 005c DBB2     		uxtb	r3, r3
 553              	.L38:
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 554              		.loc 1 432 9 discriminator 4 view .LVU144
 555 005e 1C4C     		ldr	r4, .L48+16
 556 0060 2370     		strb	r3, [r4]
 433:Core/Src/main.c **** 		old_digit1 = digit1;
 557              		.loc 1 433 3 is_stmt 1 discriminator 4 view .LVU145
 558 0062 2046     		mov	r0, r4
 559 0064 FFF7FEFF 		bl	update_lcd
 560              	.LVL15:
 434:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 561              		.loc 1 434 3 discriminator 4 view .LVU146
 434:Core/Src/main.c **** 		buffer_push(&digit1_buf,digit1);
 562              		.loc 1 434 14 is_stmt 0 discriminator 4 view .LVU147
 563 0068 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 564 006a 1A4B     		ldr	r3, .L48+20
 565 006c 1970     		strb	r1, [r3]
 435:Core/Src/main.c **** 		
 566              		.loc 1 435 3 is_stmt 1 discriminator 4 view .LVU148
 567 006e 1A48     		ldr	r0, .L48+24
 568 0070 FFF7FEFF 		bl	buffer_push
 569              	.LVL16:
 437:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 570              		.loc 1 437 3 discriminator 4 view .LVU149
ARM GAS  /tmp/ccZoqNrj.s 			page 20


 437:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 571              		.loc 1 437 9 is_stmt 0 discriminator 4 view .LVU150
 572 0074 0121     		movs	r1, #1
 573 0076 194B     		ldr	r3, .L48+28
 574 0078 1970     		strb	r1, [r3]
 438:Core/Src/main.c **** 	}
 575              		.loc 1 438 3 is_stmt 1 discriminator 4 view .LVU151
 576 007a 1948     		ldr	r0, .L48+32
 577 007c FFF7FEFF 		bl	buffer_push
 578              	.LVL17:
 579 0080 E2E7     		b	.L37
 580              	.L40:
 432:Core/Src/main.c **** 		update_lcd(&digit1);
 581              		.loc 1 432 9 is_stmt 0 view .LVU152
 582 0082 0023     		movs	r3, #0
 583 0084 EBE7     		b	.L38
 584              	.L47:
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 585              		.loc 1 443 3 is_stmt 1 view .LVU153
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 586              		.loc 1 443 20 is_stmt 0 view .LVU154
 587 0086 174B     		ldr	r3, .L48+36
 588 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 589              		.loc 1 443 9 view .LVU155
 590 008a 0E2B     		cmp	r3, #14
 591 008c 14D8     		bhi	.L41
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 592              		.loc 1 443 9 discriminator 1 view .LVU156
 593 008e 0133     		adds	r3, r3, #1
 594 0090 DBB2     		uxtb	r3, r3
 595              	.L39:
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 596              		.loc 1 443 9 discriminator 4 view .LVU157
 597 0092 144C     		ldr	r4, .L48+36
 598 0094 2370     		strb	r3, [r4]
 444:Core/Src/main.c **** 		old_digit2 =digit2;
 599              		.loc 1 444 3 is_stmt 1 discriminator 4 view .LVU158
 600 0096 2046     		mov	r0, r4
 601 0098 FFF7FEFF 		bl	update_lcd
 602              	.LVL18:
 445:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 603              		.loc 1 445 3 discriminator 4 view .LVU159
 445:Core/Src/main.c **** 		buffer_push(&digit2_buf,digit2);
 604              		.loc 1 445 14 is_stmt 0 discriminator 4 view .LVU160
 605 009c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 606 009e 124B     		ldr	r3, .L48+40
 607 00a0 1970     		strb	r1, [r3]
 446:Core/Src/main.c **** 		state = STATE_TX;
 608              		.loc 1 446 3 is_stmt 1 discriminator 4 view .LVU161
 609 00a2 1248     		ldr	r0, .L48+44
 610 00a4 FFF7FEFF 		bl	buffer_push
 611              	.LVL19:
 447:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 612              		.loc 1 447 3 discriminator 4 view .LVU162
 447:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 613              		.loc 1 447 9 is_stmt 0 discriminator 4 view .LVU163
ARM GAS  /tmp/ccZoqNrj.s 			page 21


 614 00a8 0C4B     		ldr	r3, .L48+28
 615 00aa 0122     		movs	r2, #1
 616 00ac 1A70     		strb	r2, [r3]
 448:Core/Src/main.c **** 	}
 617              		.loc 1 448 3 is_stmt 1 discriminator 4 view .LVU164
 618 00ae 0221     		movs	r1, #2
 619 00b0 0B48     		ldr	r0, .L48+32
 620 00b2 FFF7FEFF 		bl	buffer_push
 621              	.LVL20:
 622 00b6 CBE7     		b	.L35
 623              	.L41:
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 624              		.loc 1 443 9 is_stmt 0 view .LVU165
 625 00b8 0023     		movs	r3, #0
 626 00ba EAE7     		b	.L39
 627              	.L43:
 628              	.LCFI3:
 629              		.cfi_def_cfa_offset 0
 630              		.cfi_restore 4
 631              		.cfi_restore 14
 443:Core/Src/main.c **** 		update_lcd(&digit2);
 632              		.loc 1 443 9 view .LVU166
 633 00bc 7047     		bx	lr
 634              	.L49:
 635 00be 00BF     		.align	2
 636              	.L48:
 637 00c0 00000000 		.word	.LANCHOR11
 638 00c4 00180240 		.word	1073879040
 639 00c8 00000000 		.word	.LANCHOR15
 640 00cc 00000000 		.word	.LANCHOR16
 641 00d0 00000000 		.word	.LANCHOR5
 642 00d4 00000000 		.word	.LANCHOR17
 643 00d8 00000000 		.word	.LANCHOR18
 644 00dc 00000000 		.word	.LANCHOR19
 645 00e0 00000000 		.word	.LANCHOR20
 646 00e4 00000000 		.word	.LANCHOR1
 647 00e8 00000000 		.word	.LANCHOR21
 648 00ec 00000000 		.word	.LANCHOR22
 649              		.cfi_endproc
 650              	.LFE136:
 652              		.section	.text.RS485_RX_Task,"ax",%progbits
 653              		.align	1
 654              		.global	RS485_RX_Task
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu fpv4-sp-d16
 660              	RS485_RX_Task:
 661              	.LFB139:
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** void main_task(void)
 454:Core/Src/main.c **** {
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** 	if (event_buffer.head != event_buffer.tail)
 457:Core/Src/main.c **** 	{
 458:Core/Src/main.c **** 		
 459:Core/Src/main.c **** 		event = buffer_pop(&event_buffer); // if there is event then get the event from buffer
ARM GAS  /tmp/ccZoqNrj.s 			page 22


 460:Core/Src/main.c **** 
 461:Core/Src/main.c **** 	}
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** 	switch (state)
 464:Core/Src/main.c **** 	{
 465:Core/Src/main.c **** 	case STATE_TX:
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** 		switch (event)
 468:Core/Src/main.c **** 		{
 469:Core/Src/main.c **** 		case EVENT_KEY1_PRESSED:
 470:Core/Src/main.c **** 			
 471:Core/Src/main.c **** 				
 472:Core/Src/main.c **** 			RS485_Send_Message(ID_list[SLAVE1],FUNC_WRITE,(buffer_pop(&digit1_buf)+'0'));
 473:Core/Src/main.c **** 			event = EVENT_RESET;
 474:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 475:Core/Src/main.c **** 			f_querry =0;
 476:Core/Src/main.c **** 			break;
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** 		case EVENT_KEY2_PRESSED:
 479:Core/Src/main.c **** 			
 480:Core/Src/main.c **** 			
 481:Core/Src/main.c **** 			RS485_Send_Message(ID_list[SLAVE2],FUNC_WRITE,(buffer_pop(&digit2_buf)+'0'));
 482:Core/Src/main.c **** 			event = EVENT_RESET;
 483:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 484:Core/Src/main.c **** 			f_querry =0;
 485:Core/Src/main.c **** 			break;
 486:Core/Src/main.c **** 		
 487:Core/Src/main.c **** 		
 488:Core/Src/main.c **** 		default:
 489:Core/Src/main.c **** 			if (!f_querry) break;
 490:Core/Src/main.c **** 			f_querry =0;
 491:Core/Src/main.c **** 					
 492:Core/Src/main.c **** 			if(ID>0){
 493:Core/Src/main.c **** 				
 494:Core/Src/main.c **** 				RS485_Send_Message(ID_list[ID],FUNC_READ, '0');
 495:Core/Src/main.c **** 			}else{
 496:Core/Src/main.c **** 				RS485_Send_Message(ID_list[ID],FUNC_FIND_SLAVE,'0');
 497:Core/Src/main.c **** 			}
 498:Core/Src/main.c **** 						
 499:Core/Src/main.c **** 			ID = (ID+1)== 3 ?0:ID+1;
 500:Core/Src/main.c **** 			
 501:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 502:Core/Src/main.c **** 			break;
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** 		}
 505:Core/Src/main.c **** 		break;
 506:Core/Src/main.c **** 		
 507:Core/Src/main.c **** 	case STATE_WAITING_RX:
 508:Core/Src/main.c **** 		
 509:Core/Src/main.c **** 		if (event==EVENT_RX_COMPLETE){
 510:Core/Src/main.c **** 			RS485_Read_Message();
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** 			state=STATE_TX;
 513:Core/Src/main.c **** 			event = EVENT_RESET;
 514:Core/Src/main.c **** 		
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** 		}else{
ARM GAS  /tmp/ccZoqNrj.s 			page 23


 517:Core/Src/main.c **** 			
 518:Core/Src/main.c **** 			if (!f_querry) break;
 519:Core/Src/main.c **** 			f_querry =0;
 520:Core/Src/main.c **** 			
 521:Core/Src/main.c **** 			RS485_Send_Message(TX_msg[1],TX_msg[2],TX_msg[3]);
 522:Core/Src/main.c **** 			tx_timeout++;
 523:Core/Src/main.c **** 			
 524:Core/Src/main.c **** 			if (tx_timeout==2){
 525:Core/Src/main.c **** 				state = STATE_TX;
 526:Core/Src/main.c **** 				event = EVENT_RESET;	
 527:Core/Src/main.c **** 				tx_timeout=0;
 528:Core/Src/main.c **** 				check_slave();
 529:Core/Src/main.c **** 				break;
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** 			}
 532:Core/Src/main.c **** 			
 533:Core/Src/main.c **** 		}
 534:Core/Src/main.c **** 		
 535:Core/Src/main.c **** 		break;
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** 	}
 538:Core/Src/main.c **** 
 539:Core/Src/main.c **** 
 540:Core/Src/main.c **** }
 541:Core/Src/main.c **** 
 542:Core/Src/main.c **** void check_slave(void){
 543:Core/Src/main.c **** 
 544:Core/Src/main.c **** 	if ((TX_msg[1]==ID_list[0])||(TX_msg[1]==0))return;
 545:Core/Src/main.c **** 	
 546:Core/Src/main.c **** 	if (TX_msg[1]==ID_list[SLAVE1]){
 547:Core/Src/main.c **** 		display_disconnected_slave(SLAVE1);
 548:Core/Src/main.c **** 		ID_list[SLAVE1] = 0;
 549:Core/Src/main.c **** 		digit1 = 16;
 550:Core/Src/main.c **** 	}else if (TX_msg[1]== ID_list[SLAVE2]){
 551:Core/Src/main.c **** 		display_disconnected_slave(SLAVE2);
 552:Core/Src/main.c **** 		ID_list[SLAVE2]	= 0;
 553:Core/Src/main.c **** 		digit2 =16;
 554:Core/Src/main.c **** 	}else{
 555:Core/Src/main.c **** 		return;
 556:Core/Src/main.c **** 	}		
 557:Core/Src/main.c **** 		num_slave--;
 558:Core/Src/main.c **** 		update_lcd(&num_slave);
 559:Core/Src/main.c **** 
 560:Core/Src/main.c **** 	
 561:Core/Src/main.c **** }
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** void RS485_RX_Task(void)
 565:Core/Src/main.c **** {
 662              		.loc 1 565 1 is_stmt 1 view -0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666 0000 08B5     		push	{r3, lr}
 667              	.LCFI4:
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 3, -8
ARM GAS  /tmp/ccZoqNrj.s 			page 24


 670              		.cfi_offset 14, -4
 566:Core/Src/main.c **** 	
 567:Core/Src/main.c **** 	if (rx_buffer.tail==rx_buffer.head) return;
 671              		.loc 1 567 2 view .LVU168
 672              		.loc 1 567 15 is_stmt 0 view .LVU169
 673 0002 174A     		ldr	r2, .L58
 674 0004 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 675              		.loc 1 567 31 view .LVU170
 676 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 677              		.loc 1 567 5 view .LVU171
 678 0008 9942     		cmp	r1, r3
 679 000a 20D0     		beq	.L50
 568:Core/Src/main.c **** 	
 569:Core/Src/main.c **** 	
 570:Core/Src/main.c **** 	if (rx_buffer.data[rx_buffer.tail]==SOF)
 680              		.loc 1 570 2 is_stmt 1 view .LVU172
 681              		.loc 1 570 20 is_stmt 0 view .LVU173
 682 000c 1346     		mov	r3, r2
 683 000e 0B44     		add	r3, r3, r1
 684 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 685              		.loc 1 570 5 view .LVU174
 686 0012 022B     		cmp	r3, #2
 687 0014 0AD0     		beq	.L56
 571:Core/Src/main.c **** 	{
 572:Core/Src/main.c **** 		f_read_msg =1;
 573:Core/Src/main.c **** 		pRX_msg = RX_msg;
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** 	}else if(rx_buffer.data[rx_buffer.tail]==EOF)
 688              		.loc 1 575 8 is_stmt 1 view .LVU175
 689              		.loc 1 575 10 is_stmt 0 view .LVU176
 690 0016 032B     		cmp	r3, #3
 691 0018 1AD0     		beq	.L57
 576:Core/Src/main.c **** 	{
 577:Core/Src/main.c **** 		f_read_msg =0;
 578:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 579:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 580:Core/Src/main.c **** 	}else{
 581:Core/Src/main.c **** 
 582:Core/Src/main.c **** 		if (f_read_msg){
 692              		.loc 1 582 3 is_stmt 1 view .LVU177
 693              		.loc 1 582 7 is_stmt 0 view .LVU178
 694 001a 124A     		ldr	r2, .L58+4
 695 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 696              		.loc 1 582 6 view .LVU179
 697 001e 5AB1     		cbz	r2, .L53
 583:Core/Src/main.c **** 			*pRX_msg++=rx_buffer.data[rx_buffer.tail];
 698              		.loc 1 583 4 is_stmt 1 view .LVU180
 699              		.loc 1 583 12 is_stmt 0 view .LVU181
 700 0020 1149     		ldr	r1, .L58+8
 701 0022 0A68     		ldr	r2, [r1]
 702 0024 501C     		adds	r0, r2, #1
 703 0026 0860     		str	r0, [r1]
 704              		.loc 1 583 14 view .LVU182
 705 0028 1370     		strb	r3, [r2]
 706 002a 05E0     		b	.L53
 707              	.L56:
 572:Core/Src/main.c **** 		pRX_msg = RX_msg;
ARM GAS  /tmp/ccZoqNrj.s 			page 25


 708              		.loc 1 572 3 is_stmt 1 view .LVU183
 572:Core/Src/main.c **** 		pRX_msg = RX_msg;
 709              		.loc 1 572 14 is_stmt 0 view .LVU184
 710 002c 0D4B     		ldr	r3, .L58+4
 711 002e 0122     		movs	r2, #1
 712 0030 1A70     		strb	r2, [r3]
 573:Core/Src/main.c **** 
 713              		.loc 1 573 3 is_stmt 1 view .LVU185
 573:Core/Src/main.c **** 
 714              		.loc 1 573 11 is_stmt 0 view .LVU186
 715 0032 0D4B     		ldr	r3, .L58+8
 716 0034 0D4A     		ldr	r2, .L58+12
 717 0036 1A60     		str	r2, [r3]
 718              	.L53:
 584:Core/Src/main.c **** 		}	
 585:Core/Src/main.c **** 	}
 586:Core/Src/main.c **** 	rx_buffer.tail = (rx_buffer.tail+1)%BUFFER_SIZE;
 719              		.loc 1 586 2 is_stmt 1 view .LVU187
 720              		.loc 1 586 29 is_stmt 0 view .LVU188
 721 0038 0949     		ldr	r1, .L58
 722 003a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 723              		.loc 1 586 34 view .LVU189
 724 003c 0133     		adds	r3, r3, #1
 725              		.loc 1 586 37 view .LVU190
 726 003e 5A42     		rsbs	r2, r3, #0
 727 0040 03F03F03 		and	r3, r3, #63
 728 0044 02F03F02 		and	r2, r2, #63
 729 0048 58BF     		it	pl
 730 004a 5342     		rsbpl	r3, r2, #0
 731              		.loc 1 586 17 view .LVU191
 732 004c 4B70     		strb	r3, [r1, #1]
 733              	.L50:
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** }
 734              		.loc 1 588 1 view .LVU192
 735 004e 08BD     		pop	{r3, pc}
 736              	.L57:
 577:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 737              		.loc 1 577 3 is_stmt 1 view .LVU193
 577:Core/Src/main.c ****     	buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 738              		.loc 1 577 14 is_stmt 0 view .LVU194
 739 0050 044B     		ldr	r3, .L58+4
 740 0052 0022     		movs	r2, #0
 741 0054 1A70     		strb	r2, [r3]
 578:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 742              		.loc 1 578 6 is_stmt 1 view .LVU195
 743 0056 0521     		movs	r1, #5
 744 0058 0548     		ldr	r0, .L58+16
 745 005a FFF7FEFF 		bl	buffer_push
 746              	.LVL21:
 747 005e EBE7     		b	.L53
 748              	.L59:
 749              		.align	2
 750              	.L58:
 751 0060 00000000 		.word	.LANCHOR23
 752 0064 00000000 		.word	.LANCHOR24
 753 0068 00000000 		.word	.LANCHOR25
ARM GAS  /tmp/ccZoqNrj.s 			page 26


 754 006c 00000000 		.word	.LANCHOR26
 755 0070 00000000 		.word	.LANCHOR20
 756              		.cfi_endproc
 757              	.LFE139:
 759              		.section	.rodata.display_connected_slave.str1.4,"aMS",%progbits,1
 760              		.align	2
 761              	.LC0:
 762 0000 434F4E4E 		.ascii	"CONNECTED\000"
 762      45435445 
 762      4400
 763 000a 0000     		.align	2
 764              	.LC1:
 765 000c 53312041 		.ascii	"S1 ADDR:\000"
 765      4444523A 
 765      00
 766 0015 000000   		.align	2
 767              	.LC2:
 768 0018 53322041 		.ascii	"S2 ADDR:\000"
 768      4444523A 
 768      00
 769 0021 000000   		.align	2
 770              	.LC3:
 771 0024 4E554D20 		.ascii	"NUM SLAVE: \000"
 771      534C4156 
 771      453A2000 
 772              		.align	2
 773              	.LC4:
 774 0030 53323A00 		.ascii	"S2:\000"
 775              		.align	2
 776              	.LC5:
 777 0034 53313A00 		.ascii	"S1:\000"
 778              		.section	.text.display_connected_slave,"ax",%progbits
 779              		.align	1
 780              		.global	display_connected_slave
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv4-sp-d16
 786              	display_connected_slave:
 787              	.LVL22:
 788              	.LFB141:
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** void RS485_Read_Message(void)
 591:Core/Src/main.c **** {
 592:Core/Src/main.c **** 	//digit2 = 10;
 593:Core/Src/main.c **** 	//uint8_t * digit;
 594:Core/Src/main.c **** 	uint8_t checksum = 0;
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** 	checksum = checksum^RX_msg[0]^RX_msg[1]^RX_msg[2];
 597:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 598:Core/Src/main.c **** 	{
 599:Core/Src/main.c **** 		return;
 600:Core/Src/main.c **** 
 601:Core/Src/main.c **** 	}
 602:Core/Src/main.c **** 
 603:Core/Src/main.c **** 	if ((RX_msg[0] == ID_list[SLAVE1]))
 604:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccZoqNrj.s 			page 27


 605:Core/Src/main.c **** 		if (RX_msg[1] == FUNC_READ)
 606:Core/Src/main.c **** 		{	
 607:Core/Src/main.c **** 			digit1 = (RX_msg[2] - '0');
 608:Core/Src/main.c **** 			
 609:Core/Src/main.c **** 			if (digit1!= old_digit1){
 610:Core/Src/main.c **** 				update_lcd(&digit1);
 611:Core/Src/main.c **** 				old_digit1 = digit1;
 612:Core/Src/main.c **** 			}
 613:Core/Src/main.c **** 			
 614:Core/Src/main.c **** 		}
 615:Core/Src/main.c **** 		else if (RX_msg[1] == FUNC_WRITE)
 616:Core/Src/main.c **** 		{
 617:Core/Src/main.c **** 			
 618:Core/Src/main.c **** 		}
 619:Core/Src/main.c **** 
 620:Core/Src/main.c **** 	}else if ((RX_msg[0] == ID_list[SLAVE2]))
 621:Core/Src/main.c **** 	{
 622:Core/Src/main.c **** 		if (RX_msg[1] == FUNC_READ)
 623:Core/Src/main.c **** 		{	
 624:Core/Src/main.c **** 			digit2 = (RX_msg[2] - '0');
 625:Core/Src/main.c **** 			
 626:Core/Src/main.c **** 			if(digit2!= old_digit2)
 627:Core/Src/main.c **** 			{
 628:Core/Src/main.c **** 				update_lcd(&digit2);
 629:Core/Src/main.c **** 				old_digit2 =digit2;
 630:Core/Src/main.c **** 			}
 631:Core/Src/main.c **** 			
 632:Core/Src/main.c **** 		}
 633:Core/Src/main.c **** 		else if (RX_msg[1] == FUNC_WRITE)
 634:Core/Src/main.c **** 		{
 635:Core/Src/main.c **** 			
 636:Core/Src/main.c **** 	}
 637:Core/Src/main.c **** 	}else if(RX_msg[0]==ID_list[0]){
 638:Core/Src/main.c **** 
 639:Core/Src/main.c **** 		if (RX_msg[1]== FUNC_FIND_SLAVE){
 640:Core/Src/main.c **** 
 641:Core/Src/main.c **** 			if(ID_list[SLAVE1]==0){
 642:Core/Src/main.c **** 				ID_list[SLAVE1]=RX_msg[2];
 643:Core/Src/main.c **** 				display_connected_slave(SLAVE1);
 644:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 645:Core/Src/main.c **** 				ID_list[SLAVE2]= RX_msg[2];
 646:Core/Src/main.c **** 				display_connected_slave(SLAVE2);
 647:Core/Src/main.c **** 				}
 648:Core/Src/main.c **** 			else{
 649:Core/Src/main.c **** 				return;
 650:Core/Src/main.c **** 			}
 651:Core/Src/main.c **** 			num_slave++;
 652:Core/Src/main.c **** 			update_lcd(&num_slave);
 653:Core/Src/main.c **** 			
 654:Core/Src/main.c **** 		}
 655:Core/Src/main.c **** 		
 656:Core/Src/main.c **** 	}
 657:Core/Src/main.c **** 	else{
 658:Core/Src/main.c **** 		return;
 659:Core/Src/main.c **** 	}
 660:Core/Src/main.c **** 
 661:Core/Src/main.c **** 	
ARM GAS  /tmp/ccZoqNrj.s 			page 28


 662:Core/Src/main.c **** }
 663:Core/Src/main.c **** 
 664:Core/Src/main.c **** void display_connected_slave(uint8_t slave){
 789              		.loc 1 664 44 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		.loc 1 664 44 is_stmt 0 view .LVU197
 794 0000 70B5     		push	{r4, r5, r6, lr}
 795              	.LCFI5:
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 4, -16
 798              		.cfi_offset 5, -12
 799              		.cfi_offset 6, -8
 800              		.cfi_offset 14, -4
 801 0002 0446     		mov	r4, r0
 665:Core/Src/main.c **** 		
 666:Core/Src/main.c **** 	lcd_clear();
 802              		.loc 1 666 2 is_stmt 1 view .LVU198
 803 0004 FFF7FEFF 		bl	lcd_clear
 804              	.LVL23:
 667:Core/Src/main.c **** 	lcd_set_pos(0, 0x3);
 805              		.loc 1 667 2 view .LVU199
 806 0008 0321     		movs	r1, #3
 807 000a 0020     		movs	r0, #0
 808 000c FFF7FEFF 		bl	lcd_set_pos
 809              	.LVL24:
 668:Core/Src/main.c **** 	lcd_write_string("CONNECTED");
 810              		.loc 1 668 2 view .LVU200
 811 0010 3F48     		ldr	r0, .L66
 812 0012 FFF7FEFF 		bl	lcd_write_string
 813              	.LVL25:
 669:Core/Src/main.c **** 	if (slave ==SLAVE1)
 814              		.loc 1 669 2 view .LVU201
 815              		.loc 1 669 5 is_stmt 0 view .LVU202
 816 0016 012C     		cmp	r4, #1
 817 0018 39D0     		beq	.L64
 670:Core/Src/main.c **** 	{
 671:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 672:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 673:Core/Src/main.c **** 	
 674:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 675:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 676:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 677:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 678:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 679:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 680:Core/Src/main.c **** 	}
 681:Core/Src/main.c **** 	else if(slave == SLAVE2){
 818              		.loc 1 681 7 is_stmt 1 view .LVU203
 819              		.loc 1 681 9 is_stmt 0 view .LVU204
 820 001a 022C     		cmp	r4, #2
 821 001c 57D0     		beq	.L65
 822              	.L62:
 682:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 683:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 684:Core/Src/main.c **** 		
ARM GAS  /tmp/ccZoqNrj.s 			page 29


 685:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 686:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 687:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 688:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 689:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 690:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 691:Core/Src/main.c **** 	}
 692:Core/Src/main.c **** 
 693:Core/Src/main.c **** 	HAL_Delay(1000);
 823              		.loc 1 693 2 is_stmt 1 view .LVU205
 824 001e 4FF47A70 		mov	r0, #1000
 825 0022 FFF7FEFF 		bl	HAL_Delay
 826              	.LVL26:
 694:Core/Src/main.c **** 	
 695:Core/Src/main.c **** 	lcd_clear();
 827              		.loc 1 695 2 view .LVU206
 828 0026 FFF7FEFF 		bl	lcd_clear
 829              	.LVL27:
 696:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 830              		.loc 1 696 2 view .LVU207
 831 002a 0021     		movs	r1, #0
 832 002c 0846     		mov	r0, r1
 833 002e FFF7FEFF 		bl	lcd_set_pos
 834              	.LVL28:
 697:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 835              		.loc 1 697 2 view .LVU208
 836 0032 3848     		ldr	r0, .L66+4
 837 0034 FFF7FEFF 		bl	lcd_write_string
 838              	.LVL29:
 698:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 839              		.loc 1 698 2 view .LVU209
 840 0038 0C21     		movs	r1, #12
 841 003a 0020     		movs	r0, #0
 842 003c FFF7FEFF 		bl	lcd_set_pos
 843              	.LVL30:
 699:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 844              		.loc 1 699 2 view .LVU210
 845 0040 354C     		ldr	r4, .L66+8
 846 0042 364B     		ldr	r3, .L66+12
 847 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 848 0046 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 849 0048 FFF7FEFF 		bl	lcd_data
 850              	.LVL31:
 700:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 851              		.loc 1 700 2 view .LVU211
 852 004c 0021     		movs	r1, #0
 853 004e 0120     		movs	r0, #1
 854 0050 FFF7FEFF 		bl	lcd_set_pos
 855              	.LVL32:
 701:Core/Src/main.c **** 	lcd_write_string("S2:");
 856              		.loc 1 701 2 view .LVU212
 857 0054 3248     		ldr	r0, .L66+16
 858 0056 FFF7FEFF 		bl	lcd_write_string
 859              	.LVL33:
 702:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 860              		.loc 1 702 2 view .LVU213
 861 005a 0321     		movs	r1, #3
ARM GAS  /tmp/ccZoqNrj.s 			page 30


 862 005c 0120     		movs	r0, #1
 863 005e FFF7FEFF 		bl	lcd_set_pos
 864              	.LVL34:
 703:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 865              		.loc 1 703 2 view .LVU214
 866 0062 304B     		ldr	r3, .L66+20
 867 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 0066 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 869 0068 FFF7FEFF 		bl	lcd_data
 870              	.LVL35:
 704:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 871              		.loc 1 704 2 view .LVU215
 872 006c 0C21     		movs	r1, #12
 873 006e 0120     		movs	r0, #1
 874 0070 FFF7FEFF 		bl	lcd_set_pos
 875              	.LVL36:
 705:Core/Src/main.c **** 	lcd_write_string("S1:");
 876              		.loc 1 705 2 view .LVU216
 877 0074 2C48     		ldr	r0, .L66+24
 878 0076 FFF7FEFF 		bl	lcd_write_string
 879              	.LVL37:
 706:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 880              		.loc 1 706 2 view .LVU217
 881 007a 0F21     		movs	r1, #15
 882 007c 0120     		movs	r0, #1
 883 007e FFF7FEFF 		bl	lcd_set_pos
 884              	.LVL38:
 707:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 885              		.loc 1 707 2 view .LVU218
 886 0082 2A4B     		ldr	r3, .L66+28
 887 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 888 0086 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 889 0088 FFF7FEFF 		bl	lcd_data
 890              	.LVL39:
 708:Core/Src/main.c **** 
 709:Core/Src/main.c **** }
 891              		.loc 1 709 1 is_stmt 0 view .LVU219
 892 008c 70BD     		pop	{r4, r5, r6, pc}
 893              	.L64:
 671:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 894              		.loc 1 671 3 is_stmt 1 view .LVU220
 895 008e 0221     		movs	r1, #2
 896 0090 0120     		movs	r0, #1
 897 0092 FFF7FEFF 		bl	lcd_set_pos
 898              	.LVL40:
 672:Core/Src/main.c **** 	
 899              		.loc 1 672 3 view .LVU221
 900 0096 2648     		ldr	r0, .L66+32
 901 0098 FFF7FEFF 		bl	lcd_write_string
 902              	.LVL41:
 674:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 903              		.loc 1 674 3 view .LVU222
 904 009c 0C21     		movs	r1, #12
 905 009e 0120     		movs	r0, #1
 906 00a0 FFF7FEFF 		bl	lcd_set_pos
 907              	.LVL42:
 675:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
ARM GAS  /tmp/ccZoqNrj.s 			page 31


 908              		.loc 1 675 3 view .LVU223
 675:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 909              		.loc 1 675 17 is_stmt 0 view .LVU224
 910 00a4 234E     		ldr	r6, .L66+36
 911 00a6 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 675:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 912              		.loc 1 675 8 view .LVU225
 913 00a8 1B09     		lsrs	r3, r3, #4
 914 00aa 234D     		ldr	r5, .L66+40
 915 00ac 2B70     		strb	r3, [r5]
 676:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 916              		.loc 1 676 3 is_stmt 1 view .LVU226
 917 00ae 1A4C     		ldr	r4, .L66+8
 918 00b0 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 919 00b2 FFF7FEFF 		bl	lcd_data
 920              	.LVL43:
 677:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 921              		.loc 1 677 3 view .LVU227
 922 00b6 0D21     		movs	r1, #13
 923 00b8 0120     		movs	r0, #1
 924 00ba FFF7FEFF 		bl	lcd_set_pos
 925              	.LVL44:
 678:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 926              		.loc 1 678 3 view .LVU228
 678:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 927              		.loc 1 678 17 is_stmt 0 view .LVU229
 928 00be 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 678:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 929              		.loc 1 678 25 view .LVU230
 930 00c0 03F00F03 		and	r3, r3, #15
 678:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 931              		.loc 1 678 8 view .LVU231
 932 00c4 2B70     		strb	r3, [r5]
 679:Core/Src/main.c **** 	}
 933              		.loc 1 679 3 is_stmt 1 view .LVU232
 934 00c6 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 935 00c8 FFF7FEFF 		bl	lcd_data
 936              	.LVL45:
 937 00cc A7E7     		b	.L62
 938              	.L65:
 682:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 939              		.loc 1 682 3 view .LVU233
 940 00ce 0221     		movs	r1, #2
 941 00d0 0120     		movs	r0, #1
 942 00d2 FFF7FEFF 		bl	lcd_set_pos
 943              	.LVL46:
 683:Core/Src/main.c **** 		
 944              		.loc 1 683 3 view .LVU234
 945 00d6 1948     		ldr	r0, .L66+44
 946 00d8 FFF7FEFF 		bl	lcd_write_string
 947              	.LVL47:
 685:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 948              		.loc 1 685 3 view .LVU235
 949 00dc 0C21     		movs	r1, #12
 950 00de 0120     		movs	r0, #1
 951 00e0 FFF7FEFF 		bl	lcd_set_pos
 952              	.LVL48:
ARM GAS  /tmp/ccZoqNrj.s 			page 32


 686:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 953              		.loc 1 686 3 view .LVU236
 686:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 954              		.loc 1 686 17 is_stmt 0 view .LVU237
 955 00e4 134E     		ldr	r6, .L66+36
 956 00e6 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 686:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 957              		.loc 1 686 8 view .LVU238
 958 00e8 1B09     		lsrs	r3, r3, #4
 959 00ea 134D     		ldr	r5, .L66+40
 960 00ec 2B70     		strb	r3, [r5]
 687:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 961              		.loc 1 687 3 is_stmt 1 view .LVU239
 962 00ee 0A4C     		ldr	r4, .L66+8
 963 00f0 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 964 00f2 FFF7FEFF 		bl	lcd_data
 965              	.LVL49:
 688:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 966              		.loc 1 688 3 view .LVU240
 967 00f6 0D21     		movs	r1, #13
 968 00f8 0120     		movs	r0, #1
 969 00fa FFF7FEFF 		bl	lcd_set_pos
 970              	.LVL50:
 689:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 971              		.loc 1 689 3 view .LVU241
 689:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 972              		.loc 1 689 17 is_stmt 0 view .LVU242
 973 00fe B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 689:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 974              		.loc 1 689 25 view .LVU243
 975 0100 03F00F03 		and	r3, r3, #15
 689:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 976              		.loc 1 689 8 view .LVU244
 977 0104 2B70     		strb	r3, [r5]
 690:Core/Src/main.c **** 	}
 978              		.loc 1 690 3 is_stmt 1 view .LVU245
 979 0106 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 980 0108 FFF7FEFF 		bl	lcd_data
 981              	.LVL51:
 982 010c 87E7     		b	.L62
 983              	.L67:
 984 010e 00BF     		.align	2
 985              	.L66:
 986 0110 00000000 		.word	.LC0
 987 0114 24000000 		.word	.LC3
 988 0118 00000000 		.word	.LANCHOR3
 989 011c 00000000 		.word	.LANCHOR6
 990 0120 30000000 		.word	.LC4
 991 0124 00000000 		.word	.LANCHOR1
 992 0128 34000000 		.word	.LC5
 993 012c 00000000 		.word	.LANCHOR5
 994 0130 0C000000 		.word	.LC1
 995 0134 00000000 		.word	.LANCHOR27
 996 0138 00000000 		.word	.LANCHOR28
 997 013c 18000000 		.word	.LC2
 998              		.cfi_endproc
 999              	.LFE141:
ARM GAS  /tmp/ccZoqNrj.s 			page 33


 1001              		.section	.text.RS485_Read_Message,"ax",%progbits
 1002              		.align	1
 1003              		.global	RS485_Read_Message
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1007              		.fpu fpv4-sp-d16
 1009              	RS485_Read_Message:
 1010              	.LFB140:
 591:Core/Src/main.c **** 	//digit2 = 10;
 1011              		.loc 1 591 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 594:Core/Src/main.c **** 
 1015              		.loc 1 594 2 view .LVU247
 1016              	.LVL52:
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1017              		.loc 1 596 2 view .LVU248
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1018              		.loc 1 596 28 is_stmt 0 view .LVU249
 1019 0000 2B4B     		ldr	r3, .L82
 1020 0002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1021              		.loc 1 596 38 view .LVU250
 1022 0004 93F801C0 		ldrb	ip, [r3, #1]	@ zero_extendqisi2
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1023              		.loc 1 596 48 view .LVU251
 1024 0008 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 596:Core/Src/main.c **** 	if (!(checksum== RX_msg[3]))
 1025              		.loc 1 596 11 view .LVU252
 1026 000a 81EA0C02 		eor	r2, r1, ip
 1027 000e 4240     		eors	r2, r2, r0
 1028              	.LVL53:
 597:Core/Src/main.c **** 	{
 1029              		.loc 1 597 2 is_stmt 1 view .LVU253
 597:Core/Src/main.c **** 	{
 1030              		.loc 1 597 25 is_stmt 0 view .LVU254
 1031 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 597:Core/Src/main.c **** 	{
 1032              		.loc 1 597 5 view .LVU255
 1033 0012 9342     		cmp	r3, r2
 1034 0014 4AD1     		bne	.L75
 591:Core/Src/main.c **** 	//digit2 = 10;
 1035              		.loc 1 591 1 view .LVU256
 1036 0016 10B5     		push	{r4, lr}
 1037              	.LCFI6:
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 4, -8
 1040              		.cfi_offset 14, -4
 603:Core/Src/main.c **** 	{
 1041              		.loc 1 603 2 is_stmt 1 view .LVU257
 603:Core/Src/main.c **** 	{
 1042              		.loc 1 603 27 is_stmt 0 view .LVU258
 1043 0018 264B     		ldr	r3, .L82+4
 1044 001a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 603:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccZoqNrj.s 			page 34


 1045              		.loc 1 603 5 view .LVU259
 1046 001c 9942     		cmp	r1, r3
 1047 001e 13D0     		beq	.L78
 620:Core/Src/main.c **** 	{
 1048              		.loc 1 620 8 is_stmt 1 view .LVU260
 620:Core/Src/main.c **** 	{
 1049              		.loc 1 620 33 is_stmt 0 view .LVU261
 1050 0020 244A     		ldr	r2, .L82+4
 1051              	.LVL54:
 620:Core/Src/main.c **** 	{
 1052              		.loc 1 620 33 view .LVU262
 1053 0022 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 620:Core/Src/main.c **** 	{
 1054              		.loc 1 620 11 view .LVU263
 1055 0024 9142     		cmp	r1, r2
 1056 0026 23D0     		beq	.L79
 637:Core/Src/main.c **** 
 1057              		.loc 1 637 8 is_stmt 1 view .LVU264
 637:Core/Src/main.c **** 
 1058              		.loc 1 637 29 is_stmt 0 view .LVU265
 1059 0028 224C     		ldr	r4, .L82+4
 1060 002a 94F800E0 		ldrb	lr, [r4]	@ zero_extendqisi2
 637:Core/Src/main.c **** 
 1061              		.loc 1 637 10 view .LVU266
 1062 002e 7145     		cmp	r1, lr
 1063 0030 0DD1     		bne	.L68
 639:Core/Src/main.c **** 
 1064              		.loc 1 639 3 is_stmt 1 view .LVU267
 639:Core/Src/main.c **** 
 1065              		.loc 1 639 6 is_stmt 0 view .LVU268
 1066 0032 BCF1F40F 		cmp	ip, #244
 1067 0036 0AD1     		bne	.L68
 641:Core/Src/main.c **** 				ID_list[SLAVE1]=RX_msg[2];
 1068              		.loc 1 641 4 is_stmt 1 view .LVU269
 641:Core/Src/main.c **** 				ID_list[SLAVE1]=RX_msg[2];
 1069              		.loc 1 641 6 is_stmt 0 view .LVU270
 1070 0038 6BB3     		cbz	r3, .L80
 644:Core/Src/main.c **** 				ID_list[SLAVE2]= RX_msg[2];
 1071              		.loc 1 644 10 is_stmt 1 view .LVU271
 644:Core/Src/main.c **** 				ID_list[SLAVE2]= RX_msg[2];
 1072              		.loc 1 644 13 is_stmt 0 view .LVU272
 1073 003a 42B9     		cbnz	r2, .L68
 645:Core/Src/main.c **** 				display_connected_slave(SLAVE2);
 1074              		.loc 1 645 5 is_stmt 1 view .LVU273
 645:Core/Src/main.c **** 				display_connected_slave(SLAVE2);
 1075              		.loc 1 645 20 is_stmt 0 view .LVU274
 1076 003c 1D4B     		ldr	r3, .L82+4
 1077 003e 9870     		strb	r0, [r3, #2]
 646:Core/Src/main.c **** 				}
 1078              		.loc 1 646 5 is_stmt 1 view .LVU275
 1079 0040 0220     		movs	r0, #2
 1080              	.LVL55:
 646:Core/Src/main.c **** 				}
 1081              		.loc 1 646 5 is_stmt 0 view .LVU276
 1082 0042 FFF7FEFF 		bl	display_connected_slave
 1083              	.LVL56:
 646:Core/Src/main.c **** 				}
ARM GAS  /tmp/ccZoqNrj.s 			page 35


 1084              		.loc 1 646 5 view .LVU277
 1085 0046 2AE0     		b	.L73
 1086              	.LVL57:
 1087              	.L78:
 605:Core/Src/main.c **** 		{	
 1088              		.loc 1 605 3 is_stmt 1 view .LVU278
 605:Core/Src/main.c **** 		{	
 1089              		.loc 1 605 6 is_stmt 0 view .LVU279
 1090 0048 BCF1F20F 		cmp	ip, #242
 1091 004c 00D0     		beq	.L81
 1092              	.LVL58:
 1093              	.L68:
 662:Core/Src/main.c **** 
 1094              		.loc 1 662 1 view .LVU280
 1095 004e 10BD     		pop	{r4, pc}
 1096              	.LVL59:
 1097              	.L81:
 607:Core/Src/main.c **** 			
 1098              		.loc 1 607 4 is_stmt 1 view .LVU281
 607:Core/Src/main.c **** 			
 1099              		.loc 1 607 24 is_stmt 0 view .LVU282
 1100 0050 3038     		subs	r0, r0, #48
 1101 0052 C0B2     		uxtb	r0, r0
 607:Core/Src/main.c **** 			
 1102              		.loc 1 607 11 view .LVU283
 1103 0054 184B     		ldr	r3, .L82+8
 1104 0056 1870     		strb	r0, [r3]
 609:Core/Src/main.c **** 				update_lcd(&digit1);
 1105              		.loc 1 609 4 is_stmt 1 view .LVU284
 609:Core/Src/main.c **** 				update_lcd(&digit1);
 1106              		.loc 1 609 14 is_stmt 0 view .LVU285
 1107 0058 184B     		ldr	r3, .L82+12
 1108 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609:Core/Src/main.c **** 				update_lcd(&digit1);
 1109              		.loc 1 609 7 view .LVU286
 1110 005c 9842     		cmp	r0, r3
 1111 005e F6D0     		beq	.L68
 610:Core/Src/main.c **** 				old_digit1 = digit1;
 1112              		.loc 1 610 5 is_stmt 1 view .LVU287
 1113 0060 154C     		ldr	r4, .L82+8
 1114 0062 2046     		mov	r0, r4
 1115 0064 FFF7FEFF 		bl	update_lcd
 1116              	.LVL60:
 611:Core/Src/main.c **** 			}
 1117              		.loc 1 611 5 view .LVU288
 611:Core/Src/main.c **** 			}
 1118              		.loc 1 611 16 is_stmt 0 view .LVU289
 1119 0068 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1120 006a 144B     		ldr	r3, .L82+12
 1121 006c 1A70     		strb	r2, [r3]
 1122 006e EEE7     		b	.L68
 1123              	.LVL61:
 1124              	.L79:
 622:Core/Src/main.c **** 		{	
 1125              		.loc 1 622 3 is_stmt 1 view .LVU290
 622:Core/Src/main.c **** 		{	
 1126              		.loc 1 622 6 is_stmt 0 view .LVU291
ARM GAS  /tmp/ccZoqNrj.s 			page 36


 1127 0070 BCF1F20F 		cmp	ip, #242
 1128 0074 EBD1     		bne	.L68
 624:Core/Src/main.c **** 			
 1129              		.loc 1 624 4 is_stmt 1 view .LVU292
 624:Core/Src/main.c **** 			
 1130              		.loc 1 624 24 is_stmt 0 view .LVU293
 1131 0076 3038     		subs	r0, r0, #48
 1132              	.LVL62:
 624:Core/Src/main.c **** 			
 1133              		.loc 1 624 24 view .LVU294
 1134 0078 C0B2     		uxtb	r0, r0
 1135              	.LVL63:
 624:Core/Src/main.c **** 			
 1136              		.loc 1 624 11 view .LVU295
 1137 007a 114B     		ldr	r3, .L82+16
 1138 007c 1870     		strb	r0, [r3]
 626:Core/Src/main.c **** 			{
 1139              		.loc 1 626 4 is_stmt 1 view .LVU296
 626:Core/Src/main.c **** 			{
 1140              		.loc 1 626 13 is_stmt 0 view .LVU297
 1141 007e 114B     		ldr	r3, .L82+20
 1142 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 626:Core/Src/main.c **** 			{
 1143              		.loc 1 626 6 view .LVU298
 1144 0082 9842     		cmp	r0, r3
 1145 0084 E3D0     		beq	.L68
 628:Core/Src/main.c **** 				old_digit2 =digit2;
 1146              		.loc 1 628 5 is_stmt 1 view .LVU299
 1147 0086 0E4C     		ldr	r4, .L82+16
 1148 0088 2046     		mov	r0, r4
 1149 008a FFF7FEFF 		bl	update_lcd
 1150              	.LVL64:
 629:Core/Src/main.c **** 			}
 1151              		.loc 1 629 5 view .LVU300
 629:Core/Src/main.c **** 			}
 1152              		.loc 1 629 16 is_stmt 0 view .LVU301
 1153 008e 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1154 0090 0C4B     		ldr	r3, .L82+20
 1155 0092 1A70     		strb	r2, [r3]
 1156 0094 DBE7     		b	.L68
 1157              	.LVL65:
 1158              	.L80:
 642:Core/Src/main.c **** 				display_connected_slave(SLAVE1);
 1159              		.loc 1 642 5 is_stmt 1 view .LVU302
 642:Core/Src/main.c **** 				display_connected_slave(SLAVE1);
 1160              		.loc 1 642 20 is_stmt 0 view .LVU303
 1161 0096 6070     		strb	r0, [r4, #1]
 643:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 1162              		.loc 1 643 5 is_stmt 1 view .LVU304
 1163 0098 0120     		movs	r0, #1
 1164              	.LVL66:
 643:Core/Src/main.c **** 			}else if (ID_list[SLAVE2]==0){
 1165              		.loc 1 643 5 is_stmt 0 view .LVU305
 1166 009a FFF7FEFF 		bl	display_connected_slave
 1167              	.LVL67:
 1168              	.L73:
 651:Core/Src/main.c **** 			update_lcd(&num_slave);
ARM GAS  /tmp/ccZoqNrj.s 			page 37


 1169              		.loc 1 651 4 is_stmt 1 view .LVU306
 651:Core/Src/main.c **** 			update_lcd(&num_slave);
 1170              		.loc 1 651 13 is_stmt 0 view .LVU307
 1171 009e 0A48     		ldr	r0, .L82+24
 1172 00a0 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1173 00a2 0133     		adds	r3, r3, #1
 1174 00a4 0370     		strb	r3, [r0]
 652:Core/Src/main.c **** 			
 1175              		.loc 1 652 4 is_stmt 1 view .LVU308
 1176 00a6 FFF7FEFF 		bl	update_lcd
 1177              	.LVL68:
 1178 00aa D0E7     		b	.L68
 1179              	.LVL69:
 1180              	.L75:
 1181              	.LCFI7:
 1182              		.cfi_def_cfa_offset 0
 1183              		.cfi_restore 4
 1184              		.cfi_restore 14
 652:Core/Src/main.c **** 			
 1185              		.loc 1 652 4 is_stmt 0 view .LVU309
 1186 00ac 7047     		bx	lr
 1187              	.L83:
 1188 00ae 00BF     		.align	2
 1189              	.L82:
 1190 00b0 00000000 		.word	.LANCHOR26
 1191 00b4 00000000 		.word	.LANCHOR27
 1192 00b8 00000000 		.word	.LANCHOR5
 1193 00bc 00000000 		.word	.LANCHOR17
 1194 00c0 00000000 		.word	.LANCHOR1
 1195 00c4 00000000 		.word	.LANCHOR21
 1196 00c8 00000000 		.word	.LANCHOR6
 1197              		.cfi_endproc
 1198              	.LFE140:
 1200              		.section	.rodata.display_disconnected_slave.str1.4,"aMS",%progbits,1
 1201              		.align	2
 1202              	.LC6:
 1203 0000 44495343 		.ascii	"DISCONNECTED\000"
 1203      4F4E4E45 
 1203      43544544 
 1203      00
 1204              		.section	.text.display_disconnected_slave,"ax",%progbits
 1205              		.align	1
 1206              		.global	display_disconnected_slave
 1207              		.syntax unified
 1208              		.thumb
 1209              		.thumb_func
 1210              		.fpu fpv4-sp-d16
 1212              	display_disconnected_slave:
 1213              	.LVL70:
 1214              	.LFB142:
 710:Core/Src/main.c **** 
 711:Core/Src/main.c **** void display_disconnected_slave(uint8_t slave){
 1215              		.loc 1 711 47 is_stmt 1 view -0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219              		.loc 1 711 47 is_stmt 0 view .LVU311
ARM GAS  /tmp/ccZoqNrj.s 			page 38


 1220 0000 70B5     		push	{r4, r5, r6, lr}
 1221              	.LCFI8:
 1222              		.cfi_def_cfa_offset 16
 1223              		.cfi_offset 4, -16
 1224              		.cfi_offset 5, -12
 1225              		.cfi_offset 6, -8
 1226              		.cfi_offset 14, -4
 1227 0002 0446     		mov	r4, r0
 712:Core/Src/main.c **** 	
 713:Core/Src/main.c **** 	lcd_clear();
 1228              		.loc 1 713 2 is_stmt 1 view .LVU312
 1229 0004 FFF7FEFF 		bl	lcd_clear
 1230              	.LVL71:
 714:Core/Src/main.c **** 	lcd_clear();
 1231              		.loc 1 714 2 view .LVU313
 1232 0008 FFF7FEFF 		bl	lcd_clear
 1233              	.LVL72:
 715:Core/Src/main.c **** 	lcd_set_pos(0, 0x1);
 1234              		.loc 1 715 2 view .LVU314
 1235 000c 0121     		movs	r1, #1
 1236 000e 0020     		movs	r0, #0
 1237 0010 FFF7FEFF 		bl	lcd_set_pos
 1238              	.LVL73:
 716:Core/Src/main.c **** 	lcd_write_string("DISCONNECTED");
 1239              		.loc 1 716 2 view .LVU315
 1240 0014 3F48     		ldr	r0, .L90
 1241 0016 FFF7FEFF 		bl	lcd_write_string
 1242              	.LVL74:
 717:Core/Src/main.c **** 	if (slave ==SLAVE1)
 1243              		.loc 1 717 2 view .LVU316
 1244              		.loc 1 717 5 is_stmt 0 view .LVU317
 1245 001a 012C     		cmp	r4, #1
 1246 001c 39D0     		beq	.L88
 718:Core/Src/main.c **** 	{
 719:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 720:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 721:Core/Src/main.c **** 	
 722:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 723:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 724:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 725:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 726:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 727:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 728:Core/Src/main.c **** 	}
 729:Core/Src/main.c **** 	else if(slave == SLAVE2){
 1247              		.loc 1 729 7 is_stmt 1 view .LVU318
 1248              		.loc 1 729 9 is_stmt 0 view .LVU319
 1249 001e 022C     		cmp	r4, #2
 1250 0020 57D0     		beq	.L89
 1251              	.L86:
 730:Core/Src/main.c **** 		lcd_set_pos(1, 0x2);
 731:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 732:Core/Src/main.c **** 		
 733:Core/Src/main.c **** 		lcd_set_pos(1, 0xC);
 734:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 735:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 736:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
ARM GAS  /tmp/ccZoqNrj.s 			page 39


 737:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 738:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 739:Core/Src/main.c **** 	}
 740:Core/Src/main.c **** 
 741:Core/Src/main.c **** 	HAL_Delay(1000);
 1252              		.loc 1 741 2 is_stmt 1 view .LVU320
 1253 0022 4FF47A70 		mov	r0, #1000
 1254 0026 FFF7FEFF 		bl	HAL_Delay
 1255              	.LVL75:
 742:Core/Src/main.c **** 	
 743:Core/Src/main.c **** 	lcd_clear();
 1256              		.loc 1 743 2 view .LVU321
 1257 002a FFF7FEFF 		bl	lcd_clear
 1258              	.LVL76:
 744:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 1259              		.loc 1 744 2 view .LVU322
 1260 002e 0021     		movs	r1, #0
 1261 0030 0846     		mov	r0, r1
 1262 0032 FFF7FEFF 		bl	lcd_set_pos
 1263              	.LVL77:
 745:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 1264              		.loc 1 745 2 view .LVU323
 1265 0036 3848     		ldr	r0, .L90+4
 1266 0038 FFF7FEFF 		bl	lcd_write_string
 1267              	.LVL78:
 746:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 1268              		.loc 1 746 2 view .LVU324
 1269 003c 0C21     		movs	r1, #12
 1270 003e 0020     		movs	r0, #0
 1271 0040 FFF7FEFF 		bl	lcd_set_pos
 1272              	.LVL79:
 747:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 1273              		.loc 1 747 2 view .LVU325
 1274 0044 354C     		ldr	r4, .L90+8
 1275 0046 364B     		ldr	r3, .L90+12
 1276 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1277 004a E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1278 004c FFF7FEFF 		bl	lcd_data
 1279              	.LVL80:
 748:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 1280              		.loc 1 748 2 view .LVU326
 1281 0050 0021     		movs	r1, #0
 1282 0052 0120     		movs	r0, #1
 1283 0054 FFF7FEFF 		bl	lcd_set_pos
 1284              	.LVL81:
 749:Core/Src/main.c **** 	lcd_write_string("S2:");
 1285              		.loc 1 749 2 view .LVU327
 1286 0058 3248     		ldr	r0, .L90+16
 1287 005a FFF7FEFF 		bl	lcd_write_string
 1288              	.LVL82:
 750:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 1289              		.loc 1 750 2 view .LVU328
 1290 005e 0321     		movs	r1, #3
 1291 0060 0120     		movs	r0, #1
 1292 0062 FFF7FEFF 		bl	lcd_set_pos
 1293              	.LVL83:
 751:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
ARM GAS  /tmp/ccZoqNrj.s 			page 40


 1294              		.loc 1 751 2 view .LVU329
 1295 0066 304B     		ldr	r3, .L90+20
 1296 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1297 006a E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1298 006c FFF7FEFF 		bl	lcd_data
 1299              	.LVL84:
 752:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 1300              		.loc 1 752 2 view .LVU330
 1301 0070 0C21     		movs	r1, #12
 1302 0072 0120     		movs	r0, #1
 1303 0074 FFF7FEFF 		bl	lcd_set_pos
 1304              	.LVL85:
 753:Core/Src/main.c **** 	lcd_write_string("S1:");
 1305              		.loc 1 753 2 view .LVU331
 1306 0078 2C48     		ldr	r0, .L90+24
 1307 007a FFF7FEFF 		bl	lcd_write_string
 1308              	.LVL86:
 754:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 1309              		.loc 1 754 2 view .LVU332
 1310 007e 0F21     		movs	r1, #15
 1311 0080 0120     		movs	r0, #1
 1312 0082 FFF7FEFF 		bl	lcd_set_pos
 1313              	.LVL87:
 755:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 1314              		.loc 1 755 2 view .LVU333
 1315 0086 2A4B     		ldr	r3, .L90+28
 1316 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1317 008a E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1318 008c FFF7FEFF 		bl	lcd_data
 1319              	.LVL88:
 756:Core/Src/main.c **** }
 1320              		.loc 1 756 1 is_stmt 0 view .LVU334
 1321 0090 70BD     		pop	{r4, r5, r6, pc}
 1322              	.L88:
 719:Core/Src/main.c **** 		lcd_write_string("S1 ADDR:");
 1323              		.loc 1 719 3 is_stmt 1 view .LVU335
 1324 0092 0221     		movs	r1, #2
 1325 0094 0120     		movs	r0, #1
 1326 0096 FFF7FEFF 		bl	lcd_set_pos
 1327              	.LVL89:
 720:Core/Src/main.c **** 	
 1328              		.loc 1 720 3 view .LVU336
 1329 009a 2648     		ldr	r0, .L90+32
 1330 009c FFF7FEFF 		bl	lcd_write_string
 1331              	.LVL90:
 722:Core/Src/main.c **** 		temp = ID_list[SLAVE1]/16;
 1332              		.loc 1 722 3 view .LVU337
 1333 00a0 0C21     		movs	r1, #12
 1334 00a2 0120     		movs	r0, #1
 1335 00a4 FFF7FEFF 		bl	lcd_set_pos
 1336              	.LVL91:
 723:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1337              		.loc 1 723 3 view .LVU338
 723:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1338              		.loc 1 723 17 is_stmt 0 view .LVU339
 1339 00a8 234E     		ldr	r6, .L90+36
 1340 00aa 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccZoqNrj.s 			page 41


 723:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1341              		.loc 1 723 8 view .LVU340
 1342 00ac 1B09     		lsrs	r3, r3, #4
 1343 00ae 234D     		ldr	r5, .L90+40
 1344 00b0 2B70     		strb	r3, [r5]
 724:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 1345              		.loc 1 724 3 is_stmt 1 view .LVU341
 1346 00b2 1A4C     		ldr	r4, .L90+8
 1347 00b4 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1348 00b6 FFF7FEFF 		bl	lcd_data
 1349              	.LVL92:
 725:Core/Src/main.c **** 		temp = ID_list[SLAVE1]%16;
 1350              		.loc 1 725 3 view .LVU342
 1351 00ba 0D21     		movs	r1, #13
 1352 00bc 0120     		movs	r0, #1
 1353 00be FFF7FEFF 		bl	lcd_set_pos
 1354              	.LVL93:
 726:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1355              		.loc 1 726 3 view .LVU343
 726:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1356              		.loc 1 726 17 is_stmt 0 view .LVU344
 1357 00c2 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 726:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1358              		.loc 1 726 25 view .LVU345
 1359 00c4 03F00F03 		and	r3, r3, #15
 726:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1360              		.loc 1 726 8 view .LVU346
 1361 00c8 2B70     		strb	r3, [r5]
 727:Core/Src/main.c **** 	}
 1362              		.loc 1 727 3 is_stmt 1 view .LVU347
 1363 00ca E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1364 00cc FFF7FEFF 		bl	lcd_data
 1365              	.LVL94:
 1366 00d0 A7E7     		b	.L86
 1367              	.L89:
 730:Core/Src/main.c **** 		lcd_write_string("S2 ADDR:");
 1368              		.loc 1 730 3 view .LVU348
 1369 00d2 0221     		movs	r1, #2
 1370 00d4 0120     		movs	r0, #1
 1371 00d6 FFF7FEFF 		bl	lcd_set_pos
 1372              	.LVL95:
 731:Core/Src/main.c **** 		
 1373              		.loc 1 731 3 view .LVU349
 1374 00da 1948     		ldr	r0, .L90+44
 1375 00dc FFF7FEFF 		bl	lcd_write_string
 1376              	.LVL96:
 733:Core/Src/main.c **** 		temp = ID_list[SLAVE2]/16;
 1377              		.loc 1 733 3 view .LVU350
 1378 00e0 0C21     		movs	r1, #12
 1379 00e2 0120     		movs	r0, #1
 1380 00e4 FFF7FEFF 		bl	lcd_set_pos
 1381              	.LVL97:
 734:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1382              		.loc 1 734 3 view .LVU351
 734:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1383              		.loc 1 734 17 is_stmt 0 view .LVU352
 1384 00e8 134E     		ldr	r6, .L90+36
ARM GAS  /tmp/ccZoqNrj.s 			page 42


 1385 00ea B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 734:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1386              		.loc 1 734 8 view .LVU353
 1387 00ec 1B09     		lsrs	r3, r3, #4
 1388 00ee 134D     		ldr	r5, .L90+40
 1389 00f0 2B70     		strb	r3, [r5]
 735:Core/Src/main.c **** 		lcd_set_pos(1, 0xD);
 1390              		.loc 1 735 3 is_stmt 1 view .LVU354
 1391 00f2 0A4C     		ldr	r4, .L90+8
 1392 00f4 E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1393 00f6 FFF7FEFF 		bl	lcd_data
 1394              	.LVL98:
 736:Core/Src/main.c **** 		temp = ID_list[SLAVE2]%16;
 1395              		.loc 1 736 3 view .LVU355
 1396 00fa 0D21     		movs	r1, #13
 1397 00fc 0120     		movs	r0, #1
 1398 00fe FFF7FEFF 		bl	lcd_set_pos
 1399              	.LVL99:
 737:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1400              		.loc 1 737 3 view .LVU356
 737:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1401              		.loc 1 737 17 is_stmt 0 view .LVU357
 1402 0102 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 737:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1403              		.loc 1 737 25 view .LVU358
 1404 0104 03F00F03 		and	r3, r3, #15
 737:Core/Src/main.c **** 		lcd_data(digit_table[temp]);
 1405              		.loc 1 737 8 view .LVU359
 1406 0108 2B70     		strb	r3, [r5]
 738:Core/Src/main.c **** 	}
 1407              		.loc 1 738 3 is_stmt 1 view .LVU360
 1408 010a E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 1409 010c FFF7FEFF 		bl	lcd_data
 1410              	.LVL100:
 1411 0110 87E7     		b	.L86
 1412              	.L91:
 1413 0112 00BF     		.align	2
 1414              	.L90:
 1415 0114 00000000 		.word	.LC6
 1416 0118 24000000 		.word	.LC3
 1417 011c 00000000 		.word	.LANCHOR3
 1418 0120 00000000 		.word	.LANCHOR6
 1419 0124 30000000 		.word	.LC4
 1420 0128 00000000 		.word	.LANCHOR1
 1421 012c 34000000 		.word	.LC5
 1422 0130 00000000 		.word	.LANCHOR5
 1423 0134 0C000000 		.word	.LC1
 1424 0138 00000000 		.word	.LANCHOR27
 1425 013c 00000000 		.word	.LANCHOR28
 1426 0140 18000000 		.word	.LC2
 1427              		.cfi_endproc
 1428              	.LFE142:
 1430              		.section	.text.check_slave,"ax",%progbits
 1431              		.align	1
 1432              		.global	check_slave
 1433              		.syntax unified
 1434              		.thumb
ARM GAS  /tmp/ccZoqNrj.s 			page 43


 1435              		.thumb_func
 1436              		.fpu fpv4-sp-d16
 1438              	check_slave:
 1439              	.LFB138:
 542:Core/Src/main.c **** 
 1440              		.loc 1 542 23 view -0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444 0000 08B5     		push	{r3, lr}
 1445              	.LCFI9:
 1446              		.cfi_def_cfa_offset 8
 1447              		.cfi_offset 3, -8
 1448              		.cfi_offset 14, -4
 544:Core/Src/main.c **** 	
 1449              		.loc 1 544 2 view .LVU362
 544:Core/Src/main.c **** 	
 1450              		.loc 1 544 13 is_stmt 0 view .LVU363
 1451 0002 154B     		ldr	r3, .L99
 1452 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 544:Core/Src/main.c **** 	
 1453              		.loc 1 544 25 view .LVU364
 1454 0006 154A     		ldr	r2, .L99+4
 1455 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 544:Core/Src/main.c **** 	
 1456              		.loc 1 544 5 view .LVU365
 1457 000a 9342     		cmp	r3, r2
 1458 000c 08D0     		beq	.L92
 544:Core/Src/main.c **** 	
 1459              		.loc 1 544 29 discriminator 2 view .LVU366
 1460 000e 3BB1     		cbz	r3, .L92
 546:Core/Src/main.c **** 		display_disconnected_slave(SLAVE1);
 1461              		.loc 1 546 2 is_stmt 1 view .LVU367
 546:Core/Src/main.c **** 		display_disconnected_slave(SLAVE1);
 1462              		.loc 1 546 24 is_stmt 0 view .LVU368
 1463 0010 124A     		ldr	r2, .L99+4
 1464 0012 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 546:Core/Src/main.c **** 		display_disconnected_slave(SLAVE1);
 1465              		.loc 1 546 5 view .LVU369
 1466 0014 9342     		cmp	r3, r2
 1467 0016 04D0     		beq	.L97
 550:Core/Src/main.c **** 		display_disconnected_slave(SLAVE2);
 1468              		.loc 1 550 8 is_stmt 1 view .LVU370
 550:Core/Src/main.c **** 		display_disconnected_slave(SLAVE2);
 1469              		.loc 1 550 31 is_stmt 0 view .LVU371
 1470 0018 104A     		ldr	r2, .L99+4
 1471 001a 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 550:Core/Src/main.c **** 		display_disconnected_slave(SLAVE2);
 1472              		.loc 1 550 11 view .LVU372
 1473 001c 9342     		cmp	r3, r2
 1474 001e 0AD0     		beq	.L98
 1475              	.L92:
 561:Core/Src/main.c **** 
 1476              		.loc 1 561 1 view .LVU373
 1477 0020 08BD     		pop	{r3, pc}
 1478              	.L97:
 547:Core/Src/main.c **** 		ID_list[SLAVE1] = 0;
ARM GAS  /tmp/ccZoqNrj.s 			page 44


 1479              		.loc 1 547 3 is_stmt 1 view .LVU374
 1480 0022 0120     		movs	r0, #1
 1481 0024 FFF7FEFF 		bl	display_disconnected_slave
 1482              	.LVL101:
 548:Core/Src/main.c **** 		digit1 = 16;
 1483              		.loc 1 548 3 view .LVU375
 548:Core/Src/main.c **** 		digit1 = 16;
 1484              		.loc 1 548 19 is_stmt 0 view .LVU376
 1485 0028 0C4B     		ldr	r3, .L99+4
 1486 002a 0022     		movs	r2, #0
 1487 002c 5A70     		strb	r2, [r3, #1]
 549:Core/Src/main.c **** 	}else if (TX_msg[1]== ID_list[SLAVE2]){
 1488              		.loc 1 549 3 is_stmt 1 view .LVU377
 549:Core/Src/main.c **** 	}else if (TX_msg[1]== ID_list[SLAVE2]){
 1489              		.loc 1 549 10 is_stmt 0 view .LVU378
 1490 002e 0C4B     		ldr	r3, .L99+8
 1491 0030 1022     		movs	r2, #16
 1492 0032 1A70     		strb	r2, [r3]
 1493 0034 08E0     		b	.L95
 1494              	.L98:
 551:Core/Src/main.c **** 		ID_list[SLAVE2]	= 0;
 1495              		.loc 1 551 3 is_stmt 1 view .LVU379
 1496 0036 0220     		movs	r0, #2
 1497 0038 FFF7FEFF 		bl	display_disconnected_slave
 1498              	.LVL102:
 552:Core/Src/main.c **** 		digit2 =16;
 1499              		.loc 1 552 3 view .LVU380
 552:Core/Src/main.c **** 		digit2 =16;
 1500              		.loc 1 552 19 is_stmt 0 view .LVU381
 1501 003c 074B     		ldr	r3, .L99+4
 1502 003e 0022     		movs	r2, #0
 1503 0040 9A70     		strb	r2, [r3, #2]
 553:Core/Src/main.c **** 	}else{
 1504              		.loc 1 553 3 is_stmt 1 view .LVU382
 553:Core/Src/main.c **** 	}else{
 1505              		.loc 1 553 10 is_stmt 0 view .LVU383
 1506 0042 084B     		ldr	r3, .L99+12
 1507 0044 1022     		movs	r2, #16
 1508 0046 1A70     		strb	r2, [r3]
 1509              	.L95:
 557:Core/Src/main.c **** 		update_lcd(&num_slave);
 1510              		.loc 1 557 3 is_stmt 1 view .LVU384
 557:Core/Src/main.c **** 		update_lcd(&num_slave);
 1511              		.loc 1 557 12 is_stmt 0 view .LVU385
 1512 0048 0748     		ldr	r0, .L99+16
 1513 004a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1514 004c 013B     		subs	r3, r3, #1
 1515 004e 0370     		strb	r3, [r0]
 558:Core/Src/main.c **** 
 1516              		.loc 1 558 3 is_stmt 1 view .LVU386
 1517 0050 FFF7FEFF 		bl	update_lcd
 1518              	.LVL103:
 1519 0054 E4E7     		b	.L92
 1520              	.L100:
 1521 0056 00BF     		.align	2
 1522              	.L99:
 1523 0058 00000000 		.word	.LANCHOR29
ARM GAS  /tmp/ccZoqNrj.s 			page 45


 1524 005c 00000000 		.word	.LANCHOR27
 1525 0060 00000000 		.word	.LANCHOR5
 1526 0064 00000000 		.word	.LANCHOR1
 1527 0068 00000000 		.word	.LANCHOR6
 1528              		.cfi_endproc
 1529              	.LFE138:
 1531              		.section	.text.RS485_Send_Message,"ax",%progbits
 1532              		.align	1
 1533              		.global	RS485_Send_Message
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1537              		.fpu fpv4-sp-d16
 1539              	RS485_Send_Message:
 1540              	.LVL104:
 1541              	.LFB143:
 757:Core/Src/main.c **** 
 758:Core/Src/main.c **** void RS485_Send_Message(uint8_t addr, uint8_t func_code, uint8_t data)
 759:Core/Src/main.c **** {
 1542              		.loc 1 759 1 view -0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546              		.loc 1 759 1 is_stmt 0 view .LVU388
 1547 0000 38B5     		push	{r3, r4, r5, lr}
 1548              	.LCFI10:
 1549              		.cfi_def_cfa_offset 16
 1550              		.cfi_offset 3, -16
 1551              		.cfi_offset 4, -12
 1552              		.cfi_offset 5, -8
 1553              		.cfi_offset 14, -4
 760:Core/Src/main.c **** 	
 761:Core/Src/main.c **** 	TX_msg[0] = SOF;
 1554              		.loc 1 761 2 is_stmt 1 view .LVU389
 1555              		.loc 1 761 12 is_stmt 0 view .LVU390
 1556 0002 0F4C     		ldr	r4, .L103
 1557 0004 0223     		movs	r3, #2
 1558 0006 2370     		strb	r3, [r4]
 762:Core/Src/main.c **** 	TX_msg[1] = addr;
 1559              		.loc 1 762 2 is_stmt 1 view .LVU391
 1560              		.loc 1 762 12 is_stmt 0 view .LVU392
 1561 0008 6070     		strb	r0, [r4, #1]
 763:Core/Src/main.c **** 	TX_msg[2] = func_code;
 1562              		.loc 1 763 2 is_stmt 1 view .LVU393
 1563              		.loc 1 763 12 is_stmt 0 view .LVU394
 1564 000a A170     		strb	r1, [r4, #2]
 764:Core/Src/main.c **** 	TX_msg[3] = data;
 1565              		.loc 1 764 2 is_stmt 1 view .LVU395
 1566              		.loc 1 764 12 is_stmt 0 view .LVU396
 1567 000c E270     		strb	r2, [r4, #3]
 765:Core/Src/main.c **** 	TX_msg[4] = (((0x00^TX_msg[1])^TX_msg[2])^TX_msg[3]);    // checksum
 1568              		.loc 1 765 2 is_stmt 1 view .LVU397
 1569              		.loc 1 765 12 is_stmt 0 view .LVU398
 1570 000e 4840     		eors	r0, r0, r1
 1571              	.LVL105:
 1572              		.loc 1 765 12 view .LVU399
 1573 0010 4240     		eors	r2, r2, r0
ARM GAS  /tmp/ccZoqNrj.s 			page 46


 1574              	.LVL106:
 1575              		.loc 1 765 12 view .LVU400
 1576 0012 2271     		strb	r2, [r4, #4]
 766:Core/Src/main.c **** 	TX_msg[5] = EOF;
 1577              		.loc 1 766 2 is_stmt 1 view .LVU401
 1578              		.loc 1 766 12 is_stmt 0 view .LVU402
 1579 0014 0323     		movs	r3, #3
 1580 0016 6371     		strb	r3, [r4, #5]
 767:Core/Src/main.c **** 
 768:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
 769:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 1581              		.loc 1 769 2 is_stmt 1 view .LVU403
 1582 0018 0A4D     		ldr	r5, .L103+4
 1583 001a 0122     		movs	r2, #1
 1584 001c 4FF48051 		mov	r1, #4096
 1585              	.LVL107:
 1586              		.loc 1 769 2 is_stmt 0 view .LVU404
 1587 0020 2846     		mov	r0, r5
 1588 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1589              	.LVL108:
 770:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, TX_msg, sizeof(TX_msg), 10);
 1590              		.loc 1 770 2 is_stmt 1 view .LVU405
 1591 0026 0A23     		movs	r3, #10
 1592 0028 0622     		movs	r2, #6
 1593 002a 2146     		mov	r1, r4
 1594 002c 0648     		ldr	r0, .L103+8
 1595 002e FFF7FEFF 		bl	HAL_UART_Transmit
 1596              	.LVL109:
 771:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 1597              		.loc 1 771 2 view .LVU406
 1598 0032 0022     		movs	r2, #0
 1599 0034 4FF48051 		mov	r1, #4096
 1600 0038 2846     		mov	r0, r5
 1601 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1602              	.LVL110:
 772:Core/Src/main.c **** }
 1603              		.loc 1 772 1 is_stmt 0 view .LVU407
 1604 003e 38BD     		pop	{r3, r4, r5, pc}
 1605              	.L104:
 1606              		.align	2
 1607              	.L103:
 1608 0040 00000000 		.word	.LANCHOR29
 1609 0044 00000240 		.word	1073872896
 1610 0048 00000000 		.word	huart4
 1611              		.cfi_endproc
 1612              	.LFE143:
 1614              		.section	.text.main_task,"ax",%progbits
 1615              		.align	1
 1616              		.global	main_task
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1620              		.fpu fpv4-sp-d16
 1622              	main_task:
 1623              	.LFB137:
 454:Core/Src/main.c **** 
 1624              		.loc 1 454 1 is_stmt 1 view -0
ARM GAS  /tmp/ccZoqNrj.s 			page 47


 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628 0000 10B5     		push	{r4, lr}
 1629              	.LCFI11:
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 4, -8
 1632              		.cfi_offset 14, -4
 456:Core/Src/main.c **** 	{
 1633              		.loc 1 456 2 view .LVU409
 456:Core/Src/main.c **** 	{
 1634              		.loc 1 456 18 is_stmt 0 view .LVU410
 1635 0002 4A4B     		ldr	r3, .L122
 1636 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 456:Core/Src/main.c **** 	{
 1637              		.loc 1 456 39 view .LVU411
 1638 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 456:Core/Src/main.c **** 	{
 1639              		.loc 1 456 5 view .LVU412
 1640 0008 9A42     		cmp	r2, r3
 1641 000a 06D1     		bne	.L120
 1642              	.L106:
 463:Core/Src/main.c **** 	{
 1643              		.loc 1 463 2 is_stmt 1 view .LVU413
 1644 000c 484B     		ldr	r3, .L122+4
 1645 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 0010 012B     		cmp	r3, #1
 1647 0012 08D0     		beq	.L107
 1648 0014 022B     		cmp	r3, #2
 1649 0016 5CD0     		beq	.L108
 1650              	.L105:
 540:Core/Src/main.c **** 
 1651              		.loc 1 540 1 is_stmt 0 view .LVU414
 1652 0018 10BD     		pop	{r4, pc}
 1653              	.L120:
 459:Core/Src/main.c **** 
 1654              		.loc 1 459 3 is_stmt 1 view .LVU415
 459:Core/Src/main.c **** 
 1655              		.loc 1 459 11 is_stmt 0 view .LVU416
 1656 001a 4448     		ldr	r0, .L122
 1657 001c FFF7FEFF 		bl	buffer_pop
 1658              	.LVL111:
 459:Core/Src/main.c **** 
 1659              		.loc 1 459 9 view .LVU417
 1660 0020 444B     		ldr	r3, .L122+8
 1661 0022 1870     		strb	r0, [r3]
 1662 0024 F2E7     		b	.L106
 1663              	.L107:
 467:Core/Src/main.c **** 		{
 1664              		.loc 1 467 3 is_stmt 1 view .LVU418
 1665 0026 434B     		ldr	r3, .L122+8
 1666 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1667 002a 012B     		cmp	r3, #1
 1668 002c 1ED0     		beq	.L110
 1669 002e 022B     		cmp	r3, #2
 1670 0030 31D0     		beq	.L111
 489:Core/Src/main.c **** 			f_querry =0;
ARM GAS  /tmp/ccZoqNrj.s 			page 48


 1671              		.loc 1 489 4 view .LVU419
 489:Core/Src/main.c **** 			f_querry =0;
 1672              		.loc 1 489 8 is_stmt 0 view .LVU420
 1673 0032 414B     		ldr	r3, .L122+12
 1674 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 489:Core/Src/main.c **** 			f_querry =0;
 1675              		.loc 1 489 7 view .LVU421
 1676 0036 002B     		cmp	r3, #0
 1677 0038 EED0     		beq	.L105
 490:Core/Src/main.c **** 					
 1678              		.loc 1 490 4 is_stmt 1 view .LVU422
 490:Core/Src/main.c **** 					
 1679              		.loc 1 490 13 is_stmt 0 view .LVU423
 1680 003a 3F4B     		ldr	r3, .L122+12
 1681 003c 0022     		movs	r2, #0
 1682 003e 1A70     		strb	r2, [r3]
 492:Core/Src/main.c **** 				
 1683              		.loc 1 492 4 is_stmt 1 view .LVU424
 492:Core/Src/main.c **** 				
 1684              		.loc 1 492 9 is_stmt 0 view .LVU425
 1685 0040 3E4B     		ldr	r3, .L122+16
 1686 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 492:Core/Src/main.c **** 				
 1687              		.loc 1 492 6 view .LVU426
 1688 0044 002B     		cmp	r3, #0
 1689 0046 3BD0     		beq	.L113
 494:Core/Src/main.c **** 			}else{
 1690              		.loc 1 494 5 is_stmt 1 view .LVU427
 1691 0048 3022     		movs	r2, #48
 1692 004a F221     		movs	r1, #242
 1693 004c 3C48     		ldr	r0, .L122+20
 1694 004e C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 1695 0050 FFF7FEFF 		bl	RS485_Send_Message
 1696              	.LVL112:
 1697              	.L114:
 499:Core/Src/main.c **** 			
 1698              		.loc 1 499 4 view .LVU428
 499:Core/Src/main.c **** 			
 1699              		.loc 1 499 15 is_stmt 0 view .LVU429
 1700 0054 394B     		ldr	r3, .L122+16
 1701 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 499:Core/Src/main.c **** 			
 1702              		.loc 1 499 7 view .LVU430
 1703 0058 022B     		cmp	r3, #2
 1704 005a 38D0     		beq	.L117
 499:Core/Src/main.c **** 			
 1705              		.loc 1 499 7 discriminator 1 view .LVU431
 1706 005c 0133     		adds	r3, r3, #1
 1707 005e DBB2     		uxtb	r3, r3
 1708              	.L115:
 499:Core/Src/main.c **** 			
 1709              		.loc 1 499 7 discriminator 4 view .LVU432
 1710 0060 364A     		ldr	r2, .L122+16
 1711 0062 1370     		strb	r3, [r2]
 501:Core/Src/main.c **** 			break;
 1712              		.loc 1 501 4 is_stmt 1 discriminator 4 view .LVU433
 501:Core/Src/main.c **** 			break;
ARM GAS  /tmp/ccZoqNrj.s 			page 49


 1713              		.loc 1 501 10 is_stmt 0 discriminator 4 view .LVU434
 1714 0064 324B     		ldr	r3, .L122+4
 1715 0066 0222     		movs	r2, #2
 1716 0068 1A70     		strb	r2, [r3]
 502:Core/Src/main.c **** 
 1717              		.loc 1 502 4 is_stmt 1 discriminator 4 view .LVU435
 1718 006a D5E7     		b	.L105
 1719              	.L110:
 472:Core/Src/main.c **** 			event = EVENT_RESET;
 1720              		.loc 1 472 4 view .LVU436
 1721 006c 344B     		ldr	r3, .L122+20
 1722 006e 5C78     		ldrb	r4, [r3, #1]	@ zero_extendqisi2
 472:Core/Src/main.c **** 			event = EVENT_RESET;
 1723              		.loc 1 472 51 is_stmt 0 view .LVU437
 1724 0070 3448     		ldr	r0, .L122+24
 1725 0072 FFF7FEFF 		bl	buffer_pop
 1726              	.LVL113:
 472:Core/Src/main.c **** 			event = EVENT_RESET;
 1727              		.loc 1 472 4 view .LVU438
 1728 0076 00F13002 		add	r2, r0, #48
 1729 007a D2B2     		uxtb	r2, r2
 1730 007c F121     		movs	r1, #241
 1731 007e 2046     		mov	r0, r4
 1732 0080 FFF7FEFF 		bl	RS485_Send_Message
 1733              	.LVL114:
 473:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1734              		.loc 1 473 4 is_stmt 1 view .LVU439
 473:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1735              		.loc 1 473 10 is_stmt 0 view .LVU440
 1736 0084 0023     		movs	r3, #0
 1737 0086 2B4A     		ldr	r2, .L122+8
 1738 0088 1370     		strb	r3, [r2]
 474:Core/Src/main.c **** 			f_querry =0;
 1739              		.loc 1 474 4 is_stmt 1 view .LVU441
 474:Core/Src/main.c **** 			f_querry =0;
 1740              		.loc 1 474 10 is_stmt 0 view .LVU442
 1741 008a 294A     		ldr	r2, .L122+4
 1742 008c 0221     		movs	r1, #2
 1743 008e 1170     		strb	r1, [r2]
 475:Core/Src/main.c **** 			break;
 1744              		.loc 1 475 4 is_stmt 1 view .LVU443
 475:Core/Src/main.c **** 			break;
 1745              		.loc 1 475 13 is_stmt 0 view .LVU444
 1746 0090 294A     		ldr	r2, .L122+12
 1747 0092 1370     		strb	r3, [r2]
 476:Core/Src/main.c **** 
 1748              		.loc 1 476 4 is_stmt 1 view .LVU445
 1749 0094 C0E7     		b	.L105
 1750              	.L111:
 481:Core/Src/main.c **** 			event = EVENT_RESET;
 1751              		.loc 1 481 4 view .LVU446
 1752 0096 2A4B     		ldr	r3, .L122+20
 1753 0098 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 481:Core/Src/main.c **** 			event = EVENT_RESET;
 1754              		.loc 1 481 51 is_stmt 0 view .LVU447
 1755 009a 2B48     		ldr	r0, .L122+28
 1756 009c FFF7FEFF 		bl	buffer_pop
ARM GAS  /tmp/ccZoqNrj.s 			page 50


 1757              	.LVL115:
 481:Core/Src/main.c **** 			event = EVENT_RESET;
 1758              		.loc 1 481 4 view .LVU448
 1759 00a0 00F13002 		add	r2, r0, #48
 1760 00a4 D2B2     		uxtb	r2, r2
 1761 00a6 F121     		movs	r1, #241
 1762 00a8 2046     		mov	r0, r4
 1763 00aa FFF7FEFF 		bl	RS485_Send_Message
 1764              	.LVL116:
 482:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1765              		.loc 1 482 4 is_stmt 1 view .LVU449
 482:Core/Src/main.c **** 			state = STATE_WAITING_RX;
 1766              		.loc 1 482 10 is_stmt 0 view .LVU450
 1767 00ae 0023     		movs	r3, #0
 1768 00b0 204A     		ldr	r2, .L122+8
 1769 00b2 1370     		strb	r3, [r2]
 483:Core/Src/main.c **** 			f_querry =0;
 1770              		.loc 1 483 4 is_stmt 1 view .LVU451
 483:Core/Src/main.c **** 			f_querry =0;
 1771              		.loc 1 483 10 is_stmt 0 view .LVU452
 1772 00b4 1E4A     		ldr	r2, .L122+4
 1773 00b6 0221     		movs	r1, #2
 1774 00b8 1170     		strb	r1, [r2]
 484:Core/Src/main.c **** 			break;
 1775              		.loc 1 484 4 is_stmt 1 view .LVU453
 484:Core/Src/main.c **** 			break;
 1776              		.loc 1 484 13 is_stmt 0 view .LVU454
 1777 00ba 1F4A     		ldr	r2, .L122+12
 1778 00bc 1370     		strb	r3, [r2]
 485:Core/Src/main.c **** 		
 1779              		.loc 1 485 4 is_stmt 1 view .LVU455
 1780 00be ABE7     		b	.L105
 1781              	.L113:
 496:Core/Src/main.c **** 			}
 1782              		.loc 1 496 5 view .LVU456
 1783 00c0 3022     		movs	r2, #48
 1784 00c2 F421     		movs	r1, #244
 1785 00c4 1E48     		ldr	r0, .L122+20
 1786 00c6 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 1787 00c8 FFF7FEFF 		bl	RS485_Send_Message
 1788              	.LVL117:
 1789 00cc C2E7     		b	.L114
 1790              	.L117:
 499:Core/Src/main.c **** 			
 1791              		.loc 1 499 7 is_stmt 0 view .LVU457
 1792 00ce 0023     		movs	r3, #0
 1793 00d0 C6E7     		b	.L115
 1794              	.L108:
 509:Core/Src/main.c **** 			RS485_Read_Message();
 1795              		.loc 1 509 3 is_stmt 1 view .LVU458
 509:Core/Src/main.c **** 			RS485_Read_Message();
 1796              		.loc 1 509 12 is_stmt 0 view .LVU459
 1797 00d2 184B     		ldr	r3, .L122+8
 1798 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 509:Core/Src/main.c **** 			RS485_Read_Message();
 1799              		.loc 1 509 6 view .LVU460
 1800 00d6 052B     		cmp	r3, #5
ARM GAS  /tmp/ccZoqNrj.s 			page 51


 1801 00d8 1ED0     		beq	.L121
 518:Core/Src/main.c **** 			f_querry =0;
 1802              		.loc 1 518 4 is_stmt 1 view .LVU461
 518:Core/Src/main.c **** 			f_querry =0;
 1803              		.loc 1 518 8 is_stmt 0 view .LVU462
 1804 00da 174B     		ldr	r3, .L122+12
 1805 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518:Core/Src/main.c **** 			f_querry =0;
 1806              		.loc 1 518 7 view .LVU463
 1807 00de 002B     		cmp	r3, #0
 1808 00e0 9AD0     		beq	.L105
 519:Core/Src/main.c **** 			
 1809              		.loc 1 519 4 is_stmt 1 view .LVU464
 519:Core/Src/main.c **** 			
 1810              		.loc 1 519 13 is_stmt 0 view .LVU465
 1811 00e2 154B     		ldr	r3, .L122+12
 1812 00e4 0022     		movs	r2, #0
 1813 00e6 1A70     		strb	r2, [r3]
 521:Core/Src/main.c **** 			tx_timeout++;
 1814              		.loc 1 521 4 is_stmt 1 view .LVU466
 1815 00e8 184B     		ldr	r3, .L122+32
 1816 00ea DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1817 00ec 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1818 00ee 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1819 00f0 FFF7FEFF 		bl	RS485_Send_Message
 1820              	.LVL118:
 522:Core/Src/main.c **** 			
 1821              		.loc 1 522 4 view .LVU467
 522:Core/Src/main.c **** 			
 1822              		.loc 1 522 14 is_stmt 0 view .LVU468
 1823 00f4 164A     		ldr	r2, .L122+36
 1824 00f6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1825 00f8 0133     		adds	r3, r3, #1
 1826 00fa DBB2     		uxtb	r3, r3
 1827 00fc 1370     		strb	r3, [r2]
 524:Core/Src/main.c **** 				state = STATE_TX;
 1828              		.loc 1 524 4 is_stmt 1 view .LVU469
 524:Core/Src/main.c **** 				state = STATE_TX;
 1829              		.loc 1 524 7 is_stmt 0 view .LVU470
 1830 00fe 022B     		cmp	r3, #2
 1831 0100 8AD1     		bne	.L105
 525:Core/Src/main.c **** 				event = EVENT_RESET;	
 1832              		.loc 1 525 5 is_stmt 1 view .LVU471
 525:Core/Src/main.c **** 				event = EVENT_RESET;	
 1833              		.loc 1 525 11 is_stmt 0 view .LVU472
 1834 0102 0B4B     		ldr	r3, .L122+4
 1835 0104 0122     		movs	r2, #1
 1836 0106 1A70     		strb	r2, [r3]
 526:Core/Src/main.c **** 				tx_timeout=0;
 1837              		.loc 1 526 5 is_stmt 1 view .LVU473
 526:Core/Src/main.c **** 				tx_timeout=0;
 1838              		.loc 1 526 11 is_stmt 0 view .LVU474
 1839 0108 0023     		movs	r3, #0
 1840 010a 0A4A     		ldr	r2, .L122+8
 1841 010c 1370     		strb	r3, [r2]
 527:Core/Src/main.c **** 				check_slave();
 1842              		.loc 1 527 5 is_stmt 1 view .LVU475
ARM GAS  /tmp/ccZoqNrj.s 			page 52


 527:Core/Src/main.c **** 				check_slave();
 1843              		.loc 1 527 15 is_stmt 0 view .LVU476
 1844 010e 104A     		ldr	r2, .L122+36
 1845 0110 1370     		strb	r3, [r2]
 528:Core/Src/main.c **** 				break;
 1846              		.loc 1 528 5 is_stmt 1 view .LVU477
 1847 0112 FFF7FEFF 		bl	check_slave
 1848              	.LVL119:
 529:Core/Src/main.c **** 
 1849              		.loc 1 529 5 view .LVU478
 540:Core/Src/main.c **** 
 1850              		.loc 1 540 1 is_stmt 0 view .LVU479
 1851 0116 7FE7     		b	.L105
 1852              	.L121:
 510:Core/Src/main.c **** 
 1853              		.loc 1 510 4 is_stmt 1 view .LVU480
 1854 0118 FFF7FEFF 		bl	RS485_Read_Message
 1855              	.LVL120:
 512:Core/Src/main.c **** 			event = EVENT_RESET;
 1856              		.loc 1 512 4 view .LVU481
 512:Core/Src/main.c **** 			event = EVENT_RESET;
 1857              		.loc 1 512 9 is_stmt 0 view .LVU482
 1858 011c 044B     		ldr	r3, .L122+4
 1859 011e 0122     		movs	r2, #1
 1860 0120 1A70     		strb	r2, [r3]
 513:Core/Src/main.c **** 		
 1861              		.loc 1 513 4 is_stmt 1 view .LVU483
 513:Core/Src/main.c **** 		
 1862              		.loc 1 513 10 is_stmt 0 view .LVU484
 1863 0122 044B     		ldr	r3, .L122+8
 1864 0124 0022     		movs	r2, #0
 1865 0126 1A70     		strb	r2, [r3]
 1866 0128 76E7     		b	.L105
 1867              	.L123:
 1868 012a 00BF     		.align	2
 1869              	.L122:
 1870 012c 00000000 		.word	.LANCHOR20
 1871 0130 00000000 		.word	.LANCHOR19
 1872 0134 00000000 		.word	.LANCHOR30
 1873 0138 00000000 		.word	.LANCHOR14
 1874 013c 00000000 		.word	.LANCHOR31
 1875 0140 00000000 		.word	.LANCHOR27
 1876 0144 00000000 		.word	.LANCHOR18
 1877 0148 00000000 		.word	.LANCHOR22
 1878 014c 00000000 		.word	.LANCHOR29
 1879 0150 00000000 		.word	.LANCHOR32
 1880              		.cfi_endproc
 1881              	.LFE137:
 1883              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1884              		.align	1
 1885              		.global	HAL_TIM_PeriodElapsedCallback
 1886              		.syntax unified
 1887              		.thumb
 1888              		.thumb_func
 1889              		.fpu fpv4-sp-d16
 1891              	HAL_TIM_PeriodElapsedCallback:
 1892              	.LVL121:
ARM GAS  /tmp/ccZoqNrj.s 			page 53


 1893              	.LFB144:
 773:Core/Src/main.c **** 
 774:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 775:Core/Src/main.c **** {
 1894              		.loc 1 775 1 is_stmt 1 view -0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              		@ link register save eliminated.
 776:Core/Src/main.c **** 	// Check which version of the timer triggered this callback and toggle LED
 777:Core/Src/main.c **** 
 778:Core/Src/main.c **** 	if (htim == &htim4)
 1899              		.loc 1 778 2 view .LVU486
 1900              		.loc 1 778 5 is_stmt 0 view .LVU487
 1901 0000 034B     		ldr	r3, .L127
 1902 0002 8342     		cmp	r3, r0
 1903 0004 00D0     		beq	.L126
 1904              	.L124:
 779:Core/Src/main.c **** 	{
 780:Core/Src/main.c **** 		f_timer_10ms = 1;
 781:Core/Src/main.c **** 	}
 782:Core/Src/main.c **** }
 1905              		.loc 1 782 1 view .LVU488
 1906 0006 7047     		bx	lr
 1907              	.L126:
 780:Core/Src/main.c **** 	}
 1908              		.loc 1 780 3 is_stmt 1 view .LVU489
 780:Core/Src/main.c **** 	}
 1909              		.loc 1 780 16 is_stmt 0 view .LVU490
 1910 0008 024B     		ldr	r3, .L127+4
 1911 000a 0122     		movs	r2, #1
 1912 000c 1A70     		strb	r2, [r3]
 1913              		.loc 1 782 1 view .LVU491
 1914 000e FAE7     		b	.L124
 1915              	.L128:
 1916              		.align	2
 1917              	.L127:
 1918 0010 00000000 		.word	htim4
 1919 0014 00000000 		.word	.LANCHOR9
 1920              		.cfi_endproc
 1921              	.LFE144:
 1923              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1924              		.align	1
 1925              		.global	HAL_UART_RxCpltCallback
 1926              		.syntax unified
 1927              		.thumb
 1928              		.thumb_func
 1929              		.fpu fpv4-sp-d16
 1931              	HAL_UART_RxCpltCallback:
 1932              	.LVL122:
 1933              	.LFB145:
 783:Core/Src/main.c **** 
 784:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 785:Core/Src/main.c **** {
 1934              		.loc 1 785 1 is_stmt 1 view -0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccZoqNrj.s 			page 54


 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 786:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 787:Core/Src/main.c **** 
 788:Core/Src/main.c **** 	if (huart == &huart4)
 1938              		.loc 1 788 2 view .LVU493
 1939              		.loc 1 788 5 is_stmt 0 view .LVU494
 1940 0000 074B     		ldr	r3, .L136
 1941 0002 8342     		cmp	r3, r0
 1942 0004 00D0     		beq	.L135
 1943 0006 7047     		bx	lr
 1944              	.L135:
 785:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 1945              		.loc 1 785 1 view .LVU495
 1946 0008 10B5     		push	{r4, lr}
 1947              	.LCFI12:
 1948              		.cfi_def_cfa_offset 8
 1949              		.cfi_offset 4, -8
 1950              		.cfi_offset 14, -4
 789:Core/Src/main.c **** 	{
 790:Core/Src/main.c **** 		buffer_push(&rx_buffer, rx_temp);
 1951              		.loc 1 790 3 is_stmt 1 view .LVU496
 1952 000a 064C     		ldr	r4, .L136+4
 1953 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1954 000e 0648     		ldr	r0, .L136+8
 1955              	.LVL123:
 1956              		.loc 1 790 3 is_stmt 0 view .LVU497
 1957 0010 FFF7FEFF 		bl	buffer_push
 1958              	.LVL124:
 791:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 1959              		.loc 1 791 3 is_stmt 1 view .LVU498
 1960 0014 0122     		movs	r2, #1
 1961 0016 2146     		mov	r1, r4
 1962 0018 0148     		ldr	r0, .L136
 1963 001a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1964              	.LVL125:
 792:Core/Src/main.c **** 	}
 793:Core/Src/main.c **** }
 1965              		.loc 1 793 1 is_stmt 0 view .LVU499
 1966 001e 10BD     		pop	{r4, pc}
 1967              	.L137:
 1968              		.align	2
 1969              	.L136:
 1970 0020 00000000 		.word	huart4
 1971 0024 00000000 		.word	.LANCHOR33
 1972 0028 00000000 		.word	.LANCHOR23
 1973              		.cfi_endproc
 1974              	.LFE145:
 1976              		.section	.text.Error_Handler,"ax",%progbits
 1977              		.align	1
 1978              		.global	Error_Handler
 1979              		.syntax unified
 1980              		.thumb
 1981              		.thumb_func
 1982              		.fpu fpv4-sp-d16
 1984              	Error_Handler:
 1985              	.LFB146:
 794:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /tmp/ccZoqNrj.s 			page 55


 795:Core/Src/main.c **** 
 796:Core/Src/main.c **** /**
 797:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 798:Core/Src/main.c ****  * @retval None
 799:Core/Src/main.c ****  */
 800:Core/Src/main.c **** void Error_Handler(void)
 801:Core/Src/main.c **** {
 1986              		.loc 1 801 1 is_stmt 1 view -0
 1987              		.cfi_startproc
 1988              		@ Volatile: function does not return.
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
 1991              		@ link register save eliminated.
 802:Core/Src/main.c **** 	/* USER CODE BEGIN Error_Handler_Debug */
 803:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 804:Core/Src/main.c **** 	__disable_irq();
 1992              		.loc 1 804 2 view .LVU501
 1993              	.LBB4:
 1994              	.LBI4:
 1995              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccZoqNrj.s 			page 56


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /tmp/ccZoqNrj.s 			page 57


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1996              		.loc 2 140 27 view .LVU502
 1997              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1998              		.loc 2 142 3 view .LVU503
 1999              		.syntax unified
 2000              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2001 0000 72B6     		cpsid i
 2002              	@ 0 "" 2
 2003              		.thumb
 2004              		.syntax unified
ARM GAS  /tmp/ccZoqNrj.s 			page 58


 2005              	.L139:
 2006              	.LBE5:
 2007              	.LBE4:
 805:Core/Src/main.c **** 	while (1)
 2008              		.loc 1 805 2 discriminator 1 view .LVU504
 806:Core/Src/main.c **** 	{
 807:Core/Src/main.c **** 	}
 2009              		.loc 1 807 2 discriminator 1 view .LVU505
 805:Core/Src/main.c **** 	while (1)
 2010              		.loc 1 805 8 discriminator 1 view .LVU506
 2011 0002 FEE7     		b	.L139
 2012              		.cfi_endproc
 2013              	.LFE146:
 2015              		.section	.text.SystemClock_Config,"ax",%progbits
 2016              		.align	1
 2017              		.global	SystemClock_Config
 2018              		.syntax unified
 2019              		.thumb
 2020              		.thumb_func
 2021              		.fpu fpv4-sp-d16
 2023              	SystemClock_Config:
 2024              	.LFB131:
 251:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2025              		.loc 1 251 1 view -0
 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 80
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029 0000 00B5     		push	{lr}
 2030              	.LCFI13:
 2031              		.cfi_def_cfa_offset 4
 2032              		.cfi_offset 14, -4
 2033 0002 95B0     		sub	sp, sp, #84
 2034              	.LCFI14:
 2035              		.cfi_def_cfa_offset 88
 252:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2036              		.loc 1 252 2 view .LVU508
 252:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2037              		.loc 1 252 21 is_stmt 0 view .LVU509
 2038 0004 3022     		movs	r2, #48
 2039 0006 0021     		movs	r1, #0
 2040 0008 08A8     		add	r0, sp, #32
 2041 000a FFF7FEFF 		bl	memset
 2042              	.LVL126:
 253:Core/Src/main.c **** 
 2043              		.loc 1 253 2 is_stmt 1 view .LVU510
 253:Core/Src/main.c **** 
 2044              		.loc 1 253 21 is_stmt 0 view .LVU511
 2045 000e 0023     		movs	r3, #0
 2046 0010 0393     		str	r3, [sp, #12]
 2047 0012 0493     		str	r3, [sp, #16]
 2048 0014 0593     		str	r3, [sp, #20]
 2049 0016 0693     		str	r3, [sp, #24]
 2050 0018 0793     		str	r3, [sp, #28]
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2051              		.loc 1 257 2 is_stmt 1 view .LVU512
 2052              	.LBB6:
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
ARM GAS  /tmp/ccZoqNrj.s 			page 59


 2053              		.loc 1 257 2 view .LVU513
 2054 001a 0193     		str	r3, [sp, #4]
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2055              		.loc 1 257 2 view .LVU514
 2056 001c 204A     		ldr	r2, .L146
 2057 001e 116C     		ldr	r1, [r2, #64]
 2058 0020 41F08051 		orr	r1, r1, #268435456
 2059 0024 1164     		str	r1, [r2, #64]
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2060              		.loc 1 257 2 view .LVU515
 2061 0026 126C     		ldr	r2, [r2, #64]
 2062 0028 02F08052 		and	r2, r2, #268435456
 2063 002c 0192     		str	r2, [sp, #4]
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2064              		.loc 1 257 2 view .LVU516
 2065 002e 019A     		ldr	r2, [sp, #4]
 2066              	.LBE6:
 257:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 2067              		.loc 1 257 2 view .LVU517
 258:Core/Src/main.c **** 
 2068              		.loc 1 258 2 view .LVU518
 2069              	.LBB7:
 258:Core/Src/main.c **** 
 2070              		.loc 1 258 2 view .LVU519
 2071 0030 0293     		str	r3, [sp, #8]
 258:Core/Src/main.c **** 
 2072              		.loc 1 258 2 view .LVU520
 2073 0032 1C4A     		ldr	r2, .L146+4
 2074 0034 1368     		ldr	r3, [r2]
 2075 0036 23F44043 		bic	r3, r3, #49152
 2076 003a 43F48043 		orr	r3, r3, #16384
 2077 003e 1360     		str	r3, [r2]
 258:Core/Src/main.c **** 
 2078              		.loc 1 258 2 view .LVU521
 2079 0040 1368     		ldr	r3, [r2]
 2080 0042 03F44043 		and	r3, r3, #49152
 2081 0046 0293     		str	r3, [sp, #8]
 258:Core/Src/main.c **** 
 2082              		.loc 1 258 2 view .LVU522
 2083 0048 029B     		ldr	r3, [sp, #8]
 2084              	.LBE7:
 258:Core/Src/main.c **** 
 2085              		.loc 1 258 2 view .LVU523
 263:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2086              		.loc 1 263 2 view .LVU524
 263:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2087              		.loc 1 263 35 is_stmt 0 view .LVU525
 2088 004a 0123     		movs	r3, #1
 2089 004c 0893     		str	r3, [sp, #32]
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2090              		.loc 1 264 2 is_stmt 1 view .LVU526
 264:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2091              		.loc 1 264 29 is_stmt 0 view .LVU527
 2092 004e 4FF48033 		mov	r3, #65536
 2093 0052 0993     		str	r3, [sp, #36]
 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2094              		.loc 1 265 2 is_stmt 1 view .LVU528
ARM GAS  /tmp/ccZoqNrj.s 			page 60


 265:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2095              		.loc 1 265 33 is_stmt 0 view .LVU529
 2096 0054 0223     		movs	r3, #2
 2097 0056 0E93     		str	r3, [sp, #56]
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 2098              		.loc 1 266 2 is_stmt 1 view .LVU530
 266:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 2099              		.loc 1 266 34 is_stmt 0 view .LVU531
 2100 0058 4FF48002 		mov	r2, #4194304
 2101 005c 0F92     		str	r2, [sp, #60]
 267:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 2102              		.loc 1 267 2 is_stmt 1 view .LVU532
 267:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 2103              		.loc 1 267 29 is_stmt 0 view .LVU533
 2104 005e 0422     		movs	r2, #4
 2105 0060 1092     		str	r2, [sp, #64]
 268:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2106              		.loc 1 268 2 is_stmt 1 view .LVU534
 268:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2107              		.loc 1 268 29 is_stmt 0 view .LVU535
 2108 0062 6022     		movs	r2, #96
 2109 0064 1192     		str	r2, [sp, #68]
 269:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 2110              		.loc 1 269 2 is_stmt 1 view .LVU536
 269:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 2111              		.loc 1 269 29 is_stmt 0 view .LVU537
 2112 0066 1293     		str	r3, [sp, #72]
 270:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2113              		.loc 1 270 2 is_stmt 1 view .LVU538
 270:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2114              		.loc 1 270 29 is_stmt 0 view .LVU539
 2115 0068 0323     		movs	r3, #3
 2116 006a 1393     		str	r3, [sp, #76]
 271:Core/Src/main.c **** 	{
 2117              		.loc 1 271 2 is_stmt 1 view .LVU540
 271:Core/Src/main.c **** 	{
 2118              		.loc 1 271 6 is_stmt 0 view .LVU541
 2119 006c 08A8     		add	r0, sp, #32
 2120 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 2121              	.LVL127:
 271:Core/Src/main.c **** 	{
 2122              		.loc 1 271 5 view .LVU542
 2123 0072 88B9     		cbnz	r0, .L144
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2124              		.loc 1 278 2 is_stmt 1 view .LVU543
 278:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2125              		.loc 1 278 30 is_stmt 0 view .LVU544
 2126 0074 0F23     		movs	r3, #15
 2127 0076 0393     		str	r3, [sp, #12]
 279:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 2128              		.loc 1 279 2 is_stmt 1 view .LVU545
 279:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 2129              		.loc 1 279 33 is_stmt 0 view .LVU546
 2130 0078 0223     		movs	r3, #2
 2131 007a 0493     		str	r3, [sp, #16]
 280:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2132              		.loc 1 280 2 is_stmt 1 view .LVU547
ARM GAS  /tmp/ccZoqNrj.s 			page 61


 280:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2133              		.loc 1 280 34 is_stmt 0 view .LVU548
 2134 007c 8023     		movs	r3, #128
 2135 007e 0593     		str	r3, [sp, #20]
 281:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 2136              		.loc 1 281 2 is_stmt 1 view .LVU549
 281:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 2137              		.loc 1 281 35 is_stmt 0 view .LVU550
 2138 0080 4FF48053 		mov	r3, #4096
 2139 0084 0693     		str	r3, [sp, #24]
 282:Core/Src/main.c **** 
 2140              		.loc 1 282 2 is_stmt 1 view .LVU551
 282:Core/Src/main.c **** 
 2141              		.loc 1 282 35 is_stmt 0 view .LVU552
 2142 0086 0793     		str	r3, [sp, #28]
 284:Core/Src/main.c **** 	{
 2143              		.loc 1 284 2 is_stmt 1 view .LVU553
 284:Core/Src/main.c **** 	{
 2144              		.loc 1 284 6 is_stmt 0 view .LVU554
 2145 0088 0121     		movs	r1, #1
 2146 008a 03A8     		add	r0, sp, #12
 2147 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2148              	.LVL128:
 284:Core/Src/main.c **** 	{
 2149              		.loc 1 284 5 view .LVU555
 2150 0090 20B9     		cbnz	r0, .L145
 288:Core/Src/main.c **** 
 2151              		.loc 1 288 1 view .LVU556
 2152 0092 15B0     		add	sp, sp, #84
 2153              	.LCFI15:
 2154              		.cfi_remember_state
 2155              		.cfi_def_cfa_offset 4
 2156              		@ sp needed
 2157 0094 5DF804FB 		ldr	pc, [sp], #4
 2158              	.L144:
 2159              	.LCFI16:
 2160              		.cfi_restore_state
 273:Core/Src/main.c **** 	}
 2161              		.loc 1 273 3 is_stmt 1 view .LVU557
 2162 0098 FFF7FEFF 		bl	Error_Handler
 2163              	.LVL129:
 2164              	.L145:
 286:Core/Src/main.c **** 	}
 2165              		.loc 1 286 3 view .LVU558
 2166 009c FFF7FEFF 		bl	Error_Handler
 2167              	.LVL130:
 2168              	.L147:
 2169              		.align	2
 2170              	.L146:
 2171 00a0 00380240 		.word	1073887232
 2172 00a4 00700040 		.word	1073770496
 2173              		.cfi_endproc
 2174              	.LFE131:
 2176              		.section	.text.main,"ax",%progbits
 2177              		.align	1
 2178              		.global	main
 2179              		.syntax unified
ARM GAS  /tmp/ccZoqNrj.s 			page 62


 2180              		.thumb
 2181              		.thumb_func
 2182              		.fpu fpv4-sp-d16
 2184              	main:
 2185              	.LFB130:
 157:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 2186              		.loc 1 157 1 view -0
 2187              		.cfi_startproc
 2188              		@ Volatile: function does not return.
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191 0000 80B5     		push	{r7, lr}
 2192              	.LCFI17:
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 7, -8
 2195              		.cfi_offset 14, -4
 165:Core/Src/main.c **** 
 2196              		.loc 1 165 2 view .LVU560
 2197 0002 FFF7FEFF 		bl	HAL_Init
 2198              	.LVL131:
 172:Core/Src/main.c **** 
 2199              		.loc 1 172 2 view .LVU561
 2200 0006 FFF7FEFF 		bl	SystemClock_Config
 2201              	.LVL132:
 179:Core/Src/main.c **** 	MX_TIM4_Init();
 2202              		.loc 1 179 2 view .LVU562
 2203 000a FFF7FEFF 		bl	MX_GPIO_Init
 2204              	.LVL133:
 180:Core/Src/main.c **** 	MX_UART4_Init();
 2205              		.loc 1 180 2 view .LVU563
 2206 000e FFF7FEFF 		bl	MX_TIM4_Init
 2207              	.LVL134:
 181:Core/Src/main.c **** 	MX_UART5_Init();
 2208              		.loc 1 181 2 view .LVU564
 2209 0012 FFF7FEFF 		bl	MX_UART4_Init
 2210              	.LVL135:
 182:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 2211              		.loc 1 182 2 view .LVU565
 2212 0016 FFF7FEFF 		bl	MX_UART5_Init
 2213              	.LVL136:
 185:Core/Src/main.c **** 
 2214              		.loc 1 185 2 view .LVU566
 2215 001a 3748     		ldr	r0, .L151
 2216 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2217              	.LVL137:
 187:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 2218              		.loc 1 187 2 view .LVU567
 2219 0020 0022     		movs	r2, #0
 2220 0022 4FF48051 		mov	r1, #4096
 2221 0026 3548     		ldr	r0, .L151+4
 2222 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2223              	.LVL138:
 190:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 2224              		.loc 1 190 2 view .LVU568
 2225 002c 0122     		movs	r2, #1
 2226 002e 3449     		ldr	r1, .L151+8
 2227 0030 3448     		ldr	r0, .L151+12
ARM GAS  /tmp/ccZoqNrj.s 			page 63


 2228 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 2229              	.LVL139:
 193:Core/Src/main.c **** 	digit2 = 16;
 2230              		.loc 1 193 2 view .LVU569
 193:Core/Src/main.c **** 	digit2 = 16;
 2231              		.loc 1 193 9 is_stmt 0 view .LVU570
 2232 0036 344F     		ldr	r7, .L151+16
 2233 0038 1023     		movs	r3, #16
 2234 003a 3B70     		strb	r3, [r7]
 194:Core/Src/main.c **** 	num_slave=0;
 2235              		.loc 1 194 2 is_stmt 1 view .LVU571
 194:Core/Src/main.c **** 	num_slave=0;
 2236              		.loc 1 194 9 is_stmt 0 view .LVU572
 2237 003c DFF8F090 		ldr	r9, .L151+56
 2238 0040 89F80030 		strb	r3, [r9]
 195:Core/Src/main.c **** 	ID=0;
 2239              		.loc 1 195 2 is_stmt 1 view .LVU573
 195:Core/Src/main.c **** 	ID=0;
 2240              		.loc 1 195 11 is_stmt 0 view .LVU574
 2241 0044 314E     		ldr	r6, .L151+20
 2242 0046 0024     		movs	r4, #0
 2243 0048 3470     		strb	r4, [r6]
 196:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 2244              		.loc 1 196 2 is_stmt 1 view .LVU575
 196:Core/Src/main.c **** 	ID_list[0]= 0xFF;
 2245              		.loc 1 196 4 is_stmt 0 view .LVU576
 2246 004a 314B     		ldr	r3, .L151+24
 2247 004c 1C70     		strb	r4, [r3]
 197:Core/Src/main.c **** 	ID_list[SLAVE1]= 0;
 2248              		.loc 1 197 2 is_stmt 1 view .LVU577
 197:Core/Src/main.c **** 	ID_list[SLAVE1]= 0;
 2249              		.loc 1 197 12 is_stmt 0 view .LVU578
 2250 004e 314B     		ldr	r3, .L151+28
 2251 0050 FF22     		movs	r2, #255
 2252 0052 1A70     		strb	r2, [r3]
 198:Core/Src/main.c **** 	ID_list[SLAVE2]= 0;
 2253              		.loc 1 198 2 is_stmt 1 view .LVU579
 198:Core/Src/main.c **** 	ID_list[SLAVE2]= 0;
 2254              		.loc 1 198 17 is_stmt 0 view .LVU580
 2255 0054 5C70     		strb	r4, [r3, #1]
 199:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 2256              		.loc 1 199 2 is_stmt 1 view .LVU581
 199:Core/Src/main.c **** 	//ID_list[2]= 0x12;
 2257              		.loc 1 199 17 is_stmt 0 view .LVU582
 2258 0056 9C70     		strb	r4, [r3, #2]
 201:Core/Src/main.c **** 	/*
 2259              		.loc 1 201 2 is_stmt 1 view .LVU583
 201:Core/Src/main.c **** 	/*
 2260              		.loc 1 201 8 is_stmt 0 view .LVU584
 2261 0058 0125     		movs	r5, #1
 2262 005a 2F4B     		ldr	r3, .L151+32
 2263 005c 1D70     		strb	r5, [r3]
 208:Core/Src/main.c **** 	lcd_init();
 2264              		.loc 1 208 2 is_stmt 1 view .LVU585
 2265 005e 4FF47A70 		mov	r0, #1000
 2266 0062 FFF7FEFF 		bl	HAL_Delay
 2267              	.LVL140:
ARM GAS  /tmp/ccZoqNrj.s 			page 64


 209:Core/Src/main.c **** 	lcd_clear();
 2268              		.loc 1 209 2 view .LVU586
 2269 0066 FFF7FEFF 		bl	lcd_init
 2270              	.LVL141:
 210:Core/Src/main.c **** 	lcd_set_pos(0, 0);
 2271              		.loc 1 210 2 view .LVU587
 2272 006a FFF7FEFF 		bl	lcd_clear
 2273              	.LVL142:
 211:Core/Src/main.c **** 	lcd_write_string("NUM SLAVE: ");
 2274              		.loc 1 211 2 view .LVU588
 2275 006e 2146     		mov	r1, r4
 2276 0070 2046     		mov	r0, r4
 2277 0072 FFF7FEFF 		bl	lcd_set_pos
 2278              	.LVL143:
 212:Core/Src/main.c **** 	lcd_set_pos(0, 0xC);
 2279              		.loc 1 212 2 view .LVU589
 2280 0076 2948     		ldr	r0, .L151+36
 2281 0078 FFF7FEFF 		bl	lcd_write_string
 2282              	.LVL144:
 213:Core/Src/main.c **** 	lcd_data(digit_table[num_slave]);
 2283              		.loc 1 213 2 view .LVU590
 2284 007c 0C21     		movs	r1, #12
 2285 007e 2046     		mov	r0, r4
 2286 0080 FFF7FEFF 		bl	lcd_set_pos
 2287              	.LVL145:
 214:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 2288              		.loc 1 214 2 view .LVU591
 2289 0084 DFF8AC80 		ldr	r8, .L151+60
 2290 0088 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2291 008a 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 2292 008e FFF7FEFF 		bl	lcd_data
 2293              	.LVL146:
 215:Core/Src/main.c **** 	lcd_write_string("S2:");
 2294              		.loc 1 215 2 view .LVU592
 2295 0092 2146     		mov	r1, r4
 2296 0094 2846     		mov	r0, r5
 2297 0096 FFF7FEFF 		bl	lcd_set_pos
 2298              	.LVL147:
 216:Core/Src/main.c **** 	lcd_set_pos(1, 0x3);
 2299              		.loc 1 216 2 view .LVU593
 2300 009a 2148     		ldr	r0, .L151+40
 2301 009c FFF7FEFF 		bl	lcd_write_string
 2302              	.LVL148:
 217:Core/Src/main.c **** 	lcd_data(digit_table[digit2]);
 2303              		.loc 1 217 2 view .LVU594
 2304 00a0 0321     		movs	r1, #3
 2305 00a2 2846     		mov	r0, r5
 2306 00a4 FFF7FEFF 		bl	lcd_set_pos
 2307              	.LVL149:
 218:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 2308              		.loc 1 218 2 view .LVU595
 2309 00a8 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 2310 00ac 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 2311 00b0 FFF7FEFF 		bl	lcd_data
 2312              	.LVL150:
 219:Core/Src/main.c **** 	lcd_write_string("S1:");
 2313              		.loc 1 219 2 view .LVU596
ARM GAS  /tmp/ccZoqNrj.s 			page 65


 2314 00b4 0C21     		movs	r1, #12
 2315 00b6 2846     		mov	r0, r5
 2316 00b8 FFF7FEFF 		bl	lcd_set_pos
 2317              	.LVL151:
 220:Core/Src/main.c **** 	lcd_set_pos(1, 0xF);
 2318              		.loc 1 220 2 view .LVU597
 2319 00bc 1948     		ldr	r0, .L151+44
 2320 00be FFF7FEFF 		bl	lcd_write_string
 2321              	.LVL152:
 221:Core/Src/main.c **** 	lcd_data(digit_table[digit1]);
 2322              		.loc 1 221 2 view .LVU598
 2323 00c2 0F21     		movs	r1, #15
 2324 00c4 2846     		mov	r0, r5
 2325 00c6 FFF7FEFF 		bl	lcd_set_pos
 2326              	.LVL153:
 222:Core/Src/main.c **** 	old_digit1 = digit1;
 2327              		.loc 1 222 2 view .LVU599
 2328 00ca 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2329 00cc 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 2330 00d0 FFF7FEFF 		bl	lcd_data
 2331              	.LVL154:
 223:Core/Src/main.c **** 	old_digit2=old_digit2;
 2332              		.loc 1 223 2 view .LVU600
 223:Core/Src/main.c **** 	old_digit2=old_digit2;
 2333              		.loc 1 223 13 is_stmt 0 view .LVU601
 2334 00d4 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2335 00d6 144B     		ldr	r3, .L151+48
 2336 00d8 1A70     		strb	r2, [r3]
 224:Core/Src/main.c **** 	old_num_slave= num_slave;
 2337              		.loc 1 224 2 is_stmt 1 view .LVU602
 225:Core/Src/main.c **** 	/* USER CODE END 2 */
 2338              		.loc 1 225 2 view .LVU603
 225:Core/Src/main.c **** 	/* USER CODE END 2 */
 2339              		.loc 1 225 15 is_stmt 0 view .LVU604
 2340 00da 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 2341 00dc 134B     		ldr	r3, .L151+52
 2342 00de 1A70     		strb	r2, [r3]
 2343              	.L149:
 230:Core/Src/main.c **** 	{
 2344              		.loc 1 230 2 is_stmt 1 discriminator 1 view .LVU605
 236:Core/Src/main.c **** 		/// segment_display_task();
 2345              		.loc 1 236 3 discriminator 1 view .LVU606
 2346 00e0 FFF7FEFF 		bl	task_timer
 2347              	.LVL155:
 238:Core/Src/main.c **** 		key_read_task();
 2348              		.loc 1 238 3 discriminator 1 view .LVU607
 2349 00e4 FFF7FEFF 		bl	lcd_display_task
 2350              	.LVL156:
 239:Core/Src/main.c **** 		RS485_RX_Task();
 2351              		.loc 1 239 3 discriminator 1 view .LVU608
 2352 00e8 FFF7FEFF 		bl	key_read_task
 2353              	.LVL157:
 240:Core/Src/main.c **** 		main_task();
 2354              		.loc 1 240 3 discriminator 1 view .LVU609
 2355 00ec FFF7FEFF 		bl	RS485_RX_Task
 2356              	.LVL158:
 241:Core/Src/main.c **** 	}
ARM GAS  /tmp/ccZoqNrj.s 			page 66


 2357              		.loc 1 241 3 discriminator 1 view .LVU610
 2358 00f0 FFF7FEFF 		bl	main_task
 2359              	.LVL159:
 230:Core/Src/main.c **** 	{
 2360              		.loc 1 230 8 discriminator 1 view .LVU611
 2361 00f4 F4E7     		b	.L149
 2362              	.L152:
 2363 00f6 00BF     		.align	2
 2364              	.L151:
 2365 00f8 00000000 		.word	htim4
 2366 00fc 00000240 		.word	1073872896
 2367 0100 00000000 		.word	.LANCHOR33
 2368 0104 00000000 		.word	huart4
 2369 0108 00000000 		.word	.LANCHOR5
 2370 010c 00000000 		.word	.LANCHOR6
 2371 0110 00000000 		.word	.LANCHOR31
 2372 0114 00000000 		.word	.LANCHOR27
 2373 0118 00000000 		.word	.LANCHOR19
 2374 011c 24000000 		.word	.LC3
 2375 0120 30000000 		.word	.LC4
 2376 0124 34000000 		.word	.LC5
 2377 0128 00000000 		.word	.LANCHOR17
 2378 012c 00000000 		.word	.LANCHOR34
 2379 0130 00000000 		.word	.LANCHOR1
 2380 0134 00000000 		.word	.LANCHOR3
 2381              		.cfi_endproc
 2382              	.LFE130:
 2384              		.global	temp
 2385              		.global	pTX_msg
 2386              		.global	pRX_msg
 2387              		.global	RX_msg
 2388              		.global	TX_msg
 2389              		.global	ID_list
 2390              		.global	ID
 2391              		.global	event_buffer
 2392              		.global	rx_buffer
 2393              		.global	digit2_buf
 2394              		.global	digit1_buf
 2395              		.global	x
 2396              		.global	rx_temp
 2397              		.global	digit_table
 2398              		.global	lcd_process
 2399              		.global	data
 2400              		.global	cmd
 2401              		.global	digit2_update
 2402              		.global	digit1_update
 2403              		.global	is_EN
 2404              		.global	old_digit2
 2405              		.global	old_digit1
 2406              		.global	old_num_slave
 2407              		.global	digit2
 2408              		.global	digit1
 2409              		.global	key2_ID
 2410              		.global	key1_ID
 2411              		.global	num_slave
 2412              		.global	error
 2413              		.global	event
ARM GAS  /tmp/ccZoqNrj.s 			page 67


 2414              		.global	state
 2415              		.global	key2_data
 2416              		.global	key1_data
 2417              		.global	TX2_delay_val
 2418              		.global	d_timer_TX2
 2419              		.global	TX1_delay_val
 2420              		.global	d_timer_TX1
 2421              		.global	d_timer_20ms
 2422              		.global	d_timer_50ms
 2423              		.global	d_timer_30ms
 2424              		.global	tx1_buffer
 2425              		.global	tx2_buffer
 2426              		.global	flag_digit_1
 2427              		.global	n_querry
 2428              		.global	f_timer_50ms
 2429              		.global	f_timer_30ms
 2430              		.global	f_waiting_rx
 2431              		.global	f_timer_20ms
 2432              		.global	f_timer_10ms
 2433              		.global	f_seg_timer_500ms
 2434              		.global	f_timer_TX
 2435              		.global	tx_timeout
 2436              		.global	f_read_msg
 2437              		.global	f_querry
 2438              		.global	f_busy
 2439              		.global	f_lcd_item
 2440              		.section	.bss.ID,"aw",%nobits
 2441              		.set	.LANCHOR31,. + 0
 2444              	ID:
 2445 0000 00       		.space	1
 2446              		.section	.bss.ID_list,"aw",%nobits
 2447              		.align	2
 2448              		.set	.LANCHOR27,. + 0
 2451              	ID_list:
 2452 0000 00000000 		.space	10
 2452      00000000 
 2452      0000
 2453              		.section	.bss.RX_msg,"aw",%nobits
 2454              		.align	2
 2455              		.set	.LANCHOR26,. + 0
 2458              	RX_msg:
 2459 0000 00000000 		.space	4
 2460              		.section	.bss.TX_msg,"aw",%nobits
 2461              		.align	2
 2462              		.set	.LANCHOR29,. + 0
 2465              	TX_msg:
 2466 0000 00000000 		.space	6
 2466      0000
 2467              		.section	.bss.cmd,"aw",%nobits
 2468              		.set	.LANCHOR2,. + 0
 2471              	cmd:
 2472 0000 00       		.space	1
 2473              		.section	.bss.d_timer_20ms,"aw",%nobits
 2474              		.set	.LANCHOR12,. + 0
 2477              	d_timer_20ms:
 2478 0000 00       		.space	1
 2479              		.section	.bss.d_timer_30ms,"aw",%nobits
ARM GAS  /tmp/ccZoqNrj.s 			page 68


 2480              		.set	.LANCHOR10,. + 0
 2483              	d_timer_30ms:
 2484 0000 00       		.space	1
 2485              		.section	.bss.d_timer_50ms,"aw",%nobits
 2486              		.set	.LANCHOR13,. + 0
 2489              	d_timer_50ms:
 2490 0000 00       		.space	1
 2491              		.section	.bss.d_timer_TX1,"aw",%nobits
 2494              	d_timer_TX1:
 2495 0000 00       		.space	1
 2496              		.section	.bss.d_timer_TX2,"aw",%nobits
 2499              	d_timer_TX2:
 2500 0000 00       		.space	1
 2501              		.section	.bss.data,"aw",%nobits
 2502              		.set	.LANCHOR4,. + 0
 2505              	data:
 2506 0000 00       		.space	1
 2507              		.section	.bss.digit1,"aw",%nobits
 2508              		.set	.LANCHOR5,. + 0
 2511              	digit1:
 2512 0000 00       		.space	1
 2513              		.section	.bss.digit1_buf,"aw",%nobits
 2514              		.align	2
 2515              		.set	.LANCHOR18,. + 0
 2518              	digit1_buf:
 2519 0000 00000000 		.space	66
 2519      00000000 
 2519      00000000 
 2519      00000000 
 2519      00000000 
 2520              		.section	.bss.digit1_update,"aw",%nobits
 2523              	digit1_update:
 2524 0000 00       		.space	1
 2525              		.section	.bss.digit2,"aw",%nobits
 2526              		.set	.LANCHOR1,. + 0
 2529              	digit2:
 2530 0000 00       		.space	1
 2531              		.section	.bss.digit2_buf,"aw",%nobits
 2532              		.align	2
 2533              		.set	.LANCHOR22,. + 0
 2536              	digit2_buf:
 2537 0000 00000000 		.space	66
 2537      00000000 
 2537      00000000 
 2537      00000000 
 2537      00000000 
 2538              		.section	.bss.digit2_update,"aw",%nobits
 2541              	digit2_update:
 2542 0000 00       		.space	1
 2543              		.section	.bss.error,"aw",%nobits
 2546              	error:
 2547 0000 00       		.space	1
 2548              		.section	.bss.event,"aw",%nobits
 2549              		.set	.LANCHOR30,. + 0
 2552              	event:
 2553 0000 00       		.space	1
 2554              		.section	.bss.event_buffer,"aw",%nobits
ARM GAS  /tmp/ccZoqNrj.s 			page 69


 2555              		.align	2
 2556              		.set	.LANCHOR20,. + 0
 2559              	event_buffer:
 2560 0000 00000000 		.space	66
 2560      00000000 
 2560      00000000 
 2560      00000000 
 2560      00000000 
 2561              		.section	.bss.f_busy,"aw",%nobits
 2564              	f_busy:
 2565 0000 00       		.space	1
 2566              		.section	.bss.f_lcd_item,"aw",%nobits
 2569              	f_lcd_item:
 2570 0000 00       		.space	1
 2571              		.section	.bss.f_querry,"aw",%nobits
 2572              		.set	.LANCHOR14,. + 0
 2575              	f_querry:
 2576 0000 00       		.space	1
 2577              		.section	.bss.f_read_msg,"aw",%nobits
 2578              		.set	.LANCHOR24,. + 0
 2581              	f_read_msg:
 2582 0000 00       		.space	1
 2583              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 2586              	f_seg_timer_500ms:
 2587 0000 00       		.space	1
 2588              		.section	.bss.f_timer_10ms,"aw",%nobits
 2589              		.set	.LANCHOR9,. + 0
 2592              	f_timer_10ms:
 2593 0000 00       		.space	1
 2594              		.section	.bss.f_timer_20ms,"aw",%nobits
 2595              		.set	.LANCHOR7,. + 0
 2598              	f_timer_20ms:
 2599 0000 00       		.space	1
 2600              		.section	.bss.f_timer_30ms,"aw",%nobits
 2601              		.set	.LANCHOR11,. + 0
 2604              	f_timer_30ms:
 2605 0000 00       		.space	1
 2606              		.section	.bss.f_timer_50ms,"aw",%nobits
 2609              	f_timer_50ms:
 2610 0000 00       		.space	1
 2611              		.section	.bss.f_timer_TX,"aw",%nobits
 2614              	f_timer_TX:
 2615 0000 00       		.space	1
 2616              		.section	.bss.f_waiting_rx,"aw",%nobits
 2619              	f_waiting_rx:
 2620 0000 00       		.space	1
 2621              		.section	.bss.is_EN,"aw",%nobits
 2622              		.set	.LANCHOR8,. + 0
 2625              	is_EN:
 2626 0000 00       		.space	1
 2627              		.section	.bss.key1_ID,"aw",%nobits
 2630              	key1_ID:
 2631 0000 00       		.space	1
 2632              		.section	.bss.key1_data,"aw",%nobits
 2633              		.set	.LANCHOR15,. + 0
 2636              	key1_data:
 2637 0000 00       		.space	1
ARM GAS  /tmp/ccZoqNrj.s 			page 70


 2638              		.section	.bss.key2_ID,"aw",%nobits
 2641              	key2_ID:
 2642 0000 00       		.space	1
 2643              		.section	.bss.key2_data,"aw",%nobits
 2644              		.set	.LANCHOR16,. + 0
 2647              	key2_data:
 2648 0000 00       		.space	1
 2649              		.section	.bss.n_querry,"aw",%nobits
 2652              	n_querry:
 2653 0000 00       		.space	1
 2654              		.section	.bss.num_slave,"aw",%nobits
 2655              		.set	.LANCHOR6,. + 0
 2658              	num_slave:
 2659 0000 00       		.space	1
 2660              		.section	.bss.old_digit1,"aw",%nobits
 2661              		.set	.LANCHOR17,. + 0
 2664              	old_digit1:
 2665 0000 00       		.space	1
 2666              		.section	.bss.old_digit2,"aw",%nobits
 2667              		.set	.LANCHOR21,. + 0
 2670              	old_digit2:
 2671 0000 00       		.space	1
 2672              		.section	.bss.old_num_slave,"aw",%nobits
 2673              		.set	.LANCHOR34,. + 0
 2676              	old_num_slave:
 2677 0000 00       		.space	1
 2678              		.section	.bss.pRX_msg,"aw",%nobits
 2679              		.align	2
 2680              		.set	.LANCHOR25,. + 0
 2683              	pRX_msg:
 2684 0000 00000000 		.space	4
 2685              		.section	.bss.pTX_msg,"aw",%nobits
 2686              		.align	2
 2689              	pTX_msg:
 2690 0000 00000000 		.space	4
 2691              		.section	.bss.rx_buffer,"aw",%nobits
 2692              		.align	2
 2693              		.set	.LANCHOR23,. + 0
 2696              	rx_buffer:
 2697 0000 00000000 		.space	66
 2697      00000000 
 2697      00000000 
 2697      00000000 
 2697      00000000 
 2698              		.section	.bss.rx_temp,"aw",%nobits
 2699              		.set	.LANCHOR33,. + 0
 2702              	rx_temp:
 2703 0000 00       		.space	1
 2704              		.section	.bss.state,"aw",%nobits
 2705              		.set	.LANCHOR19,. + 0
 2708              	state:
 2709 0000 00       		.space	1
 2710              		.section	.bss.temp,"aw",%nobits
 2711              		.set	.LANCHOR28,. + 0
 2714              	temp:
 2715 0000 00       		.space	1
 2716              		.section	.bss.tx_timeout,"aw",%nobits
ARM GAS  /tmp/ccZoqNrj.s 			page 71


 2717              		.set	.LANCHOR32,. + 0
 2720              	tx_timeout:
 2721 0000 00       		.space	1
 2722              		.section	.data.TX1_delay_val,"aw"
 2725              	TX1_delay_val:
 2726 0000 FA       		.byte	-6
 2727              		.section	.data.TX2_delay_val,"aw"
 2730              	TX2_delay_val:
 2731 0000 FA       		.byte	-6
 2732              		.section	.data.digit_table,"aw"
 2733              		.align	2
 2734              		.set	.LANCHOR3,. + 0
 2737              	digit_table:
 2738 0000 30313233 		.ascii	"0123456789abcdef-"
 2738      34353637 
 2738      38396162 
 2738      63646566 
 2738      2D
 2739              		.section	.data.flag_digit_1,"aw"
 2742              	flag_digit_1:
 2743 0000 01       		.byte	1
 2744              		.section	.data.lcd_process,"aw"
 2745              		.set	.LANCHOR0,. + 0
 2748              	lcd_process:
 2749 0000 04       		.byte	4
 2750              		.section	.data.tx1_buffer,"aw"
 2751              		.align	2
 2754              	tx1_buffer:
 2755 0000 61626364 		.ascii	"abcdef"
 2755      6566
 2756              		.section	.data.tx2_buffer,"aw"
 2757              		.align	2
 2760              	tx2_buffer:
 2761 0000 31323334 		.ascii	"123456789\000"
 2761      35363738 
 2761      3900
 2762              		.section	.data.x,"aw"
 2765              	x:
 2766 0000 01       		.byte	1
 2767              		.text
 2768              	.Letext0:
 2769              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 2770              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2771              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2772              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2773              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2774              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2775              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2776              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2777              		.file 11 "Core/Inc/tim.h"
 2778              		.file 12 "Core/Inc/usart.h"
 2779              		.file 13 "Core/Inc/buffer.h"
 2780              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2781              		.file 15 "Core/Inc/lcd16x2.h"
 2782              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2783              		.file 17 "Core/Inc/gpio.h"
 2784              		.file 18 "<built-in>"
ARM GAS  /tmp/ccZoqNrj.s 			page 72


ARM GAS  /tmp/ccZoqNrj.s 			page 73


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccZoqNrj.s:18     .text.update_lcd:0000000000000000 $t
     /tmp/ccZoqNrj.s:26     .text.update_lcd:0000000000000000 update_lcd
     /tmp/ccZoqNrj.s:126    .text.update_lcd:000000000000006c $d
     /tmp/ccZoqNrj.s:137    .text.m_send_to_lcd:0000000000000000 $t
     /tmp/ccZoqNrj.s:144    .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/ccZoqNrj.s:221    .text.m_send_to_lcd:000000000000004c $d
     /tmp/ccZoqNrj.s:229    .text.lcd_display_task:0000000000000000 $t
     /tmp/ccZoqNrj.s:236    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/ccZoqNrj.s:259    .text.lcd_display_task:0000000000000012 $d
     /tmp/ccZoqNrj.s:263    .text.lcd_display_task:0000000000000016 $t
     /tmp/ccZoqNrj.s:333    .text.lcd_display_task:0000000000000074 $d
     /tmp/ccZoqNrj.s:341    .text.task_timer:0000000000000000 $t
     /tmp/ccZoqNrj.s:348    .text.task_timer:0000000000000000 task_timer
     /tmp/ccZoqNrj.s:443    .text.task_timer:0000000000000064 $d
     /tmp/ccZoqNrj.s:454    .text.key_read_task:0000000000000000 $t
     /tmp/ccZoqNrj.s:461    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccZoqNrj.s:637    .text.key_read_task:00000000000000c0 $d
     /tmp/ccZoqNrj.s:653    .text.RS485_RX_Task:0000000000000000 $t
     /tmp/ccZoqNrj.s:660    .text.RS485_RX_Task:0000000000000000 RS485_RX_Task
     /tmp/ccZoqNrj.s:751    .text.RS485_RX_Task:0000000000000060 $d
     /tmp/ccZoqNrj.s:760    .rodata.display_connected_slave.str1.4:0000000000000000 $d
     /tmp/ccZoqNrj.s:779    .text.display_connected_slave:0000000000000000 $t
     /tmp/ccZoqNrj.s:786    .text.display_connected_slave:0000000000000000 display_connected_slave
     /tmp/ccZoqNrj.s:986    .text.display_connected_slave:0000000000000110 $d
     /tmp/ccZoqNrj.s:1002   .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccZoqNrj.s:1009   .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccZoqNrj.s:1190   .text.RS485_Read_Message:00000000000000b0 $d
     /tmp/ccZoqNrj.s:1201   .rodata.display_disconnected_slave.str1.4:0000000000000000 $d
     /tmp/ccZoqNrj.s:1205   .text.display_disconnected_slave:0000000000000000 $t
     /tmp/ccZoqNrj.s:1212   .text.display_disconnected_slave:0000000000000000 display_disconnected_slave
     /tmp/ccZoqNrj.s:1415   .text.display_disconnected_slave:0000000000000114 $d
     /tmp/ccZoqNrj.s:1431   .text.check_slave:0000000000000000 $t
     /tmp/ccZoqNrj.s:1438   .text.check_slave:0000000000000000 check_slave
     /tmp/ccZoqNrj.s:1523   .text.check_slave:0000000000000058 $d
     /tmp/ccZoqNrj.s:1532   .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccZoqNrj.s:1539   .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccZoqNrj.s:1608   .text.RS485_Send_Message:0000000000000040 $d
     /tmp/ccZoqNrj.s:1615   .text.main_task:0000000000000000 $t
     /tmp/ccZoqNrj.s:1622   .text.main_task:0000000000000000 main_task
     /tmp/ccZoqNrj.s:1870   .text.main_task:000000000000012c $d
     /tmp/ccZoqNrj.s:1884   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccZoqNrj.s:1891   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccZoqNrj.s:1918   .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccZoqNrj.s:1924   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccZoqNrj.s:1931   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccZoqNrj.s:1970   .text.HAL_UART_RxCpltCallback:0000000000000020 $d
     /tmp/ccZoqNrj.s:1977   .text.Error_Handler:0000000000000000 $t
     /tmp/ccZoqNrj.s:1984   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccZoqNrj.s:2016   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccZoqNrj.s:2023   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccZoqNrj.s:2171   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccZoqNrj.s:2177   .text.main:0000000000000000 $t
     /tmp/ccZoqNrj.s:2184   .text.main:0000000000000000 main
     /tmp/ccZoqNrj.s:2365   .text.main:00000000000000f8 $d
     /tmp/ccZoqNrj.s:2714   .bss.temp:0000000000000000 temp
ARM GAS  /tmp/ccZoqNrj.s 			page 74


     /tmp/ccZoqNrj.s:2689   .bss.pTX_msg:0000000000000000 pTX_msg
     /tmp/ccZoqNrj.s:2683   .bss.pRX_msg:0000000000000000 pRX_msg
     /tmp/ccZoqNrj.s:2458   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccZoqNrj.s:2465   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccZoqNrj.s:2451   .bss.ID_list:0000000000000000 ID_list
     /tmp/ccZoqNrj.s:2444   .bss.ID:0000000000000000 ID
     /tmp/ccZoqNrj.s:2559   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccZoqNrj.s:2696   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccZoqNrj.s:2536   .bss.digit2_buf:0000000000000000 digit2_buf
     /tmp/ccZoqNrj.s:2518   .bss.digit1_buf:0000000000000000 digit1_buf
     /tmp/ccZoqNrj.s:2765   .data.x:0000000000000000 x
     /tmp/ccZoqNrj.s:2702   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccZoqNrj.s:2737   .data.digit_table:0000000000000000 digit_table
     /tmp/ccZoqNrj.s:2748   .data.lcd_process:0000000000000000 lcd_process
     /tmp/ccZoqNrj.s:2505   .bss.data:0000000000000000 data
     /tmp/ccZoqNrj.s:2471   .bss.cmd:0000000000000000 cmd
     /tmp/ccZoqNrj.s:2541   .bss.digit2_update:0000000000000000 digit2_update
     /tmp/ccZoqNrj.s:2523   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/ccZoqNrj.s:2625   .bss.is_EN:0000000000000000 is_EN
     /tmp/ccZoqNrj.s:2670   .bss.old_digit2:0000000000000000 old_digit2
     /tmp/ccZoqNrj.s:2664   .bss.old_digit1:0000000000000000 old_digit1
     /tmp/ccZoqNrj.s:2676   .bss.old_num_slave:0000000000000000 old_num_slave
     /tmp/ccZoqNrj.s:2529   .bss.digit2:0000000000000000 digit2
     /tmp/ccZoqNrj.s:2511   .bss.digit1:0000000000000000 digit1
     /tmp/ccZoqNrj.s:2641   .bss.key2_ID:0000000000000000 key2_ID
     /tmp/ccZoqNrj.s:2630   .bss.key1_ID:0000000000000000 key1_ID
     /tmp/ccZoqNrj.s:2658   .bss.num_slave:0000000000000000 num_slave
     /tmp/ccZoqNrj.s:2546   .bss.error:0000000000000000 error
     /tmp/ccZoqNrj.s:2552   .bss.event:0000000000000000 event
     /tmp/ccZoqNrj.s:2708   .bss.state:0000000000000000 state
     /tmp/ccZoqNrj.s:2647   .bss.key2_data:0000000000000000 key2_data
     /tmp/ccZoqNrj.s:2636   .bss.key1_data:0000000000000000 key1_data
     /tmp/ccZoqNrj.s:2730   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/ccZoqNrj.s:2499   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/ccZoqNrj.s:2725   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/ccZoqNrj.s:2494   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/ccZoqNrj.s:2477   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/ccZoqNrj.s:2489   .bss.d_timer_50ms:0000000000000000 d_timer_50ms
     /tmp/ccZoqNrj.s:2483   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccZoqNrj.s:2754   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/ccZoqNrj.s:2760   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/ccZoqNrj.s:2742   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/ccZoqNrj.s:2652   .bss.n_querry:0000000000000000 n_querry
     /tmp/ccZoqNrj.s:2609   .bss.f_timer_50ms:0000000000000000 f_timer_50ms
     /tmp/ccZoqNrj.s:2604   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccZoqNrj.s:2619   .bss.f_waiting_rx:0000000000000000 f_waiting_rx
     /tmp/ccZoqNrj.s:2598   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/ccZoqNrj.s:2592   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccZoqNrj.s:2586   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/ccZoqNrj.s:2614   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/ccZoqNrj.s:2720   .bss.tx_timeout:0000000000000000 tx_timeout
     /tmp/ccZoqNrj.s:2581   .bss.f_read_msg:0000000000000000 f_read_msg
     /tmp/ccZoqNrj.s:2575   .bss.f_querry:0000000000000000 f_querry
     /tmp/ccZoqNrj.s:2564   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccZoqNrj.s:2569   .bss.f_lcd_item:0000000000000000 f_lcd_item
     /tmp/ccZoqNrj.s:2445   .bss.ID:0000000000000000 $d
     /tmp/ccZoqNrj.s:2447   .bss.ID_list:0000000000000000 $d
ARM GAS  /tmp/ccZoqNrj.s 			page 75


     /tmp/ccZoqNrj.s:2454   .bss.RX_msg:0000000000000000 $d
     /tmp/ccZoqNrj.s:2461   .bss.TX_msg:0000000000000000 $d
     /tmp/ccZoqNrj.s:2472   .bss.cmd:0000000000000000 $d
     /tmp/ccZoqNrj.s:2478   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/ccZoqNrj.s:2484   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccZoqNrj.s:2490   .bss.d_timer_50ms:0000000000000000 $d
     /tmp/ccZoqNrj.s:2495   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/ccZoqNrj.s:2500   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/ccZoqNrj.s:2506   .bss.data:0000000000000000 $d
     /tmp/ccZoqNrj.s:2512   .bss.digit1:0000000000000000 $d
     /tmp/ccZoqNrj.s:2514   .bss.digit1_buf:0000000000000000 $d
     /tmp/ccZoqNrj.s:2524   .bss.digit1_update:0000000000000000 $d
     /tmp/ccZoqNrj.s:2530   .bss.digit2:0000000000000000 $d
     /tmp/ccZoqNrj.s:2532   .bss.digit2_buf:0000000000000000 $d
     /tmp/ccZoqNrj.s:2542   .bss.digit2_update:0000000000000000 $d
     /tmp/ccZoqNrj.s:2547   .bss.error:0000000000000000 $d
     /tmp/ccZoqNrj.s:2553   .bss.event:0000000000000000 $d
     /tmp/ccZoqNrj.s:2555   .bss.event_buffer:0000000000000000 $d
     /tmp/ccZoqNrj.s:2565   .bss.f_busy:0000000000000000 $d
     /tmp/ccZoqNrj.s:2570   .bss.f_lcd_item:0000000000000000 $d
     /tmp/ccZoqNrj.s:2576   .bss.f_querry:0000000000000000 $d
     /tmp/ccZoqNrj.s:2582   .bss.f_read_msg:0000000000000000 $d
     /tmp/ccZoqNrj.s:2587   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/ccZoqNrj.s:2593   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccZoqNrj.s:2599   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/ccZoqNrj.s:2605   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccZoqNrj.s:2610   .bss.f_timer_50ms:0000000000000000 $d
     /tmp/ccZoqNrj.s:2615   .bss.f_timer_TX:0000000000000000 $d
     /tmp/ccZoqNrj.s:2620   .bss.f_waiting_rx:0000000000000000 $d
     /tmp/ccZoqNrj.s:2626   .bss.is_EN:0000000000000000 $d
     /tmp/ccZoqNrj.s:2631   .bss.key1_ID:0000000000000000 $d
     /tmp/ccZoqNrj.s:2637   .bss.key1_data:0000000000000000 $d
     /tmp/ccZoqNrj.s:2642   .bss.key2_ID:0000000000000000 $d
     /tmp/ccZoqNrj.s:2648   .bss.key2_data:0000000000000000 $d
     /tmp/ccZoqNrj.s:2653   .bss.n_querry:0000000000000000 $d
     /tmp/ccZoqNrj.s:2659   .bss.num_slave:0000000000000000 $d
     /tmp/ccZoqNrj.s:2665   .bss.old_digit1:0000000000000000 $d
     /tmp/ccZoqNrj.s:2671   .bss.old_digit2:0000000000000000 $d
     /tmp/ccZoqNrj.s:2677   .bss.old_num_slave:0000000000000000 $d
     /tmp/ccZoqNrj.s:2679   .bss.pRX_msg:0000000000000000 $d
     /tmp/ccZoqNrj.s:2686   .bss.pTX_msg:0000000000000000 $d
     /tmp/ccZoqNrj.s:2692   .bss.rx_buffer:0000000000000000 $d
     /tmp/ccZoqNrj.s:2703   .bss.rx_temp:0000000000000000 $d
     /tmp/ccZoqNrj.s:2709   .bss.state:0000000000000000 $d
     /tmp/ccZoqNrj.s:2715   .bss.temp:0000000000000000 $d
     /tmp/ccZoqNrj.s:2721   .bss.tx_timeout:0000000000000000 $d
     /tmp/ccZoqNrj.s:2733   .data.digit_table:0000000000000000 $d
     /tmp/ccZoqNrj.s:2751   .data.tx1_buffer:0000000000000000 $d
     /tmp/ccZoqNrj.s:2757   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
lcd_clear
lcd_set_pos
lcd_write_string
HAL_Delay
ARM GAS  /tmp/ccZoqNrj.s 			page 76


lcd_data
HAL_UART_Transmit
huart4
buffer_pop
htim4
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
