ARM GAS  /tmp/ccxosq9E.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.m_send_to_lcd,"ax",%progbits
  18              		.align	1
  19              		.global	m_send_to_lcd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	m_send_to_lcd:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "lcd16x2.h"
  28:Core/Src/main.c **** #include "message.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccxosq9E.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** uint8_t f_busy;
  49:Core/Src/main.c **** unsigned char f_timer_TX = 0;
  50:Core/Src/main.c **** unsigned char f_seg_timer_500ms;
  51:Core/Src/main.c **** unsigned char f_timer_10ms = 0;
  52:Core/Src/main.c **** unsigned char f_timer_20ms = 0;
  53:Core/Src/main.c **** unsigned char f_waiting_rx = 0;
  54:Core/Src/main.c **** unsigned char f_timer_30ms = 0;
  55:Core/Src/main.c **** unsigned char f_timer_50ms = 0;
  56:Core/Src/main.c **** unsigned char n_querry = 0;
  57:Core/Src/main.c **** unsigned char flag_digit_1 = 1;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** unsigned char tx2_buffer[10] = {"123456789"};
  60:Core/Src/main.c **** unsigned char tx1_buffer[6] = {"abcdef"};
  61:Core/Src/main.c **** unsigned char d_timer_30ms;
  62:Core/Src/main.c **** unsigned char d_timer_50ms;
  63:Core/Src/main.c **** unsigned char d_timer_20ms;
  64:Core/Src/main.c **** unsigned char d_timer_TX1;
  65:Core/Src/main.c **** unsigned char TX1_delay_val = 250;
  66:Core/Src/main.c **** unsigned char d_timer_TX2;
  67:Core/Src/main.c **** unsigned char TX2_delay_val = 250;
  68:Core/Src/main.c **** unsigned char key1_data, key2_data;
  69:Core/Src/main.c **** unsigned char state, event, error;
  70:Core/Src/main.c **** unsigned char num_slave=0;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** unsigned char digit1, digit2;
  73:Core/Src/main.c **** // flag for LCD
  74:Core/Src/main.c **** unsigned char is_EN = 0;
  75:Core/Src/main.c **** unsigned char lcd_digit1_f = 0;
  76:Core/Src/main.c **** unsigned char digit1_update = 0;
  77:Core/Src/main.c **** unsigned char digit2_update = 0;
  78:Core/Src/main.c **** unsigned char cmd, data;
  79:Core/Src/main.c **** unsigned char lcd_process = 0;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** unsigned char digit_table[17] = {"0123456789abcdef-"};
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** uint8_t rx_temp;
  84:Core/Src/main.c **** uint8_t transmission_f;
  85:Core/Src/main.c **** uint8_t start_cmd = 0x2;
  86:Core/Src/main.c **** uint8_t stop_cmd = 0x3;
ARM GAS  /tmp/ccxosq9E.s 			page 3


  87:Core/Src/main.c **** circular_buffer rx1_buffer;
  88:Core/Src/main.c **** circular_buffer rx2_buffer;
  89:Core/Src/main.c **** circular_buffer event_buffer;
  90:Core/Src/main.c **** uint8_t ID;
  91:Core/Src/main.c **** uint8_t TX_msg[4];
  92:Core/Src/main.c **** uint8_t RX_msg[4];
  93:Core/Src/main.c **** /* USER CODE END PV */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  96:Core/Src/main.c **** void SystemClock_Config(void);
  97:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  98:Core/Src/main.c **** void task_timer(void);
  99:Core/Src/main.c **** void counting_task(void);
 100:Core/Src/main.c **** void uart_TX2_task(void);
 101:Core/Src/main.c **** void uart_TX1_task(void);
 102:Core/Src/main.c **** void uart_RX1_task(void);
 103:Core/Src/main.c **** void uart_RX2_task(void);
 104:Core/Src/main.c **** void segment_display_task(void);
 105:Core/Src/main.c **** void lcd_display_task(void);
 106:Core/Src/main.c **** void key_read_task(void);
 107:Core/Src/main.c **** void main_task(void);
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** void seven_segment_driver(char input, char select_digit);
 110:Core/Src/main.c **** void TX1_delay_update(void);
 111:Core/Src/main.c **** void TX2_delay_update(void);
 112:Core/Src/main.c **** void m_send_to_lcd(char data);
 113:Core/Src/main.c **** void Set_Transmitter_Port1(void);
 114:Core/Src/main.c **** void Set_Transmitter_Port2(void);
 115:Core/Src/main.c **** void Set_Receiver_Port1(void);
 116:Core/Src/main.c **** void Set_Receiver_Port2(void);
 117:Core/Src/main.c **** void RS485_Send_Message(uint8_t address, uint8_t func_code, uint8_t data);
 118:Core/Src/main.c **** void RS485_Read_Message(void);
 119:Core/Src/main.c **** /*
 120:Core/Src/main.c **** unsigned char m_send_to_lcd(char data);
 121:Core/Src/main.c **** unsigned char m_lcd_cmd(char cmd);
 122:Core/Src/main.c **** unsigned char m_lcd_data(char cmd);
 123:Core/Src/main.c **** unsigned char m_lcd_set_pos(int row, int col);
 124:Core/Src/main.c **** */
 125:Core/Src/main.c **** /* USER CODE END PFP */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 128:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** /* USER CODE END 0 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /**
 133:Core/Src/main.c ****  * @brief  The application entry point.
 134:Core/Src/main.c ****  * @retval int
 135:Core/Src/main.c ****  */
 136:Core/Src/main.c **** int main(void)
 137:Core/Src/main.c **** {
 138:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** 	/* USER CODE END 1 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** 	/* MCU Configuration--------------------------------------------------------*/
 143:Core/Src/main.c **** 
ARM GAS  /tmp/ccxosq9E.s 			page 4


 144:Core/Src/main.c **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 145:Core/Src/main.c **** 	HAL_Init();
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 	/* USER CODE BEGIN Init */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 	/* USER CODE END Init */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** 	/* Configure the system clock */
 152:Core/Src/main.c **** 	SystemClock_Config();
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** 	/* USER CODE BEGIN SysInit */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** 	/* USER CODE END SysInit */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 	/* Initialize all configured peripherals */
 159:Core/Src/main.c **** 	MX_GPIO_Init();
 160:Core/Src/main.c **** 	MX_TIM4_Init();
 161:Core/Src/main.c **** 	MX_UART4_Init();
 162:Core/Src/main.c **** 	MX_UART5_Init();
 163:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim4);
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); // Enable Receiver 1
 168:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 	HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 171:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** 	digit1 = 16;
 174:Core/Src/main.c **** 	digit2 = 16;
 175:Core/Src/main.c **** 	num_slave=0;
 176:Core/Src/main.c **** 	if (num_slave>0){
 177:Core/Src/main.c **** 		state = STATE_OPERATION;
 178:Core/Src/main.c **** 	}else{
 179:Core/Src/main.c **** 		state=STATE_ASSIGNED_ADDR;
 180:Core/Src/main.c **** 	}
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** 	lcd_init();
 183:Core/Src/main.c **** 	lcd_clear();
 184:Core/Src/main.c **** 	lcd_set_pos(0, 3);
 185:Core/Src/main.c **** 	lcd_write_string("TETRADYNE");
 186:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 187:Core/Src/main.c **** 	lcd_write_string("S2:");
 188:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 189:Core/Src/main.c **** 	lcd_write_string("S1:");
 190:Core/Src/main.c **** 	/* USER CODE END 2 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** 	/* Infinite loop */
 193:Core/Src/main.c **** 	/* USER CODE BEGIN WHILE */
 194:Core/Src/main.c **** 	while (1)
 195:Core/Src/main.c **** 	{
 196:Core/Src/main.c **** 		/* USER CODE END WHILE */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** 		/* USER CODE BEGIN 3 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** 		task_timer();
ARM GAS  /tmp/ccxosq9E.s 			page 5


 201:Core/Src/main.c **** 		/// segment_display_task();
 202:Core/Src/main.c **** 		lcd_display_task();
 203:Core/Src/main.c **** 		key_read_task();
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** 		main_task();
 206:Core/Src/main.c **** 	}
 207:Core/Src/main.c **** 	/* USER CODE END 3 */
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /**
 211:Core/Src/main.c ****  * @brief System Clock Configuration
 212:Core/Src/main.c ****  * @retval None
 213:Core/Src/main.c ****  */
 214:Core/Src/main.c **** void SystemClock_Config(void)
 215:Core/Src/main.c **** {
 216:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 217:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** 	/** Configure the main internal regulator output voltage
 220:Core/Src/main.c **** 	 */
 221:Core/Src/main.c **** 	__HAL_RCC_PWR_CLK_ENABLE();
 222:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** 	/** Initializes the RCC Oscillators according to the specified parameters
 225:Core/Src/main.c **** 	 * in the RCC_OscInitTypeDef structure.
 226:Core/Src/main.c **** 	 */
 227:Core/Src/main.c **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 228:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 229:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 230:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 231:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 232:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 233:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 234:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 235:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 236:Core/Src/main.c **** 	{
 237:Core/Src/main.c **** 		Error_Handler();
 238:Core/Src/main.c **** 	}
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** 	/** Initializes the CPU, AHB and APB buses clocks
 241:Core/Src/main.c **** 	 */
 242:Core/Src/main.c **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RC
 243:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 244:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 245:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 246:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 249:Core/Src/main.c **** 	{
 250:Core/Src/main.c **** 		Error_Handler();
 251:Core/Src/main.c **** 	}
 252:Core/Src/main.c **** }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** void lcd_display_task(void)
 257:Core/Src/main.c **** {
ARM GAS  /tmp/ccxosq9E.s 			page 6


 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** 	if (!lcd_digit1_f)
 260:Core/Src/main.c **** 	{
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** 		cmd = 0xC3;
 263:Core/Src/main.c **** 		data = digit_table[digit2];
 264:Core/Src/main.c **** 	}
 265:Core/Src/main.c **** 	else
 266:Core/Src/main.c **** 	{
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** 		cmd = 0xCF;
 269:Core/Src/main.c **** 		data = digit_table[digit1];
 270:Core/Src/main.c **** 	}
 271:Core/Src/main.c **** 	switch (lcd_process)
 272:Core/Src/main.c **** 	{
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** 	case 0:
 275:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 276:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 277:Core/Src/main.c **** 		break;
 278:Core/Src/main.c **** 	case 1:
 279:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 0);
 280:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 281:Core/Src/main.c **** 		break;
 282:Core/Src/main.c **** 	case 2:
 283:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 284:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 285:Core/Src/main.c **** 		break;
 286:Core/Src/main.c **** 	case 3:
 287:Core/Src/main.c **** 		HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, 1);
 288:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 289:Core/Src/main.c **** 		break;
 290:Core/Src/main.c **** 	}
 291:Core/Src/main.c **** }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** void m_send_to_lcd(char data)
 294:Core/Src/main.c **** {
  30              		.loc 1 294 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 294 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** 	// writing data to pin PE0~PE3
 297:Core/Src/main.c **** 	GPIOE->ODR = (GPIOE->ODR & 0xFFFFFFF0) | data;
  40              		.loc 1 297 2 is_stmt 1 view .LVU2
  41              		.loc 1 297 21 is_stmt 0 view .LVU3
  42 0002 194A     		ldr	r2, .L5
  43 0004 5369     		ldr	r3, [r2, #20]
  44              		.loc 1 297 27 view .LVU4
  45 0006 23F00F03 		bic	r3, r3, #15
  46              		.loc 1 297 41 view .LVU5
ARM GAS  /tmp/ccxosq9E.s 			page 7


  47 000a 1843     		orrs	r0, r0, r3
  48              	.LVL1:
  49              		.loc 1 297 13 view .LVU6
  50 000c 5061     		str	r0, [r2, #20]
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** 	if (!f_timer_20ms)
  51              		.loc 1 299 2 is_stmt 1 view .LVU7
  52              		.loc 1 299 6 is_stmt 0 view .LVU8
  53 000e 174B     		ldr	r3, .L5+4
  54 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  55              		.loc 1 299 5 view .LVU9
  56 0012 6BB1     		cbz	r3, .L1
 300:Core/Src/main.c **** 		return;
 301:Core/Src/main.c **** 	f_timer_20ms = 0;
  57              		.loc 1 301 2 is_stmt 1 view .LVU10
  58              		.loc 1 301 15 is_stmt 0 view .LVU11
  59 0014 154B     		ldr	r3, .L5+4
  60 0016 0022     		movs	r2, #0
  61 0018 1A70     		strb	r2, [r3]
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** 	if (!is_EN)
  62              		.loc 1 303 2 is_stmt 1 view .LVU12
  63              		.loc 1 303 6 is_stmt 0 view .LVU13
  64 001a 154B     		ldr	r3, .L5+8
  65 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66              		.loc 1 303 5 view .LVU14
  67 001e 43B9     		cbnz	r3, .L3
 304:Core/Src/main.c **** 	{
 305:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 1);
  68              		.loc 1 305 3 is_stmt 1 view .LVU15
  69 0020 0122     		movs	r2, #1
  70 0022 2021     		movs	r1, #32
  71 0024 1048     		ldr	r0, .L5
  72 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL2:
 306:Core/Src/main.c **** 		is_EN = 1;
  74              		.loc 1 306 3 view .LVU16
  75              		.loc 1 306 9 is_stmt 0 view .LVU17
  76 002a 114B     		ldr	r3, .L5+8
  77 002c 0122     		movs	r2, #1
  78 002e 1A70     		strb	r2, [r3]
  79              	.L1:
 307:Core/Src/main.c **** 	}
 308:Core/Src/main.c **** 	else
 309:Core/Src/main.c **** 	{
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** 		HAL_GPIO_WritePin(EN_GPIO_Port, EN_Pin, 0);
 312:Core/Src/main.c **** 		is_EN = 0;
 313:Core/Src/main.c **** 		lcd_process++;
 314:Core/Src/main.c **** 		if (lcd_process > 3)
 315:Core/Src/main.c **** 		{
 316:Core/Src/main.c **** 			lcd_process = 0;
 317:Core/Src/main.c **** 			lcd_digit1_f = (~lcd_digit1_f) & 0x1;
 318:Core/Src/main.c **** 		}
 319:Core/Src/main.c **** 	}
 320:Core/Src/main.c **** }
  80              		.loc 1 320 1 view .LVU18
ARM GAS  /tmp/ccxosq9E.s 			page 8


  81 0030 08BD     		pop	{r3, pc}
  82              	.L3:
 311:Core/Src/main.c **** 		is_EN = 0;
  83              		.loc 1 311 3 is_stmt 1 view .LVU19
  84 0032 0022     		movs	r2, #0
  85 0034 2021     		movs	r1, #32
  86 0036 0C48     		ldr	r0, .L5
  87 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL3:
 312:Core/Src/main.c **** 		lcd_process++;
  89              		.loc 1 312 3 view .LVU20
 312:Core/Src/main.c **** 		lcd_process++;
  90              		.loc 1 312 9 is_stmt 0 view .LVU21
  91 003c 0C4B     		ldr	r3, .L5+8
  92 003e 0022     		movs	r2, #0
  93 0040 1A70     		strb	r2, [r3]
 313:Core/Src/main.c **** 		if (lcd_process > 3)
  94              		.loc 1 313 3 is_stmt 1 view .LVU22
 313:Core/Src/main.c **** 		if (lcd_process > 3)
  95              		.loc 1 313 14 is_stmt 0 view .LVU23
  96 0042 0C4A     		ldr	r2, .L5+12
  97 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  98 0046 0133     		adds	r3, r3, #1
  99 0048 DBB2     		uxtb	r3, r3
 100 004a 1370     		strb	r3, [r2]
 314:Core/Src/main.c **** 		{
 101              		.loc 1 314 3 is_stmt 1 view .LVU24
 314:Core/Src/main.c **** 		{
 102              		.loc 1 314 6 is_stmt 0 view .LVU25
 103 004c 032B     		cmp	r3, #3
 104 004e EFD9     		bls	.L1
 316:Core/Src/main.c **** 			lcd_digit1_f = (~lcd_digit1_f) & 0x1;
 105              		.loc 1 316 4 is_stmt 1 view .LVU26
 316:Core/Src/main.c **** 			lcd_digit1_f = (~lcd_digit1_f) & 0x1;
 106              		.loc 1 316 16 is_stmt 0 view .LVU27
 107 0050 1346     		mov	r3, r2
 108 0052 0022     		movs	r2, #0
 109 0054 1A70     		strb	r2, [r3]
 317:Core/Src/main.c **** 		}
 110              		.loc 1 317 4 is_stmt 1 view .LVU28
 317:Core/Src/main.c **** 		}
 111              		.loc 1 317 35 is_stmt 0 view .LVU29
 112 0056 084A     		ldr	r2, .L5+16
 113 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 005a 83F00103 		eor	r3, r3, #1
 115 005e 03F00103 		and	r3, r3, #1
 317:Core/Src/main.c **** 		}
 116              		.loc 1 317 17 view .LVU30
 117 0062 1370     		strb	r3, [r2]
 118 0064 E4E7     		b	.L1
 119              	.L6:
 120 0066 00BF     		.align	2
 121              	.L5:
 122 0068 00100240 		.word	1073876992
 123 006c 00000000 		.word	.LANCHOR0
 124 0070 00000000 		.word	.LANCHOR1
 125 0074 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccxosq9E.s 			page 9


 126 0078 00000000 		.word	.LANCHOR3
 127              		.cfi_endproc
 128              	.LFE133:
 130              		.section	.text.lcd_display_task,"ax",%progbits
 131              		.align	1
 132              		.global	lcd_display_task
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	lcd_display_task:
 139              	.LFB132:
 257:Core/Src/main.c **** 
 140              		.loc 1 257 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 259:Core/Src/main.c **** 	{
 149              		.loc 1 259 2 view .LVU32
 259:Core/Src/main.c **** 	{
 150              		.loc 1 259 6 is_stmt 0 view .LVU33
 151 0002 264B     		ldr	r3, .L17
 152 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 259:Core/Src/main.c **** 	{
 153              		.loc 1 259 5 view .LVU34
 154 0006 83B9     		cbnz	r3, .L8
 262:Core/Src/main.c **** 		data = digit_table[digit2];
 155              		.loc 1 262 3 is_stmt 1 view .LVU35
 262:Core/Src/main.c **** 		data = digit_table[digit2];
 156              		.loc 1 262 7 is_stmt 0 view .LVU36
 157 0008 254B     		ldr	r3, .L17+4
 158 000a C322     		movs	r2, #195
 159 000c 1A70     		strb	r2, [r3]
 263:Core/Src/main.c **** 	}
 160              		.loc 1 263 3 is_stmt 1 view .LVU37
 263:Core/Src/main.c **** 	}
 161              		.loc 1 263 21 is_stmt 0 view .LVU38
 162 000e 254B     		ldr	r3, .L17+8
 163 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 164 0012 254A     		ldr	r2, .L17+12
 165 0014 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 263:Core/Src/main.c **** 	}
 166              		.loc 1 263 8 view .LVU39
 167 0016 254B     		ldr	r3, .L17+16
 168 0018 1A70     		strb	r2, [r3]
 169              	.L9:
 271:Core/Src/main.c **** 	{
 170              		.loc 1 271 2 is_stmt 1 view .LVU40
 171 001a 254B     		ldr	r3, .L17+20
 172 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173 001e 032B     		cmp	r3, #3
 174 0020 17D8     		bhi	.L7
ARM GAS  /tmp/ccxosq9E.s 			page 10


 175 0022 DFE803F0 		tbb	[pc, r3]
 176              	.L12:
 177 0026 0C       		.byte	(.L15-.L12)/2
 178 0027 17       		.byte	(.L14-.L12)/2
 179 0028 23       		.byte	(.L13-.L12)/2
 180 0029 2E       		.byte	(.L11-.L12)/2
 181              		.p2align 1
 182              	.L8:
 268:Core/Src/main.c **** 		data = digit_table[digit1];
 183              		.loc 1 268 3 view .LVU41
 268:Core/Src/main.c **** 		data = digit_table[digit1];
 184              		.loc 1 268 7 is_stmt 0 view .LVU42
 185 002a 1D4B     		ldr	r3, .L17+4
 186 002c CF22     		movs	r2, #207
 187 002e 1A70     		strb	r2, [r3]
 269:Core/Src/main.c **** 	}
 188              		.loc 1 269 3 is_stmt 1 view .LVU43
 269:Core/Src/main.c **** 	}
 189              		.loc 1 269 21 is_stmt 0 view .LVU44
 190 0030 204B     		ldr	r3, .L17+24
 191 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 192 0034 1C4A     		ldr	r2, .L17+12
 193 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 269:Core/Src/main.c **** 	}
 194              		.loc 1 269 8 view .LVU45
 195 0038 1C4B     		ldr	r3, .L17+16
 196 003a 1A70     		strb	r2, [r3]
 197 003c EDE7     		b	.L9
 198              	.L15:
 275:Core/Src/main.c **** 		m_send_to_lcd((cmd >> 4) & 0x0f);
 199              		.loc 1 275 3 is_stmt 1 view .LVU46
 200 003e 0022     		movs	r2, #0
 201 0040 1021     		movs	r1, #16
 202 0042 1D48     		ldr	r0, .L17+28
 203 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL4:
 276:Core/Src/main.c **** 		break;
 205              		.loc 1 276 3 view .LVU47
 206 0048 154B     		ldr	r3, .L17+4
 207 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 208 004c 0009     		lsrs	r0, r0, #4
 209 004e FFF7FEFF 		bl	m_send_to_lcd
 210              	.LVL5:
 277:Core/Src/main.c **** 	case 1:
 211              		.loc 1 277 3 view .LVU48
 212              	.L7:
 291:Core/Src/main.c **** 
 213              		.loc 1 291 1 is_stmt 0 view .LVU49
 214 0052 08BD     		pop	{r3, pc}
 215              	.L14:
 279:Core/Src/main.c **** 		m_send_to_lcd((cmd)&0x0f);
 216              		.loc 1 279 3 is_stmt 1 view .LVU50
 217 0054 0022     		movs	r2, #0
 218 0056 1021     		movs	r1, #16
 219 0058 1748     		ldr	r0, .L17+28
 220 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 221              	.LVL6:
ARM GAS  /tmp/ccxosq9E.s 			page 11


 280:Core/Src/main.c **** 		break;
 222              		.loc 1 280 3 view .LVU51
 280:Core/Src/main.c **** 		break;
 223              		.loc 1 280 22 is_stmt 0 view .LVU52
 224 005e 104B     		ldr	r3, .L17+4
 225 0060 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 280:Core/Src/main.c **** 		break;
 226              		.loc 1 280 3 view .LVU53
 227 0062 00F00F00 		and	r0, r0, #15
 228 0066 FFF7FEFF 		bl	m_send_to_lcd
 229              	.LVL7:
 281:Core/Src/main.c **** 	case 2:
 230              		.loc 1 281 3 is_stmt 1 view .LVU54
 231 006a F2E7     		b	.L7
 232              	.L13:
 283:Core/Src/main.c **** 		m_send_to_lcd((data >> 4) & 0x0f);
 233              		.loc 1 283 3 view .LVU55
 234 006c 0122     		movs	r2, #1
 235 006e 1021     		movs	r1, #16
 236 0070 1148     		ldr	r0, .L17+28
 237 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL8:
 284:Core/Src/main.c **** 		break;
 239              		.loc 1 284 3 view .LVU56
 240 0076 0D4B     		ldr	r3, .L17+16
 241 0078 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242 007a 0009     		lsrs	r0, r0, #4
 243 007c FFF7FEFF 		bl	m_send_to_lcd
 244              	.LVL9:
 285:Core/Src/main.c **** 	case 3:
 245              		.loc 1 285 3 view .LVU57
 246 0080 E7E7     		b	.L7
 247              	.L11:
 287:Core/Src/main.c **** 		m_send_to_lcd(data & 0x0f);
 248              		.loc 1 287 3 view .LVU58
 249 0082 0122     		movs	r2, #1
 250 0084 1021     		movs	r1, #16
 251 0086 0C48     		ldr	r0, .L17+28
 252 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL10:
 288:Core/Src/main.c **** 		break;
 254              		.loc 1 288 3 view .LVU59
 288:Core/Src/main.c **** 		break;
 255              		.loc 1 288 22 is_stmt 0 view .LVU60
 256 008c 074B     		ldr	r3, .L17+16
 257 008e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 288:Core/Src/main.c **** 		break;
 258              		.loc 1 288 3 view .LVU61
 259 0090 00F00F00 		and	r0, r0, #15
 260 0094 FFF7FEFF 		bl	m_send_to_lcd
 261              	.LVL11:
 289:Core/Src/main.c **** 	}
 262              		.loc 1 289 3 is_stmt 1 view .LVU62
 291:Core/Src/main.c **** 
 263              		.loc 1 291 1 is_stmt 0 view .LVU63
 264 0098 DBE7     		b	.L7
 265              	.L18:
ARM GAS  /tmp/ccxosq9E.s 			page 12


 266 009a 00BF     		.align	2
 267              	.L17:
 268 009c 00000000 		.word	.LANCHOR3
 269 00a0 00000000 		.word	.LANCHOR4
 270 00a4 00000000 		.word	.LANCHOR6
 271 00a8 00000000 		.word	.LANCHOR5
 272 00ac 00000000 		.word	.LANCHOR7
 273 00b0 00000000 		.word	.LANCHOR2
 274 00b4 00000000 		.word	.LANCHOR8
 275 00b8 00100240 		.word	1073876992
 276              		.cfi_endproc
 277              	.LFE132:
 279              		.section	.text.task_timer,"ax",%progbits
 280              		.align	1
 281              		.global	task_timer
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	task_timer:
 288              	.LFB134:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** void task_timer(void)
 323:Core/Src/main.c **** {
 289              		.loc 1 323 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI2:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 324:Core/Src/main.c **** 	if (!f_timer_10ms)
 298              		.loc 1 324 2 view .LVU65
 299              		.loc 1 324 6 is_stmt 0 view .LVU66
 300 0002 194B     		ldr	r3, .L27
 301 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302              		.loc 1 324 5 view .LVU67
 303 0006 BBB1     		cbz	r3, .L19
 325:Core/Src/main.c **** 		return;		  // checking if 10 ms timer interrupt is set (10 ms), if set then do timer task
 326:Core/Src/main.c **** 	f_timer_10ms = 0; // clear the flag to wait next interupt
 304              		.loc 1 326 2 is_stmt 1 view .LVU68
 305              		.loc 1 326 15 is_stmt 0 view .LVU69
 306 0008 174B     		ldr	r3, .L27
 307 000a 0022     		movs	r2, #0
 308 000c 1A70     		strb	r2, [r3]
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** 	d_timer_30ms++; // count timer for 30 ms interval
 309              		.loc 1 328 2 is_stmt 1 view .LVU70
 310              		.loc 1 328 14 is_stmt 0 view .LVU71
 311 000e 174A     		ldr	r2, .L27+4
 312 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 313 0012 0133     		adds	r3, r3, #1
 314 0014 DBB2     		uxtb	r3, r3
 315 0016 1370     		strb	r3, [r2]
 329:Core/Src/main.c **** 
ARM GAS  /tmp/ccxosq9E.s 			page 13


 330:Core/Src/main.c **** 	if (d_timer_30ms == 3) // checking if the count reached 30 ms
 316              		.loc 1 330 2 is_stmt 1 view .LVU72
 317              		.loc 1 330 5 is_stmt 0 view .LVU73
 318 0018 032B     		cmp	r3, #3
 319 001a 0ED0     		beq	.L24
 320              	.L21:
 331:Core/Src/main.c **** 	{
 332:Core/Src/main.c **** 		d_timer_30ms = 0; // assign "0" to repeat counting
 333:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 334:Core/Src/main.c **** 	}
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** 	d_timer_20ms++;
 321              		.loc 1 336 2 is_stmt 1 view .LVU74
 322              		.loc 1 336 14 is_stmt 0 view .LVU75
 323 001c 144A     		ldr	r2, .L27+8
 324 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 325 0020 0133     		adds	r3, r3, #1
 326 0022 DBB2     		uxtb	r3, r3
 327 0024 1370     		strb	r3, [r2]
 337:Core/Src/main.c **** 	if (d_timer_20ms == 2)
 328              		.loc 1 337 2 is_stmt 1 view .LVU76
 329              		.loc 1 337 5 is_stmt 0 view .LVU77
 330 0026 022B     		cmp	r3, #2
 331 0028 0ED0     		beq	.L25
 332              	.L22:
 338:Core/Src/main.c **** 	{
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** 		d_timer_20ms = 0;
 341:Core/Src/main.c **** 		f_timer_20ms = 1;
 342:Core/Src/main.c **** 	}
 343:Core/Src/main.c **** 	d_timer_50ms++;
 333              		.loc 1 343 2 is_stmt 1 view .LVU78
 334              		.loc 1 343 14 is_stmt 0 view .LVU79
 335 002a 124A     		ldr	r2, .L27+12
 336 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 337 002e 0133     		adds	r3, r3, #1
 338 0030 DBB2     		uxtb	r3, r3
 339 0032 1370     		strb	r3, [r2]
 344:Core/Src/main.c **** 	if (d_timer_50ms == 10)
 340              		.loc 1 344 2 is_stmt 1 view .LVU80
 341              		.loc 1 344 5 is_stmt 0 view .LVU81
 342 0034 0A2B     		cmp	r3, #10
 343 0036 0ED0     		beq	.L26
 344              	.L19:
 345:Core/Src/main.c **** 	{
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** 		d_timer_50ms = 0;
 348:Core/Src/main.c **** 		// f_timer_50ms=1;
 349:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_QUERRY);
 350:Core/Src/main.c **** 	}
 351:Core/Src/main.c **** 	/*
 352:Core/Src/main.c **** 		d_timer_TX1++;
 353:Core/Src/main.c **** 			if(d_timer_TX1>=TX1_delay_val)     // checking if the count reached LED interval
 354:Core/Src/main.c **** 			{
 355:Core/Src/main.c **** 				d_timer_TX1=0;		// assign "0" to repeat counting
 356:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_TX1_UPDATE);
 357:Core/Src/main.c **** 
ARM GAS  /tmp/ccxosq9E.s 			page 14


 358:Core/Src/main.c **** 			}
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** 		d_timer_TX2++;
 361:Core/Src/main.c **** 			if(d_timer_TX2>=TX2_delay_val)     // checking if the count reached LED interval
 362:Core/Src/main.c **** 			{
 363:Core/Src/main.c **** 				d_timer_TX2=0;		// assign "0" to repeat counting
 364:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_TX2_UPDATE);
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** 			}
 367:Core/Src/main.c **** 	*/
 368:Core/Src/main.c **** }
 345              		.loc 1 368 1 view .LVU82
 346 0038 08BD     		pop	{r3, pc}
 347              	.L24:
 332:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 348              		.loc 1 332 3 is_stmt 1 view .LVU83
 332:Core/Src/main.c **** 		f_timer_30ms = 1; // Set flag to inform 30 ms timer is done counting
 349              		.loc 1 332 16 is_stmt 0 view .LVU84
 350 003a 1346     		mov	r3, r2
 351 003c 0022     		movs	r2, #0
 352 003e 1A70     		strb	r2, [r3]
 333:Core/Src/main.c **** 	}
 353              		.loc 1 333 3 is_stmt 1 view .LVU85
 333:Core/Src/main.c **** 	}
 354              		.loc 1 333 16 is_stmt 0 view .LVU86
 355 0040 0D4B     		ldr	r3, .L27+16
 356 0042 0122     		movs	r2, #1
 357 0044 1A70     		strb	r2, [r3]
 358 0046 E9E7     		b	.L21
 359              	.L25:
 340:Core/Src/main.c **** 		f_timer_20ms = 1;
 360              		.loc 1 340 3 is_stmt 1 view .LVU87
 340:Core/Src/main.c **** 		f_timer_20ms = 1;
 361              		.loc 1 340 16 is_stmt 0 view .LVU88
 362 0048 1346     		mov	r3, r2
 363 004a 0022     		movs	r2, #0
 364 004c 1A70     		strb	r2, [r3]
 341:Core/Src/main.c **** 	}
 365              		.loc 1 341 3 is_stmt 1 view .LVU89
 341:Core/Src/main.c **** 	}
 366              		.loc 1 341 16 is_stmt 0 view .LVU90
 367 004e 0B4B     		ldr	r3, .L27+20
 368 0050 0122     		movs	r2, #1
 369 0052 1A70     		strb	r2, [r3]
 370 0054 E9E7     		b	.L22
 371              	.L26:
 347:Core/Src/main.c **** 		// f_timer_50ms=1;
 372              		.loc 1 347 3 is_stmt 1 view .LVU91
 347:Core/Src/main.c **** 		// f_timer_50ms=1;
 373              		.loc 1 347 16 is_stmt 0 view .LVU92
 374 0056 1346     		mov	r3, r2
 375 0058 0022     		movs	r2, #0
 376 005a 1A70     		strb	r2, [r3]
 349:Core/Src/main.c **** 	}
 377              		.loc 1 349 3 is_stmt 1 view .LVU93
 378 005c 0621     		movs	r1, #6
 379 005e 0848     		ldr	r0, .L27+24
ARM GAS  /tmp/ccxosq9E.s 			page 15


 380 0060 FFF7FEFF 		bl	buffer_push
 381              	.LVL12:
 382 0064 E8E7     		b	.L19
 383              	.L28:
 384 0066 00BF     		.align	2
 385              	.L27:
 386 0068 00000000 		.word	.LANCHOR9
 387 006c 00000000 		.word	.LANCHOR10
 388 0070 00000000 		.word	.LANCHOR12
 389 0074 00000000 		.word	.LANCHOR13
 390 0078 00000000 		.word	.LANCHOR11
 391 007c 00000000 		.word	.LANCHOR0
 392 0080 00000000 		.word	.LANCHOR14
 393              		.cfi_endproc
 394              	.LFE134:
 396              		.section	.text.key_read_task,"ax",%progbits
 397              		.align	1
 398              		.global	key_read_task
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	key_read_task:
 405              	.LFB135:
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** void key_read_task(void)
 371:Core/Src/main.c **** {
 406              		.loc 1 371 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI3:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 372:Core/Src/main.c **** 	if (!f_timer_30ms)
 415              		.loc 1 372 2 view .LVU95
 416              		.loc 1 372 6 is_stmt 0 view .LVU96
 417 0002 1F4B     		ldr	r3, .L39
 418 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419              		.loc 1 372 5 view .LVU97
 420 0006 33B3     		cbz	r3, .L29
 373:Core/Src/main.c **** 		return;		  // Checking if 30 ms counting is done
 374:Core/Src/main.c **** 	f_timer_30ms = 0; // clear the flag to wait next counting
 421              		.loc 1 374 2 is_stmt 1 view .LVU98
 422              		.loc 1 374 15 is_stmt 0 view .LVU99
 423 0008 1D4B     		ldr	r3, .L39
 424 000a 0022     		movs	r2, #0
 425 000c 1A70     		strb	r2, [r3]
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** 	uint8_t key_pindata = (uint8_t)(GPIOG->IDR & (KEY1_Pin | KEY2_Pin));
 426              		.loc 1 376 2 is_stmt 1 view .LVU100
 427              		.loc 1 376 39 is_stmt 0 view .LVU101
 428 000e 1D4B     		ldr	r3, .L39+4
 429 0010 1869     		ldr	r0, [r3, #16]
 430              	.LVL13:
ARM GAS  /tmp/ccxosq9E.s 			page 16


 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** 	key1_data = key1_data << 1; // Preparing to read KEY1 Input
 431              		.loc 1 378 2 is_stmt 1 view .LVU102
 432              		.loc 1 378 24 is_stmt 0 view .LVU103
 433 0012 1D4B     		ldr	r3, .L39+8
 434 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 435 0016 5200     		lsls	r2, r2, #1
 436 0018 D2B2     		uxtb	r2, r2
 437              		.loc 1 378 12 view .LVU104
 438 001a 1A70     		strb	r2, [r3]
 379:Core/Src/main.c **** 	key1_data &= 0b00001110;
 439              		.loc 1 379 2 is_stmt 1 view .LVU105
 440              		.loc 1 379 12 is_stmt 0 view .LVU106
 441 001c 02F00E02 		and	r2, r2, #14
 442 0020 1A70     		strb	r2, [r3]
 380:Core/Src/main.c **** 	key1_data |= ((key_pindata >> 2) & 0x1); // Read KEY1 Input
 443              		.loc 1 380 2 is_stmt 1 view .LVU107
 444              		.loc 1 380 35 is_stmt 0 view .LVU108
 445 0022 C0F38001 		ubfx	r1, r0, #2, #1
 446              		.loc 1 380 12 view .LVU109
 447 0026 0A43     		orrs	r2, r2, r1
 448 0028 1A70     		strb	r2, [r3]
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** 	key2_data = key2_data << 1; // Preparing to read KEY2 Input
 449              		.loc 1 382 2 is_stmt 1 view .LVU110
 450              		.loc 1 382 24 is_stmt 0 view .LVU111
 451 002a 1849     		ldr	r1, .L39+12
 452 002c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 453 002e 5B00     		lsls	r3, r3, #1
 454 0030 DBB2     		uxtb	r3, r3
 455              		.loc 1 382 12 view .LVU112
 456 0032 0B70     		strb	r3, [r1]
 383:Core/Src/main.c **** 	key2_data &= 0b00001110;
 457              		.loc 1 383 2 is_stmt 1 view .LVU113
 458              		.loc 1 383 12 is_stmt 0 view .LVU114
 459 0034 03F00E03 		and	r3, r3, #14
 460 0038 0B70     		strb	r3, [r1]
 384:Core/Src/main.c **** 	key2_data |= (key_pindata >> 3); // Read KEY2 Input
 461              		.loc 1 384 2 is_stmt 1 view .LVU115
 462              		.loc 1 384 12 is_stmt 0 view .LVU116
 463 003a C0F3C000 		ubfx	r0, r0, #3, #1
 464              	.LVL14:
 465              		.loc 1 384 12 view .LVU117
 466 003e 0343     		orrs	r3, r3, r0
 467 0040 0B70     		strb	r3, [r1]
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** 	if (key1_data == KEY_PRESSED) // Checking if KEY1 is pressed
 468              		.loc 1 386 2 is_stmt 1 view .LVU118
 469              		.loc 1 386 5 is_stmt 0 view .LVU119
 470 0042 0C2A     		cmp	r2, #12
 471 0044 08D0     		beq	.L35
 387:Core/Src/main.c **** 	{
 388:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_PRESSED); // Store the event in buffer
 389:Core/Src/main.c **** 	}
 390:Core/Src/main.c **** 	else if (key1_data == KEY_RELEASED) //  Checking if KEY1 is released
 472              		.loc 1 390 7 is_stmt 1 view .LVU120
 473              		.loc 1 390 10 is_stmt 0 view .LVU121
ARM GAS  /tmp/ccxosq9E.s 			page 17


 474 0046 032A     		cmp	r2, #3
 475 0048 0BD0     		beq	.L36
 476              	.L32:
 391:Core/Src/main.c **** 	{
 392:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY1_RELEASED); // Store the event in buffer
 393:Core/Src/main.c **** 	}
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** 	if (key2_data == KEY_PRESSED) // Checking if KEY2 is pressed
 477              		.loc 1 395 2 is_stmt 1 view .LVU122
 478              		.loc 1 395 16 is_stmt 0 view .LVU123
 479 004a 104B     		ldr	r3, .L39+12
 480 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 481              		.loc 1 395 5 view .LVU124
 482 004e 0C2B     		cmp	r3, #12
 483 0050 0CD0     		beq	.L37
 396:Core/Src/main.c **** 	{
 397:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_PRESSED); // Store the event in buffer
 398:Core/Src/main.c **** 	}
 399:Core/Src/main.c **** 	else if (key2_data == KEY_RELEASED) //  Checking if KEY2 is released
 484              		.loc 1 399 7 is_stmt 1 view .LVU125
 485              		.loc 1 399 10 is_stmt 0 view .LVU126
 486 0052 032B     		cmp	r3, #3
 487 0054 0FD0     		beq	.L38
 488              	.L29:
 400:Core/Src/main.c **** 	{
 401:Core/Src/main.c **** 		buffer_push(&event_buffer, EVENT_KEY2_RELEASED); // Store the event in buffer
 402:Core/Src/main.c **** 	}
 403:Core/Src/main.c **** }
 489              		.loc 1 403 1 view .LVU127
 490 0056 08BD     		pop	{r3, pc}
 491              	.L35:
 388:Core/Src/main.c **** 	}
 492              		.loc 1 388 3 is_stmt 1 view .LVU128
 493 0058 0121     		movs	r1, #1
 494 005a 0D48     		ldr	r0, .L39+16
 495 005c FFF7FEFF 		bl	buffer_push
 496              	.LVL15:
 497 0060 F3E7     		b	.L32
 498              	.L36:
 392:Core/Src/main.c **** 	}
 499              		.loc 1 392 3 view .LVU129
 500 0062 0321     		movs	r1, #3
 501 0064 0A48     		ldr	r0, .L39+16
 502 0066 FFF7FEFF 		bl	buffer_push
 503              	.LVL16:
 504 006a EEE7     		b	.L32
 505              	.L37:
 397:Core/Src/main.c **** 	}
 506              		.loc 1 397 3 view .LVU130
 507 006c 0221     		movs	r1, #2
 508 006e 0848     		ldr	r0, .L39+16
 509 0070 FFF7FEFF 		bl	buffer_push
 510              	.LVL17:
 511 0074 EFE7     		b	.L29
 512              	.L38:
 401:Core/Src/main.c **** 	}
 513              		.loc 1 401 3 view .LVU131
ARM GAS  /tmp/ccxosq9E.s 			page 18


 514 0076 0421     		movs	r1, #4
 515 0078 0548     		ldr	r0, .L39+16
 516 007a FFF7FEFF 		bl	buffer_push
 517              	.LVL18:
 518 007e EAE7     		b	.L29
 519              	.L40:
 520              		.align	2
 521              	.L39:
 522 0080 00000000 		.word	.LANCHOR11
 523 0084 00180240 		.word	1073879040
 524 0088 00000000 		.word	.LANCHOR15
 525 008c 00000000 		.word	.LANCHOR16
 526 0090 00000000 		.word	.LANCHOR14
 527              		.cfi_endproc
 528              	.LFE135:
 530              		.section	.text.RS485_Send_Message,"ax",%progbits
 531              		.align	1
 532              		.global	RS485_Send_Message
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	RS485_Send_Message:
 539              	.LVL19:
 540              	.LFB138:
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** void main_task(void)
 406:Core/Src/main.c **** {
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** 	if (event_buffer.head != event_buffer.tail)
 409:Core/Src/main.c **** 	{
 410:Core/Src/main.c **** 		
 411:Core/Src/main.c **** 		event = buffer_pop(&event_buffer); // if there is event then get the event from buffer
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** 	}
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** 	switch(state)
 417:Core/Src/main.c **** 	{
 418:Core/Src/main.c **** 		case STATE_ASSIGNED_ADDR:
 419:Core/Src/main.c **** 			switch (event)
 420:Core/Src/main.c **** 				{
 421:Core/Src/main.c **** 				case EVENT_QUERRY:
 422:Core/Src/main.c **** 					
 423:Core/Src/main.c **** 					
 424:Core/Src/main.c **** 					RS485_Send_Message(ADDR, FUNC_READ, 0x00);
 425:Core/Src/main.c **** 					
 426:Core/Src/main.c **** 					event = EVENT_RESET;
 427:Core/Src/main.c **** 					break;
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** 				case EVENT_RX_COMPLETE:
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** 					RS485_Read_Message();
 432:Core/Src/main.c **** 					
 433:Core/Src/main.c **** 					event = EVENT_RESET;
 434:Core/Src/main.c **** 					break;
 435:Core/Src/main.c **** 
ARM GAS  /tmp/ccxosq9E.s 			page 19


 436:Core/Src/main.c **** 				case EVENT_NEW_DEVICE:
 437:Core/Src/main.c **** 					state = STATE_OPERATION;
 438:Core/Src/main.c **** 					num_slave++;
 439:Core/Src/main.c **** 					RS485_Send_Message(0x10, FUNC_ASSIGN_ADDR, ADDR|num_slave);
 440:Core/Src/main.c **** 					event = EVENT_RESET;
 441:Core/Src/main.c **** 					break;
 442:Core/Src/main.c **** 				}
 443:Core/Src/main.c **** 		break;
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** 		case STATE_OPERATION:
 446:Core/Src/main.c **** 			switch (event)
 447:Core/Src/main.c **** 			{
 448:Core/Src/main.c **** 			case EVENT_KEY1_PRESSED:
 449:Core/Src/main.c **** 				digit1++;
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** 				if (digit1 > 9)
 452:Core/Src/main.c **** 				{
 453:Core/Src/main.c **** 					digit1 = 0;
 454:Core/Src/main.c **** 				}
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** 				RS485_Send_Message((ADDR|1), FUNC_WRITE, (digit1 + '0'));
 457:Core/Src/main.c **** 				event = EVENT_RESET;
 458:Core/Src/main.c **** 				break;
 459:Core/Src/main.c **** 
 460:Core/Src/main.c **** 			case EVENT_KEY2_PRESSED:
 461:Core/Src/main.c **** 				digit2++;
 462:Core/Src/main.c **** 				if (digit2 > 9)
 463:Core/Src/main.c **** 				{
 464:Core/Src/main.c **** 					digit2 = 0;
 465:Core/Src/main.c **** 				}
 466:Core/Src/main.c **** 				RS485_Send_Message((ADDR|2), FUNC_WRITE, (digit2 + '0'));
 467:Core/Src/main.c **** 
 468:Core/Src/main.c **** 				event = EVENT_RESET;
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** 				break;
 471:Core/Src/main.c **** 			case EVENT_RX_COMPLETE:
 472:Core/Src/main.c **** 
 473:Core/Src/main.c **** 				RS485_Read_Message();
 474:Core/Src/main.c **** 				
 475:Core/Src/main.c **** 				event = EVENT_RESET;
 476:Core/Src/main.c **** 				break;
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** 			case EVENT_QUERRY:
 479:Core/Src/main.c **** 				
 480:Core/Src/main.c **** 				
 481:Core/Src/main.c **** 
 482:Core/Src/main.c **** 				for (int i =0; i <num_slave+1;i++){
 483:Core/Src/main.c **** 					if (n_querry==i) {
 484:Core/Src/main.c **** 					RS485_Send_Message((ADDR|i), FUNC_READ, 0x00);
 485:Core/Src/main.c **** 					
 486:Core/Src/main.c **** 					break;	
 487:Core/Src/main.c **** 					}
 488:Core/Src/main.c **** 				}
 489:Core/Src/main.c **** 				n_querry++;
 490:Core/Src/main.c **** 				if (n_querry==num_slave+1){
 491:Core/Src/main.c **** 					n_querry=0;
 492:Core/Src/main.c **** 				}	
ARM GAS  /tmp/ccxosq9E.s 			page 20


 493:Core/Src/main.c **** 						
 494:Core/Src/main.c **** 				event = EVENT_RESET;
 495:Core/Src/main.c **** 				break;
 496:Core/Src/main.c **** 			}
 497:Core/Src/main.c **** 		break;
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** 	}
 500:Core/Src/main.c **** 
 501:Core/Src/main.c **** 	
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** /*
 507:Core/Src/main.c **** void TX1_delay_update(void){
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** 	if (TX1_delay_val==50) return;
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** 	TX1_delay_val-=50;
 512:Core/Src/main.c **** }
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** void TX2_delay_update(void){
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** 	if (TX2_delay_val==50) return;
 517:Core/Src/main.c **** 
 518:Core/Src/main.c **** 	TX2_delay_val-=50;
 519:Core/Src/main.c **** }
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** */
 522:Core/Src/main.c **** 
 523:Core/Src/main.c **** void RS485_Read_Message(void)
 524:Core/Src/main.c **** {
 525:Core/Src/main.c **** 	uint8_t * digit;
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** 	buffer_to_message(&rx2_buffer, RX_msg);
 528:Core/Src/main.c **** 
 529:Core/Src/main.c **** 	if (check_checksum(RX_msg) == CHECKSUM_ERROR)
 530:Core/Src/main.c **** 	{
 531:Core/Src/main.c **** 		//RS485_Send_Message(TX_msg[0], TX_msg[1], TX_msg[2]);
 532:Core/Src/main.c **** 		//error = ERROR_CHECKSUM;
 533:Core/Src/main.c **** 		return;
 534:Core/Src/main.c **** 	}
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** 	if (RX_msg[0] == (ADDR|1))
 537:Core/Src/main.c **** 	{
 538:Core/Src/main.c **** 		 digit = &digit1;
 539:Core/Src/main.c **** 	}
 540:Core/Src/main.c **** 	else if (RX_msg[0] == (ADDR|2))
 541:Core/Src/main.c **** 	{
 542:Core/Src/main.c **** 		 digit = &digit2;
 543:Core/Src/main.c **** 	}else if(RX_msg[0] == ADDR){
 544:Core/Src/main.c **** 		 buffer_push(&event_buffer, EVENT_NEW_DEVICE);
 545:Core/Src/main.c **** 		 state = STATE_ASSIGNED_ADDR;	
 546:Core/Src/main.c **** 		return;
 547:Core/Src/main.c **** 	}else{
 548:Core/Src/main.c **** 		return;
 549:Core/Src/main.c **** 	}
ARM GAS  /tmp/ccxosq9E.s 			page 21


 550:Core/Src/main.c **** 
 551:Core/Src/main.c **** 	if (RX_msg[1] == FUNC_READ)
 552:Core/Src/main.c **** 	{
 553:Core/Src/main.c **** 		*digit = (RX_msg[2] - '0');
 554:Core/Src/main.c **** 	}
 555:Core/Src/main.c **** 	else if (RX_msg[1] == FUNC_RESEND)
 556:Core/Src/main.c **** 	{
 557:Core/Src/main.c **** 		RS485_Send_Message(TX_msg[0], TX_msg[1], TX_msg[2]);
 558:Core/Src/main.c **** 	}
 559:Core/Src/main.c **** }
 560:Core/Src/main.c **** 
 561:Core/Src/main.c **** void RS485_Send_Message(uint8_t address, uint8_t func_code, uint8_t data)
 562:Core/Src/main.c **** {
 541              		.loc 1 562 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		.loc 1 562 1 is_stmt 0 view .LVU133
 546 0000 70B5     		push	{r4, r5, r6, lr}
 547              	.LCFI4:
 548              		.cfi_def_cfa_offset 16
 549              		.cfi_offset 4, -16
 550              		.cfi_offset 5, -12
 551              		.cfi_offset 6, -8
 552              		.cfi_offset 14, -4
 563:Core/Src/main.c **** 	TX_msg[0] = address;
 553              		.loc 1 563 2 is_stmt 1 view .LVU134
 554              		.loc 1 563 12 is_stmt 0 view .LVU135
 555 0002 144C     		ldr	r4, .L43
 556 0004 2070     		strb	r0, [r4]
 564:Core/Src/main.c **** 	TX_msg[1] = func_code;
 557              		.loc 1 564 2 is_stmt 1 view .LVU136
 558              		.loc 1 564 12 is_stmt 0 view .LVU137
 559 0006 6170     		strb	r1, [r4, #1]
 565:Core/Src/main.c **** 	TX_msg[2] = data;
 560              		.loc 1 565 2 is_stmt 1 view .LVU138
 561              		.loc 1 565 12 is_stmt 0 view .LVU139
 562 0008 A270     		strb	r2, [r4, #2]
 566:Core/Src/main.c **** 	cal_checksum(TX_msg);
 563              		.loc 1 566 2 is_stmt 1 view .LVU140
 564 000a 2046     		mov	r0, r4
 565              	.LVL20:
 566              		.loc 1 566 2 is_stmt 0 view .LVU141
 567 000c FFF7FEFF 		bl	cal_checksum
 568              	.LVL21:
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
 569:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 1); /// Enable Transmitter Mode
 569              		.loc 1 569 2 is_stmt 1 view .LVU142
 570 0010 114E     		ldr	r6, .L43+4
 571 0012 0122     		movs	r2, #1
 572 0014 4FF48051 		mov	r1, #4096
 573 0018 3046     		mov	r0, r6
 574 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 575              	.LVL22:
 570:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, &start_cmd, 1, 10);
 576              		.loc 1 570 2 view .LVU143
ARM GAS  /tmp/ccxosq9E.s 			page 22


 577 001e 0F4D     		ldr	r5, .L43+8
 578 0020 0A23     		movs	r3, #10
 579 0022 0122     		movs	r2, #1
 580 0024 0E49     		ldr	r1, .L43+12
 581 0026 2846     		mov	r0, r5
 582 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 583              	.LVL23:
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, TX_msg, sizeof(TX_msg), 10);
 584              		.loc 1 572 2 view .LVU144
 585 002c 0A23     		movs	r3, #10
 586 002e 0422     		movs	r2, #4
 587 0030 2146     		mov	r1, r4
 588 0032 2846     		mov	r0, r5
 589 0034 FFF7FEFF 		bl	HAL_UART_Transmit
 590              	.LVL24:
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** 	HAL_UART_Transmit(&huart4, &stop_cmd, 1, 10);
 591              		.loc 1 574 2 view .LVU145
 592 0038 0A23     		movs	r3, #10
 593 003a 0122     		movs	r2, #1
 594 003c 0949     		ldr	r1, .L43+16
 595 003e 2846     		mov	r0, r5
 596 0040 FFF7FEFF 		bl	HAL_UART_Transmit
 597              	.LVL25:
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX1_EN_GPIO_Port, TX1_EN_Pin, 0); /// Enable Receiver Mode
 598              		.loc 1 576 2 view .LVU146
 599 0044 0022     		movs	r2, #0
 600 0046 4FF48051 		mov	r1, #4096
 601 004a 3046     		mov	r0, r6
 602 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 603              	.LVL26:
 577:Core/Src/main.c **** }
 604              		.loc 1 577 1 is_stmt 0 view .LVU147
 605 0050 70BD     		pop	{r4, r5, r6, pc}
 606              	.L44:
 607 0052 00BF     		.align	2
 608              	.L43:
 609 0054 00000000 		.word	.LANCHOR17
 610 0058 00000240 		.word	1073872896
 611 005c 00000000 		.word	huart4
 612 0060 00000000 		.word	.LANCHOR18
 613 0064 00000000 		.word	.LANCHOR19
 614              		.cfi_endproc
 615              	.LFE138:
 617              		.section	.text.RS485_Read_Message,"ax",%progbits
 618              		.align	1
 619              		.global	RS485_Read_Message
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu fpv4-sp-d16
 625              	RS485_Read_Message:
 626              	.LFB137:
 524:Core/Src/main.c **** 	uint8_t * digit;
 627              		.loc 1 524 1 is_stmt 1 view -0
ARM GAS  /tmp/ccxosq9E.s 			page 23


 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631 0000 10B5     		push	{r4, lr}
 632              	.LCFI5:
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 4, -8
 635              		.cfi_offset 14, -4
 525:Core/Src/main.c **** 
 636              		.loc 1 525 2 view .LVU149
 527:Core/Src/main.c **** 
 637              		.loc 1 527 2 view .LVU150
 638 0002 174C     		ldr	r4, .L54
 639 0004 2146     		mov	r1, r4
 640 0006 1748     		ldr	r0, .L54+4
 641 0008 FFF7FEFF 		bl	buffer_to_message
 642              	.LVL27:
 529:Core/Src/main.c **** 	{
 643              		.loc 1 529 2 view .LVU151
 529:Core/Src/main.c **** 	{
 644              		.loc 1 529 6 is_stmt 0 view .LVU152
 645 000c 2046     		mov	r0, r4
 646 000e FFF7FEFF 		bl	check_checksum
 647              	.LVL28:
 529:Core/Src/main.c **** 	{
 648              		.loc 1 529 5 view .LVU153
 649 0012 30B1     		cbz	r0, .L45
 536:Core/Src/main.c **** 	{
 650              		.loc 1 536 2 is_stmt 1 view .LVU154
 536:Core/Src/main.c **** 	{
 651              		.loc 1 536 12 is_stmt 0 view .LVU155
 652 0014 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 536:Core/Src/main.c **** 	{
 653              		.loc 1 536 5 view .LVU156
 654 0016 112B     		cmp	r3, #17
 655 0018 0CD0     		beq	.L49
 540:Core/Src/main.c **** 	{
 656              		.loc 1 540 7 is_stmt 1 view .LVU157
 540:Core/Src/main.c **** 	{
 657              		.loc 1 540 10 is_stmt 0 view .LVU158
 658 001a 122B     		cmp	r3, #18
 659 001c 18D0     		beq	.L50
 543:Core/Src/main.c **** 		 buffer_push(&event_buffer, EVENT_NEW_DEVICE);
 660              		.loc 1 543 8 is_stmt 1 view .LVU159
 543:Core/Src/main.c **** 		 buffer_push(&event_buffer, EVENT_NEW_DEVICE);
 661              		.loc 1 543 10 is_stmt 0 view .LVU160
 662 001e 102B     		cmp	r3, #16
 663 0020 00D0     		beq	.L52
 664              	.L45:
 559:Core/Src/main.c **** 
 665              		.loc 1 559 1 view .LVU161
 666 0022 10BD     		pop	{r4, pc}
 667              	.L52:
 544:Core/Src/main.c **** 		 state = STATE_ASSIGNED_ADDR;	
 668              		.loc 1 544 4 is_stmt 1 view .LVU162
 669 0024 0721     		movs	r1, #7
 670 0026 1048     		ldr	r0, .L54+8
ARM GAS  /tmp/ccxosq9E.s 			page 24


 671 0028 FFF7FEFF 		bl	buffer_push
 672              	.LVL29:
 545:Core/Src/main.c **** 		return;
 673              		.loc 1 545 4 view .LVU163
 545:Core/Src/main.c **** 		return;
 674              		.loc 1 545 10 is_stmt 0 view .LVU164
 675 002c 0F4B     		ldr	r3, .L54+12
 676 002e 0022     		movs	r2, #0
 677 0030 1A70     		strb	r2, [r3]
 546:Core/Src/main.c **** 	}else{
 678              		.loc 1 546 3 is_stmt 1 view .LVU165
 679 0032 F6E7     		b	.L45
 680              	.L49:
 538:Core/Src/main.c **** 	}
 681              		.loc 1 538 10 is_stmt 0 view .LVU166
 682 0034 0E4A     		ldr	r2, .L54+16
 683              	.L47:
 684              	.LVL30:
 551:Core/Src/main.c **** 	{
 685              		.loc 1 551 2 is_stmt 1 view .LVU167
 551:Core/Src/main.c **** 	{
 686              		.loc 1 551 12 is_stmt 0 view .LVU168
 687 0036 0A4B     		ldr	r3, .L54
 688 0038 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 551:Core/Src/main.c **** 	{
 689              		.loc 1 551 5 view .LVU169
 690 003a 022B     		cmp	r3, #2
 691 003c 0AD0     		beq	.L53
 555:Core/Src/main.c **** 	{
 692              		.loc 1 555 7 is_stmt 1 view .LVU170
 555:Core/Src/main.c **** 	{
 693              		.loc 1 555 10 is_stmt 0 view .LVU171
 694 003e 032B     		cmp	r3, #3
 695 0040 EFD1     		bne	.L45
 557:Core/Src/main.c **** 	}
 696              		.loc 1 557 3 is_stmt 1 view .LVU172
 697 0042 0C4B     		ldr	r3, .L54+20
 698 0044 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 699              	.LVL31:
 557:Core/Src/main.c **** 	}
 700              		.loc 1 557 3 is_stmt 0 view .LVU173
 701 0046 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 702 0048 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 703 004a FFF7FEFF 		bl	RS485_Send_Message
 704              	.LVL32:
 705 004e E8E7     		b	.L45
 706              	.L50:
 542:Core/Src/main.c **** 	}else if(RX_msg[0] == ADDR){
 707              		.loc 1 542 10 view .LVU174
 708 0050 094A     		ldr	r2, .L54+24
 709 0052 F0E7     		b	.L47
 710              	.LVL33:
 711              	.L53:
 553:Core/Src/main.c **** 	}
 712              		.loc 1 553 3 is_stmt 1 view .LVU175
 553:Core/Src/main.c **** 	}
 713              		.loc 1 553 19 is_stmt 0 view .LVU176
ARM GAS  /tmp/ccxosq9E.s 			page 25


 714 0054 024B     		ldr	r3, .L54
 715 0056 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 553:Core/Src/main.c **** 	}
 716              		.loc 1 553 23 view .LVU177
 717 0058 303B     		subs	r3, r3, #48
 553:Core/Src/main.c **** 	}
 718              		.loc 1 553 10 view .LVU178
 719 005a 1370     		strb	r3, [r2]
 720 005c E1E7     		b	.L45
 721              	.L55:
 722 005e 00BF     		.align	2
 723              	.L54:
 724 0060 00000000 		.word	.LANCHOR20
 725 0064 00000000 		.word	.LANCHOR21
 726 0068 00000000 		.word	.LANCHOR14
 727 006c 00000000 		.word	.LANCHOR22
 728 0070 00000000 		.word	.LANCHOR8
 729 0074 00000000 		.word	.LANCHOR17
 730 0078 00000000 		.word	.LANCHOR6
 731              		.cfi_endproc
 732              	.LFE137:
 734              		.section	.text.main_task,"ax",%progbits
 735              		.align	1
 736              		.global	main_task
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 740              		.fpu fpv4-sp-d16
 742              	main_task:
 743              	.LFB136:
 406:Core/Src/main.c **** 
 744              		.loc 1 406 1 is_stmt 1 view -0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748 0000 08B5     		push	{r3, lr}
 749              	.LCFI6:
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 3, -8
 752              		.cfi_offset 14, -4
 408:Core/Src/main.c **** 	{
 753              		.loc 1 408 2 view .LVU180
 408:Core/Src/main.c **** 	{
 754              		.loc 1 408 18 is_stmt 0 view .LVU181
 755 0002 524B     		ldr	r3, .L80
 756 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 408:Core/Src/main.c **** 	{
 757              		.loc 1 408 39 view .LVU182
 758 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 408:Core/Src/main.c **** 	{
 759              		.loc 1 408 5 view .LVU183
 760 0008 9A42     		cmp	r2, r3
 761 000a 05D1     		bne	.L77
 762              	.L57:
 416:Core/Src/main.c **** 	{
 763              		.loc 1 416 2 is_stmt 1 view .LVU184
 764 000c 504B     		ldr	r3, .L80+4
ARM GAS  /tmp/ccxosq9E.s 			page 26


 765 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 766 0010 43B1     		cbz	r3, .L58
 767 0012 012B     		cmp	r3, #1
 768 0014 2FD0     		beq	.L59
 769              	.L56:
 504:Core/Src/main.c **** 
 770              		.loc 1 504 1 is_stmt 0 view .LVU185
 771 0016 08BD     		pop	{r3, pc}
 772              	.L77:
 411:Core/Src/main.c **** 
 773              		.loc 1 411 3 is_stmt 1 view .LVU186
 411:Core/Src/main.c **** 
 774              		.loc 1 411 11 is_stmt 0 view .LVU187
 775 0018 4C48     		ldr	r0, .L80
 776 001a FFF7FEFF 		bl	buffer_pop
 777              	.LVL34:
 411:Core/Src/main.c **** 
 778              		.loc 1 411 9 view .LVU188
 779 001e 4D4B     		ldr	r3, .L80+8
 780 0020 1870     		strb	r0, [r3]
 781 0022 F3E7     		b	.L57
 782              	.L58:
 419:Core/Src/main.c **** 				{
 783              		.loc 1 419 4 is_stmt 1 view .LVU189
 784 0024 4B4B     		ldr	r3, .L80+8
 785 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 786 0028 062B     		cmp	r3, #6
 787 002a 09D0     		beq	.L61
 788 002c 072B     		cmp	r3, #7
 789 002e 10D0     		beq	.L62
 790 0030 052B     		cmp	r3, #5
 791 0032 F0D1     		bne	.L56
 431:Core/Src/main.c **** 					
 792              		.loc 1 431 6 view .LVU190
 793 0034 FFF7FEFF 		bl	RS485_Read_Message
 794              	.LVL35:
 433:Core/Src/main.c **** 					break;
 795              		.loc 1 433 6 view .LVU191
 433:Core/Src/main.c **** 					break;
 796              		.loc 1 433 12 is_stmt 0 view .LVU192
 797 0038 464B     		ldr	r3, .L80+8
 798 003a 0022     		movs	r2, #0
 799 003c 1A70     		strb	r2, [r3]
 434:Core/Src/main.c **** 
 800              		.loc 1 434 6 is_stmt 1 view .LVU193
 801 003e EAE7     		b	.L56
 802              	.L61:
 424:Core/Src/main.c **** 					
 803              		.loc 1 424 6 view .LVU194
 804 0040 0022     		movs	r2, #0
 805 0042 0221     		movs	r1, #2
 806 0044 1020     		movs	r0, #16
 807 0046 FFF7FEFF 		bl	RS485_Send_Message
 808              	.LVL36:
 426:Core/Src/main.c **** 					break;
 809              		.loc 1 426 6 view .LVU195
 426:Core/Src/main.c **** 					break;
ARM GAS  /tmp/ccxosq9E.s 			page 27


 810              		.loc 1 426 12 is_stmt 0 view .LVU196
 811 004a 424B     		ldr	r3, .L80+8
 812 004c 0022     		movs	r2, #0
 813 004e 1A70     		strb	r2, [r3]
 427:Core/Src/main.c **** 
 814              		.loc 1 427 6 is_stmt 1 view .LVU197
 815 0050 E1E7     		b	.L56
 816              	.L62:
 437:Core/Src/main.c **** 					num_slave++;
 817              		.loc 1 437 6 view .LVU198
 437:Core/Src/main.c **** 					num_slave++;
 818              		.loc 1 437 12 is_stmt 0 view .LVU199
 819 0052 3F4B     		ldr	r3, .L80+4
 820 0054 0122     		movs	r2, #1
 821 0056 1A70     		strb	r2, [r3]
 438:Core/Src/main.c **** 					RS485_Send_Message(0x10, FUNC_ASSIGN_ADDR, ADDR|num_slave);
 822              		.loc 1 438 6 is_stmt 1 view .LVU200
 438:Core/Src/main.c **** 					RS485_Send_Message(0x10, FUNC_ASSIGN_ADDR, ADDR|num_slave);
 823              		.loc 1 438 15 is_stmt 0 view .LVU201
 824 0058 3F4B     		ldr	r3, .L80+12
 825 005a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 826 005c 0132     		adds	r2, r2, #1
 827 005e D2B2     		uxtb	r2, r2
 828 0060 1A70     		strb	r2, [r3]
 439:Core/Src/main.c **** 					event = EVENT_RESET;
 829              		.loc 1 439 6 is_stmt 1 view .LVU202
 830 0062 42F01002 		orr	r2, r2, #16
 831 0066 0421     		movs	r1, #4
 832 0068 1020     		movs	r0, #16
 833 006a FFF7FEFF 		bl	RS485_Send_Message
 834              	.LVL37:
 440:Core/Src/main.c **** 					break;
 835              		.loc 1 440 6 view .LVU203
 440:Core/Src/main.c **** 					break;
 836              		.loc 1 440 12 is_stmt 0 view .LVU204
 837 006e 394B     		ldr	r3, .L80+8
 838 0070 0022     		movs	r2, #0
 839 0072 1A70     		strb	r2, [r3]
 441:Core/Src/main.c **** 				}
 840              		.loc 1 441 6 is_stmt 1 view .LVU205
 841 0074 CFE7     		b	.L56
 842              	.L59:
 446:Core/Src/main.c **** 			{
 843              		.loc 1 446 4 view .LVU206
 844 0076 374B     		ldr	r3, .L80+8
 845 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 846 007a 013B     		subs	r3, r3, #1
 847 007c 052B     		cmp	r3, #5
 848 007e CAD8     		bhi	.L56
 849 0080 01A2     		adr	r2, .L65
 850 0082 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 851 0086 00BF     		.p2align 2
 852              	.L65:
 853 0088 A1000000 		.word	.L68+1
 854 008c CD000000 		.word	.L67+1
 855 0090 17000000 		.word	.L56+1
 856 0094 17000000 		.word	.L56+1
ARM GAS  /tmp/ccxosq9E.s 			page 28


 857 0098 F9000000 		.word	.L66+1
 858 009c 2F010000 		.word	.L75+1
 859              		.p2align 1
 860              	.L68:
 449:Core/Src/main.c **** 
 861              		.loc 1 449 5 view .LVU207
 449:Core/Src/main.c **** 
 862              		.loc 1 449 11 is_stmt 0 view .LVU208
 863 00a0 2E4A     		ldr	r2, .L80+16
 864 00a2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 865 00a4 0133     		adds	r3, r3, #1
 866 00a6 DBB2     		uxtb	r3, r3
 867 00a8 1370     		strb	r3, [r2]
 451:Core/Src/main.c **** 				{
 868              		.loc 1 451 5 is_stmt 1 view .LVU209
 451:Core/Src/main.c **** 				{
 869              		.loc 1 451 8 is_stmt 0 view .LVU210
 870 00aa 092B     		cmp	r3, #9
 871 00ac 02D9     		bls	.L69
 453:Core/Src/main.c **** 				}
 872              		.loc 1 453 6 is_stmt 1 view .LVU211
 453:Core/Src/main.c **** 				}
 873              		.loc 1 453 13 is_stmt 0 view .LVU212
 874 00ae 1346     		mov	r3, r2
 875 00b0 0022     		movs	r2, #0
 876 00b2 1A70     		strb	r2, [r3]
 877              	.L69:
 456:Core/Src/main.c **** 				event = EVENT_RESET;
 878              		.loc 1 456 5 is_stmt 1 view .LVU213
 879 00b4 294B     		ldr	r3, .L80+16
 880 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 881 00b8 3032     		adds	r2, r2, #48
 882 00ba D2B2     		uxtb	r2, r2
 883 00bc 0121     		movs	r1, #1
 884 00be 1120     		movs	r0, #17
 885 00c0 FFF7FEFF 		bl	RS485_Send_Message
 886              	.LVL38:
 457:Core/Src/main.c **** 				break;
 887              		.loc 1 457 5 view .LVU214
 457:Core/Src/main.c **** 				break;
 888              		.loc 1 457 11 is_stmt 0 view .LVU215
 889 00c4 234B     		ldr	r3, .L80+8
 890 00c6 0022     		movs	r2, #0
 891 00c8 1A70     		strb	r2, [r3]
 458:Core/Src/main.c **** 
 892              		.loc 1 458 5 is_stmt 1 view .LVU216
 893 00ca A4E7     		b	.L56
 894              	.L67:
 461:Core/Src/main.c **** 				if (digit2 > 9)
 895              		.loc 1 461 5 view .LVU217
 461:Core/Src/main.c **** 				if (digit2 > 9)
 896              		.loc 1 461 11 is_stmt 0 view .LVU218
 897 00cc 244A     		ldr	r2, .L80+20
 898 00ce 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 899 00d0 0133     		adds	r3, r3, #1
 900 00d2 DBB2     		uxtb	r3, r3
 901 00d4 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccxosq9E.s 			page 29


 462:Core/Src/main.c **** 				{
 902              		.loc 1 462 5 is_stmt 1 view .LVU219
 462:Core/Src/main.c **** 				{
 903              		.loc 1 462 8 is_stmt 0 view .LVU220
 904 00d6 092B     		cmp	r3, #9
 905 00d8 02D9     		bls	.L70
 464:Core/Src/main.c **** 				}
 906              		.loc 1 464 6 is_stmt 1 view .LVU221
 464:Core/Src/main.c **** 				}
 907              		.loc 1 464 13 is_stmt 0 view .LVU222
 908 00da 1346     		mov	r3, r2
 909 00dc 0022     		movs	r2, #0
 910 00de 1A70     		strb	r2, [r3]
 911              	.L70:
 466:Core/Src/main.c **** 
 912              		.loc 1 466 5 is_stmt 1 view .LVU223
 913 00e0 1F4B     		ldr	r3, .L80+20
 914 00e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 915 00e4 3032     		adds	r2, r2, #48
 916 00e6 D2B2     		uxtb	r2, r2
 917 00e8 0121     		movs	r1, #1
 918 00ea 1220     		movs	r0, #18
 919 00ec FFF7FEFF 		bl	RS485_Send_Message
 920              	.LVL39:
 468:Core/Src/main.c **** 
 921              		.loc 1 468 5 view .LVU224
 468:Core/Src/main.c **** 
 922              		.loc 1 468 11 is_stmt 0 view .LVU225
 923 00f0 184B     		ldr	r3, .L80+8
 924 00f2 0022     		movs	r2, #0
 925 00f4 1A70     		strb	r2, [r3]
 470:Core/Src/main.c **** 			case EVENT_RX_COMPLETE:
 926              		.loc 1 470 5 is_stmt 1 view .LVU226
 927 00f6 8EE7     		b	.L56
 928              	.L66:
 473:Core/Src/main.c **** 				
 929              		.loc 1 473 5 view .LVU227
 930 00f8 FFF7FEFF 		bl	RS485_Read_Message
 931              	.LVL40:
 475:Core/Src/main.c **** 				break;
 932              		.loc 1 475 5 view .LVU228
 475:Core/Src/main.c **** 				break;
 933              		.loc 1 475 11 is_stmt 0 view .LVU229
 934 00fc 154B     		ldr	r3, .L80+8
 935 00fe 0022     		movs	r2, #0
 936 0100 1A70     		strb	r2, [r3]
 476:Core/Src/main.c **** 
 937              		.loc 1 476 5 is_stmt 1 view .LVU230
 938 0102 88E7     		b	.L56
 939              	.LVL41:
 940              	.L79:
 941              	.LBB4:
 484:Core/Src/main.c **** 					
 942              		.loc 1 484 6 view .LVU231
 484:Core/Src/main.c **** 					
 943              		.loc 1 484 30 is_stmt 0 view .LVU232
 944 0104 40F01000 		orr	r0, r0, #16
ARM GAS  /tmp/ccxosq9E.s 			page 30


 945              	.LVL42:
 484:Core/Src/main.c **** 					
 946              		.loc 1 484 6 view .LVU233
 947 0108 0022     		movs	r2, #0
 948 010a 0221     		movs	r1, #2
 949 010c C0B2     		uxtb	r0, r0
 950 010e FFF7FEFF 		bl	RS485_Send_Message
 951              	.LVL43:
 486:Core/Src/main.c **** 					}
 952              		.loc 1 486 6 is_stmt 1 view .LVU234
 953              	.L72:
 486:Core/Src/main.c **** 					}
 954              		.loc 1 486 6 is_stmt 0 view .LVU235
 955              	.LBE4:
 489:Core/Src/main.c **** 				if (n_querry==num_slave+1){
 956              		.loc 1 489 5 is_stmt 1 view .LVU236
 489:Core/Src/main.c **** 				if (n_querry==num_slave+1){
 957              		.loc 1 489 13 is_stmt 0 view .LVU237
 958 0112 144A     		ldr	r2, .L80+24
 959 0114 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 960 0116 0133     		adds	r3, r3, #1
 961 0118 DBB2     		uxtb	r3, r3
 962 011a 1370     		strb	r3, [r2]
 490:Core/Src/main.c **** 					n_querry=0;
 963              		.loc 1 490 5 is_stmt 1 view .LVU238
 490:Core/Src/main.c **** 					n_querry=0;
 964              		.loc 1 490 28 is_stmt 0 view .LVU239
 965 011c 0E4A     		ldr	r2, .L80+12
 966 011e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 967 0120 0132     		adds	r2, r2, #1
 490:Core/Src/main.c **** 					n_querry=0;
 968              		.loc 1 490 8 view .LVU240
 969 0122 9342     		cmp	r3, r2
 970 0124 0ED0     		beq	.L78
 971              	.L74:
 494:Core/Src/main.c **** 				break;
 972              		.loc 1 494 5 is_stmt 1 view .LVU241
 494:Core/Src/main.c **** 				break;
 973              		.loc 1 494 11 is_stmt 0 view .LVU242
 974 0126 0B4B     		ldr	r3, .L80+8
 975 0128 0022     		movs	r2, #0
 976 012a 1A70     		strb	r2, [r3]
 495:Core/Src/main.c **** 			}
 977              		.loc 1 495 5 is_stmt 1 view .LVU243
 504:Core/Src/main.c **** 
 978              		.loc 1 504 1 is_stmt 0 view .LVU244
 979 012c 73E7     		b	.L56
 980              	.L75:
 504:Core/Src/main.c **** 
 981              		.loc 1 504 1 view .LVU245
 982 012e 0020     		movs	r0, #0
 983              	.L64:
 984              	.LVL44:
 985              	.LBB5:
 482:Core/Src/main.c **** 					if (n_querry==i) {
 986              		.loc 1 482 20 is_stmt 1 discriminator 1 view .LVU246
 482:Core/Src/main.c **** 					if (n_querry==i) {
ARM GAS  /tmp/ccxosq9E.s 			page 31


 987              		.loc 1 482 22 is_stmt 0 discriminator 1 view .LVU247
 988 0130 094B     		ldr	r3, .L80+12
 989 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 482:Core/Src/main.c **** 					if (n_querry==i) {
 990              		.loc 1 482 5 discriminator 1 view .LVU248
 991 0134 8342     		cmp	r3, r0
 992 0136 ECDB     		blt	.L72
 483:Core/Src/main.c **** 					RS485_Send_Message((ADDR|i), FUNC_READ, 0x00);
 993              		.loc 1 483 6 is_stmt 1 view .LVU249
 483:Core/Src/main.c **** 					RS485_Send_Message((ADDR|i), FUNC_READ, 0x00);
 994              		.loc 1 483 18 is_stmt 0 view .LVU250
 995 0138 0A4B     		ldr	r3, .L80+24
 996 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 483:Core/Src/main.c **** 					RS485_Send_Message((ADDR|i), FUNC_READ, 0x00);
 997              		.loc 1 483 9 view .LVU251
 998 013c 8342     		cmp	r3, r0
 999 013e E1D0     		beq	.L79
 482:Core/Src/main.c **** 					if (n_querry==i) {
 1000              		.loc 1 482 35 is_stmt 1 discriminator 2 view .LVU252
 482:Core/Src/main.c **** 					if (n_querry==i) {
 1001              		.loc 1 482 36 is_stmt 0 discriminator 2 view .LVU253
 1002 0140 0130     		adds	r0, r0, #1
 1003              	.LVL45:
 482:Core/Src/main.c **** 					if (n_querry==i) {
 1004              		.loc 1 482 36 discriminator 2 view .LVU254
 1005 0142 F5E7     		b	.L64
 1006              	.LVL46:
 1007              	.L78:
 482:Core/Src/main.c **** 					if (n_querry==i) {
 1008              		.loc 1 482 36 discriminator 2 view .LVU255
 1009              	.LBE5:
 491:Core/Src/main.c **** 				}	
 1010              		.loc 1 491 6 is_stmt 1 view .LVU256
 491:Core/Src/main.c **** 				}	
 1011              		.loc 1 491 14 is_stmt 0 view .LVU257
 1012 0144 074B     		ldr	r3, .L80+24
 1013 0146 0022     		movs	r2, #0
 1014 0148 1A70     		strb	r2, [r3]
 1015 014a ECE7     		b	.L74
 1016              	.L81:
 1017              		.align	2
 1018              	.L80:
 1019 014c 00000000 		.word	.LANCHOR14
 1020 0150 00000000 		.word	.LANCHOR22
 1021 0154 00000000 		.word	.LANCHOR23
 1022 0158 00000000 		.word	.LANCHOR24
 1023 015c 00000000 		.word	.LANCHOR8
 1024 0160 00000000 		.word	.LANCHOR6
 1025 0164 00000000 		.word	.LANCHOR25
 1026              		.cfi_endproc
 1027              	.LFE136:
 1029              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1030              		.align	1
 1031              		.global	HAL_TIM_PeriodElapsedCallback
 1032              		.syntax unified
 1033              		.thumb
 1034              		.thumb_func
ARM GAS  /tmp/ccxosq9E.s 			page 32


 1035              		.fpu fpv4-sp-d16
 1037              	HAL_TIM_PeriodElapsedCallback:
 1038              	.LVL47:
 1039              	.LFB139:
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 580:Core/Src/main.c **** {
 1040              		.loc 1 580 1 is_stmt 1 view -0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 581:Core/Src/main.c **** 	// Check which version of the timer triggered this callback and toggle LED
 582:Core/Src/main.c **** 
 583:Core/Src/main.c **** 	if (htim == &htim4)
 1045              		.loc 1 583 2 view .LVU259
 1046              		.loc 1 583 5 is_stmt 0 view .LVU260
 1047 0000 034B     		ldr	r3, .L85
 1048 0002 8342     		cmp	r3, r0
 1049 0004 00D0     		beq	.L84
 1050              	.L82:
 584:Core/Src/main.c **** 	{
 585:Core/Src/main.c **** 		f_timer_10ms = 1;
 586:Core/Src/main.c **** 	}
 587:Core/Src/main.c **** }
 1051              		.loc 1 587 1 view .LVU261
 1052 0006 7047     		bx	lr
 1053              	.L84:
 585:Core/Src/main.c **** 	}
 1054              		.loc 1 585 3 is_stmt 1 view .LVU262
 585:Core/Src/main.c **** 	}
 1055              		.loc 1 585 16 is_stmt 0 view .LVU263
 1056 0008 024B     		ldr	r3, .L85+4
 1057 000a 0122     		movs	r2, #1
 1058 000c 1A70     		strb	r2, [r3]
 1059              		.loc 1 587 1 view .LVU264
 1060 000e FAE7     		b	.L82
 1061              	.L86:
 1062              		.align	2
 1063              	.L85:
 1064 0010 00000000 		.word	htim4
 1065 0014 00000000 		.word	.LANCHOR9
 1066              		.cfi_endproc
 1067              	.LFE139:
 1069              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1070              		.align	1
 1071              		.global	HAL_UART_RxCpltCallback
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1075              		.fpu fpv4-sp-d16
 1077              	HAL_UART_RxCpltCallback:
 1078              	.LVL48:
 1079              	.LFB140:
 588:Core/Src/main.c **** 
 589:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 590:Core/Src/main.c **** {
ARM GAS  /tmp/ccxosq9E.s 			page 33


 1080              		.loc 1 590 1 is_stmt 1 view -0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084              		.loc 1 590 1 is_stmt 0 view .LVU266
 1085 0000 08B5     		push	{r3, lr}
 1086              	.LCFI7:
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 3, -8
 1089              		.cfi_offset 14, -4
 591:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 592:Core/Src/main.c **** 
 593:Core/Src/main.c **** 	if (huart == &huart4)
 1090              		.loc 1 593 2 is_stmt 1 view .LVU267
 1091              		.loc 1 593 5 is_stmt 0 view .LVU268
 1092 0002 144B     		ldr	r3, .L95
 1093 0004 8342     		cmp	r3, r0
 1094 0006 00D0     		beq	.L93
 1095              	.LVL49:
 1096              	.L87:
 594:Core/Src/main.c **** 	{
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** 		if (!transmission_f)
 597:Core/Src/main.c **** 		{
 598:Core/Src/main.c **** 			if (rx_temp == 0x2)
 599:Core/Src/main.c **** 			{
 600:Core/Src/main.c **** 				transmission_f = 1;
 601:Core/Src/main.c **** 			}
 602:Core/Src/main.c **** 		}
 603:Core/Src/main.c **** 		else
 604:Core/Src/main.c **** 		{
 605:Core/Src/main.c **** 			if (rx_temp == 0x3)
 606:Core/Src/main.c **** 			{ // digit1= 2;
 607:Core/Src/main.c **** 				transmission_f = 0;
 608:Core/Src/main.c **** 				buffer_push(&event_buffer, EVENT_RX_COMPLETE);
 609:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 610:Core/Src/main.c **** 				return;
 611:Core/Src/main.c **** 			}
 612:Core/Src/main.c **** 
 613:Core/Src/main.c **** 			buffer_push(&rx2_buffer, rx_temp);
 614:Core/Src/main.c **** 		}
 615:Core/Src/main.c **** 
 616:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 617:Core/Src/main.c **** 	}
 618:Core/Src/main.c **** }
 1097              		.loc 1 618 1 view .LVU269
 1098 0008 08BD     		pop	{r3, pc}
 1099              	.LVL50:
 1100              	.L93:
 596:Core/Src/main.c **** 		{
 1101              		.loc 1 596 3 is_stmt 1 view .LVU270
 596:Core/Src/main.c **** 		{
 1102              		.loc 1 596 7 is_stmt 0 view .LVU271
 1103 000a 134B     		ldr	r3, .L95+4
 1104 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 596:Core/Src/main.c **** 		{
 1105              		.loc 1 596 6 view .LVU272
ARM GAS  /tmp/ccxosq9E.s 			page 34


 1106 000e 3BB9     		cbnz	r3, .L89
 598:Core/Src/main.c **** 			{
 1107              		.loc 1 598 4 is_stmt 1 view .LVU273
 598:Core/Src/main.c **** 			{
 1108              		.loc 1 598 16 is_stmt 0 view .LVU274
 1109 0010 124B     		ldr	r3, .L95+8
 1110 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 598:Core/Src/main.c **** 			{
 1111              		.loc 1 598 7 view .LVU275
 1112 0014 022B     		cmp	r3, #2
 1113 0016 0AD1     		bne	.L90
 600:Core/Src/main.c **** 			}
 1114              		.loc 1 600 5 is_stmt 1 view .LVU276
 600:Core/Src/main.c **** 			}
 1115              		.loc 1 600 20 is_stmt 0 view .LVU277
 1116 0018 0F4B     		ldr	r3, .L95+4
 1117 001a 0122     		movs	r2, #1
 1118 001c 1A70     		strb	r2, [r3]
 1119 001e 06E0     		b	.L90
 1120              	.L89:
 605:Core/Src/main.c **** 			{ // digit1= 2;
 1121              		.loc 1 605 4 is_stmt 1 view .LVU278
 605:Core/Src/main.c **** 			{ // digit1= 2;
 1122              		.loc 1 605 16 is_stmt 0 view .LVU279
 1123 0020 0E4B     		ldr	r3, .L95+8
 1124 0022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 605:Core/Src/main.c **** 			{ // digit1= 2;
 1125              		.loc 1 605 7 view .LVU280
 1126 0024 0329     		cmp	r1, #3
 1127 0026 08D0     		beq	.L94
 613:Core/Src/main.c **** 		}
 1128              		.loc 1 613 4 is_stmt 1 view .LVU281
 1129 0028 0D48     		ldr	r0, .L95+12
 1130              	.LVL51:
 613:Core/Src/main.c **** 		}
 1131              		.loc 1 613 4 is_stmt 0 view .LVU282
 1132 002a FFF7FEFF 		bl	buffer_push
 1133              	.LVL52:
 1134              	.L90:
 616:Core/Src/main.c **** 	}
 1135              		.loc 1 616 3 is_stmt 1 view .LVU283
 1136 002e 0122     		movs	r2, #1
 1137 0030 0A49     		ldr	r1, .L95+8
 1138 0032 0848     		ldr	r0, .L95
 1139 0034 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1140              	.LVL53:
 1141 0038 E6E7     		b	.L87
 1142              	.LVL54:
 1143              	.L94:
 607:Core/Src/main.c **** 				buffer_push(&event_buffer, EVENT_RX_COMPLETE);
 1144              		.loc 1 607 5 view .LVU284
 607:Core/Src/main.c **** 				buffer_push(&event_buffer, EVENT_RX_COMPLETE);
 1145              		.loc 1 607 20 is_stmt 0 view .LVU285
 1146 003a 074B     		ldr	r3, .L95+4
 1147 003c 0022     		movs	r2, #0
 1148 003e 1A70     		strb	r2, [r3]
 608:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
ARM GAS  /tmp/ccxosq9E.s 			page 35


 1149              		.loc 1 608 5 is_stmt 1 view .LVU286
 1150 0040 0521     		movs	r1, #5
 1151 0042 0848     		ldr	r0, .L95+16
 1152              	.LVL55:
 608:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart4, &rx_temp, 1);
 1153              		.loc 1 608 5 is_stmt 0 view .LVU287
 1154 0044 FFF7FEFF 		bl	buffer_push
 1155              	.LVL56:
 609:Core/Src/main.c **** 				return;
 1156              		.loc 1 609 5 is_stmt 1 view .LVU288
 1157 0048 0122     		movs	r2, #1
 1158 004a 0449     		ldr	r1, .L95+8
 1159 004c 0148     		ldr	r0, .L95
 1160 004e FFF7FEFF 		bl	HAL_UART_Receive_IT
 1161              	.LVL57:
 610:Core/Src/main.c **** 			}
 1162              		.loc 1 610 5 view .LVU289
 1163 0052 D9E7     		b	.L87
 1164              	.L96:
 1165              		.align	2
 1166              	.L95:
 1167 0054 00000000 		.word	huart4
 1168 0058 00000000 		.word	.LANCHOR26
 1169 005c 00000000 		.word	.LANCHOR27
 1170 0060 00000000 		.word	.LANCHOR21
 1171 0064 00000000 		.word	.LANCHOR14
 1172              		.cfi_endproc
 1173              	.LFE140:
 1175              		.section	.text.Error_Handler,"ax",%progbits
 1176              		.align	1
 1177              		.global	Error_Handler
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1181              		.fpu fpv4-sp-d16
 1183              	Error_Handler:
 1184              	.LFB141:
 619:Core/Src/main.c **** /* USER CODE END 4 */
 620:Core/Src/main.c **** 
 621:Core/Src/main.c **** /**
 622:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 623:Core/Src/main.c ****  * @retval None
 624:Core/Src/main.c ****  */
 625:Core/Src/main.c **** void Error_Handler(void)
 626:Core/Src/main.c **** {
 1185              		.loc 1 626 1 view -0
 1186              		.cfi_startproc
 1187              		@ Volatile: function does not return.
 1188              		@ args = 0, pretend = 0, frame = 0
 1189              		@ frame_needed = 0, uses_anonymous_args = 0
 1190              		@ link register save eliminated.
 627:Core/Src/main.c **** 	/* USER CODE BEGIN Error_Handler_Debug */
 628:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 629:Core/Src/main.c **** 	__disable_irq();
 1191              		.loc 1 629 2 view .LVU291
 1192              	.LBB6:
 1193              	.LBI6:
ARM GAS  /tmp/ccxosq9E.s 			page 36


 1194              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  /tmp/ccxosq9E.s 			page 37


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  /tmp/ccxosq9E.s 			page 38


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1195              		.loc 2 140 27 view .LVU292
 1196              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1197              		.loc 2 142 3 view .LVU293
 1198              		.syntax unified
 1199              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1200 0000 72B6     		cpsid i
 1201              	@ 0 "" 2
 1202              		.thumb
 1203              		.syntax unified
 1204              	.L98:
 1205              	.LBE7:
 1206              	.LBE6:
 630:Core/Src/main.c **** 	while (1)
 1207              		.loc 1 630 2 discriminator 1 view .LVU294
 631:Core/Src/main.c **** 	{
 632:Core/Src/main.c **** 	}
 1208              		.loc 1 632 2 discriminator 1 view .LVU295
 630:Core/Src/main.c **** 	while (1)
 1209              		.loc 1 630 8 discriminator 1 view .LVU296
 1210 0002 FEE7     		b	.L98
 1211              		.cfi_endproc
 1212              	.LFE141:
 1214              		.section	.text.SystemClock_Config,"ax",%progbits
 1215              		.align	1
 1216              		.global	SystemClock_Config
 1217              		.syntax unified
 1218              		.thumb
 1219              		.thumb_func
ARM GAS  /tmp/ccxosq9E.s 			page 39


 1220              		.fpu fpv4-sp-d16
 1222              	SystemClock_Config:
 1223              	.LFB131:
 215:Core/Src/main.c **** 	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1224              		.loc 1 215 1 view -0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 80
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228 0000 00B5     		push	{lr}
 1229              	.LCFI8:
 1230              		.cfi_def_cfa_offset 4
 1231              		.cfi_offset 14, -4
 1232 0002 95B0     		sub	sp, sp, #84
 1233              	.LCFI9:
 1234              		.cfi_def_cfa_offset 88
 216:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1235              		.loc 1 216 2 view .LVU298
 216:Core/Src/main.c **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1236              		.loc 1 216 21 is_stmt 0 view .LVU299
 1237 0004 3022     		movs	r2, #48
 1238 0006 0021     		movs	r1, #0
 1239 0008 08A8     		add	r0, sp, #32
 1240 000a FFF7FEFF 		bl	memset
 1241              	.LVL58:
 217:Core/Src/main.c **** 
 1242              		.loc 1 217 2 is_stmt 1 view .LVU300
 217:Core/Src/main.c **** 
 1243              		.loc 1 217 21 is_stmt 0 view .LVU301
 1244 000e 0023     		movs	r3, #0
 1245 0010 0393     		str	r3, [sp, #12]
 1246 0012 0493     		str	r3, [sp, #16]
 1247 0014 0593     		str	r3, [sp, #20]
 1248 0016 0693     		str	r3, [sp, #24]
 1249 0018 0793     		str	r3, [sp, #28]
 221:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1250              		.loc 1 221 2 is_stmt 1 view .LVU302
 1251              	.LBB8:
 221:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1252              		.loc 1 221 2 view .LVU303
 1253 001a 0193     		str	r3, [sp, #4]
 221:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1254              		.loc 1 221 2 view .LVU304
 1255 001c 204A     		ldr	r2, .L105
 1256 001e 116C     		ldr	r1, [r2, #64]
 1257 0020 41F08051 		orr	r1, r1, #268435456
 1258 0024 1164     		str	r1, [r2, #64]
 221:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1259              		.loc 1 221 2 view .LVU305
 1260 0026 126C     		ldr	r2, [r2, #64]
 1261 0028 02F08052 		and	r2, r2, #268435456
 1262 002c 0192     		str	r2, [sp, #4]
 221:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1263              		.loc 1 221 2 view .LVU306
 1264 002e 019A     		ldr	r2, [sp, #4]
 1265              	.LBE8:
 221:Core/Src/main.c **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1266              		.loc 1 221 2 view .LVU307
ARM GAS  /tmp/ccxosq9E.s 			page 40


 222:Core/Src/main.c **** 
 1267              		.loc 1 222 2 view .LVU308
 1268              	.LBB9:
 222:Core/Src/main.c **** 
 1269              		.loc 1 222 2 view .LVU309
 1270 0030 0293     		str	r3, [sp, #8]
 222:Core/Src/main.c **** 
 1271              		.loc 1 222 2 view .LVU310
 1272 0032 1C4A     		ldr	r2, .L105+4
 1273 0034 1368     		ldr	r3, [r2]
 1274 0036 23F44043 		bic	r3, r3, #49152
 1275 003a 43F48043 		orr	r3, r3, #16384
 1276 003e 1360     		str	r3, [r2]
 222:Core/Src/main.c **** 
 1277              		.loc 1 222 2 view .LVU311
 1278 0040 1368     		ldr	r3, [r2]
 1279 0042 03F44043 		and	r3, r3, #49152
 1280 0046 0293     		str	r3, [sp, #8]
 222:Core/Src/main.c **** 
 1281              		.loc 1 222 2 view .LVU312
 1282 0048 029B     		ldr	r3, [sp, #8]
 1283              	.LBE9:
 222:Core/Src/main.c **** 
 1284              		.loc 1 222 2 view .LVU313
 227:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1285              		.loc 1 227 2 view .LVU314
 227:Core/Src/main.c **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1286              		.loc 1 227 35 is_stmt 0 view .LVU315
 1287 004a 0123     		movs	r3, #1
 1288 004c 0893     		str	r3, [sp, #32]
 228:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1289              		.loc 1 228 2 is_stmt 1 view .LVU316
 228:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1290              		.loc 1 228 29 is_stmt 0 view .LVU317
 1291 004e 4FF48033 		mov	r3, #65536
 1292 0052 0993     		str	r3, [sp, #36]
 229:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1293              		.loc 1 229 2 is_stmt 1 view .LVU318
 229:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1294              		.loc 1 229 33 is_stmt 0 view .LVU319
 1295 0054 0223     		movs	r3, #2
 1296 0056 0E93     		str	r3, [sp, #56]
 230:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1297              		.loc 1 230 2 is_stmt 1 view .LVU320
 230:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 1298              		.loc 1 230 34 is_stmt 0 view .LVU321
 1299 0058 4FF48002 		mov	r2, #4194304
 1300 005c 0F92     		str	r2, [sp, #60]
 231:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1301              		.loc 1 231 2 is_stmt 1 view .LVU322
 231:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLN = 96;
 1302              		.loc 1 231 29 is_stmt 0 view .LVU323
 1303 005e 0422     		movs	r2, #4
 1304 0060 1092     		str	r2, [sp, #64]
 232:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1305              		.loc 1 232 2 is_stmt 1 view .LVU324
 232:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /tmp/ccxosq9E.s 			page 41


 1306              		.loc 1 232 29 is_stmt 0 view .LVU325
 1307 0062 6022     		movs	r2, #96
 1308 0064 1192     		str	r2, [sp, #68]
 233:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1309              		.loc 1 233 2 is_stmt 1 view .LVU326
 233:Core/Src/main.c **** 	RCC_OscInitStruct.PLL.PLLQ = 3;
 1310              		.loc 1 233 29 is_stmt 0 view .LVU327
 1311 0066 1293     		str	r3, [sp, #72]
 234:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1312              		.loc 1 234 2 is_stmt 1 view .LVU328
 234:Core/Src/main.c **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1313              		.loc 1 234 29 is_stmt 0 view .LVU329
 1314 0068 0323     		movs	r3, #3
 1315 006a 1393     		str	r3, [sp, #76]
 235:Core/Src/main.c **** 	{
 1316              		.loc 1 235 2 is_stmt 1 view .LVU330
 235:Core/Src/main.c **** 	{
 1317              		.loc 1 235 6 is_stmt 0 view .LVU331
 1318 006c 08A8     		add	r0, sp, #32
 1319 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1320              	.LVL59:
 235:Core/Src/main.c **** 	{
 1321              		.loc 1 235 5 view .LVU332
 1322 0072 88B9     		cbnz	r0, .L103
 242:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1323              		.loc 1 242 2 is_stmt 1 view .LVU333
 242:Core/Src/main.c **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1324              		.loc 1 242 30 is_stmt 0 view .LVU334
 1325 0074 0F23     		movs	r3, #15
 1326 0076 0393     		str	r3, [sp, #12]
 243:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1327              		.loc 1 243 2 is_stmt 1 view .LVU335
 243:Core/Src/main.c **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1328              		.loc 1 243 33 is_stmt 0 view .LVU336
 1329 0078 0223     		movs	r3, #2
 1330 007a 0493     		str	r3, [sp, #16]
 244:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1331              		.loc 1 244 2 is_stmt 1 view .LVU337
 244:Core/Src/main.c **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1332              		.loc 1 244 34 is_stmt 0 view .LVU338
 1333 007c 8023     		movs	r3, #128
 1334 007e 0593     		str	r3, [sp, #20]
 245:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1335              		.loc 1 245 2 is_stmt 1 view .LVU339
 245:Core/Src/main.c **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1336              		.loc 1 245 35 is_stmt 0 view .LVU340
 1337 0080 4FF48053 		mov	r3, #4096
 1338 0084 0693     		str	r3, [sp, #24]
 246:Core/Src/main.c **** 
 1339              		.loc 1 246 2 is_stmt 1 view .LVU341
 246:Core/Src/main.c **** 
 1340              		.loc 1 246 35 is_stmt 0 view .LVU342
 1341 0086 0793     		str	r3, [sp, #28]
 248:Core/Src/main.c **** 	{
 1342              		.loc 1 248 2 is_stmt 1 view .LVU343
 248:Core/Src/main.c **** 	{
 1343              		.loc 1 248 6 is_stmt 0 view .LVU344
ARM GAS  /tmp/ccxosq9E.s 			page 42


 1344 0088 0121     		movs	r1, #1
 1345 008a 03A8     		add	r0, sp, #12
 1346 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1347              	.LVL60:
 248:Core/Src/main.c **** 	{
 1348              		.loc 1 248 5 view .LVU345
 1349 0090 20B9     		cbnz	r0, .L104
 252:Core/Src/main.c **** 
 1350              		.loc 1 252 1 view .LVU346
 1351 0092 15B0     		add	sp, sp, #84
 1352              	.LCFI10:
 1353              		.cfi_remember_state
 1354              		.cfi_def_cfa_offset 4
 1355              		@ sp needed
 1356 0094 5DF804FB 		ldr	pc, [sp], #4
 1357              	.L103:
 1358              	.LCFI11:
 1359              		.cfi_restore_state
 237:Core/Src/main.c **** 	}
 1360              		.loc 1 237 3 is_stmt 1 view .LVU347
 1361 0098 FFF7FEFF 		bl	Error_Handler
 1362              	.LVL61:
 1363              	.L104:
 250:Core/Src/main.c **** 	}
 1364              		.loc 1 250 3 view .LVU348
 1365 009c FFF7FEFF 		bl	Error_Handler
 1366              	.LVL62:
 1367              	.L106:
 1368              		.align	2
 1369              	.L105:
 1370 00a0 00380240 		.word	1073887232
 1371 00a4 00700040 		.word	1073770496
 1372              		.cfi_endproc
 1373              	.LFE131:
 1375              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1376              		.align	2
 1377              	.LC0:
 1378 0000 54455452 		.ascii	"TETRADYNE\000"
 1378      4144594E 
 1378      4500
 1379 000a 0000     		.align	2
 1380              	.LC1:
 1381 000c 53323A00 		.ascii	"S2:\000"
 1382              		.align	2
 1383              	.LC2:
 1384 0010 53313A00 		.ascii	"S1:\000"
 1385              		.section	.text.main,"ax",%progbits
 1386              		.align	1
 1387              		.global	main
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1391              		.fpu fpv4-sp-d16
 1393              	main:
 1394              	.LFB130:
 137:Core/Src/main.c **** 	/* USER CODE BEGIN 1 */
 1395              		.loc 1 137 1 view -0
ARM GAS  /tmp/ccxosq9E.s 			page 43


 1396              		.cfi_startproc
 1397              		@ Volatile: function does not return.
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400 0000 08B5     		push	{r3, lr}
 1401              	.LCFI12:
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 3, -8
 1404              		.cfi_offset 14, -4
 145:Core/Src/main.c **** 
 1405              		.loc 1 145 2 view .LVU350
 1406 0002 FFF7FEFF 		bl	HAL_Init
 1407              	.LVL63:
 152:Core/Src/main.c **** 
 1408              		.loc 1 152 2 view .LVU351
 1409 0006 FFF7FEFF 		bl	SystemClock_Config
 1410              	.LVL64:
 159:Core/Src/main.c **** 	MX_TIM4_Init();
 1411              		.loc 1 159 2 view .LVU352
 1412 000a FFF7FEFF 		bl	MX_GPIO_Init
 1413              	.LVL65:
 160:Core/Src/main.c **** 	MX_UART4_Init();
 1414              		.loc 1 160 2 view .LVU353
 1415 000e FFF7FEFF 		bl	MX_TIM4_Init
 1416              	.LVL66:
 161:Core/Src/main.c **** 	MX_UART5_Init();
 1417              		.loc 1 161 2 view .LVU354
 1418 0012 FFF7FEFF 		bl	MX_UART4_Init
 1419              	.LVL67:
 162:Core/Src/main.c **** 	/* USER CODE BEGIN 2 */
 1420              		.loc 1 162 2 view .LVU355
 1421 0016 FFF7FEFF 		bl	MX_UART5_Init
 1422              	.LVL68:
 165:Core/Src/main.c **** 
 1423              		.loc 1 165 2 view .LVU356
 1424 001a 1D48     		ldr	r0, .L110
 1425 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1426              	.LVL69:
 167:Core/Src/main.c **** 	// HAL_GPIO_WritePin(TX2_EN_GPIO_Port, TX2_EN_Pin, 0);	// Enable Receiver 2
 1427              		.loc 1 167 2 view .LVU357
 1428 0020 0022     		movs	r2, #0
 1429 0022 4FF48051 		mov	r1, #4096
 1430 0026 1B48     		ldr	r0, .L110+4
 1431 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1432              	.LVL70:
 170:Core/Src/main.c **** 	// HAL_UART_Receive_IT(&huart5, &rx2_buffer.data[rx2_buffer.head], 1);
 1433              		.loc 1 170 2 view .LVU358
 1434 002c 0122     		movs	r2, #1
 1435 002e 1A49     		ldr	r1, .L110+8
 1436 0030 1A48     		ldr	r0, .L110+12
 1437 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1438              	.LVL71:
 173:Core/Src/main.c **** 	digit2 = 16;
 1439              		.loc 1 173 2 view .LVU359
 173:Core/Src/main.c **** 	digit2 = 16;
 1440              		.loc 1 173 9 is_stmt 0 view .LVU360
 1441 0036 1023     		movs	r3, #16
ARM GAS  /tmp/ccxosq9E.s 			page 44


 1442 0038 194A     		ldr	r2, .L110+16
 1443 003a 1370     		strb	r3, [r2]
 174:Core/Src/main.c **** 	num_slave=0;
 1444              		.loc 1 174 2 is_stmt 1 view .LVU361
 174:Core/Src/main.c **** 	num_slave=0;
 1445              		.loc 1 174 9 is_stmt 0 view .LVU362
 1446 003c 194A     		ldr	r2, .L110+20
 1447 003e 1370     		strb	r3, [r2]
 175:Core/Src/main.c **** 	if (num_slave>0){
 1448              		.loc 1 175 2 is_stmt 1 view .LVU363
 175:Core/Src/main.c **** 	if (num_slave>0){
 1449              		.loc 1 175 11 is_stmt 0 view .LVU364
 1450 0040 0024     		movs	r4, #0
 1451 0042 194B     		ldr	r3, .L110+24
 1452 0044 1C70     		strb	r4, [r3]
 176:Core/Src/main.c **** 		state = STATE_OPERATION;
 1453              		.loc 1 176 2 is_stmt 1 view .LVU365
 179:Core/Src/main.c **** 	}
 1454              		.loc 1 179 3 view .LVU366
 179:Core/Src/main.c **** 	}
 1455              		.loc 1 179 8 is_stmt 0 view .LVU367
 1456 0046 194B     		ldr	r3, .L110+28
 1457 0048 1C70     		strb	r4, [r3]
 182:Core/Src/main.c **** 	lcd_clear();
 1458              		.loc 1 182 2 is_stmt 1 view .LVU368
 1459 004a FFF7FEFF 		bl	lcd_init
 1460              	.LVL72:
 183:Core/Src/main.c **** 	lcd_set_pos(0, 3);
 1461              		.loc 1 183 2 view .LVU369
 1462 004e FFF7FEFF 		bl	lcd_clear
 1463              	.LVL73:
 184:Core/Src/main.c **** 	lcd_write_string("TETRADYNE");
 1464              		.loc 1 184 2 view .LVU370
 1465 0052 0321     		movs	r1, #3
 1466 0054 2046     		mov	r0, r4
 1467 0056 FFF7FEFF 		bl	lcd_set_pos
 1468              	.LVL74:
 185:Core/Src/main.c **** 	lcd_set_pos(1, 0);
 1469              		.loc 1 185 2 view .LVU371
 1470 005a 1548     		ldr	r0, .L110+32
 1471 005c FFF7FEFF 		bl	lcd_write_string
 1472              	.LVL75:
 186:Core/Src/main.c **** 	lcd_write_string("S2:");
 1473              		.loc 1 186 2 view .LVU372
 1474 0060 2146     		mov	r1, r4
 1475 0062 0120     		movs	r0, #1
 1476 0064 FFF7FEFF 		bl	lcd_set_pos
 1477              	.LVL76:
 187:Core/Src/main.c **** 	lcd_set_pos(1, 0xC);
 1478              		.loc 1 187 2 view .LVU373
 1479 0068 1248     		ldr	r0, .L110+36
 1480 006a FFF7FEFF 		bl	lcd_write_string
 1481              	.LVL77:
 188:Core/Src/main.c **** 	lcd_write_string("S1:");
 1482              		.loc 1 188 2 view .LVU374
 1483 006e 0C21     		movs	r1, #12
 1484 0070 0120     		movs	r0, #1
ARM GAS  /tmp/ccxosq9E.s 			page 45


 1485 0072 FFF7FEFF 		bl	lcd_set_pos
 1486              	.LVL78:
 189:Core/Src/main.c **** 	/* USER CODE END 2 */
 1487              		.loc 1 189 2 view .LVU375
 1488 0076 1048     		ldr	r0, .L110+40
 1489 0078 FFF7FEFF 		bl	lcd_write_string
 1490              	.LVL79:
 1491              	.L108:
 194:Core/Src/main.c **** 	{
 1492              		.loc 1 194 2 discriminator 1 view .LVU376
 200:Core/Src/main.c **** 		/// segment_display_task();
 1493              		.loc 1 200 3 discriminator 1 view .LVU377
 1494 007c FFF7FEFF 		bl	task_timer
 1495              	.LVL80:
 202:Core/Src/main.c **** 		key_read_task();
 1496              		.loc 1 202 3 discriminator 1 view .LVU378
 1497 0080 FFF7FEFF 		bl	lcd_display_task
 1498              	.LVL81:
 203:Core/Src/main.c **** 
 1499              		.loc 1 203 3 discriminator 1 view .LVU379
 1500 0084 FFF7FEFF 		bl	key_read_task
 1501              	.LVL82:
 205:Core/Src/main.c **** 	}
 1502              		.loc 1 205 3 discriminator 1 view .LVU380
 1503 0088 FFF7FEFF 		bl	main_task
 1504              	.LVL83:
 194:Core/Src/main.c **** 	{
 1505              		.loc 1 194 8 discriminator 1 view .LVU381
 1506 008c F6E7     		b	.L108
 1507              	.L111:
 1508 008e 00BF     		.align	2
 1509              	.L110:
 1510 0090 00000000 		.word	htim4
 1511 0094 00000240 		.word	1073872896
 1512 0098 00000000 		.word	.LANCHOR27
 1513 009c 00000000 		.word	huart4
 1514 00a0 00000000 		.word	.LANCHOR8
 1515 00a4 00000000 		.word	.LANCHOR6
 1516 00a8 00000000 		.word	.LANCHOR24
 1517 00ac 00000000 		.word	.LANCHOR22
 1518 00b0 00000000 		.word	.LC0
 1519 00b4 0C000000 		.word	.LC1
 1520 00b8 10000000 		.word	.LC2
 1521              		.cfi_endproc
 1522              	.LFE130:
 1524              		.global	RX_msg
 1525              		.global	TX_msg
 1526              		.global	ID
 1527              		.global	event_buffer
 1528              		.global	rx2_buffer
 1529              		.global	rx1_buffer
 1530              		.global	stop_cmd
 1531              		.global	start_cmd
 1532              		.global	transmission_f
 1533              		.global	rx_temp
 1534              		.global	digit_table
 1535              		.global	lcd_process
ARM GAS  /tmp/ccxosq9E.s 			page 46


 1536              		.global	data
 1537              		.global	cmd
 1538              		.global	digit2_update
 1539              		.global	digit1_update
 1540              		.global	lcd_digit1_f
 1541              		.global	is_EN
 1542              		.global	digit2
 1543              		.global	digit1
 1544              		.global	num_slave
 1545              		.global	error
 1546              		.global	event
 1547              		.global	state
 1548              		.global	key2_data
 1549              		.global	key1_data
 1550              		.global	TX2_delay_val
 1551              		.global	d_timer_TX2
 1552              		.global	TX1_delay_val
 1553              		.global	d_timer_TX1
 1554              		.global	d_timer_20ms
 1555              		.global	d_timer_50ms
 1556              		.global	d_timer_30ms
 1557              		.global	tx1_buffer
 1558              		.global	tx2_buffer
 1559              		.global	flag_digit_1
 1560              		.global	n_querry
 1561              		.global	f_timer_50ms
 1562              		.global	f_timer_30ms
 1563              		.global	f_waiting_rx
 1564              		.global	f_timer_20ms
 1565              		.global	f_timer_10ms
 1566              		.global	f_seg_timer_500ms
 1567              		.global	f_timer_TX
 1568              		.global	f_busy
 1569              		.section	.bss.ID,"aw",%nobits
 1572              	ID:
 1573 0000 00       		.space	1
 1574              		.section	.bss.RX_msg,"aw",%nobits
 1575              		.align	2
 1576              		.set	.LANCHOR20,. + 0
 1579              	RX_msg:
 1580 0000 00000000 		.space	4
 1581              		.section	.bss.TX_msg,"aw",%nobits
 1582              		.align	2
 1583              		.set	.LANCHOR17,. + 0
 1586              	TX_msg:
 1587 0000 00000000 		.space	4
 1588              		.section	.bss.cmd,"aw",%nobits
 1589              		.set	.LANCHOR4,. + 0
 1592              	cmd:
 1593 0000 00       		.space	1
 1594              		.section	.bss.d_timer_20ms,"aw",%nobits
 1595              		.set	.LANCHOR12,. + 0
 1598              	d_timer_20ms:
 1599 0000 00       		.space	1
 1600              		.section	.bss.d_timer_30ms,"aw",%nobits
 1601              		.set	.LANCHOR10,. + 0
 1604              	d_timer_30ms:
ARM GAS  /tmp/ccxosq9E.s 			page 47


 1605 0000 00       		.space	1
 1606              		.section	.bss.d_timer_50ms,"aw",%nobits
 1607              		.set	.LANCHOR13,. + 0
 1610              	d_timer_50ms:
 1611 0000 00       		.space	1
 1612              		.section	.bss.d_timer_TX1,"aw",%nobits
 1615              	d_timer_TX1:
 1616 0000 00       		.space	1
 1617              		.section	.bss.d_timer_TX2,"aw",%nobits
 1620              	d_timer_TX2:
 1621 0000 00       		.space	1
 1622              		.section	.bss.data,"aw",%nobits
 1623              		.set	.LANCHOR7,. + 0
 1626              	data:
 1627 0000 00       		.space	1
 1628              		.section	.bss.digit1,"aw",%nobits
 1629              		.set	.LANCHOR8,. + 0
 1632              	digit1:
 1633 0000 00       		.space	1
 1634              		.section	.bss.digit1_update,"aw",%nobits
 1637              	digit1_update:
 1638 0000 00       		.space	1
 1639              		.section	.bss.digit2,"aw",%nobits
 1640              		.set	.LANCHOR6,. + 0
 1643              	digit2:
 1644 0000 00       		.space	1
 1645              		.section	.bss.digit2_update,"aw",%nobits
 1648              	digit2_update:
 1649 0000 00       		.space	1
 1650              		.section	.bss.error,"aw",%nobits
 1653              	error:
 1654 0000 00       		.space	1
 1655              		.section	.bss.event,"aw",%nobits
 1656              		.set	.LANCHOR23,. + 0
 1659              	event:
 1660 0000 00       		.space	1
 1661              		.section	.bss.event_buffer,"aw",%nobits
 1662              		.align	2
 1663              		.set	.LANCHOR14,. + 0
 1666              	event_buffer:
 1667 0000 00000000 		.space	66
 1667      00000000 
 1667      00000000 
 1667      00000000 
 1667      00000000 
 1668              		.section	.bss.f_busy,"aw",%nobits
 1671              	f_busy:
 1672 0000 00       		.space	1
 1673              		.section	.bss.f_seg_timer_500ms,"aw",%nobits
 1676              	f_seg_timer_500ms:
 1677 0000 00       		.space	1
 1678              		.section	.bss.f_timer_10ms,"aw",%nobits
 1679              		.set	.LANCHOR9,. + 0
 1682              	f_timer_10ms:
 1683 0000 00       		.space	1
 1684              		.section	.bss.f_timer_20ms,"aw",%nobits
 1685              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccxosq9E.s 			page 48


 1688              	f_timer_20ms:
 1689 0000 00       		.space	1
 1690              		.section	.bss.f_timer_30ms,"aw",%nobits
 1691              		.set	.LANCHOR11,. + 0
 1694              	f_timer_30ms:
 1695 0000 00       		.space	1
 1696              		.section	.bss.f_timer_50ms,"aw",%nobits
 1699              	f_timer_50ms:
 1700 0000 00       		.space	1
 1701              		.section	.bss.f_timer_TX,"aw",%nobits
 1704              	f_timer_TX:
 1705 0000 00       		.space	1
 1706              		.section	.bss.f_waiting_rx,"aw",%nobits
 1709              	f_waiting_rx:
 1710 0000 00       		.space	1
 1711              		.section	.bss.is_EN,"aw",%nobits
 1712              		.set	.LANCHOR1,. + 0
 1715              	is_EN:
 1716 0000 00       		.space	1
 1717              		.section	.bss.key1_data,"aw",%nobits
 1718              		.set	.LANCHOR15,. + 0
 1721              	key1_data:
 1722 0000 00       		.space	1
 1723              		.section	.bss.key2_data,"aw",%nobits
 1724              		.set	.LANCHOR16,. + 0
 1727              	key2_data:
 1728 0000 00       		.space	1
 1729              		.section	.bss.lcd_digit1_f,"aw",%nobits
 1730              		.set	.LANCHOR3,. + 0
 1733              	lcd_digit1_f:
 1734 0000 00       		.space	1
 1735              		.section	.bss.lcd_process,"aw",%nobits
 1736              		.set	.LANCHOR2,. + 0
 1739              	lcd_process:
 1740 0000 00       		.space	1
 1741              		.section	.bss.n_querry,"aw",%nobits
 1742              		.set	.LANCHOR25,. + 0
 1745              	n_querry:
 1746 0000 00       		.space	1
 1747              		.section	.bss.num_slave,"aw",%nobits
 1748              		.set	.LANCHOR24,. + 0
 1751              	num_slave:
 1752 0000 00       		.space	1
 1753              		.section	.bss.rx1_buffer,"aw",%nobits
 1754              		.align	2
 1757              	rx1_buffer:
 1758 0000 00000000 		.space	66
 1758      00000000 
 1758      00000000 
 1758      00000000 
 1758      00000000 
 1759              		.section	.bss.rx2_buffer,"aw",%nobits
 1760              		.align	2
 1761              		.set	.LANCHOR21,. + 0
 1764              	rx2_buffer:
 1765 0000 00000000 		.space	66
 1765      00000000 
ARM GAS  /tmp/ccxosq9E.s 			page 49


 1765      00000000 
 1765      00000000 
 1765      00000000 
 1766              		.section	.bss.rx_temp,"aw",%nobits
 1767              		.set	.LANCHOR27,. + 0
 1770              	rx_temp:
 1771 0000 00       		.space	1
 1772              		.section	.bss.state,"aw",%nobits
 1773              		.set	.LANCHOR22,. + 0
 1776              	state:
 1777 0000 00       		.space	1
 1778              		.section	.bss.transmission_f,"aw",%nobits
 1779              		.set	.LANCHOR26,. + 0
 1782              	transmission_f:
 1783 0000 00       		.space	1
 1784              		.section	.data.TX1_delay_val,"aw"
 1787              	TX1_delay_val:
 1788 0000 FA       		.byte	-6
 1789              		.section	.data.TX2_delay_val,"aw"
 1792              	TX2_delay_val:
 1793 0000 FA       		.byte	-6
 1794              		.section	.data.digit_table,"aw"
 1795              		.align	2
 1796              		.set	.LANCHOR5,. + 0
 1799              	digit_table:
 1800 0000 30313233 		.ascii	"0123456789abcdef-"
 1800      34353637 
 1800      38396162 
 1800      63646566 
 1800      2D
 1801              		.section	.data.flag_digit_1,"aw"
 1804              	flag_digit_1:
 1805 0000 01       		.byte	1
 1806              		.section	.data.start_cmd,"aw"
 1807              		.set	.LANCHOR18,. + 0
 1810              	start_cmd:
 1811 0000 02       		.byte	2
 1812              		.section	.data.stop_cmd,"aw"
 1813              		.set	.LANCHOR19,. + 0
 1816              	stop_cmd:
 1817 0000 03       		.byte	3
 1818              		.section	.data.tx1_buffer,"aw"
 1819              		.align	2
 1822              	tx1_buffer:
 1823 0000 61626364 		.ascii	"abcdef"
 1823      6566
 1824              		.section	.data.tx2_buffer,"aw"
 1825              		.align	2
 1828              	tx2_buffer:
 1829 0000 31323334 		.ascii	"123456789\000"
 1829      35363738 
 1829      3900
 1830              		.text
 1831              	.Letext0:
 1832              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1833              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1834              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  /tmp/ccxosq9E.s 			page 50


 1835              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1836              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1837              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1838              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1839              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1840              		.file 11 "Core/Inc/tim.h"
 1841              		.file 12 "Core/Inc/usart.h"
 1842              		.file 13 "Core/Inc/buffer.h"
 1843              		.file 14 "Core/Inc/message.h"
 1844              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1845              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1846              		.file 17 "Core/Inc/gpio.h"
 1847              		.file 18 "Core/Inc/lcd16x2.h"
 1848              		.file 19 "<built-in>"
ARM GAS  /tmp/ccxosq9E.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccxosq9E.s:18     .text.m_send_to_lcd:0000000000000000 $t
     /tmp/ccxosq9E.s:26     .text.m_send_to_lcd:0000000000000000 m_send_to_lcd
     /tmp/ccxosq9E.s:122    .text.m_send_to_lcd:0000000000000068 $d
     /tmp/ccxosq9E.s:131    .text.lcd_display_task:0000000000000000 $t
     /tmp/ccxosq9E.s:138    .text.lcd_display_task:0000000000000000 lcd_display_task
     /tmp/ccxosq9E.s:177    .text.lcd_display_task:0000000000000026 $d
     /tmp/ccxosq9E.s:181    .text.lcd_display_task:000000000000002a $t
     /tmp/ccxosq9E.s:268    .text.lcd_display_task:000000000000009c $d
     /tmp/ccxosq9E.s:280    .text.task_timer:0000000000000000 $t
     /tmp/ccxosq9E.s:287    .text.task_timer:0000000000000000 task_timer
     /tmp/ccxosq9E.s:386    .text.task_timer:0000000000000068 $d
     /tmp/ccxosq9E.s:397    .text.key_read_task:0000000000000000 $t
     /tmp/ccxosq9E.s:404    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccxosq9E.s:522    .text.key_read_task:0000000000000080 $d
     /tmp/ccxosq9E.s:531    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccxosq9E.s:538    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccxosq9E.s:609    .text.RS485_Send_Message:0000000000000054 $d
     /tmp/ccxosq9E.s:618    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccxosq9E.s:625    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccxosq9E.s:724    .text.RS485_Read_Message:0000000000000060 $d
     /tmp/ccxosq9E.s:735    .text.main_task:0000000000000000 $t
     /tmp/ccxosq9E.s:742    .text.main_task:0000000000000000 main_task
     /tmp/ccxosq9E.s:853    .text.main_task:0000000000000088 $d
     /tmp/ccxosq9E.s:859    .text.main_task:00000000000000a0 $t
     /tmp/ccxosq9E.s:1019   .text.main_task:000000000000014c $d
     /tmp/ccxosq9E.s:1030   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccxosq9E.s:1037   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccxosq9E.s:1064   .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccxosq9E.s:1070   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccxosq9E.s:1077   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccxosq9E.s:1167   .text.HAL_UART_RxCpltCallback:0000000000000054 $d
     /tmp/ccxosq9E.s:1176   .text.Error_Handler:0000000000000000 $t
     /tmp/ccxosq9E.s:1183   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccxosq9E.s:1215   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccxosq9E.s:1222   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccxosq9E.s:1370   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccxosq9E.s:1376   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccxosq9E.s:1386   .text.main:0000000000000000 $t
     /tmp/ccxosq9E.s:1393   .text.main:0000000000000000 main
     /tmp/ccxosq9E.s:1510   .text.main:0000000000000090 $d
     /tmp/ccxosq9E.s:1579   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccxosq9E.s:1586   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccxosq9E.s:1572   .bss.ID:0000000000000000 ID
     /tmp/ccxosq9E.s:1666   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccxosq9E.s:1764   .bss.rx2_buffer:0000000000000000 rx2_buffer
     /tmp/ccxosq9E.s:1757   .bss.rx1_buffer:0000000000000000 rx1_buffer
     /tmp/ccxosq9E.s:1816   .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/ccxosq9E.s:1810   .data.start_cmd:0000000000000000 start_cmd
     /tmp/ccxosq9E.s:1782   .bss.transmission_f:0000000000000000 transmission_f
     /tmp/ccxosq9E.s:1770   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccxosq9E.s:1799   .data.digit_table:0000000000000000 digit_table
     /tmp/ccxosq9E.s:1739   .bss.lcd_process:0000000000000000 lcd_process
     /tmp/ccxosq9E.s:1626   .bss.data:0000000000000000 data
     /tmp/ccxosq9E.s:1592   .bss.cmd:0000000000000000 cmd
     /tmp/ccxosq9E.s:1648   .bss.digit2_update:0000000000000000 digit2_update
ARM GAS  /tmp/ccxosq9E.s 			page 52


     /tmp/ccxosq9E.s:1637   .bss.digit1_update:0000000000000000 digit1_update
     /tmp/ccxosq9E.s:1733   .bss.lcd_digit1_f:0000000000000000 lcd_digit1_f
     /tmp/ccxosq9E.s:1715   .bss.is_EN:0000000000000000 is_EN
     /tmp/ccxosq9E.s:1643   .bss.digit2:0000000000000000 digit2
     /tmp/ccxosq9E.s:1632   .bss.digit1:0000000000000000 digit1
     /tmp/ccxosq9E.s:1751   .bss.num_slave:0000000000000000 num_slave
     /tmp/ccxosq9E.s:1653   .bss.error:0000000000000000 error
     /tmp/ccxosq9E.s:1659   .bss.event:0000000000000000 event
     /tmp/ccxosq9E.s:1776   .bss.state:0000000000000000 state
     /tmp/ccxosq9E.s:1727   .bss.key2_data:0000000000000000 key2_data
     /tmp/ccxosq9E.s:1721   .bss.key1_data:0000000000000000 key1_data
     /tmp/ccxosq9E.s:1792   .data.TX2_delay_val:0000000000000000 TX2_delay_val
     /tmp/ccxosq9E.s:1620   .bss.d_timer_TX2:0000000000000000 d_timer_TX2
     /tmp/ccxosq9E.s:1787   .data.TX1_delay_val:0000000000000000 TX1_delay_val
     /tmp/ccxosq9E.s:1615   .bss.d_timer_TX1:0000000000000000 d_timer_TX1
     /tmp/ccxosq9E.s:1598   .bss.d_timer_20ms:0000000000000000 d_timer_20ms
     /tmp/ccxosq9E.s:1610   .bss.d_timer_50ms:0000000000000000 d_timer_50ms
     /tmp/ccxosq9E.s:1604   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccxosq9E.s:1822   .data.tx1_buffer:0000000000000000 tx1_buffer
     /tmp/ccxosq9E.s:1828   .data.tx2_buffer:0000000000000000 tx2_buffer
     /tmp/ccxosq9E.s:1804   .data.flag_digit_1:0000000000000000 flag_digit_1
     /tmp/ccxosq9E.s:1745   .bss.n_querry:0000000000000000 n_querry
     /tmp/ccxosq9E.s:1699   .bss.f_timer_50ms:0000000000000000 f_timer_50ms
     /tmp/ccxosq9E.s:1694   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccxosq9E.s:1709   .bss.f_waiting_rx:0000000000000000 f_waiting_rx
     /tmp/ccxosq9E.s:1688   .bss.f_timer_20ms:0000000000000000 f_timer_20ms
     /tmp/ccxosq9E.s:1682   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccxosq9E.s:1676   .bss.f_seg_timer_500ms:0000000000000000 f_seg_timer_500ms
     /tmp/ccxosq9E.s:1704   .bss.f_timer_TX:0000000000000000 f_timer_TX
     /tmp/ccxosq9E.s:1671   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccxosq9E.s:1573   .bss.ID:0000000000000000 $d
     /tmp/ccxosq9E.s:1575   .bss.RX_msg:0000000000000000 $d
     /tmp/ccxosq9E.s:1582   .bss.TX_msg:0000000000000000 $d
     /tmp/ccxosq9E.s:1593   .bss.cmd:0000000000000000 $d
     /tmp/ccxosq9E.s:1599   .bss.d_timer_20ms:0000000000000000 $d
     /tmp/ccxosq9E.s:1605   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccxosq9E.s:1611   .bss.d_timer_50ms:0000000000000000 $d
     /tmp/ccxosq9E.s:1616   .bss.d_timer_TX1:0000000000000000 $d
     /tmp/ccxosq9E.s:1621   .bss.d_timer_TX2:0000000000000000 $d
     /tmp/ccxosq9E.s:1627   .bss.data:0000000000000000 $d
     /tmp/ccxosq9E.s:1633   .bss.digit1:0000000000000000 $d
     /tmp/ccxosq9E.s:1638   .bss.digit1_update:0000000000000000 $d
     /tmp/ccxosq9E.s:1644   .bss.digit2:0000000000000000 $d
     /tmp/ccxosq9E.s:1649   .bss.digit2_update:0000000000000000 $d
     /tmp/ccxosq9E.s:1654   .bss.error:0000000000000000 $d
     /tmp/ccxosq9E.s:1660   .bss.event:0000000000000000 $d
     /tmp/ccxosq9E.s:1662   .bss.event_buffer:0000000000000000 $d
     /tmp/ccxosq9E.s:1672   .bss.f_busy:0000000000000000 $d
     /tmp/ccxosq9E.s:1677   .bss.f_seg_timer_500ms:0000000000000000 $d
     /tmp/ccxosq9E.s:1683   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccxosq9E.s:1689   .bss.f_timer_20ms:0000000000000000 $d
     /tmp/ccxosq9E.s:1695   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccxosq9E.s:1700   .bss.f_timer_50ms:0000000000000000 $d
     /tmp/ccxosq9E.s:1705   .bss.f_timer_TX:0000000000000000 $d
     /tmp/ccxosq9E.s:1710   .bss.f_waiting_rx:0000000000000000 $d
     /tmp/ccxosq9E.s:1716   .bss.is_EN:0000000000000000 $d
     /tmp/ccxosq9E.s:1722   .bss.key1_data:0000000000000000 $d
ARM GAS  /tmp/ccxosq9E.s 			page 53


     /tmp/ccxosq9E.s:1728   .bss.key2_data:0000000000000000 $d
     /tmp/ccxosq9E.s:1734   .bss.lcd_digit1_f:0000000000000000 $d
     /tmp/ccxosq9E.s:1740   .bss.lcd_process:0000000000000000 $d
     /tmp/ccxosq9E.s:1746   .bss.n_querry:0000000000000000 $d
     /tmp/ccxosq9E.s:1752   .bss.num_slave:0000000000000000 $d
     /tmp/ccxosq9E.s:1754   .bss.rx1_buffer:0000000000000000 $d
     /tmp/ccxosq9E.s:1760   .bss.rx2_buffer:0000000000000000 $d
     /tmp/ccxosq9E.s:1771   .bss.rx_temp:0000000000000000 $d
     /tmp/ccxosq9E.s:1777   .bss.state:0000000000000000 $d
     /tmp/ccxosq9E.s:1783   .bss.transmission_f:0000000000000000 $d
     /tmp/ccxosq9E.s:1795   .data.digit_table:0000000000000000 $d
     /tmp/ccxosq9E.s:1819   .data.tx1_buffer:0000000000000000 $d
     /tmp/ccxosq9E.s:1825   .data.tx2_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
buffer_push
cal_checksum
HAL_UART_Transmit
huart4
buffer_to_message
check_checksum
buffer_pop
htim4
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM4_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
lcd_init
lcd_clear
lcd_set_pos
lcd_write_string
